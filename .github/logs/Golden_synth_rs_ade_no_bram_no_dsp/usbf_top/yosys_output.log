
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k usbf_crc16.v usbf_crc5.v usbf_defines.v usbf_ep_rf.v usbf_ep_rf_dummy.v usbf_idma.v usbf_mem_arb.v usbf_pa.v usbf_pd.v usbf_pe.v usbf_pl.v usbf_rf.v usbf_top.v usbf_utmi_if.v usbf_utmi_ls.v usbf_wb.v

yosys> verific -vlog2k usbf_crc16.v usbf_crc5.v usbf_defines.v usbf_ep_rf.v usbf_ep_rf_dummy.v usbf_idma.v usbf_mem_arb.v usbf_pa.v usbf_pd.v usbf_pe.v usbf_pl.v usbf_rf.v usbf_top.v usbf_utmi_if.v usbf_utmi_ls.v usbf_wb.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc16.v'
VERIFIC-INFO [VERI-1328] usbf_crc16.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc16.v:76: back to file 'usbf_crc16.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc5.v'
VERIFIC-INFO [VERI-1328] usbf_crc5.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc5.v:76: back to file 'usbf_crc5.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_defines.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf.v:93: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf.v:93: back to file 'usbf_ep_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf_dummy.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf_dummy.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf_dummy.v:76: back to file 'usbf_ep_rf_dummy.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_idma.v'
VERIFIC-INFO [VERI-1328] usbf_idma.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_idma.v:110: back to file 'usbf_idma.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_mem_arb.v'
VERIFIC-INFO [VERI-1328] usbf_mem_arb.v:90: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_mem_arb.v:90: back to file 'usbf_mem_arb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pa.v'
VERIFIC-INFO [VERI-1328] usbf_pa.v:94: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pa.v:94: back to file 'usbf_pa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pd.v'
VERIFIC-INFO [VERI-1328] usbf_pd.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pd.v:101: back to file 'usbf_pd.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pe.v'
VERIFIC-INFO [VERI-1328] usbf_pe.v:116: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pe.v:116: back to file 'usbf_pe.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pl.v'
VERIFIC-INFO [VERI-1328] usbf_pl.v:100: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pl.v:100: back to file 'usbf_pl.v'
VERIFIC-INFO [VERI-2561] usbf_pl.v:384: undeclared symbol 'send_zero_length', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_rf.v'
VERIFIC-INFO [VERI-1328] usbf_rf.v:108: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_rf.v:108: back to file 'usbf_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_top.v'
VERIFIC-INFO [VERI-1328] usbf_top.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_top.v:110: back to file 'usbf_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_if.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_if.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_if.v:101: back to file 'usbf_utmi_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_ls.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_ls.v:99: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_ls.v:99: back to file 'usbf_utmi_ls.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_wb.v'
VERIFIC-INFO [VERI-1328] usbf_wb.v:95: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_wb.v:95: back to file 'usbf_wb.v'

yosys> synth_rs -top usbf_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top usbf_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] usbf_top.v:112: compiling module 'usbf_top'
VERIFIC-INFO [VERI-1018] usbf_utmi_if.v:103: compiling module 'usbf_utmi_if'
VERIFIC-INFO [VERI-1018] usbf_utmi_ls.v:101: compiling module 'usbf_utmi_ls'
VERIFIC-WARNING [VERI-1173] usbf_utmi_ls.v:448: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pl.v:102: compiling module 'usbf_pl'
VERIFIC-INFO [VERI-1018] usbf_pd.v:103: compiling module 'usbf_pd'
VERIFIC-INFO [VERI-1018] usbf_crc5.v:84: compiling module 'usbf_crc5'
VERIFIC-INFO [VERI-1018] usbf_crc16.v:84: compiling module 'usbf_crc16'
VERIFIC-WARNING [VERI-1173] usbf_pd.v:373: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pa.v:96: compiling module 'usbf_pa'
VERIFIC-WARNING [VERI-1173] usbf_pa.v:314: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_idma.v:112: compiling module 'usbf_idma'
VERIFIC-WARNING [VERI-1209] usbf_idma.v:289: expression size 17 truncated to fit in target size 15
VERIFIC-WARNING [VERI-1173] usbf_idma.v:462: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pe.v:118: compiling module 'usbf_pe'
VERIFIC-WARNING [VERI-1173] usbf_pe.v:438: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:446: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:453: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:460: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:479: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:424: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:493: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:532: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:501: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:845: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_mem_arb.v:92: compiling module 'usbf_mem_arb'
VERIFIC-INFO [VERI-1018] usbf_rf.v:111: compiling module 'usbf_rf'
VERIFIC-WARNING [VERI-1173] usbf_rf.v:307: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_rf.v:391: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_ep_rf.v:96: compiling module 'usbf_ep_rf'
VERIFIC-INFO [VERI-1018] usbf_ep_rf_dummy.v:79: compiling module 'usbf_ep_rf_dummy'
VERIFIC-INFO [VERI-1018] usbf_wb.v:97: compiling module 'usbf_wb'
VERIFIC-WARNING [VERI-1173] usbf_wb.v:209: synthesis - simulation differences may occur when using full_case directive
Importing module usbf_top.
Importing module usbf_mem_arb.
Importing module usbf_pl.
Importing module usbf_idma.
Importing module usbf_pa.
Importing module usbf_crc16.
Importing module usbf_pd.
Importing module usbf_crc5.
Importing module usbf_pe.
Importing module usbf_rf.
Importing module usbf_ep_rf.
Importing module usbf_ep_rf_dummy.
Importing module usbf_utmi_if.
Importing module usbf_utmi_ls.
Importing module usbf_wb.

3.3.1. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls

3.3.2. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_wb.
<suppressed ~1 debug messages>
Optimizing module usbf_utmi_ls.
<suppressed ~6 debug messages>
Optimizing module usbf_utmi_if.
<suppressed ~1 debug messages>
Optimizing module usbf_ep_rf_dummy.
<suppressed ~4 debug messages>
Optimizing module usbf_ep_rf.
<suppressed ~15 debug messages>
Optimizing module usbf_rf.
<suppressed ~5 debug messages>
Optimizing module usbf_pe.
<suppressed ~10 debug messages>
Optimizing module usbf_crc5.
Optimizing module usbf_pd.
<suppressed ~3 debug messages>
Optimizing module usbf_crc16.
Optimizing module usbf_pa.
<suppressed ~1 debug messages>
Optimizing module usbf_idma.
<suppressed ~7 debug messages>
Optimizing module usbf_pl.
<suppressed ~4 debug messages>
Optimizing module usbf_mem_arb.
Optimizing module usbf_top.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module usbf_crc16.
Deleting now unused module usbf_crc5.
Deleting now unused module usbf_ep_rf.
Deleting now unused module usbf_ep_rf_dummy.
Deleting now unused module usbf_idma.
Deleting now unused module usbf_mem_arb.
Deleting now unused module usbf_pa.
Deleting now unused module usbf_pd.
Deleting now unused module usbf_pe.
Deleting now unused module usbf_pl.
Deleting now unused module usbf_rf.
Deleting now unused module usbf_utmi_if.
Deleting now unused module usbf_utmi_ls.
Deleting now unused module usbf_wb.
<suppressed ~29 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~47 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 62 unused cells and 6326 unused wires.
<suppressed ~810 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module usbf_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~109 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~218 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
    New ctrl vector for $pmux cell $flatten\u1.\u0.$verific$Select_213$usbf_pd.v:433$2857: { $flatten\u1.\u0.$verific$n584$2603 $flatten\u1.\u0.$verific$n586$2605 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_148$usbf_pa.v:382$2406: { $flatten\u1.\u1.$verific$n401$2250 $flatten\u1.\u1.$verific$n406$2255 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_154$usbf_pa.v:382$2412: { $flatten\u1.\u1.$verific$n402$2251 $flatten\u1.\u1.$verific$n403$2252 $flatten\u1.\u1.$verific$n404$2253 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_156$usbf_pa.v:382$2414: { $flatten\u1.\u1.$verific$n404$2253 $flatten\u1.\u1.$verific$n405$2254 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_158$usbf_pa.v:382$2415: { $flatten\u1.\u1.$verific$n404$2253 $flatten\u1.\u1.$verific$n405$2254 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_273$usbf_idma.v:631$2202: { $flatten\u1.\u2.$verific$n1445$1943 $flatten\u1.\u2.$verific$n1463$1951 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_277$usbf_idma.v:631$2206: { $flatten\u1.\u2.$verific$n1446$1944 $flatten\u1.\u2.$verific$n1447$1945 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$Select_688$usbf_pe.v:1091$3726: { $flatten\u1.\u3.$verific$n1654$3138 $flatten\u1.\u3.$verific$n1660$3144 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_115$usbf_pe.v:485$3345: { $flatten\u1.\u3.$verific$n253$2923 $auto$opt_reduce.cc:134:opt_pmux$9256 $flatten\u1.\u3.$verific$n258$2927 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_166$usbf_pe.v:487$3399: { $flatten\u1.\u3.$verific$n275$2935 $flatten\u1.\u3.$verific$n283$2939 $flatten\u1.\u3.$verific$n285$2941 $auto$opt_reduce.cc:134:opt_pmux$9260 $auto$opt_reduce.cc:134:opt_pmux$9258 $flatten\u1.\u3.$verific$n311$2952 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_172$usbf_pe.v:498$3405: { $flatten\u1.\u3.$verific$n319$2954 $flatten\u1.\u3.$verific$n320$2955 $flatten\u1.\u3.$verific$n321$2956 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3408: $auto$opt_reduce.cc:134:opt_pmux$9262
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_267$usbf_pe.v:539$3422: { $flatten\u1.\u3.$verific$n423$2957 $auto$opt_reduce.cc:134:opt_pmux$9268 $auto$opt_reduce.cc:134:opt_pmux$9266 $auto$opt_reduce.cc:134:opt_pmux$9264 $flatten\u1.\u3.$verific$n311$2952 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_686$usbf_pe.v:1091$3724: { $flatten\u1.\u3.$verific$n1654$3138 $flatten\u1.\u3.$verific$n1660$3144 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_689$usbf_pe.v:1091$3727: { $flatten\u1.\u3.$verific$n1654$3138 $flatten\u1.\u3.$verific$n1656$3140 $flatten\u1.\u3.$verific$n1657$3141 $flatten\u1.\u3.$verific$n1658$3142 $flatten\u1.\u3.$verific$n1659$3143 $flatten\u1.\u3.$verific$n1660$3144 $flatten\u1.\u3.$verific$n1661$3145 $flatten\u1.\u3.$verific$n1662$3146 $auto$opt_reduce.cc:134:opt_pmux$9270 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$3718: $flatten\u1.\u3.$verific$n194$2918
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3323: $flatten\u1.\u3.$verific$n183$2916
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_333$usbf_utmi_ls.v:650$9045: { $flatten\u0.\u0.$verific$n1011$8722 $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1013$8724 $flatten\u0.\u0.$verific$n1014$8725 $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1017$8728 $flatten\u0.\u0.$verific$n1020$8731 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_336$usbf_utmi_ls.v:650$9048: { $flatten\u0.\u0.$verific$n1028$8738 $flatten\u0.\u0.$verific$n1012$8723 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_339$usbf_utmi_ls.v:650$9051: { $flatten\u0.\u0.$verific$n1031$8740 $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1017$8728 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_345$usbf_utmi_ls.v:650$9056: { $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1038$8743 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_348$usbf_utmi_ls.v:650$9059: { $flatten\u0.\u0.$verific$n1040$8744 $flatten\u0.\u0.$verific$n1014$8725 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_351$usbf_utmi_ls.v:650$9062: { $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1013$8724 $flatten\u0.\u0.$verific$n1019$8730 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_353$usbf_utmi_ls.v:650$9064: { $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1013$8724 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_356$usbf_utmi_ls.v:650$9067: { $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1064$8749 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_358$usbf_utmi_ls.v:650$9069: { $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1024$8735 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_360$usbf_utmi_ls.v:650$9071: { $flatten\u0.\u0.$verific$n1017$8728 $flatten\u0.\u0.$verific$n1020$8731 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_367$usbf_utmi_ls.v:650$9078: { $flatten\u0.\u0.$verific$n1022$8733 $flatten\u0.\u0.$verific$n1023$8734 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_77$usbf_wb.v:278$9175: { $flatten\u5.$verific$n347$9104 $auto$opt_reduce.cc:134:opt_pmux$9272 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_79$usbf_wb.v:278$9177: { $flatten\u5.$verific$n347$9104 $flatten\u5.$verific$n348$9105 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_84$usbf_wb.v:278$9182: { $auto$opt_reduce.cc:134:opt_pmux$9274 $flatten\u5.$verific$n350$9107 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_80$usbf_wb.v:278$9178: { $flatten\u5.$verific$n347$9104 $auto$opt_reduce.cc:134:opt_pmux$9276 $flatten\u5.$verific$n350$9107 $flatten\u5.$verific$n351$9108 $flatten\u5.$verific$n352$9109 }
  Optimizing cells in module \usbf_top.
Performed a total of 32 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$VStatus_r_reg$usbf_top.v:269$24 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$wb_data_o_reg$usbf_wb.v:166$9132 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$state_reg$usbf_wb.v:198$9151 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_stat_r_reg$usbf_rf.v:322$4164 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_reg$usbf_rf.v:345$4179 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4177 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4207 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4206 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$8982 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$8849 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$rx_data_reg$usbf_utmi_if.v:204$8571 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4195 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$dout_reg$usbf_rf.v:412$4210 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4341 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4407 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4374 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$8577 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$tx_data_to_cnt_reg$usbf_pe.v:768$3594 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$token_pid_sel_reg$usbf_pe.v:414$3317 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$this_dpid_reg$usbf_pe.v:539$3423 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$3648 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$size_next_r_reg$usbf_pe.v:665$3522 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$rx_ack_to_cnt_reg$usbf_pe.v:751$3584 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$next_dpid_reg$usbf_pe.v:487$3400 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_sizeb_reg$usbf_pe.v:654$3515 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_size_reg$usbf_pe.v:657$3518 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$idin_reg$usbf_pe.v:704$3556 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_reg$usbf_pe.v:605$3468 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_r_reg$usbf_pe.v:662$3520 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$2169 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$2105 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$2089 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rx_data_st_r_reg$usbf_idma.v:265$2042 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$2148 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$2146 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$last_buf_adr_reg$usbf_idma.v:289$2060 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$2135 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cw_reg$usbf_idma.v:286$2056 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cb_reg$usbf_idma.v:307$2072 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$2387 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$2343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2696 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2694 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2812 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2647 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2754 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2753 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2752 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2767 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1356 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1349 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$hms_cnt_reg$usbf_pl.v:321$1363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1336 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$8990 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$ps_cnt_reg$usbf_utmi_ls.v:320$8894 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps_reg$usbf_utmi_ls.v:358$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$8946 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$8958 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$line_state_r_reg$usbf_utmi_ls.v:265$8853 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$8906 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_next_reg$usbf_utmi_ls.v:332$8909 ($aldff) from module usbf_top.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 33 unused cells and 158 unused wires.
<suppressed ~34 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~218 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking usbf_top.u0.u0.OpMode as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u1.u0.state.
Not marking usbf_top.u1.u3.next_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking usbf_top.u1.u3.this_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u5.state.

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u1.u0.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2812
  root of input selection tree: $flatten\u1.\u0.$verific$n458$2627
  found reset state: 4'0001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 4'0001
  found ctrl input: $flatten\u1.\u0.$verific$n586$2605
  found ctrl input: $flatten\u1.\u0.$verific$n585$2604
  found ctrl input: $flatten\u1.\u0.$verific$n584$2603
  found ctrl input: $flatten\u1.\u0.$verific$n583$2602
  found state code: 4'0000
  found ctrl input: $flatten\u1.\u0.$verific$n496$2586
  found ctrl input: \u0.rx_active
  found ctrl input: $flatten\u1.\u0.$verific$n541$2599
  found ctrl input: $flatten\u1.\u0.$verific$n480$2578
  found ctrl input: $flatten\u1.\u0.$verific$n490$2581
  found ctrl input: $flatten\u1.\u0.$verific$n494$2584
  found ctrl input: $flatten\u1.\u0.$verific$n500$2590
  found state code: 4'1000
  found state code: 4'0100
  found ctrl input: $flatten\u1.\u0.$verific$n473$2576
  found state code: 4'0010
  found ctrl output: $flatten\u1.\u0.$verific$n586$2605
  found ctrl output: $flatten\u1.\u0.$verific$n585$2604
  found ctrl output: $flatten\u1.\u0.$verific$n584$2603
  found ctrl output: $flatten\u1.\u0.$verific$n583$2602
  ctrl inputs: { $flatten\u1.\u0.$verific$n473$2576 $flatten\u1.\u0.$verific$n480$2578 $flatten\u1.\u0.$verific$n490$2581 $flatten\u1.\u0.$verific$n494$2584 $flatten\u1.\u0.$verific$n496$2586 $flatten\u1.\u0.$verific$n500$2590 $flatten\u1.\u0.$verific$n541$2599 \u0.rx_active \rst_i }
  ctrl outputs: { $flatten\u1.\u0.$verific$n458$2627 $flatten\u1.\u0.$verific$n583$2602 $flatten\u1.\u0.$verific$n584$2603 $flatten\u1.\u0.$verific$n585$2604 $flatten\u1.\u0.$verific$n586$2605 }
  transition:     4'0000 9'--------0 ->     4'0001 8'00010000
  transition:     4'0000 9'--------1 ->     4'0000 8'00000000
  transition:     4'1000 9'--------0 ->     4'0001 8'00010001
  transition:     4'1000 9'----0---1 ->     4'1000 8'10000001
  transition:     4'1000 9'----1--01 ->     4'0001 8'00010001
  transition:     4'1000 9'----1--11 ->     4'1000 8'10000001
  transition:     4'0100 9'--------0 ->     4'0001 8'00010010
  transition:     4'0100 9'----0-0-1 ->     4'0100 8'01000010
  transition:     4'0100 9'----1-001 ->     4'0001 8'00010010
  transition:     4'0100 9'----1-011 ->     4'0100 8'01000010
  transition:     4'0100 9'------1-1 ->     4'0001 8'00010010
  transition:     4'0010 9'--------0 ->     4'0001 8'00010100
  transition:     4'0010 9'-000-0--1 ->     4'0010 8'00100100
  transition:     4'0010 9'-000-1-01 ->     4'0001 8'00010100
  transition:     4'0010 9'-000-1-11 ->     4'0010 8'00100100
  transition:     4'0010 9'-001----1 ->     4'1000 8'10000100
  transition:     4'0010 9'-01-----1 ->     4'0100 8'01000100
  transition:     4'0010 9'-1-----01 ->     4'0001 8'00010100
  transition:     4'0010 9'-1-----11 ->     4'0010 8'00100100
  transition:     4'0001 9'--------0 ->     4'0001 8'00011000
  transition:     4'0001 9'0-------1 ->     4'0001 8'00011000
  transition:     4'0001 9'1-------1 ->     4'0010 8'00101000
Extracting FSM `\u5.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u5.$verific$state_reg$usbf_wb.v:198$9151
  root of input selection tree: $flatten\u5.$verific$n260$9118
  found reset state: 6'000001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 6'000001
  found ctrl input: $flatten\u5.$verific$n352$9109
  found ctrl input: $flatten\u5.$verific$n351$9108
  found ctrl input: $flatten\u5.$verific$n350$9107
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$9272
  found ctrl input: $flatten\u5.$verific$n347$9104
  found state code: 6'000000
  found state code: 6'100000
  found state code: 6'010000
  found ctrl input: \u2.wack
  found ctrl input: $flatten\u5.$verific$n317$9102
  found ctrl input: $flatten\u5.$verific$n305$9101
  found ctrl input: $flatten\u5.$verific$n294$9097
  found ctrl input: $flatten\u5.$verific$n282$9095
  found state code: 6'000010
  found state code: 6'000100
  found state code: 6'001000
  found ctrl output: $flatten\u5.$verific$n347$9104
  found ctrl output: $flatten\u5.$verific$n348$9105
  found ctrl output: $flatten\u5.$verific$n349$9106
  found ctrl output: $flatten\u5.$verific$n350$9107
  found ctrl output: $flatten\u5.$verific$n351$9108
  found ctrl output: $flatten\u5.$verific$n352$9109
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$9272 \u2.wack $flatten\u5.$verific$n282$9095 $flatten\u5.$verific$n294$9097 $flatten\u5.$verific$n305$9101 $flatten\u5.$verific$n317$9102 \rst_i }
  ctrl outputs: { $flatten\u5.$verific$n352$9109 $flatten\u5.$verific$n351$9108 $flatten\u5.$verific$n350$9107 $flatten\u5.$verific$n349$9106 $flatten\u5.$verific$n348$9105 $flatten\u5.$verific$n347$9104 $flatten\u5.$verific$n260$9118 }
  transition:   6'000000 7'------0 ->   6'000001 12'000000000001
  transition:   6'000000 7'------1 ->   6'000000 12'000000000000
  transition:   6'100000 7'------0 ->   6'000001 12'100000000001
  transition:   6'100000 7'------1 ->   6'000001 12'100000000001
  transition:   6'010000 7'------0 ->   6'000001 12'010000000001
  transition:   6'010000 7'------1 ->   6'100000 12'010000100000
  transition:   6'001000 7'------0 ->   6'000001 12'001000000001
  transition:   6'001000 7'------1 ->   6'010000 12'001000010000
  transition:   6'000100 7'------0 ->   6'000001 12'000100000001
  transition:   6'000100 7'-0----1 ->   6'000100 12'000100000100
  transition:   6'000100 7'-1----1 ->   6'010000 12'000100010000
  transition:   6'000010 7'------0 ->   6'000001 12'000010000001
  transition:   6'000010 7'-0----1 ->   6'000010 12'000010000010
  transition:   6'000010 7'-1----1 ->   6'010000 12'000010010000
  transition:   6'000001 7'------0 ->   6'000001 12'000001000001
  transition:   6'000001 7'--00001 ->   6'000001 12'000001000001
  transition:   6'000001 7'--10001 ->   6'000010 12'000001000010
  transition:   6'000001 7'---1001 ->   6'000100 12'000001000100
  transition:   6'000001 7'----101 ->   6'001000 12'000001001000
  transition:   6'000001 7'-----11 ->   6'001000 12'000001001000

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u5.state$9283' from module `\usbf_top'.
  Merging pattern 7'------0 and 7'------1 from group (1 6 12'100000000001).
  Merging pattern 7'------1 and 7'------0 from group (1 6 12'100000000001).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$9272.
Optimizing FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top'.

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 29 unused cells and 29 unused wires.
<suppressed ~32 debug messages>

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top'.
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [0].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [1].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [2].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [3].
Optimizing FSM `$fsm$\u5.state$9283' from module `\usbf_top'.
  Removing unused output signal $flatten\u5.$verific$n260$9118 [0].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [1].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [2].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [3].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [4].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [5].
  Removing unused output signal $flatten\u5.$verific$n351$9108.
  Removing unused output signal $flatten\u5.$verific$n352$9109.

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  0000 -> 001
  1000 -> 010
  0100 -> 011
  0010 -> 100
  0001 -> 000
Recoding FSM `$fsm$\u5.state$9283' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000000 -> 001
  100000 -> 010
  010000 -> 011
  001000 -> 100
  000100 -> 101
  000010 -> 110
  000001 -> 000

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u1.u0.state$9277' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u1.u0.state$9277 (\u1.u0.state):

  Number of input signals:    9
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: \rst_i
    1: \u0.rx_active
    2: $flatten\u1.\u0.$verific$n541$2599
    3: $flatten\u1.\u0.$verific$n500$2590
    4: $flatten\u1.\u0.$verific$n496$2586
    5: $flatten\u1.\u0.$verific$n494$2584
    6: $flatten\u1.\u0.$verific$n490$2581
    7: $flatten\u1.\u0.$verific$n480$2578
    8: $flatten\u1.\u0.$verific$n473$2576

  Output signals:
    0: $flatten\u1.\u0.$verific$n586$2605
    1: $flatten\u1.\u0.$verific$n585$2604
    2: $flatten\u1.\u0.$verific$n584$2603
    3: $flatten\u1.\u0.$verific$n583$2602

  State encoding:
    0:      3'001
    1:      3'010
    2:      3'011
    3:      3'100
    4:      3'000  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'--------1   ->     0 4'0000
      1:     0 9'--------0   ->     4 4'0000
      2:     1 9'----1--11   ->     1 4'0001
      3:     1 9'----0---1   ->     1 4'0001
      4:     1 9'--------0   ->     4 4'0001
      5:     1 9'----1--01   ->     4 4'0001
      6:     2 9'----1-011   ->     2 4'0010
      7:     2 9'----0-0-1   ->     2 4'0010
      8:     2 9'--------0   ->     4 4'0010
      9:     2 9'----1-001   ->     4 4'0010
     10:     2 9'------1-1   ->     4 4'0010
     11:     3 9'-001----1   ->     1 4'0100
     12:     3 9'-01-----1   ->     2 4'0100
     13:     3 9'-000-1-11   ->     3 4'0100
     14:     3 9'-1-----11   ->     3 4'0100
     15:     3 9'-000-0--1   ->     3 4'0100
     16:     3 9'--------0   ->     4 4'0100
     17:     3 9'-000-1-01   ->     4 4'0100
     18:     3 9'-1-----01   ->     4 4'0100
     19:     4 9'1-------1   ->     3 4'1000
     20:     4 9'--------0   ->     4 4'1000
     21:     4 9'0-------1   ->     4 4'1000

-------------------------------------

FSM `$fsm$\u5.state$9283' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u5.state$9283 (\u5.state):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: \rst_i
    1: $flatten\u5.$verific$n317$9102
    2: $flatten\u5.$verific$n305$9101
    3: $flatten\u5.$verific$n294$9097
    4: $flatten\u5.$verific$n282$9095
    5: \u2.wack

  Output signals:
    0: $flatten\u5.$verific$n347$9104
    1: $flatten\u5.$verific$n348$9105
    2: $flatten\u5.$verific$n349$9106
    3: $flatten\u5.$verific$n350$9107

  State encoding:
    0:      3'001
    1:      3'010
    2:      3'011
    3:      3'100
    4:      3'101
    5:      3'110
    6:      3'000  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----1   ->     0 4'0000
      1:     0 6'-----0   ->     6 4'0000
      2:     1 6'------   ->     6 4'0000
      3:     2 6'-----1   ->     1 4'0000
      4:     2 6'-----0   ->     6 4'0000
      5:     3 6'-----1   ->     2 4'1000
      6:     3 6'-----0   ->     6 4'1000
      7:     4 6'1----1   ->     2 4'0100
      8:     4 6'0----1   ->     4 4'0100
      9:     4 6'-----0   ->     6 4'0100
     10:     5 6'1----1   ->     2 4'0010
     11:     5 6'0----1   ->     5 4'0010
     12:     5 6'-----0   ->     6 4'0010
     13:     6 6'---101   ->     3 4'0001
     14:     6 6'----11   ->     3 4'0001
     15:     6 6'--1001   ->     4 4'0001
     16:     6 6'-10001   ->     5 4'0001
     17:     6 6'-----0   ->     6 4'0001
     18:     6 6'-00001   ->     6 4'0001

-------------------------------------

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top'.
Mapping FSM `$fsm$\u5.state$9283' from module `\usbf_top'.

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$resume_req_r_reg$usbf_top.v:292$32 ($dff) from module usbf_top (D = $verific$n44$8, Q = \resume_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9440 ($sdff) from module usbf_top (D = 1'1, Q = \resume_req_r).
Adding SRST signal on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1275$8268, Q = \u4.u3.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9446 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u3.uc_dpd).
Adding SRST signal on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1293$8271, Q = \u4.u3.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9448 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u3.uc_bsel).
Adding SRST signal on $flatten\u4.\u3.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1732$8223, Q = \u4.u3.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9450 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1732$8223, Q = \u4.u3.r2).
Adding SRST signal on $flatten\u4.\u3.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n344$8132, Q = \u4.u3.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9454 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u3.ots_stop).
Adding SRST signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1234$8263, Q = \u4.u3.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [0]).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9456 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u3.int_stat [5]).
Adding SRST signal on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n447$8245, Q = \u4.u3.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9482 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u3.ienb).
Adding SRST signal on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n454$8246, Q = \u4.u3.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9484 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u3.iena).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1714$8214, Q = \u4.u3.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9486 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1714$8214, Q = \u4.u3.dma_req_r).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1418$8279, Q = \u4.u3.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9490 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1418$8279, Q = \u4.u3.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1553$8286, Q = \u4.u3.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9494 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1553$8286, Q = \u4.u3.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u3.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1741$8226, Q = \u4.u3.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9498 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1741$8226, Q = \u4.u3.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n345$8239, Q = \u4.u3.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9502 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u3.csr1 [12:9] \u4.u3.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9502 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n345$8239 [8:7], Q = \u4.u3.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n330$8238, Q = \u4.u3.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9507 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u3.csr0).
Adding SRST signal on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n926$8258, Q = \u4.u3.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9509 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n926$8258, Q = \u4.u3.buf1).
Adding SRST signal on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n691$8255, Q = \u4.u3.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9513 ($sdff) from module usbf_top (D = $flatten\u4.\u3.$verific$n691$8255, Q = \u4.u3.buf0).
Adding SRST signal on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1093$8260, Q = \u4.u3.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9517 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u3.buf0_orig).
Adding SRST signal on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1275$8268, Q = \u4.u2.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9519 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u2.uc_dpd).
Adding SRST signal on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1293$8271, Q = \u4.u2.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9521 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u2.uc_bsel).
Adding SRST signal on $flatten\u4.\u2.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1732$8223, Q = \u4.u2.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9523 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1732$8223, Q = \u4.u2.r2).
Adding SRST signal on $flatten\u4.\u2.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n344$8132, Q = \u4.u2.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9527 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u2.ots_stop).
Adding SRST signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1234$8263, Q = \u4.u2.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [0]).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9529 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u2.int_stat [5]).
Adding SRST signal on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n447$8245, Q = \u4.u2.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9555 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u2.ienb).
Adding SRST signal on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n454$8246, Q = \u4.u2.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9557 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u2.iena).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1714$8214, Q = \u4.u2.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9559 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1714$8214, Q = \u4.u2.dma_req_r).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1418$8279, Q = \u4.u2.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9563 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1418$8279, Q = \u4.u2.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1553$8286, Q = \u4.u2.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9567 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1553$8286, Q = \u4.u2.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u2.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1741$8226, Q = \u4.u2.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9571 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1741$8226, Q = \u4.u2.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n345$8239, Q = \u4.u2.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9575 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u2.csr1 [12:9] \u4.u2.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9575 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n345$8239 [8:7], Q = \u4.u2.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n330$8238, Q = \u4.u2.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9580 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u2.csr0).
Adding SRST signal on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n926$8258, Q = \u4.u2.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9582 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n926$8258, Q = \u4.u2.buf1).
Adding SRST signal on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n691$8255, Q = \u4.u2.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9586 ($sdff) from module usbf_top (D = $flatten\u4.\u2.$verific$n691$8255, Q = \u4.u2.buf0).
Adding SRST signal on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1093$8260, Q = \u4.u2.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9590 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u2.buf0_orig).
Adding SRST signal on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1275$8268, Q = \u4.u1.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9592 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u1.uc_dpd).
Adding SRST signal on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1293$8271, Q = \u4.u1.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9594 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u1.uc_bsel).
Adding SRST signal on $flatten\u4.\u1.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1732$8223, Q = \u4.u1.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9596 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1732$8223, Q = \u4.u1.r2).
Adding SRST signal on $flatten\u4.\u1.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n344$8132, Q = \u4.u1.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9600 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u1.ots_stop).
Adding SRST signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1234$8263, Q = \u4.u1.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9602 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [0]).
Adding EN signal on $auto$ff.cc:262:slice$9602 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9602 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9602 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9602 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9602 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9602 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u1.int_stat [5]).
Adding SRST signal on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n447$8245, Q = \u4.u1.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9628 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u1.ienb).
Adding SRST signal on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n454$8246, Q = \u4.u1.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9630 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u1.iena).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1714$8214, Q = \u4.u1.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9632 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1714$8214, Q = \u4.u1.dma_req_r).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1418$8279, Q = \u4.u1.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9636 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1418$8279, Q = \u4.u1.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1553$8286, Q = \u4.u1.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9640 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1553$8286, Q = \u4.u1.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u1.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1741$8226, Q = \u4.u1.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9644 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1741$8226, Q = \u4.u1.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n345$8239, Q = \u4.u1.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9648 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u1.csr1 [12:9] \u4.u1.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9648 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n345$8239 [8:7], Q = \u4.u1.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n330$8238, Q = \u4.u1.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9653 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u1.csr0).
Adding SRST signal on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n926$8258, Q = \u4.u1.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9655 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n926$8258, Q = \u4.u1.buf1).
Adding SRST signal on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n691$8255, Q = \u4.u1.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9659 ($sdff) from module usbf_top (D = $flatten\u4.\u1.$verific$n691$8255, Q = \u4.u1.buf0).
Adding SRST signal on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1093$8260, Q = \u4.u1.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9663 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u1.buf0_orig).
Adding SRST signal on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1275$8268, Q = \u4.u0.uc_dpd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9665 ($sdff) from module usbf_top (D = \u1.u3.idin [3:2], Q = \u4.u0.uc_dpd).
Adding SRST signal on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1293$8271, Q = \u4.u0.uc_bsel, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$9667 ($sdff) from module usbf_top (D = \u1.u3.idin [1:0], Q = \u4.u0.uc_bsel).
Adding SRST signal on $flatten\u4.\u0.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1732$8223, Q = \u4.u0.r2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9669 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1732$8223, Q = \u4.u0.r2).
Adding SRST signal on $flatten\u4.\u0.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n344$8132, Q = \u4.u0.ots_stop, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9673 ($sdff) from module usbf_top (D = \wb_data_i [13], Q = \u4.u0.ots_stop).
Adding SRST signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1234$8263, Q = \u4.u0.int_stat, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9675 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [0]).
Adding EN signal on $auto$ff.cc:262:slice$9675 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [1]).
Adding EN signal on $auto$ff.cc:262:slice$9675 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [4]).
Adding EN signal on $auto$ff.cc:262:slice$9675 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [3]).
Adding EN signal on $auto$ff.cc:262:slice$9675 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [6]).
Adding EN signal on $auto$ff.cc:262:slice$9675 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [2]).
Adding EN signal on $auto$ff.cc:262:slice$9675 ($sdff) from module usbf_top (D = 1'1, Q = \u4.u0.int_stat [5]).
Adding SRST signal on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n447$8245, Q = \u4.u0.ienb, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9701 ($sdff) from module usbf_top (D = \wb_data_i [21:16], Q = \u4.u0.ienb).
Adding SRST signal on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n454$8246, Q = \u4.u0.iena, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$9703 ($sdff) from module usbf_top (D = \wb_data_i [29:24], Q = \u4.u0.iena).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1714$8214, Q = \u4.u0.dma_req_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9705 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1714$8214, Q = \u4.u0.dma_req_r).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1418$8279, Q = \u4.u0.dma_out_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9709 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1418$8279, Q = \u4.u0.dma_out_cnt).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1553$8286, Q = \u4.u0.dma_in_cnt, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9713 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1553$8286, Q = \u4.u0.dma_in_cnt).
Adding SRST signal on $flatten\u4.\u0.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1741$8226, Q = \u4.u0.dma_ack_wr1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9717 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1741$8226, Q = \u4.u0.dma_ack_wr1).
Adding SRST signal on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n345$8239, Q = \u4.u0.csr1, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9721 ($sdff) from module usbf_top (D = { \wb_data_i [27:24] \wb_data_i [21:15] }, Q = { \u4.u0.csr1 [12:9] \u4.u0.csr1 [6:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9721 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n345$8239 [8:7], Q = \u4.u0.csr1 [8:7]).
Adding SRST signal on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n330$8238, Q = \u4.u0.csr0, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9726 ($sdff) from module usbf_top (D = \wb_data_i [12:0], Q = \u4.u0.csr0).
Adding SRST signal on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n926$8258, Q = \u4.u0.buf1, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9728 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n926$8258, Q = \u4.u0.buf1).
Adding SRST signal on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n691$8255, Q = \u4.u0.buf0, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9732 ($sdff) from module usbf_top (D = $flatten\u4.\u0.$verific$n691$8255, Q = \u4.u0.buf0).
Adding SRST signal on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1093$8260, Q = \u4.u0.buf0_orig, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9736 ($sdff) from module usbf_top (D = \wb_data_i, Q = \u4.u0.buf0_orig).
Adding SRST signal on $flatten\u4.$verific$utmi_vend_wr_r_reg$usbf_rf.v:334$4172 ($dff) from module usbf_top (D = $flatten\u4.$verific$n226$3808, Q = \u4.utmi_vend_wr_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9738 ($sdff) from module usbf_top (D = $flatten\u4.$verific$n226$3808, Q = \u4.utmi_vend_wr_r).
Adding EN signal on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4177 ($dff) from module usbf_top (D = \wb_data_i [3:0], Q = \u4.utmi_vend_ctrl_r).
Adding SRST signal on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4207 ($dff) from module usbf_top (D = $flatten\u4.$verific$n363$4026, Q = \u4.intb_msk, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9743 ($sdff) from module usbf_top (D = \wb_data_i [24:16], Q = \u4.intb_msk).
Adding SRST signal on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4206 ($dff) from module usbf_top (D = $flatten\u4.$verific$n373$4027, Q = \u4.inta_msk, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9745 ($sdff) from module usbf_top (D = \wb_data_i [8:0], Q = \u4.inta_msk).
Adding SRST signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = { $flatten\u4.$verific$n4647$3968 $flatten\u4.$verific$n4656$3969 $flatten\u4.$verific$n4665$3970 $flatten\u4.$verific$n4674$3971 $flatten\u4.$verific$n4683$3972 $flatten\u4.$verific$n4692$3973 $flatten\u4.$verific$n4701$3974 $flatten\u4.$verific$n4710$3975 $flatten\u4.$verific$n4719$3976 }, Q = \u4.int_srcb, rval = 9'000000000).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [5]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [0]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [6]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [2]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [1]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [7]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [4]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [3]).
Adding EN signal on $auto$ff.cc:262:slice$9747 ($sdff) from module usbf_top (D = 1'1, Q = \u4.int_srcb [8]).
Adding SRST signal on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4195 ($dff) from module usbf_top (D = $flatten\u4.$verific$n295$4021, Q = \u4.funct_adr, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:262:slice$9761 ($sdff) from module usbf_top (D = \wb_data_i [6:0], Q = \u4.funct_adr).
Adding EN signal on $flatten\u4.$verific$dma_out_buf_avail_reg$usbf_rf.v:624$4473 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4601$3950, Q = \u4.dma_out_buf_avail).
Adding EN signal on $flatten\u4.$verific$dma_in_buf_sz1_reg$usbf_rf.v:591$4440 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4567$3918, Q = \u4.dma_in_buf_sz1).
Adding SRST signal on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4341 ($dff) from module usbf_top (D = $flatten\u4.$verific$n2190$4079 [14], Q = \u4.csr [14], rval = 1'0).
Adding EN signal on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4341 ($dff) from module usbf_top (D = { $flatten\u4.$verific$n2289$4082 [31:15] $flatten\u4.$verific$n2289$4082 [13:0] }, Q = { \u4.csr [31:15] \u4.csr [13:0] }).
Adding EN signal on $auto$ff.cc:262:slice$9769 ($sdff) from module usbf_top (D = 1'0, Q = \u4.csr [14]).
Adding EN signal on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4407 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4469$4146, Q = \u4.buf1).
Adding EN signal on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4374 ($dff) from module usbf_top (D = $flatten\u4.$verific$n3379$4114, Q = \u4.buf0).
Adding SRST signal on $flatten\u2.$verific$wack_r_reg$usbf_mem_arb.v:193$1252 ($dff) from module usbf_top (D = $flatten\u2.$verific$n238$1217, Q = \u2.wack_r, rval = 1'0).
Adding SRST signal on $flatten\u1.\u3.$verific$tx_data_to_cnt_reg$usbf_pe.v:768$3594 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1216$3230, Q = \u1.u3.tx_data_to_cnt, rval = 8'00000000).
Adding SRST signal on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$3648 ($dff) from module usbf_top (D = \u1.u3.next_state, Q = \u1.u3.state, rval = 10'0000000001).
Adding EN signal on $auto$ff.cc:262:slice$9785 ($sdff) from module usbf_top (D = \u1.u3.next_state, Q = \u1.u3.state).
Adding SRST signal on $flatten\u1.\u3.$verific$setup_token_reg$usbf_pe.v:592$3453 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n516$2985, Q = \u1.u3.setup_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9803 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n516$2985, Q = \u1.u3.setup_token).
Adding SRST signal on $flatten\u1.\u3.$verific$rx_ack_to_cnt_reg$usbf_pe.v:751$3584 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1148$3226, Q = \u1.u3.rx_ack_to_cnt, rval = 8'00000000).
Adding SRST signal on $flatten\u1.\u3.$verific$out_token_reg$usbf_pe.v:581$3449 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n506$2982, Q = \u1.u3.out_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9808 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n506$2982, Q = \u1.u3.out_token).
Adding SRST signal on $flatten\u1.\u3.$verific$new_sizeb_reg$usbf_pe.v:654$3515 ($dff) from module usbf_top (D = \u1.u3.size_next [13:11], Q = \u1.u3.new_sizeb [13:11], rval = 3'000).
Adding SRST signal on $flatten\u1.\u3.$verific$int_seqerr_set_reg$usbf_pe.v:808$3643 ($dff) from module usbf_top (D = \u1.u3.pid_seq_err, Q = \u1.u3.int_seqerr_set, rval = 1'0).
Adding SRST signal on $flatten\u1.\u3.$verific$in_token_reg$usbf_pe.v:570$3445 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n496$2979, Q = \u1.u3.in_token, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9827 ($sdff) from module usbf_top (D = $flatten\u1.\u3.$verific$n496$2979, Q = \u1.u3.in_token).
Adding SRST signal on $flatten\u1.\u3.$verific$idin_reg$usbf_pe.v:704$3556 ($dff) from module usbf_top (D = { \u1.u3.buffer_done \u1.u3.new_size [13:11] }, Q = \u1.u3.idin [31:28], rval = 4'0000).
Adding SRST signal on $flatten\u1.\u3.$verific$buf0_rl_reg$usbf_pe.v:729$3570 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1651$3136, Q = \u1.u3.buf0_rl, rval = 1'0).
Adding SRST signal on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$2169 ($dff) from module usbf_top (D = \u1.u2.next_state, Q = \u1.u2.state, rval = 8'00000001).
Adding EN signal on $auto$ff.cc:262:slice$9834 ($sdff) from module usbf_top (D = \u1.u2.next_state, Q = \u1.u2.state).
Adding SRST signal on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$2105 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n551$1982, Q = \u1.u2.sizu_c, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$9854 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n527$1980, Q = \u1.u2.sizu_c).
Adding SRST signal on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$2089 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n445$1977, Q = \u1.u2.sizd_c, rval = 14'11111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9860 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n445$1977, Q = \u1.u2.sizd_c).
Adding SRST signal on $flatten\u1.\u2.$verific$send_data_r_reg$usbf_idma.v:431$2164 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1233$1930, Q = \u1.u2.send_data_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9864 ($sdff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1233$1930, Q = \u1.u2.send_data_r).
Adding SRST signal on $flatten\u1.\u2.$verific$rx_dma_en_r_reg$usbf_idma.v:278$2050 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1422$3108, Q = \u1.u2.rx_dma_en_r, rval = 1'0).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$2148 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf1).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$2146 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf0).
Adding SRST signal on $flatten\u1.\u2.$verific$dtmp_sel_r_reg$usbf_idma.v:360$2111 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1329$1938, Q = \u1.u2.dtmp_sel_r, rval = 1'0).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [31:24], Q = \u1.u2.dtmp_r [31:24]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [23:16], Q = \u1.u2.dtmp_r [23:16]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [15:8], Q = \u1.u2.dtmp_r [15:8]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [7:0], Q = \u1.u2.dtmp_r [7:0]).
Adding EN signal on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$2135 ($dff) from module usbf_top (D = \u1.u2.dtmp_r, Q = \u1.u2.dout_r).
Adding SRST signal on $flatten\u1.\u2.$verific$adr_cb_reg$usbf_idma.v:307$2072 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n333$1967, Q = \u1.u2.adr_cb, rval = 3'000).
Adding SRST signal on $flatten\u1.\u1.$verific$zero_length_r_reg$usbf_pa.v:187$2291 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n12$2215, Q = \u1.u1.zero_length_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9908 ($sdff) from module usbf_top (D = \u1.u1.send_zero_length_r, Q = \u1.u1.zero_length_r).
Adding SRST signal on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$2387 ($dff) from module usbf_top (D = \u1.u1.next_state, Q = \u1.u1.state, rval = 5'00001).
Adding EN signal on $auto$ff.cc:262:slice$9914 ($sdff) from module usbf_top (D = \u1.u1.next_state, Q = \u1.u1.state).
Adding SRST signal on $flatten\u1.\u1.$verific$send_zero_length_r_reg$usbf_pa.v:176$2285 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1419$3106, Q = \u1.u1.send_zero_length_r, rval = 1'0).
Adding SRST signal on $flatten\u1.\u1.$verific$send_token_r_reg$usbf_pa.v:204$2300 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n28$2222, Q = \u1.u1.send_token_r, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9935 ($sdff) from module usbf_top (D = $flatten\u1.\u1.$verific$n28$2222, Q = \u1.u1.send_token_r).
Adding SRST signal on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$2343 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n224$2269, Q = \u1.u1.crc16, rval = 16'1111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9939 ($sdff) from module usbf_top (D = { \u1.u1.crc16_next [15] \u1.u1.crc16 [6:2] \u1.u1.crc16_next [9:0] }, Q = \u1.u1.crc16).
Adding EN signal on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2696 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token1).
Adding EN signal on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2694 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token0).
Adding SRST signal on $flatten\u1.\u0.$verific$rxv2_reg$usbf_pd.v:311$2743 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n235$2567, Q = \u1.u0.rxv2, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9943 ($sdff) from module usbf_top (D = $flatten\u1.\u0.$verific$n235$2567, Q = \u1.u0.rxv2).
Adding SRST signal on $flatten\u1.\u0.$verific$rxv1_reg$usbf_pd.v:300$2738 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n225$2563, Q = \u1.u0.rxv1, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9947 ($sdff) from module usbf_top (D = $flatten\u1.\u0.$verific$n225$2563, Q = \u1.u0.rxv1).
Adding SRST signal on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2647 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n27$2610, Q = \u1.u0.pid, rval = 8'11110000).
Adding EN signal on $auto$ff.cc:262:slice$9951 ($sdff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.pid).
Adding EN signal on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2754 ($dff) from module usbf_top (D = \u1.u0.d1, Q = \u1.u0.d2).
Adding EN signal on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2753 ($dff) from module usbf_top (D = \u1.u0.d0, Q = \u1.u0.d1).
Adding EN signal on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2752 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.d0).
Adding SRST signal on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2767 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n376$2623, Q = \u1.u0.crc16_sum, rval = 16'1111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$9956 ($sdff) from module usbf_top (D = { \u1.u0.crc16_out [15] \u1.u0.crc16_sum [6:2] \u1.u0.crc16_out [9:0] }, Q = \u1.u0.crc16_sum).
Adding SRST signal on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1356 ($dff) from module usbf_top (D = $flatten\u1.$verific$n186$1297, Q = \u1.sof_time, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$9958 ($sdff) from module usbf_top (D = $flatten\u1.$verific$n160$1295, Q = \u1.sof_time).
Adding SRST signal on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1349 ($dff) from module usbf_top (D = $flatten\u1.$verific$n122$1291, Q = \u1.mfm_cnt, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$9960 ($sdff) from module usbf_top (D = $flatten\u1.$verific$n112$1289, Q = \u1.mfm_cnt).
Adding SRST signal on $flatten\u1.$verific$hms_cnt_reg$usbf_pl.v:321$1363 ($dff) from module usbf_top (D = $flatten\u1.$verific$n274$1301, Q = \u1.hms_cnt, rval = 5'00000).
Adding SRST signal on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1336 ($dff) from module usbf_top (D = $flatten\u1.$verific$n56$1286, Q = \u1.frame_no_r, rval = 11'00000000000).
Adding EN signal on $auto$ff.cc:262:slice$9971 ($sdff) from module usbf_top (D = { \u1.u0.token1 [2:0] \u1.u0.token0 }, Q = \u1.frame_no_r).
Adding SRST signal on $flatten\u0.\u0.$verific$usb_suspend_reg$usbf_utmi_ls.v:236$8835 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n27$8624, Q = \u0.u0.usb_suspend, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9973 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.usb_suspend).
Adding SRST signal on $flatten\u0.\u0.$verific$usb_attached_reg$usbf_utmi_ls.v:241$8838 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n33$8626, Q = \u0.u0.usb_attached, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$9975 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.usb_attached).
Adding SRST signal on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$8990 ($dff) from module usbf_top (D = \u0.u0.next_state, Q = \u0.u0.state, rval = 15'000000000000001).
Adding EN signal on $auto$ff.cc:262:slice$9977 ($sdff) from module usbf_top (D = \u0.u0.next_state, Q = \u0.u0.state).
Adding SRST signal on $flatten\u0.\u0.$verific$ps_cnt_reg$usbf_utmi_ls.v:320$8894 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n127$8760, Q = \u0.u0.ps_cnt, rval = 4'0000).
Adding SRST signal on $flatten\u0.\u0.$verific$mode_hs_reg$usbf_utmi_ls.v:231$8832 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n21$8622, Q = \u0.u0.mode_hs, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10012 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.mode_hs).
Adding SRST signal on $flatten\u0.\u0.$verific$me_ps_reg$usbf_utmi_ls.v:358$8937 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n277$8770, Q = \u0.u0.me_ps, rval = 8'00000000).
Adding SRST signal on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$8946 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n347$8775, Q = \u0.u0.me_ps2, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10015 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n329$8773, Q = \u0.u0.me_ps2).
Adding SRST signal on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$8958 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n411$8779, Q = \u0.u0.me_cnt, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10017 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n393$8777, Q = \u0.u0.me_cnt).
Adding SRST signal on $flatten\u0.\u0.$verific$idle_long_reg$usbf_utmi_ls.v:292$8875 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n98$8643, Q = \u0.u0.idle_long, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10019 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.idle_long).
Adding SRST signal on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$8906 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n175$8765, Q = \u0.u0.idle_cnt1, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$10025 ($sdff) from module usbf_top (D = \u0.u0.idle_cnt1_next, Q = \u0.u0.idle_cnt1).
Adding SRST signal on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$8982 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n482$8784, Q = \u0.u0.chirp_cnt, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$10027 ($sdff) from module usbf_top (D = $flatten\u0.\u0.$verific$n474$8782, Q = \u0.u0.chirp_cnt).
Adding SRST signal on $flatten\u0.\u0.$verific$XcvSelect_reg$usbf_utmi_ls.v:251$8844 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n45$8630, Q = \u0.u0.XcvSelect, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$10029 ($sdff) from module usbf_top (D = 1'0, Q = \u0.u0.XcvSelect).
Adding SRST signal on $flatten\u0.\u0.$verific$TermSel_reg$usbf_utmi_ls.v:246$8841 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n39$8628, Q = \u0.u0.TermSel, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$10031 ($sdff) from module usbf_top (D = 1'1, Q = \u0.u0.TermSel).
Adding SRST signal on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$8849 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n55$8756, Q = \u0.u0.OpMode, rval = 2'10).
Adding EN signal on $auto$ff.cc:262:slice$10033 ($sdff) from module usbf_top (D = 2'00, Q = \u0.u0.OpMode).
Adding SRST signal on $flatten\u0.$verific$rx_valid_reg$usbf_utmi_if.v:185$8563 ($dff) from module usbf_top (D = \RxValid_pad_i, Q = \u0.rx_valid, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$rx_err_reg$usbf_utmi_if.v:201$8569 ($dff) from module usbf_top (D = \RxError_pad_i, Q = \u0.rx_err, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$rx_active_reg$usbf_utmi_if.v:193$8566 ($dff) from module usbf_top (D = \RxActive_pad_i, Q = \u0.rx_active, rval = 1'0).
Adding SRST signal on $flatten\u0.$verific$TxValid_reg$usbf_utmi_if.v:230$8590 ($dff) from module usbf_top (D = $flatten\u0.$verific$n102$8550, Q = \u0.TxValid, rval = 1'0).
Adding EN signal on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$8577 ($dff) from module usbf_top (D = $flatten\u0.$verific$n70$8557, Q = \u0.DataOut).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9776 ($sdffe) from module usbf_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$10034 ($sdffe) from module usbf_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$9812 ($sdff) from module usbf_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$9812 ($sdff) from module usbf_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$9812 ($sdff) from module usbf_top.

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 265 unused cells and 286 unused wires.
<suppressed ~276 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~51 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~136 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9313 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9296 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9339 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9837 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9839 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9841 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9843 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9378 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9380 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9428 ($eq).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u0.$verific$mux_42$usbf_ep_rf.v:250$8328 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_19$usbf_ep_rf.v:225$8309 ($eq).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u1.$verific$mux_42$usbf_ep_rf.v:250$8328 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u1.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u2.$verific$mux_42$usbf_ep_rf.v:250$8328 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u2.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 4 bits (of 13) from mux cell usbf_top.$flatten\u4.\u3.$verific$mux_42$usbf_ep_rf.v:250$8328 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u3.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9800 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9796 ($ne).
Removed top 25 bits (of 32) from mux cell usbf_top.$flatten\u4.$auto$bmuxmap.cc:60:execute$9226 ($mux).
Removed top 3 bits (of 32) from mux cell usbf_top.$flatten\u4.$auto$bmuxmap.cc:60:execute$9227 ($mux).
Removed top 3 bits (of 32) from mux cell usbf_top.$flatten\u4.$auto$bmuxmap.cc:60:execute$9231 ($mux).
Removed top 6 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_113$usbf_rf.v:370$4190 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_123$usbf_rf.v:384$4198 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_156$usbf_rf.v:414$4211 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_159$usbf_rf.v:415$4214 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_162$usbf_rf.v:416$4217 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_165$usbf_rf.v:417$4220 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_66$usbf_rf.v:318$4159 ($eq).
Removed top 4 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_76$usbf_rf.v:332$4166 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9792 ($ne).
Removed top 12 bits (of 16) from port A of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$4516 ($or).
Removed top 12 bits (of 16) from port B of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$4516 ($or).
Removed top 12 bits (of 16) from port Y of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$4516 ($or).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9309 ($eq).
Removed top 3 bits (of 6) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9331 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9326 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_46$usbf_pd.v:240$2680 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_38$usbf_pd.v:236$2673 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_32$usbf_pd.v:233$2667 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_28$usbf_pd.v:231$2663 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_24$usbf_pd.v:229$2659 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9322 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_20$usbf_pd.v:227$2655 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_16$usbf_pd.v:225$2651 ($eq).
Removed top 1 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_146$usbf_pa.v:368$2404 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_145$usbf_pa.v:351$2403 ($eq).
Removed top 3 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_143$usbf_pa.v:331$2401 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_142$usbf_pa.v:315$2400 ($eq).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084 ($sub).
Removed top 1 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_267$usbf_idma.v:594$2196 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_266$usbf_idma.v:575$2195 ($eq).
Removed top 3 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_265$usbf_idma.v:559$2194 ($eq).
Removed top 4 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_264$usbf_idma.v:536$2193 ($eq).
Removed top 5 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_263$usbf_idma.v:513$2192 ($eq).
Removed top 6 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_262$usbf_idma.v:490$2191 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_261$usbf_idma.v:463$2190 ($eq).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_213$usbf_idma.v:431$2158 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_124$usbf_idma.v:369$2116 ($eq).
Removed top 10 bits (of 11) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100 ($add).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073 ($add).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065 ($add).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
Removed top 2 bits (of 17) from port Y of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
Removed top 2 bits (of 17) from port A of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$3516 ($sub).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3323 ($mux).
Removed top 1 bits (of 4) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$3718 ($mux).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3408 ($mux).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$not_equal_501$usbf_pe.v:733$3571 ($ne).
Removed top 4 bits (of 28) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_713$usbf_pe.v:704$3554 ($mux).
Removed top 3 bits (of 14) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_383$usbf_pe.v:654$3513 ($mux).
Removed top 3 bits (of 14) from mux cell usbf_top.$flatten\u1.\u3.$verific$mux_382$usbf_pe.v:654$3512 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_9$usbf_pe.v:367$3272 ($eq).
Removed top 1 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_684$usbf_pe.v:1056$3722 ($eq).
Removed top 2 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_683$usbf_pe.v:1047$3721 ($eq).
Removed top 3 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_682$usbf_pe.v:1009$3720 ($eq).
Removed top 4 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_681$usbf_pe.v:995$3719 ($eq).
Removed top 7 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_678$usbf_pe.v:925$3717 ($eq).
Removed top 8 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_677$usbf_pe.v:915$3716 ($eq).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_676$usbf_pe.v:846$3715 ($eq).
Removed top 5 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_580$usbf_pe.v:803$3636 ($eq).
Removed top 6 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_578$usbf_pe.v:803$3634 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_532$usbf_pe.v:771$3595 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_519$usbf_pe.v:754$3585 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_3$usbf_pe.v:363$3266 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_273$usbf_pe.v:547$3427 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_171$usbf_pe.v:497$3404 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_170$usbf_pe.v:496$3403 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_169$usbf_pe.v:495$3402 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_13$usbf_pe.v:370$3276 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581 ($add).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549 ($add).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525 ($add).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$3527 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3495 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3492 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3476 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3471 ($lt).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.$verific$add_47$usbf_pl.v:299$1344 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u1.$verific$add_58$usbf_pl.v:308$1352 ($add).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.$verific$add_69$usbf_pl.v:321$1360 ($add).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9923 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9921 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9903 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9896 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9294 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9295 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9889 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9847 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9849 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9851 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9882 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_61$usbf_utmi_ls.v:268$8856 ($eq).
Removed top 1 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_330$usbf_utmi_ls.v:632$9042 ($eq).
Removed top 2 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_329$usbf_utmi_ls.v:617$9041 ($eq).
Removed top 3 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_328$usbf_utmi_ls.v:602$9040 ($eq).
Removed top 4 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_327$usbf_utmi_ls.v:594$9039 ($eq).
Removed top 5 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_326$usbf_utmi_ls.v:579$9038 ($eq).
Removed top 6 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_325$usbf_utmi_ls.v:560$9037 ($eq).
Removed top 7 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_324$usbf_utmi_ls.v:552$9036 ($eq).
Removed top 9 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_323$usbf_utmi_ls.v:539$9035 ($eq).
Removed top 8 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_322$usbf_utmi_ls.v:534$9034 ($eq).
Removed top 10 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_321$usbf_utmi_ls.v:518$9033 ($eq).
Removed top 11 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_320$usbf_utmi_ls.v:502$9032 ($eq).
Removed top 12 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_319$usbf_utmi_ls.v:486$9031 ($eq).
Removed top 13 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_318$usbf_utmi_ls.v:461$9030 ($eq).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_317$usbf_utmi_ls.v:449$9029 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907 ($add).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891 ($add).
Removed top 6 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$8968 ($lt).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$8964 ($lt).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$8960 ($lt).
Removed top 1 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$8930 ($lt).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$8922 ($lt).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918 ($lt).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$8914 ($lt).
Removed top 1 bits (of 5) from wire usbf_top.$auto$fsm_map.cc:238:map_fsm$9299.
Removed top 1 bits (of 7) from wire usbf_top.$auto$fsm_map.cc:238:map_fsm$9385.
Removed top 2 bits (of 17) from wire usbf_top.$flatten\u1.\u2.$verific$n169$1958.
Removed top 4 bits (of 15) from wire usbf_top.$flatten\u1.\u3.$verific$n1006$3219.
Removed top 2 bits (of 13) from wire usbf_top.$flatten\u1.\u3.$verific$n1038$3220.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n185$3161.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n196$3162.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n403$3199.
Removed top 3 bits (of 14) from wire usbf_top.$flatten\u1.\u3.$verific$n707$3205.
Removed top 3 bits (of 14) from wire usbf_top.$flatten\u1.\u3.$verific$n722$3206.
Removed top 384 bits (of 512) from wire usbf_top.$flatten\u4.$auto$bmuxmap.cc:58:execute$9189.
Removed top 192 bits (of 256) from wire usbf_top.$flatten\u4.$auto$bmuxmap.cc:58:execute$9206.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u0.$verific$n345$8239.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u1.$verific$n345$8239.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u2.$verific$n345$8239.
Removed top 4 bits (of 13) from wire usbf_top.$flatten\u4.\u3.$verific$n345$8239.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module usbf_top:
  creating $macc model for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978 ($add).
  creating $macc model for $flatten\u1.$verific$add_47$usbf_pl.v:299$1344 ($add).
  creating $macc model for $flatten\u1.$verific$add_58$usbf_pl.v:308$1352 ($add).
  creating $macc model for $flatten\u1.$verific$add_69$usbf_pl.v:321$1360 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084 ($sub).
  creating $macc model for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$3516 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$3516.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525.
  creating $alu model for $macc $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057.
  creating $alu model for $macc $flatten\u1.$verific$add_69$usbf_pl.v:321$1360.
  creating $alu model for $macc $flatten\u1.$verific$add_58$usbf_pl.v:308$1352.
  creating $alu model for $macc $flatten\u1.$verific$add_47$usbf_pl.v:299$1344.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$8914 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$8922 ($lt): merged with $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$8930 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$8960 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$8964 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$8968 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3471 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3476 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3492 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3495 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$3527 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$3545 ($lt): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540.
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$3533 ($ne): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540.
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10087
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10092
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10103
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10112
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10121
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10132
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10143
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10152
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10161
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10166
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10171
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10180
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10189
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10194
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10199
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10208
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540, $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$3545, $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$3533: $auto$alumacc.cc:485:replace_alu$10217
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$3527: $auto$alumacc.cc:485:replace_alu$10230
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3495: $auto$alumacc.cc:485:replace_alu$10241
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3492: $auto$alumacc.cc:485:replace_alu$10252
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3476: $auto$alumacc.cc:485:replace_alu$10263
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3471: $auto$alumacc.cc:485:replace_alu$10274
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$8968: $auto$alumacc.cc:485:replace_alu$10285
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$8964: $auto$alumacc.cc:485:replace_alu$10290
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$8960: $auto$alumacc.cc:485:replace_alu$10295
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$8930: $auto$alumacc.cc:485:replace_alu$10300
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918, $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$8922: $auto$alumacc.cc:485:replace_alu$10305
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$8914: $auto$alumacc.cc:485:replace_alu$10316
  creating $alu cell for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891: $auto$alumacc.cc:485:replace_alu$10321
  creating $alu cell for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907: $auto$alumacc.cc:485:replace_alu$10324
  creating $alu cell for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935: $auto$alumacc.cc:485:replace_alu$10327
  creating $alu cell for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942: $auto$alumacc.cc:485:replace_alu$10330
  creating $alu cell for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954: $auto$alumacc.cc:485:replace_alu$10333
  creating $alu cell for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978: $auto$alumacc.cc:485:replace_alu$10336
  creating $alu cell for $flatten\u1.$verific$add_47$usbf_pl.v:299$1344: $auto$alumacc.cc:485:replace_alu$10339
  creating $alu cell for $flatten\u1.$verific$add_58$usbf_pl.v:308$1352: $auto$alumacc.cc:485:replace_alu$10342
  creating $alu cell for $flatten\u1.$verific$add_69$usbf_pl.v:321$1360: $auto$alumacc.cc:485:replace_alu$10345
  creating $alu cell for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057: $auto$alumacc.cc:485:replace_alu$10348
  creating $alu cell for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065: $auto$alumacc.cc:485:replace_alu$10351
  creating $alu cell for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073: $auto$alumacc.cc:485:replace_alu$10354
  creating $alu cell for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100: $auto$alumacc.cc:485:replace_alu$10357
  creating $alu cell for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084: $auto$alumacc.cc:485:replace_alu$10360
  creating $alu cell for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525: $auto$alumacc.cc:485:replace_alu$10363
  creating $alu cell for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549: $auto$alumacc.cc:485:replace_alu$10366
  creating $alu cell for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581: $auto$alumacc.cc:485:replace_alu$10369
  creating $alu cell for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591: $auto$alumacc.cc:485:replace_alu$10372
  creating $alu cell for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$3516: $auto$alumacc.cc:485:replace_alu$10375
  creating $alu cell for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10378
  creating $alu cell for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10381
  creating $alu cell for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10384
  creating $alu cell for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10387
  creating $alu cell for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10390
  creating $alu cell for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10393
  creating $alu cell for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10396
  creating $alu cell for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10399
  creating $alu cell for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10402
  creating $alu cell for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10405
  creating $alu cell for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10408
  creating $alu cell for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10411
  creating $alu cell for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10414
  creating $alu cell for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10417
  creating $alu cell for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10420
  creating $alu cell for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10423
  creating $alu cell for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10426
  creating $alu cell for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10429
  creating $alu cell for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10432
  creating $alu cell for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10435
  creating $alu cell for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10438
  creating $alu cell for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10441
  creating $alu cell for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10444
  creating $alu cell for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10447
  created 71 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 4 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 5 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 6 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 7 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 8 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 9 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 10 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 11 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 12 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 13 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 14 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 15 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 1 unused cells and 32 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~137 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.

yosys> opt_dff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 2

yosys> stat

3.40. Printing statistics.

=== usbf_top ===

   Number of wires:               2967
   Number of wire bits:          17373
   Number of public wires:        1535
   Number of public wire bits:   10169
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1899
     $alu                           71
     $and                          337
     $dff                          186
     $dffe                          19
     $eq                           138
     $logic_not                     14
     $mux                          288
     $ne                            38
     $not                          158
     $or                           168
     $pmux                          34
     $reduce_and                    56
     $reduce_bool                   45
     $reduce_or                     73
     $sdff                          17
     $sdffe                        137
     $xor                          120


yosys> memory -nomap

3.41. Executing MEMORY pass.

yosys> opt_mem

3.41.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.41.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.41.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.41.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.41.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.41.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> memory_share

3.41.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.41.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.41.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> memory_collect

3.41.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.42. Printing statistics.

=== usbf_top ===

   Number of wires:               2967
   Number of wire bits:          17373
   Number of public wires:        1535
   Number of public wire bits:   10169
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1899
     $alu                           71
     $and                          337
     $dff                          186
     $dffe                          19
     $eq                           138
     $logic_not                     14
     $mux                          288
     $ne                            38
     $not                          158
     $or                           168
     $pmux                          34
     $reduce_and                    56
     $reduce_bool                   45
     $reduce_or                     73
     $sdff                          17
     $sdffe                        137
     $xor                          120


yosys> muxpack

3.43. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~237 debug messages>

yosys> opt_clean

3.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> pmuxtree

3.45. Executing PMUXTREE pass.

yosys> muxpack

3.46. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10883 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10885 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10875 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10877 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10867 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10869 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10841 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10843 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10747 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10749 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10729 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10731 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10705 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10707 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10697 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10699 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10649 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10651 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10585 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10587 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10577 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10579 to a pmux with 2 cases.
Converted 22 (p)mux cells into 11 pmux cells.
<suppressed ~331 debug messages>

yosys> memory_map

3.47. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.48. Printing statistics.

=== usbf_top ===

   Number of wires:               3185
   Number of wire bits:          17997
   Number of public wires:        1535
   Number of public wire bits:   10169
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2072
     $alu                           71
     $and                          337
     $dff                          186
     $dffe                          19
     $eq                           138
     $logic_not                     14
     $mux                          387
     $ne                            38
     $not                          192
     $or                           187
     $pmux                          11
     $reduce_and                    56
     $reduce_bool                   45
     $reduce_or                    117
     $sdff                          17
     $sdffe                        137
     $xor                          120


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.49. Executing TECHMAP pass (map to technology primitives).

3.49.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.49.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.49.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$7ec5e66ab88c9f51d035070dfe0a06ec346d1216\_90_alu for cells of type $alu.
Using template $paramod$ef65f5ca875905bb4cb2e7b079483d1c2cdf9c89\_90_alu for cells of type $alu.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$b2cd65b42e0277574bcf6ce63cb040566ad68684\_90_alu for cells of type $alu.
Using template $paramod$6831557730818fb92b11a295f9eb33ff8fa62af1\_90_alu for cells of type $alu.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_90_alu for cells of type $alu.
Using template $paramod$ec32b97001540459632a2df9accd677d3703ea0f\_90_alu for cells of type $alu.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$5fa769bd6f6ca230a24c9bbc0e120f15bcfea838\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$2b7d033a8bf6b47b9d47acee9aa242dd67f0faa1\_80_rs_alu for cells of type $alu.
Using template $paramod$1ed7ec530b1ba361931392f2f8504f82ccdfecaa\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using template $paramod$dffbee7ee942d66441f7a53b64a65f15e3631443\_90_alu for cells of type $alu.
Using template $paramod$75d4465b5362f47f8faf1498769b32af049430ad\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$a950948e19702336540a1f557d0a91306bdb9188\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$fc69e1e055122f161e82f14586c9accf99d83cb8\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~8375 debug messages>

yosys> stat

3.50. Printing statistics.

=== usbf_top ===

   Number of wires:               8367
   Number of wire bits:         113994
   Number of public wires:        1535
   Number of public wire bits:   10169
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16051
     $_AND_                       3066
     $_DFFE_PP_                    277
     $_DFF_P_                      508
     $_MUX_                       4642
     $_NOT_                       1142
     $_OR_                        2731
     $_SDFFE_PN0P_                 339
     $_SDFFE_PN1P_                 404
     $_SDFFE_PP0P_                 121
     $_SDFFE_PP1P_                  36
     $_SDFF_PN0_                    10
     $_SDFF_PP0_                    40
     $_XOR_                       2718
     adder_carry                    17


yosys> opt_expr

3.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~4254 debug messages>

yosys> opt_merge -nomux

3.52. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~5364 debug messages>
Removed a total of 1788 cells.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 1059 unused cells and 4084 unused wires.
<suppressed ~1065 debug messages>

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.60. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.61. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.62. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.63. Executing OPT_SHARE pass.

yosys> opt_dff

3.64. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$20560 ($_DFF_P_) from module usbf_top (D = $auto$fsm_map.cc:238:map_fsm$9299 [3], Q = \u1.u0.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11369 ($_DFF_P_) from module usbf_top (D = $auto$rtlil.cc:2466:Mux$10480 [2], Q = \u5.state [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11141 ($_DFF_P_) from module usbf_top (D = $auto$pmuxtree.cc:65:recursive_mux_generator$10883.Y_B, Q = \u5.wb_ack_s1, rval = 1'0).

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 4 unused cells and 4 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.66. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_muxtree

3.67. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.70. Executing OPT_SHARE pass.

yosys> opt_dff

3.71. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 3

yosys> opt -fast -full

3.74. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.74.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~838 debug messages>

yosys> opt_merge

3.74.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff

3.74.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$22124 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [7], Q = \u0.DataOut [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$22123 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [6], Q = \u0.DataOut [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$22122 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_data [5], Q = \u0.DataOut [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$22121 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [4], Q = \u0.DataOut [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$22120 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [3], Q = \u0.DataOut [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$22119 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [2], Q = \u0.DataOut [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$22118 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_d [1], Q = \u0.DataOut [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$22117 ($_DFFE_PP_) from module usbf_top (D = \u1.u1.tx_data_data [0], Q = \u0.DataOut [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15228 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [31], Q = \u4.dout [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15227 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [30], Q = \u4.dout [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15226 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [29], Q = \u4.dout [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15225 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [28], Q = \u4.dout [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15224 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [27], Q = \u4.dout [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15223 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [26], Q = \u4.dout [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15222 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [25], Q = \u4.dout [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15221 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [24], Q = \u4.dout [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15220 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [23], Q = \u4.dout [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15219 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [22], Q = \u4.dout [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15218 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [21], Q = \u4.dout [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15217 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [20], Q = \u4.dout [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15216 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [19], Q = \u4.dout [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15215 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [18], Q = \u4.dout [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15214 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [17], Q = \u4.dout [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15213 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [16], Q = \u4.dout [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15212 ($_DFF_P_) from module usbf_top (D = $auto$wreduce.cc:455:run$10054 [47], Q = \u4.dout [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15211 ($_DFF_P_) from module usbf_top (D = $auto$wreduce.cc:455:run$10054 [46], Q = \u4.dout [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15210 ($_DFF_P_) from module usbf_top (D = $auto$wreduce.cc:455:run$10054 [45], Q = \u4.dout [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15209 ($_DFF_P_) from module usbf_top (D = $auto$wreduce.cc:455:run$10054 [44], Q = \u4.dout [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15208 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [11], Q = \u4.dout [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15207 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [10], Q = \u4.dout [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15206 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [9], Q = \u4.dout [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15205 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [8], Q = \u4.dout [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15204 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [7], Q = \u4.dout [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15203 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [6], Q = \u4.dout [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15202 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [5], Q = \u4.dout [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15201 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [4], Q = \u4.dout [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15200 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [3], Q = \u4.dout [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15199 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [2], Q = \u4.dout [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15198 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [1], Q = \u4.dout [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$15197 ($_DFF_P_) from module usbf_top (D = $flatten\u4.$auto$bmuxmap.cc:58:execute$9215 [0], Q = \u4.dout [0], rval = 1'0).

yosys> opt_clean

3.74.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 78 unused cells and 150 unused wires.
<suppressed ~79 debug messages>

3.74.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.74.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~50 debug messages>

yosys> opt_merge

3.74.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

yosys> opt_dff

3.74.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.74.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 40 unused wires.
<suppressed ~1 debug messages>

3.74.10. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.75. Executing TECHMAP pass (map to technology primitives).

3.75.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.75.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.76. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.76.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.76.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.76.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.76.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.76.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.76.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.76.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.76.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.77. Executing ABC pass (technology mapping using ABC).

3.77.1. Summary of detected clock domains:
  39 cells in clk=\clk_i, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$30387
  359 cells in clk=\clk_i, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$30305
  18 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$30289
  46 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=!$flatten\u0.$verific$n42$8542
  12 cells in clk=\clk_i, en={ }, arst={ }, srst=!$auto$rtlil.cc:2373:ReduceOr$10880
  51 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$rtlil.cc:2373:ReduceOr$10482
  33 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$30278
  17 cells in clk=\phy_clk_pad_i, en=\u0.u0.suspend_set, arst={ }, srst=\u0.u0.suspend_clr
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9614, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9605
  10 cells in clk=\phy_clk_pad_i, en=\u0.u0.fs_term_on, arst={ }, srst=\u0.u0.fs_term_off
  19 cells in clk=\phy_clk_pad_i, en=\u0.u0.xcv_set_hs, arst={ }, srst=\u0.u0.xcv_set_fs
  17 cells in clk=\phy_clk_pad_i, en=\u0.u0.chirp_cnt_inc, arst={ }, srst=!$auto$rtlil.cc:2466:Mux$10610 [10]
  35 cells in clk=\phy_clk_pad_i, en=$flatten\u0.\u0.$verific$n165$8660, arst={ }, srst=$flatten\u0.\u0.$verific$n154$8658
  6 cells in clk=\phy_clk_pad_i, en=\u0.u0.idle_long_set, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$10022
  48 cells in clk=\phy_clk_pad_i, en=$flatten\u0.\u0.$verific$n391$8688, arst={ }, srst=\u0.u0.me_cnt_clr
  36 cells in clk=\phy_clk_pad_i, en=\u0.u0.me_ps_2_5_us, arst={ }, srst=$flatten\u0.\u0.$verific$n318$8682
  21 cells in clk=\phy_clk_pad_i, en=!$auto$rtlil.cc:2549:NotGate$29722, arst={ }, srst=\u0.u0.mode_set_fs
  31 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$flatten\u0.\u0.$verific$n266$8679
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9544, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9532
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9547, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9532
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9550, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9532
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9553, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9532
  154 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$10009, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9980
  6 cells in clk=\phy_clk_pad_i, en=\u0.u0.attached_set, arst={ }, srst=!$auto$simplemap.cc:257:simplemap_eqne$21857
  19 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9890, arst={ }, srst={ }
  19 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  19 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9904, arst={ }, srst={ }
  51 cells in clk=\phy_clk_pad_i, en=\u1.hms_clk, arst={ }, srst=\u1.clr_sof_time
  15 cells in clk=\phy_clk_pad_i, en=\u1.frame_no_same, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9963
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9620, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9605
  13 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$flatten\u0.\u0.$verific$n120$8654
  33 cells in clk=\phy_clk_pad_i, en=\u1.clr_sof_time, arst={ }, srst=!\rst_i
  12 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9873
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9617, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9605
  13 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$simplemap.cc:257:simplemap_eqne$19582
  36 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=\u1.u3.out_to_small_r
  8 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9825
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9810, arst={ }, srst=!\rst_i
  9 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9578, arst={ }, srst=!\rst_i
  13 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst=!\rst_i
  107 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9801, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9788
  29 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=\u1.u3.rx_ack_to_clr
  20 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9933
  67 cells in clk=\phy_clk_pad_i, en=\u1.u2.word_done, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9883, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$rtlil.cc:2549:NotGate$29970
  48 cells in clk=\phy_clk_pad_i, en=\u1.u2.fill_buf0, arst={ }, srst={ }
  48 cells in clk=\phy_clk_pad_i, en=\u1.u2.fill_buf1, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst=!\rst_i
  111 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9862, arst={ }, srst=!\rst_i
  81 cells in clk=\phy_clk_pad_i, en=\u1.u2.rx_data_valid_r, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9857
  83 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9852, arst={ }, srst=!\rst_i
  93 cells in clk=\phy_clk_pad_i, en=\u1.u1.crc16_add, arst={ }, srst=\u1.u1.crc16_clr
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9937, arst={ }, srst=!\rst_i
  34 cells in clk=\phy_clk_pad_i, en=\u1.u0.token_le_2, arst={ }, srst={ }
  51 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9924, arst={ }, srst=!\rst_i
  4 cells in clk=\phy_clk_pad_i, en=\u1.u1.crc16_clr, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9911
  77 cells in clk=\phy_clk_pad_i, en=\u1.u0.data_valid_d, arst={ }, srst=\u1.u0.crc16_clr
  19 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9969
  26 cells in clk=\phy_clk_pad_i, en=\u1.u0.pid_ld_en, arst={ }, srst=!\rst_i
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9949, arst={ }, srst=!\rst_i
  2 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9945, arst={ }, srst=!\rst_i
  24 cells in clk=\phy_clk_pad_i, en=\u1.u0.data_valid_d, arst={ }, srst={ }
  39 cells in clk=\phy_clk_pad_i, en=\u1.u0.token_le_1, arst={ }, srst={ }
  29 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=\u0.rx_active
  7 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9740, arst={ }, srst=!\rst_i
  4 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9623, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9605
  4 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9626, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9605
  9 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9651, arst={ }, srst=!\rst_i
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9684, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9678
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9687, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9678
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9690, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9678
  59 cells in clk=\clk_i, en=$flatten\u4.$verific$n342$3822, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=\u4.attach, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  4 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9693, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9678
  4 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9678
  4 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9699, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9678
  9 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9724, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=\u4.crc5_err_r, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\clk_i, en=\u4.deattach, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  1 cells in clk=\clk_i, en=\u4.nse_err_r, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  1 cells in clk=\clk_i, en=\u4.pid_cs_err_r, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\clk_i, en=\u4.rx_err_r, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  1 cells in clk=\clk_i, en=\u4.suspend_end, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  1 cells in clk=\clk_i, en=\u4.suspend_start, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\clk_i, en=\u4.usb_reset_r, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9750
  7 cells in clk=\phy_clk_pad_i, en=\u0.u0.bit_stuff_on, arst={ }, srst=\u0.u0.bit_stuff_off
  17 cells in clk=\clk_i, en=$flatten\u4.$verific$n286$3819, arst={ }, srst=!\rst_i
  425 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9764, arst={ }, srst={ }
  72 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=!\rst_i
  142 cells in clk=\phy_clk_pad_i, en=\u4.u3.we2, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9515, arst={ }, srst=!\rst_i
  96 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9500, arst={ }, srst=!\rst_i
  285 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9492, arst={ }, srst=!\u4.u3.csr1 [0]
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9488, arst={ }, srst=!\rst_i
  33 cells in clk=\phy_clk_pad_i, en=\u4.u3.we1, arst={ }, srst=!\rst_i
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9462, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9459
  190 cells in clk=\phy_clk_pad_i, en=\u4.u3.we0, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9452, arst={ }, srst=!\rst_i
  12 cells in clk=\phy_clk_pad_i, en=$flatten\u4.\u3.$verific$n1271$8150, arst={ }, srst=!\rst_i
  142 cells in clk=\phy_clk_pad_i, en=\u4.u2.we2, arst={ }, srst=!\rst_i
  98 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9588, arst={ }, srst=!\rst_i
  62 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9584, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9573, arst={ }, srst=!\rst_i
  261 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9565, arst={ }, srst=!\u4.u2.csr1 [0]
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9561, arst={ }, srst=!\rst_i
  24 cells in clk=\phy_clk_pad_i, en=\u4.u2.we1, arst={ }, srst=!\rst_i
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9535, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9532
  166 cells in clk=\phy_clk_pad_i, en=\u4.u2.we0, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9525, arst={ }, srst=!\rst_i
  8 cells in clk=\phy_clk_pad_i, en=$flatten\u4.\u2.$verific$n1271$8150, arst={ }, srst=!\rst_i
  119 cells in clk=\phy_clk_pad_i, en=\u4.u1.we2, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9661, arst={ }, srst=!\rst_i
  94 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9657, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9646, arst={ }, srst=!\rst_i
  309 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst=!\u4.u1.csr1 [0]
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9634, arst={ }, srst=!\rst_i
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9611, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9605
  4 cells in clk=\clk_i, en=$flatten\u4.$verific$n222$3805, arst={ }, srst={ }
  19 cells in clk=\phy_clk_pad_i, en=\u4.u1.we1, arst={ }, srst=!\rst_i
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9608, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9605
  179 cells in clk=\phy_clk_pad_i, en=\u4.u1.we0, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9598, arst={ }, srst=!\rst_i
  15 cells in clk=\phy_clk_pad_i, en=$flatten\u4.\u1.$verific$n1271$8150, arst={ }, srst=!\rst_i
  122 cells in clk=\phy_clk_pad_i, en=\u4.u0.we2, arst={ }, srst=!\rst_i
  98 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9734, arst={ }, srst=!\rst_i
  62 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9730, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9719, arst={ }, srst=!\rst_i
  309 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9711, arst={ }, srst=!\u4.u0.csr1 [0]
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9707, arst={ }, srst=!\rst_i
  19 cells in clk=\phy_clk_pad_i, en=\u4.u0.we1, arst={ }, srst=!\rst_i
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9681, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9678
  160 cells in clk=\phy_clk_pad_i, en=\u4.u0.we0, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9671, arst={ }, srst=!\rst_i
  10 cells in clk=\phy_clk_pad_i, en=$flatten\u4.\u0.$verific$n1271$8150, arst={ }, srst=!\rst_i
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9480, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9477, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9471, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9468, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9465, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9538, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9532
  7 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst=!\rst_i
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9541, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9532
  3 cells in clk=\clk_i, en=\resume_req_i, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$9443
  605 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  2379 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.77.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$30387
Extracted 39 gates and 78 wires to a netlist network with 39 inputs and 6 outputs.

3.77.2.1. Executing ABC.

3.77.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$30305
Extracted 359 gates and 675 wires to a netlist network with 315 inputs and 29 outputs.

3.77.3.1. Executing ABC.

3.77.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by $auto$opt_dff.cc:253:combine_resets$30289
Extracted 18 gates and 40 wires to a netlist network with 21 inputs and 6 outputs.

3.77.4.1. Executing ABC.

3.77.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by !$flatten\u0.$verific$n42$8542
Extracted 46 gates and 96 wires to a netlist network with 49 inputs and 13 outputs.

3.77.5.1. Executing ABC.

3.77.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$auto$rtlil.cc:2373:ReduceOr$10880
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 7 outputs.

3.77.6.1. Executing ABC.

3.77.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$rtlil.cc:2373:ReduceOr$10482
Extracted 51 gates and 68 wires to a netlist network with 17 inputs and 11 outputs.

3.77.7.1. Executing ABC.

3.77.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$30278
Extracted 33 gates and 50 wires to a netlist network with 17 inputs and 7 outputs.

3.77.8.1. Executing ABC.

3.77.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.suspend_set, synchronously reset by \u0.u0.suspend_clr
Extracted 17 gates and 37 wires to a netlist network with 18 inputs and 10 outputs.

3.77.9.1. Executing ABC.

3.77.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9614, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9605
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.77.10.1. Executing ABC.

3.77.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.fs_term_on, synchronously reset by \u0.u0.fs_term_off
Extracted 10 gates and 18 wires to a netlist network with 7 inputs and 6 outputs.

3.77.11.1. Executing ABC.

3.77.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.xcv_set_hs, synchronously reset by \u0.u0.xcv_set_fs
Extracted 19 gates and 39 wires to a netlist network with 19 inputs and 9 outputs.

3.77.12.1. Executing ABC.

3.77.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.chirp_cnt_inc, synchronously reset by !$auto$rtlil.cc:2466:Mux$10610 [10]
Extracted 17 gates and 27 wires to a netlist network with 9 inputs and 5 outputs.

3.77.13.1. Executing ABC.

3.77.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $flatten\u0.\u0.$verific$n165$8660, synchronously reset by $flatten\u0.\u0.$verific$n154$8658
Extracted 35 gates and 53 wires to a netlist network with 17 inputs and 32 outputs.

3.77.14.1. Executing ABC.

3.77.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.idle_long_set, synchronously reset by $auto$opt_dff.cc:253:combine_resets$10022
Extracted 6 gates and 11 wires to a netlist network with 4 inputs and 3 outputs.

3.77.15.1. Executing ABC.

3.77.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $flatten\u0.\u0.$verific$n391$8688, synchronously reset by \u0.u0.me_cnt_clr
Extracted 48 gates and 63 wires to a netlist network with 15 inputs and 17 outputs.

3.77.16.1. Executing ABC.

3.77.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.me_ps_2_5_us, synchronously reset by $flatten\u0.\u0.$verific$n318$8682
Extracted 36 gates and 36 wires to a netlist network with 0 inputs and 11 outputs.

3.77.17.1. Executing ABC.

3.77.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by !$auto$rtlil.cc:2549:NotGate$29722, synchronously reset by \u0.u0.mode_set_fs
Extracted 21 gates and 44 wires to a netlist network with 21 inputs and 19 outputs.

3.77.18.1. Executing ABC.

3.77.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $flatten\u0.\u0.$verific$n266$8679
Extracted 31 gates and 31 wires to a netlist network with 0 inputs and 4 outputs.

3.77.19.1. Executing ABC.

3.77.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9544, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9532
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.77.20.1. Executing ABC.

3.77.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9547, synchronously reset by $abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.77.21.1. Executing ABC.

3.77.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9550, synchronously reset by $abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.77.22.1. Executing ABC.

3.77.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9553, synchronously reset by $abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.77.23.1. Executing ABC.

3.77.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$10009, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9980
Extracted 154 gates and 200 wires to a netlist network with 45 inputs and 26 outputs.

3.77.24.1. Executing ABC.

3.77.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.attached_set, synchronously reset by !$auto$simplemap.cc:257:simplemap_eqne$21857
Extracted 6 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.77.25.1. Executing ABC.

3.77.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9890
Extracted 19 gates and 39 wires to a netlist network with 20 inputs and 9 outputs.

3.77.26.1. Executing ABC.

3.77.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 19 gates and 39 wires to a netlist network with 20 inputs and 9 outputs.

3.77.27.1. Executing ABC.

3.77.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9904
Extracted 19 gates and 39 wires to a netlist network with 20 inputs and 9 outputs.

3.77.28.1. Executing ABC.

3.77.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.hms_clk, synchronously reset by \u1.clr_sof_time
Extracted 51 gates and 61 wires to a netlist network with 9 inputs and 12 outputs.

3.77.29.1. Executing ABC.

3.77.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.frame_no_same, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9963
Extracted 15 gates and 19 wires to a netlist network with 3 inputs and 5 outputs.

3.77.30.1. Executing ABC.

3.77.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9620, synchronously reset by $abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.77.31.1. Executing ABC.

3.77.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $flatten\u0.\u0.$verific$n120$8654
Extracted 13 gates and 13 wires to a netlist network with 0 inputs and 3 outputs.

3.77.32.1. Executing ABC.

3.77.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.clr_sof_time, synchronously reset by !\rst_i
Extracted 33 gates and 46 wires to a netlist network with 12 inputs and 22 outputs.

3.77.33.1. Executing ABC.

3.77.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9873
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 8 outputs.

3.77.34.1. Executing ABC.

3.77.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9617, synchronously reset by $abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.77.35.1. Executing ABC.

3.77.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$simplemap.cc:257:simplemap_eqne$19582
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 13 outputs.

3.77.36.1. Executing ABC.

3.77.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by \u1.u3.out_to_small_r
Extracted 36 gates and 68 wires to a netlist network with 32 inputs and 32 outputs.

3.77.37.1. Executing ABC.

3.77.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9825
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 5 outputs.

3.77.38.1. Executing ABC.

3.77.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9810, synchronously reset by !\rst_i
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.77.39.1. Executing ABC.

3.77.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9578, synchronously reset by !\rst_i
Extracted 9 gates and 19 wires to a netlist network with 8 inputs and 5 outputs.

3.77.40.1. Executing ABC.

3.77.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9805, synchronously reset by !\rst_i
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 8 outputs.

3.77.41.1. Executing ABC.

3.77.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9801, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9788
Extracted 107 gates and 145 wires to a netlist network with 37 inputs and 15 outputs.

3.77.42.1. Executing ABC.

3.77.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by \u1.u3.rx_ack_to_clr
Extracted 29 gates and 31 wires to a netlist network with 2 inputs and 6 outputs.

3.77.43.1. Executing ABC.

3.77.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9933
Extracted 20 gates and 35 wires to a netlist network with 15 inputs and 10 outputs.

3.77.44.1. Executing ABC.

3.77.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u2.word_done
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.77.45.1. Executing ABC.

3.77.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9883
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.77.46.1. Executing ABC.

3.77.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$rtlil.cc:2549:NotGate$29970
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 6 outputs.

3.77.47.1. Executing ABC.

3.77.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u2.fill_buf0
Extracted 48 gates and 81 wires to a netlist network with 33 inputs and 16 outputs.

3.77.48.1. Executing ABC.

3.77.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u2.fill_buf1
Extracted 48 gates and 81 wires to a netlist network with 33 inputs and 16 outputs.

3.77.49.1. Executing ABC.

3.77.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9866, synchronously reset by !\rst_i
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 2 outputs.

3.77.50.1. Executing ABC.

3.77.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9862, synchronously reset by !\rst_i
Extracted 111 gates and 129 wires to a netlist network with 18 inputs and 9 outputs.

3.77.51.1. Executing ABC.

3.77.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u2.rx_data_valid_r, synchronously reset by $abc$31791$auto$opt_dff.cc:253:combine_resets$9857
Extracted 81 gates and 105 wires to a netlist network with 24 inputs and 57 outputs.

3.77.52.1. Executing ABC.

3.77.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9852, synchronously reset by !\rst_i
Extracted 83 gates and 111 wires to a netlist network with 27 inputs and 14 outputs.

3.77.53.1. Executing ABC.

3.77.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u1.crc16_add, synchronously reset by \u1.u1.crc16_clr
Extracted 93 gates and 112 wires to a netlist network with 19 inputs and 19 outputs.

3.77.54.1. Executing ABC.

3.77.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9937, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.77.55.1. Executing ABC.

3.77.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u0.token_le_2
Extracted 34 gates and 63 wires to a netlist network with 28 inputs and 22 outputs.

3.77.56.1. Executing ABC.

3.77.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9924, synchronously reset by !\rst_i
Extracted 51 gates and 58 wires to a netlist network with 6 inputs and 10 outputs.

3.77.57.1. Executing ABC.

3.77.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32598$u1.u1.crc16_clr, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9911
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.77.58.1. Executing ABC.

3.77.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u0.data_valid_d, synchronously reset by \u1.u0.crc16_clr
Extracted 77 gates and 95 wires to a netlist network with 17 inputs and 14 outputs.

3.77.59.1. Executing ABC.

3.77.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9969
Extracted 19 gates and 21 wires to a netlist network with 2 inputs and 5 outputs.

3.77.60.1. Executing ABC.

3.77.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u0.pid_ld_en, synchronously reset by !\rst_i
Extracted 26 gates and 34 wires to a netlist network with 8 inputs and 14 outputs.

3.77.61.1. Executing ABC.

3.77.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9949, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.77.62.1. Executing ABC.

3.77.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9945, synchronously reset by !\rst_i
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.77.63.1. Executing ABC.

3.77.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32764$u1.u0.data_valid_d
Extracted 24 gates and 32 wires to a netlist network with 8 inputs and 8 outputs.

3.77.64.1. Executing ABC.

3.77.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u0.token_le_1
Extracted 39 gates and 64 wires to a netlist network with 24 inputs and 28 outputs.

3.77.65.1. Executing ABC.

3.77.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by \u0.rx_active
Extracted 29 gates and 31 wires to a netlist network with 2 inputs and 6 outputs.

3.77.66.1. Executing ABC.

3.77.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9740, synchronously reset by !\rst_i
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 4 outputs.

3.77.67.1. Executing ABC.

3.77.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9623, synchronously reset by $abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.77.68.1. Executing ABC.

3.77.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9626, synchronously reset by $abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.77.69.1. Executing ABC.

3.77.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9651, synchronously reset by !\rst_i
Extracted 9 gates and 19 wires to a netlist network with 8 inputs and 5 outputs.

3.77.70.1. Executing ABC.

3.77.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9684, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9678
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.77.71.1. Executing ABC.

3.77.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9687, synchronously reset by $abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.77.72.1. Executing ABC.

3.77.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9690, synchronously reset by $abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.77.73.1. Executing ABC.

3.77.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u4.$verific$n342$3822, synchronously reset by !\rst_i
Extracted 59 gates and 97 wires to a netlist network with 37 inputs and 38 outputs.

3.77.74.1. Executing ABC.

3.77.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.attach, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9750
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.77.75.1. Executing ABC.

3.77.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9693, synchronously reset by $abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.77.76.1. Executing ABC.

3.77.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9696, synchronously reset by $abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.77.77.1. Executing ABC.

3.77.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9699, synchronously reset by $abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.77.78.1. Executing ABC.

3.77.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9724, synchronously reset by !\rst_i
Extracted 9 gates and 19 wires to a netlist network with 8 inputs and 5 outputs.

3.77.79.1. Executing ABC.

3.77.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.crc5_err_r, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.80.1. Executing ABC.

3.77.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.deattach, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.77.81.1. Executing ABC.

3.77.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.nse_err_r, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.82.1. Executing ABC.

3.77.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.pid_cs_err_r, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.83.1. Executing ABC.

3.77.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.rx_err_r, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.77.84.1. Executing ABC.

3.77.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.suspend_end, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.85.1. Executing ABC.

3.77.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.suspend_start, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.86.1. Executing ABC.

3.77.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u4.usb_reset_r, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.77.87.1. Executing ABC.

3.77.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u0.u0.bit_stuff_on, synchronously reset by \u0.u0.bit_stuff_off
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 5 outputs.

3.77.88.1. Executing ABC.

3.77.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $flatten\u4.$verific$n286$3819, synchronously reset by !\rst_i
Extracted 17 gates and 34 wires to a netlist network with 16 inputs and 13 outputs.

3.77.89.1. Executing ABC.

3.77.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9764
Extracted 425 gates and 658 wires to a netlist network with 232 inputs and 272 outputs.

3.77.90.1. Executing ABC.

3.77.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by !\rst_i
Extracted 72 gates and 104 wires to a netlist network with 32 inputs and 36 outputs.

3.77.91.1. Executing ABC.

3.77.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u3.we2, synchronously reset by !\rst_i
Extracted 142 gates and 233 wires to a netlist network with 91 inputs and 107 outputs.

3.77.92.1. Executing ABC.

3.77.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9515, synchronously reset by !\rst_i
Extracted 130 gates and 263 wires to a netlist network with 133 inputs and 65 outputs.

3.77.93.1. Executing ABC.

3.77.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9511, synchronously reset by !\rst_i
Extracted 96 gates and 193 wires to a netlist network with 97 inputs and 68 outputs.

3.77.94.1. Executing ABC.

3.77.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9500, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.77.95.1. Executing ABC.

3.77.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9492, synchronously reset by !\u4.u3.csr1 [0]
Extracted 285 gates and 326 wires to a netlist network with 41 inputs and 64 outputs.

3.77.96.1. Executing ABC.

3.77.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9488, synchronously reset by !\rst_i
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.77.97.1. Executing ABC.

3.77.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u3.we1, synchronously reset by !\rst_i
Extracted 33 gates and 58 wires to a netlist network with 25 inputs and 30 outputs.

3.77.98.1. Executing ABC.

3.77.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9462, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.99.1. Executing ABC.

3.77.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u3.we0, synchronously reset by !\rst_i
Extracted 190 gates and 316 wires to a netlist network with 125 inputs and 123 outputs.

3.77.100.1. Executing ABC.

3.77.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9452, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.77.101.1. Executing ABC.

3.77.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $flatten\u4.\u3.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 12 gates and 25 wires to a netlist network with 12 inputs and 8 outputs.

3.77.102.1. Executing ABC.

3.77.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u2.we2, synchronously reset by !\rst_i
Extracted 142 gates and 233 wires to a netlist network with 91 inputs and 107 outputs.

3.77.103.1. Executing ABC.

3.77.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9588, synchronously reset by !\rst_i
Extracted 98 gates and 198 wires to a netlist network with 100 inputs and 65 outputs.

3.77.104.1. Executing ABC.

3.77.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9584, synchronously reset by !\rst_i
Extracted 62 gates and 125 wires to a netlist network with 63 inputs and 34 outputs.

3.77.105.1. Executing ABC.

3.77.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9573, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.77.106.1. Executing ABC.

3.77.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9565, synchronously reset by !\u4.u2.csr1 [0]
Extracted 261 gates and 290 wires to a netlist network with 29 inputs and 40 outputs.

3.77.107.1. Executing ABC.

3.77.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9561, synchronously reset by !\rst_i
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.77.108.1. Executing ABC.

3.77.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u2.we1, synchronously reset by !\rst_i
Extracted 24 gates and 45 wires to a netlist network with 21 inputs and 21 outputs.

3.77.109.1. Executing ABC.

3.77.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9535, synchronously reset by $abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.110.1. Executing ABC.

3.77.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u2.we0, synchronously reset by !\rst_i
Extracted 166 gates and 267 wires to a netlist network with 100 inputs and 118 outputs.

3.77.111.1. Executing ABC.

3.77.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9525, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.77.112.1. Executing ABC.

3.77.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $flatten\u4.\u2.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 8 gates and 16 wires to a netlist network with 7 inputs and 8 outputs.

3.77.113.1. Executing ABC.

3.77.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u1.we2, synchronously reset by !\rst_i
Extracted 119 gates and 198 wires to a netlist network with 79 inputs and 84 outputs.

3.77.114.1. Executing ABC.

3.77.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9661, synchronously reset by !\rst_i
Extracted 130 gates and 263 wires to a netlist network with 133 inputs and 65 outputs.

3.77.115.1. Executing ABC.

3.77.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9657, synchronously reset by !\rst_i
Extracted 94 gates and 190 wires to a netlist network with 96 inputs and 66 outputs.

3.77.116.1. Executing ABC.

3.77.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9646, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.77.117.1. Executing ABC.

3.77.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9638, synchronously reset by !\u4.u1.csr1 [0]
Extracted 309 gates and 362 wires to a netlist network with 53 inputs and 88 outputs.

3.77.118.1. Executing ABC.

3.77.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9634, synchronously reset by !\rst_i
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.77.119.1. Executing ABC.

3.77.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9611, synchronously reset by $abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.77.120.1. Executing ABC.

3.77.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33030$flatten\u4.$verific$n222$3805
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

3.77.121.1. Executing ABC.

3.77.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u1.we1, synchronously reset by !\rst_i
Extracted 19 gates and 37 wires to a netlist network with 18 inputs and 17 outputs.

3.77.122.1. Executing ABC.

3.77.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9608, synchronously reset by $abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.123.1. Executing ABC.

3.77.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u1.we0, synchronously reset by !\rst_i
Extracted 179 gates and 300 wires to a netlist network with 120 inputs and 123 outputs.

3.77.124.1. Executing ABC.

3.77.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9598, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.77.125.1. Executing ABC.

3.77.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $flatten\u4.\u1.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 15 gates and 31 wires to a netlist network with 15 inputs and 9 outputs.

3.77.126.1. Executing ABC.

3.77.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u0.we2, synchronously reset by !\rst_i
Extracted 122 gates and 202 wires to a netlist network with 80 inputs and 87 outputs.

3.77.127.1. Executing ABC.

3.77.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9734, synchronously reset by !\rst_i
Extracted 98 gates and 198 wires to a netlist network with 100 inputs and 65 outputs.

3.77.128.1. Executing ABC.

3.77.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9730, synchronously reset by !\rst_i
Extracted 62 gates and 125 wires to a netlist network with 63 inputs and 34 outputs.

3.77.129.1. Executing ABC.

3.77.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9719, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.77.130.1. Executing ABC.

3.77.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9711, synchronously reset by !\u4.u0.csr1 [0]
Extracted 309 gates and 362 wires to a netlist network with 53 inputs and 88 outputs.

3.77.131.1. Executing ABC.

3.77.132. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9707, synchronously reset by !\rst_i
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.77.132.1. Executing ABC.

3.77.133. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u0.we1, synchronously reset by !\rst_i
Extracted 19 gates and 37 wires to a netlist network with 18 inputs and 17 outputs.

3.77.133.1. Executing ABC.

3.77.134. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9681, synchronously reset by $abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.134.1. Executing ABC.

3.77.135. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u4.u0.we0, synchronously reset by !\rst_i
Extracted 160 gates and 259 wires to a netlist network with 98 inputs and 117 outputs.

3.77.135.1. Executing ABC.

3.77.136. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9671, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.77.136.1. Executing ABC.

3.77.137. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $flatten\u4.\u0.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 10 gates and 21 wires to a netlist network with 10 inputs and 8 outputs.

3.77.137.1. Executing ABC.

3.77.138. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9480, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.138.1. Executing ABC.

3.77.139. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9477, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.139.1. Executing ABC.

3.77.140. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9474, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.140.1. Executing ABC.

3.77.141. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9471, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.141.1. Executing ABC.

3.77.142. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9468, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.142.1. Executing ABC.

3.77.143. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9465, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.143.1. Executing ABC.

3.77.144. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9538, synchronously reset by $abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.144.1. Executing ABC.

3.77.145. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9505, synchronously reset by !\rst_i
Extracted 7 gates and 14 wires to a netlist network with 5 inputs and 5 outputs.

3.77.145.1. Executing ABC.

3.77.146. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9541, synchronously reset by $abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.77.146.1. Executing ABC.

3.77.147. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \resume_req_i, synchronously reset by $auto$opt_dff.cc:253:combine_resets$9443
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.77.147.1. Executing ABC.

3.77.148. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 605 gates and 983 wires to a netlist network with 377 inputs and 143 outputs.

3.77.148.1. Executing ABC.

3.77.149. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 2362 gates and 3272 wires to a netlist network with 908 inputs and 458 outputs.

3.77.149.1. Executing ABC.

yosys> abc -dff

3.78. Executing ABC pass (technology mapping using ABC).

3.78.1. Summary of detected clock domains:
  17 cells in clk=\phy_clk_pad_i, en=$abc$31153$u0.u0.suspend_set, arst={ }, srst=$abc$31153$u0.u0.suspend_clr
  19 cells in clk=\phy_clk_pad_i, en=$abc$31191$u0.u0.xcv_set_hs, arst={ }, srst=$abc$31191$u0.u0.xcv_set_fs
  6 cells in clk=\phy_clk_pad_i, en=$abc$31172$auto$opt_dff.cc:219:make_patterns_logic$9614, arst={ }, srst=$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  5 cells in clk=\phy_clk_pad_i, en=$abc$31180$u0.u0.fs_term_on, arst={ }, srst=$abc$31180$u0.u0.fs_term_off
  7 cells in clk=\phy_clk_pad_i, en=$abc$38848$u0.u0.attached_set, arst={ }, srst=!$abc$31572$auto$simplemap.cc:257:simplemap_eqne$21857
  4 cells in clk=\phy_clk_pad_i, en=$abc$32884$auto$opt_dff.cc:194:make_patterns_logic$9945, arst={ }, srst=!\rst_i
  9 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$31869$auto$opt_dff.cc:253:combine_resets$9825
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9937, arst={ }, srst=!\rst_i
  6 cells in clk=\phy_clk_pad_i, en=$abc$31422$auto$opt_dff.cc:219:make_patterns_logic$9544, arst={ }, srst=$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  23 cells in clk=\phy_clk_pad_i, en=!$abc$31371$auto$rtlil.cc:2549:NotGate$29722, arst={ }, srst=$abc$31371$u0.u0.mode_set_fs
  10 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$31791$auto$opt_dff.cc:253:combine_resets$9873
  31 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$31098$auto$rtlil.cc:2373:ReduceOr$10482
  19 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$32028$auto$opt_dff.cc:253:combine_resets$9933
  5 cells in clk=\phy_clk_pad_i, en=$abc$31281$u0.u0.idle_long_set, arst={ }, srst=$abc$31281$auto$opt_dff.cc:253:combine_resets$10022
  9 cells in clk=\clk_i, en={ }, arst={ }, srst=!$abc$31087$auto$rtlil.cc:2373:ReduceOr$10880
  12 cells in clk=\phy_clk_pad_i, en=$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=$abc$30991$auto$opt_dff.cc:253:combine_resets$30289
  10 cells in clk=\phy_clk_pad_i, en=$abc$32349$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=$abc$34624$auto$opt_dff.cc:194:make_patterns_logic$9488, arst={ }, srst=!\rst_i
  10 cells in clk=\phy_clk_pad_i, en=$abc$31879$auto$opt_dff.cc:194:make_patterns_logic$9810, arst={ }, srst=!\rst_i
  3 cells in clk=\phy_clk_pad_i, en=$abc$32879$auto$opt_dff.cc:194:make_patterns_logic$9949, arst={ }, srst=!\rst_i
  11 cells in clk=\phy_clk_pad_i, en=$abc$38848$flatten\u4.\u2.$verific$n1271$8150, arst={ }, srst=!\rst_i
  4 cells in clk=\phy_clk_pad_i, en=$abc$31805$auto$opt_dff.cc:219:make_patterns_logic$9617, arst={ }, srst=$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  3 cells in clk=\phy_clk_pad_i, en=$abc$32598$u1.u1.crc16_clr, arst={ }, srst=$abc$32758$auto$opt_dff.cc:253:combine_resets$9911
  9 cells in clk=\phy_clk_pad_i, en=$abc$38848$flatten\u4.\u3.$verific$n1271$8150, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9452, arst={ }, srst=!\rst_i
  5 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9535, arst={ }, srst=$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  2 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9573, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=$abc$38154$lo115, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  4 cells in clk=\phy_clk_pad_i, en=$abc$31444$auto$opt_dff.cc:219:make_patterns_logic$9553, arst={ }, srst=$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  219 cells in clk=\phy_clk_pad_i, en=$abc$34392$auto$opt_dff.cc:194:make_patterns_logic$9492, arst={ }, srst=!$abc$34691$lo01
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9462, arst={ }, srst=$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  2 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9500, arst={ }, srst=!\rst_i
  42 cells in clk=\phy_clk_pad_i, en=$abc$32946$u1.u0.token_le_1, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$33160$u4.attach, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  5 cells in clk=\phy_clk_pad_i, en=$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9699, arst={ }, srst=$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  6 cells in clk=\phy_clk_pad_i, en=$abc$33231$u0.u0.bit_stuff_on, arst={ }, srst=$abc$33231$u0.u0.bit_stuff_off
  24 cells in clk=\phy_clk_pad_i, en=$abc$32764$u1.u0.data_valid_d, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9525, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=$abc$35653$auto$opt_dff.cc:194:make_patterns_logic$9561, arst={ }, srst=!\rst_i
  4 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9608, arst={ }, srst=$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9465, arst={ }, srst=$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9471, arst={ }, srst=$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9477, arst={ }, srst=$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  5 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9681, arst={ }, srst=$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9468, arst={ }, srst=$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst=$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  2 cells in clk=\phy_clk_pad_i, en=$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9480, arst={ }, srst=$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  2 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9671, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$37828$auto$opt_dff.cc:194:make_patterns_logic$9707, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9719, arst={ }, srst=!\rst_i
  33 cells in clk=\phy_clk_pad_i, en=$abc$37834$u4.u0.we1, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=\resume_req_i, arst={ }, srst=$abc$38148$auto$opt_dff.cc:253:combine_resets$9443
  10 cells in clk=\phy_clk_pad_i, en=$abc$38848$flatten\u4.\u0.$verific$n1271$8150, arst={ }, srst=!\rst_i
  4 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9541, arst={ }, srst=$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  1 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9646, arst={ }, srst=!\rst_i
  8 cells in clk=\phy_clk_pad_i, en=$abc$38134$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$36763$auto$opt_dff.cc:194:make_patterns_logic$9634, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$abc$37248$auto$opt_dff.cc:194:make_patterns_logic$9734, arst={ }, srst=!\rst_i
  156 cells in clk=\phy_clk_pad_i, en=$abc$37070$u4.u0.we2, arst={ }, srst=!\rst_i
  14 cells in clk=\phy_clk_pad_i, en=$abc$38848$flatten\u4.\u1.$verific$n1271$8150, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9598, arst={ }, srst=!\rst_i
  5 cells in clk=\clk_i, en=$abc$33030$flatten\u4.$verific$n222$3805, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9611, arst={ }, srst=$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  23 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$32177$auto$rtlil.cc:2549:NotGate$29970
  2 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9538, arst={ }, srst=$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  1 cells in clk=\clk_i, en=$abc$38154$u4.suspend_start, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\clk_i, en=$abc$38154$lo116, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9693, arst={ }, srst=$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\clk_i, en=$abc$38154$lo110, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\clk_i, en=$abc$33199$u4.deattach, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  10 cells in clk=\phy_clk_pad_i, en=$abc$31902$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst=!\rst_i
  28 cells in clk=\phy_clk_pad_i, en=$abc$34630$u4.u3.we1, arst={ }, srst=!\rst_i
  162 cells in clk=\phy_clk_pad_i, en=$abc$35711$u4.u2.we0, arst={ }, srst=!\rst_i
  34 cells in clk=\phy_clk_pad_i, en=$abc$36788$u4.u1.we1, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$abc$36119$auto$opt_dff.cc:194:make_patterns_logic$9661, arst={ }, srst=!\rst_i
  175 cells in clk=\phy_clk_pad_i, en=$abc$35944$u4.u1.we2, arst={ }, srst=!\rst_i
  53 cells in clk=\phy_clk_pad_i, en=$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=!$abc$31010$flatten\u0.$verific$n42$8542
  6 cells in clk=\clk_i, en=$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9740, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$38154$lo114, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\phy_clk_pad_i, en=$abc$33069$auto$opt_dff.cc:219:make_patterns_logic$9687, arst={ }, srst=$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\clk_i, en=$abc$38154$lo119, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9623, arst={ }, srst=$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  1 cells in clk=\phy_clk_pad_i, en=$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9626, arst={ }, srst=$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  9 cells in clk=\phy_clk_pad_i, en=$abc$33061$auto$opt_dff.cc:219:make_patterns_logic$9684, arst={ }, srst=$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  15 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$38848$flatten\u0.\u0.$verific$n120$8654
  3 cells in clk=\phy_clk_pad_i, en=$abc$33076$auto$opt_dff.cc:219:make_patterns_logic$9690, arst={ }, srst=$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\phy_clk_pad_i, en=$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst=$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\clk_i, en=$abc$38154$u4.suspend_end, arst={ }, srst=$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  7 cells in clk=\phy_clk_pad_i, en=$abc$33185$auto$opt_dff.cc:194:make_patterns_logic$9724, arst={ }, srst=!\rst_i
  33 cells in clk=\phy_clk_pad_i, en=$abc$38848$lo296, arst={ }, srst=$abc$38848$flatten\u0.\u0.$verific$n318$8682
  23 cells in clk=\phy_clk_pad_i, en=$abc$38848$lo289, arst={ }, srst=!\rst_i
  46 cells in clk=\phy_clk_pad_i, en=$abc$31288$flatten\u0.\u0.$verific$n391$8688, arst={ }, srst=$abc$31288$u0.u0.me_cnt_clr
  37 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$31131$auto$opt_dff.cc:253:combine_resets$30278
  122 cells in clk=\phy_clk_pad_i, en=$abc$31451$auto$opt_dff.cc:219:make_patterns_logic$10009, arst={ }, srst=$abc$31451$auto$opt_dff.cc:253:combine_resets$9980
  156 cells in clk=\phy_clk_pad_i, en=$abc$34691$u4.u3.we0, arst={ }, srst=!\rst_i
  14 cells in clk=\phy_clk_pad_i, en=$abc$31213$u0.u0.chirp_cnt_inc, arst={ }, srst=!$abc$31213$auto$rtlil.cc:2466:Mux$10610[10]
  28 cells in clk=\phy_clk_pad_i, en=$abc$33731$u1.u0.pid_ld_en, arst={ }, srst=!\rst_i
  49 cells in clk=\clk_i, en={ }, arst={ }, srst=$abc$30557$auto$opt_dff.cc:253:combine_resets$30387
  2 cells in clk=\phy_clk_pad_i, en=$abc$31725$auto$opt_dff.cc:219:make_patterns_logic$9620, arst={ }, srst=$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  19 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$32829$auto$opt_dff.cc:253:combine_resets$9969
  30 cells in clk=\phy_clk_pad_i, en=$abc$32725$auto$opt_dff.cc:219:make_patterns_logic$9924, arst={ }, srst=!\rst_i
  125 cells in clk=\phy_clk_pad_i, en=$abc$35290$auto$opt_dff.cc:194:make_patterns_logic$9584, arst={ }, srst=!\rst_i
  12 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$31812$auto$simplemap.cc:257:simplemap_eqne$19582
  25 cells in clk=\phy_clk_pad_i, en=$abc$35659$u4.u2.we1, arst={ }, srst=!\rst_i
  147 cells in clk=\phy_clk_pad_i, en=$abc$37881$u4.u0.we0, arst={ }, srst=!\rst_i
  13 cells in clk=\phy_clk_pad_i, en=$abc$31581$auto$opt_dff.cc:219:make_patterns_logic$9890, arst={ }, srst={ }
  15 cells in clk=\phy_clk_pad_i, en=$abc$31608$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  121 cells in clk=\phy_clk_pad_i, en=$abc$38848$lo088, arst={ }, srst=$abc$31791$auto$opt_dff.cc:253:combine_resets$9857
  13 cells in clk=\phy_clk_pad_i, en=$abc$32150$auto$opt_dff.cc:219:make_patterns_logic$9883, arst={ }, srst={ }
  87 cells in clk=\phy_clk_pad_i, en=$abc$32598$u1.u1.crc16_add, arst={ }, srst=$abc$32598$u1.u1.crc16_clr
  180 cells in clk=\phy_clk_pad_i, en=$abc$34929$u4.u2.we2, arst={ }, srst=!\rst_i
  43 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=!\rst_i
  34 cells in clk=\phy_clk_pad_i, en=$abc$32680$u1.u0.token_le_2, arst={ }, srst={ }
  125 cells in clk=\phy_clk_pad_i, en=$abc$34199$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst=!\rst_i
  17 cells in clk=\clk_i, en=$abc$33241$flatten\u4.$verific$n286$3819, arst={ }, srst=!\rst_i
  26 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$38848$lo039
  2 cells in clk=\phy_clk_pad_i, en=$abc$31437$auto$opt_dff.cc:219:make_patterns_logic$9550, arst={ }, srst=$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  2 cells in clk=\phy_clk_pad_i, en=$abc$31430$auto$opt_dff.cc:219:make_patterns_logic$9547, arst={ }, srst=$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  77 cells in clk=\phy_clk_pad_i, en=$abc$32532$auto$opt_dff.cc:219:make_patterns_logic$9852, arst={ }, srst=!\rst_i
  502 cells in clk=\clk_i, en={ }, arst={ }, srst=$abc$30593$auto$opt_dff.cc:253:combine_resets$30305
  40 cells in clk=\phy_clk_pad_i, en=$abc$31230$flatten\u0.\u0.$verific$n165$8660, arst={ }, srst=$abc$31230$flatten\u0.\u0.$verific$n154$8658
  156 cells in clk=\phy_clk_pad_i, en=$abc$36835$u4.u1.we0, arst={ }, srst=!\rst_i
  16 cells in clk=\phy_clk_pad_i, en=$abc$31635$auto$opt_dff.cc:219:make_patterns_logic$9904, arst={ }, srst={ }
  43 cells in clk=\phy_clk_pad_i, en=$abc$38848$lo291, arst={ }, srst=$abc$38848$lo289
  15 cells in clk=\phy_clk_pad_i, en=$abc$38848$lo290, arst={ }, srst=$abc$31709$auto$opt_dff.cc:253:combine_resets$9963
  49 cells in clk=\phy_clk_pad_i, en=$abc$38848$u1.u2.fill_buf0, arst={ }, srst={ }
  70 cells in clk=\phy_clk_pad_i, en=$abc$38848$lo226, arst={ }, srst={ }
  125 cells in clk=\phy_clk_pad_i, en=$abc$36314$auto$opt_dff.cc:194:make_patterns_logic$9657, arst={ }, srst=!\rst_i
  9 cells in clk=\phy_clk_pad_i, en=$abc$33051$auto$opt_dff.cc:194:make_patterns_logic$9651, arst={ }, srst=!\rst_i
  46 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$38848$lo254
  126 cells in clk=\phy_clk_pad_i, en=$abc$37411$auto$opt_dff.cc:194:make_patterns_logic$9730, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$abc$35127$auto$opt_dff.cc:194:make_patterns_logic$9588, arst={ }, srst=!\rst_i
  26 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$33731$lo6
  519 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  184 cells in clk=\phy_clk_pad_i, en=$abc$35449$auto$opt_dff.cc:194:make_patterns_logic$9565, arst={ }, srst=!$abc$35711$lo01
  220 cells in clk=\phy_clk_pad_i, en=$abc$36505$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst=!$abc$36835$lo01
  232 cells in clk=\phy_clk_pad_i, en=$abc$37570$auto$opt_dff.cc:194:make_patterns_logic$9711, arst={ }, srst=!$abc$37881$lo01
  46 cells in clk=\clk_i, en=$abc$33083$flatten\u4.$verific$n342$3822, arst={ }, srst=!\rst_i
  8 cells in clk=\phy_clk_pad_i, en=$abc$31892$auto$opt_dff.cc:194:make_patterns_logic$9578, arst={ }, srst=!\rst_i
  27 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$38848$flatten\u0.\u0.$verific$n266$8679
  64 cells in clk=\phy_clk_pad_i, en=$abc$32764$u1.u0.data_valid_d, arst={ }, srst=$abc$33731$u1.u0.crc16_clr
  652 cells in clk=\phy_clk_pad_i, en=$abc$33272$auto$opt_dff.cc:194:make_patterns_logic$9764, arst={ }, srst={ }
  130 cells in clk=\phy_clk_pad_i, en=$abc$34004$auto$opt_dff.cc:194:make_patterns_logic$9515, arst={ }, srst=!\rst_i
  49 cells in clk=\phy_clk_pad_i, en=$abc$38848$u1.u2.fill_buf1, arst={ }, srst={ }
  102 cells in clk=\phy_clk_pad_i, en=$abc$31915$auto$opt_dff.cc:219:make_patterns_logic$9801, arst={ }, srst=$abc$31915$auto$opt_dff.cc:253:combine_resets$9788
  177 cells in clk=\phy_clk_pad_i, en=$abc$33806$u4.u3.we2, arst={ }, srst=!\rst_i
  79 cells in clk=\phy_clk_pad_i, en=$abc$32359$auto$opt_dff.cc:194:make_patterns_logic$9862, arst={ }, srst=!\rst_i
  2110 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.78.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31153$u0.u0.suspend_set, synchronously reset by $abc$31153$u0.u0.suspend_clr
Extracted 17 gates and 36 wires to a netlist network with 18 inputs and 11 outputs.

3.78.2.1. Executing ABC.

3.78.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31191$u0.u0.xcv_set_hs, synchronously reset by $abc$31191$u0.u0.xcv_set_fs
Extracted 19 gates and 36 wires to a netlist network with 16 inputs and 8 outputs.

3.78.3.1. Executing ABC.

3.78.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31172$auto$opt_dff.cc:219:make_patterns_logic$9614, synchronously reset by $abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.78.4.1. Executing ABC.

3.78.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31180$u0.u0.fs_term_on, synchronously reset by $abc$31180$u0.u0.fs_term_off
Extracted 5 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.78.5.1. Executing ABC.

3.78.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$u0.u0.attached_set, synchronously reset by !$abc$31572$auto$simplemap.cc:257:simplemap_eqne$21857
Extracted 7 gates and 17 wires to a netlist network with 9 inputs and 6 outputs.

3.78.6.1. Executing ABC.

3.78.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32884$auto$opt_dff.cc:194:make_patterns_logic$9945, synchronously reset by !\rst_i
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.78.7.1. Executing ABC.

3.78.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$31869$auto$opt_dff.cc:253:combine_resets$9825
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 6 outputs.

3.78.8.1. Executing ABC.

3.78.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9937, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.9.1. Executing ABC.

3.78.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31422$auto$opt_dff.cc:219:make_patterns_logic$9544, synchronously reset by $abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.78.10.1. Executing ABC.

3.78.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by !$abc$31371$auto$rtlil.cc:2549:NotGate$29722, synchronously reset by $abc$31371$u0.u0.mode_set_fs
Extracted 23 gates and 46 wires to a netlist network with 22 inputs and 18 outputs.

3.78.11.1. Executing ABC.

3.78.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$31791$auto$opt_dff.cc:253:combine_resets$9873
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 7 outputs.

3.78.12.1. Executing ABC.

3.78.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$31098$auto$rtlil.cc:2373:ReduceOr$10482
Extracted 31 gates and 48 wires to a netlist network with 17 inputs and 13 outputs.

3.78.13.1. Executing ABC.

3.78.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$32028$auto$opt_dff.cc:253:combine_resets$9933
Extracted 19 gates and 36 wires to a netlist network with 17 inputs and 9 outputs.

3.78.14.1. Executing ABC.

3.78.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31281$u0.u0.idle_long_set, synchronously reset by $abc$31281$auto$opt_dff.cc:253:combine_resets$10022
Extracted 5 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

3.78.15.1. Executing ABC.

3.78.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$abc$31087$auto$rtlil.cc:2373:ReduceOr$10880
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 7 outputs.

3.78.16.1. Executing ABC.

3.78.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by $abc$30991$auto$opt_dff.cc:253:combine_resets$30289
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.78.17.1. Executing ABC.

3.78.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32349$auto$opt_dff.cc:194:make_patterns_logic$9866, synchronously reset by !\rst_i
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 3 outputs.

3.78.18.1. Executing ABC.

3.78.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$34624$auto$opt_dff.cc:194:make_patterns_logic$9488, synchronously reset by !\rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.78.19.1. Executing ABC.

3.78.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31879$auto$opt_dff.cc:194:make_patterns_logic$9810, synchronously reset by !\rst_i
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 5 outputs.

3.78.20.1. Executing ABC.

3.78.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32879$auto$opt_dff.cc:194:make_patterns_logic$9949, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.78.21.1. Executing ABC.

3.78.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$flatten\u4.\u2.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.78.22.1. Executing ABC.

3.78.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31805$auto$opt_dff.cc:219:make_patterns_logic$9617, synchronously reset by $abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.78.23.1. Executing ABC.

3.78.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32598$u1.u1.crc16_clr, synchronously reset by $abc$32758$auto$opt_dff.cc:253:combine_resets$9911
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.78.24.1. Executing ABC.

3.78.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$flatten\u4.\u3.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 8 outputs.

3.78.25.1. Executing ABC.

3.78.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9452, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.26.1. Executing ABC.

3.78.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9535, synchronously reset by $abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.78.27.1. Executing ABC.

3.78.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9573, synchronously reset by !\rst_i
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.78.28.1. Executing ABC.

3.78.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$lo115, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.78.29.1. Executing ABC.

3.78.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41183$abc$31444$auto$opt_dff.cc:219:make_patterns_logic$9553, synchronously reset by $abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.78.30.1. Executing ABC.

3.78.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34392$auto$opt_dff.cc:194:make_patterns_logic$9492, synchronously reset by !$abc$34691$lo01
Extracted 219 gates and 260 wires to a netlist network with 41 inputs and 71 outputs.

3.78.31.1. Executing ABC.

3.78.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9462, synchronously reset by $abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.78.32.1. Executing ABC.

3.78.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9500, synchronously reset by !\rst_i
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.78.33.1. Executing ABC.

3.78.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32946$u1.u0.token_le_1
Extracted 42 gates and 76 wires to a netlist network with 34 inputs and 38 outputs.

3.78.34.1. Executing ABC.

3.78.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33160$u4.attach, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.78.35.1. Executing ABC.

3.78.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9699, synchronously reset by $abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.78.36.1. Executing ABC.

3.78.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33231$u0.u0.bit_stuff_on, synchronously reset by $abc$33231$u0.u0.bit_stuff_off
Extracted 6 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.78.37.1. Executing ABC.

3.78.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32764$u1.u0.data_valid_d
Extracted 24 gates and 32 wires to a netlist network with 8 inputs and 8 outputs.

3.78.38.1. Executing ABC.

3.78.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9525, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.39.1. Executing ABC.

3.78.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35653$auto$opt_dff.cc:194:make_patterns_logic$9561, synchronously reset by !\rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.78.40.1. Executing ABC.

3.78.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9608, synchronously reset by $abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.78.41.1. Executing ABC.

3.78.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9465, synchronously reset by $abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.42.1. Executing ABC.

3.78.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9471, synchronously reset by $abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.43.1. Executing ABC.

3.78.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9477, synchronously reset by $abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.44.1. Executing ABC.

3.78.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9681, synchronously reset by $abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 5 outputs.

3.78.45.1. Executing ABC.

3.78.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9468, synchronously reset by $abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.46.1. Executing ABC.

3.78.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9474, synchronously reset by $abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.47.1. Executing ABC.

3.78.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9480, synchronously reset by $abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.78.48.1. Executing ABC.

3.78.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9671, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.78.49.1. Executing ABC.

3.78.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$37828$auto$opt_dff.cc:194:make_patterns_logic$9707, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.78.50.1. Executing ABC.

3.78.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9719, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.78.51.1. Executing ABC.

3.78.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37834$u4.u0.we1, synchronously reset by !\rst_i
Extracted 33 gates and 61 wires to a netlist network with 28 inputs and 26 outputs.

3.78.52.1. Executing ABC.

3.78.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \resume_req_i, synchronously reset by $abc$38148$auto$opt_dff.cc:253:combine_resets$9443
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.78.53.1. Executing ABC.

3.78.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$flatten\u4.\u0.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.78.54.1. Executing ABC.

3.78.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9541, synchronously reset by $abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.78.55.1. Executing ABC.

3.78.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9646, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.78.56.1. Executing ABC.

3.78.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38134$auto$opt_dff.cc:194:make_patterns_logic$9505, synchronously reset by !\rst_i
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 5 outputs.

3.78.57.1. Executing ABC.

3.78.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36763$auto$opt_dff.cc:194:make_patterns_logic$9634, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.78.58.1. Executing ABC.

3.78.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37248$auto$opt_dff.cc:194:make_patterns_logic$9734, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.78.59.1. Executing ABC.

3.78.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37070$u4.u0.we2, synchronously reset by !\rst_i
Extracted 156 gates and 206 wires to a netlist network with 50 inputs and 89 outputs.

3.78.60.1. Executing ABC.

3.78.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$flatten\u4.\u1.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 10 outputs.

3.78.61.1. Executing ABC.

3.78.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9598, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.78.62.1. Executing ABC.

3.78.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33030$flatten\u4.$verific$n222$3805
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.78.63.1. Executing ABC.

3.78.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9611, synchronously reset by $abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.78.64.1. Executing ABC.

3.78.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$32177$auto$rtlil.cc:2549:NotGate$29970
Extracted 23 gates and 54 wires to a netlist network with 31 inputs and 22 outputs.

3.78.65.1. Executing ABC.

3.78.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9538, synchronously reset by $abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.66.1. Executing ABC.

3.78.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$u4.suspend_start, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.78.67.1. Executing ABC.

3.78.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$lo116, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.78.68.1. Executing ABC.

3.78.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9693, synchronously reset by $abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.69.1. Executing ABC.

3.78.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$lo110, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.70.1. Executing ABC.

3.78.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33199$u4.deattach, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.78.71.1. Executing ABC.

3.78.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31902$auto$opt_dff.cc:194:make_patterns_logic$9805, synchronously reset by !\rst_i
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 8 outputs.

3.78.72.1. Executing ABC.

3.78.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34630$u4.u3.we1, synchronously reset by !\rst_i
Extracted 28 gates and 57 wires to a netlist network with 29 inputs and 21 outputs.

3.78.73.1. Executing ABC.

3.78.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35711$u4.u2.we0, synchronously reset by !\rst_i
Extracted 162 gates and 267 wires to a netlist network with 105 inputs and 111 outputs.

3.78.74.1. Executing ABC.

3.78.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36788$u4.u1.we1, synchronously reset by !\rst_i
Extracted 34 gates and 66 wires to a netlist network with 32 inputs and 26 outputs.

3.78.75.1. Executing ABC.

3.78.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36119$auto$opt_dff.cc:194:make_patterns_logic$9661, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.78.76.1. Executing ABC.

3.78.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35944$u4.u1.we2, synchronously reset by !\rst_i
Extracted 175 gates and 231 wires to a netlist network with 56 inputs and 92 outputs.

3.78.77.1. Executing ABC.

3.78.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by !$abc$31010$flatten\u0.$verific$n42$8542
Extracted 53 gates and 85 wires to a netlist network with 32 inputs and 9 outputs.

3.78.78.1. Executing ABC.

3.78.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9740, synchronously reset by !\rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.78.79.1. Executing ABC.

3.78.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$lo114, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.80.1. Executing ABC.

3.78.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33069$auto$opt_dff.cc:219:make_patterns_logic$9687, synchronously reset by $abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.81.1. Executing ABC.

3.78.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$lo119, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.78.82.1. Executing ABC.

3.78.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9623, synchronously reset by $abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.83.1. Executing ABC.

3.78.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9626, synchronously reset by $abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.78.84.1. Executing ABC.

3.78.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33061$auto$opt_dff.cc:219:make_patterns_logic$9684, synchronously reset by $abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 9 gates and 19 wires to a netlist network with 9 inputs and 3 outputs.

3.78.85.1. Executing ABC.

3.78.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$38848$flatten\u0.\u0.$verific$n120$8654
Extracted 15 gates and 18 wires to a netlist network with 3 inputs and 4 outputs.

3.78.86.1. Executing ABC.

3.78.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33076$auto$opt_dff.cc:219:make_patterns_logic$9690, synchronously reset by $abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.78.87.1. Executing ABC.

3.78.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9696, synchronously reset by $abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.88.1. Executing ABC.

3.78.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38154$u4.suspend_end, synchronously reset by $abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.78.89.1. Executing ABC.

3.78.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33185$auto$opt_dff.cc:194:make_patterns_logic$9724, synchronously reset by !\rst_i
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

3.78.90.1. Executing ABC.

3.78.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$lo296, synchronously reset by $abc$38848$flatten\u0.\u0.$verific$n318$8682
Extracted 33 gates and 35 wires to a netlist network with 2 inputs and 11 outputs.

3.78.91.1. Executing ABC.

3.78.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$lo289, synchronously reset by !\rst_i
Extracted 23 gates and 35 wires to a netlist network with 12 inputs and 22 outputs.

3.78.92.1. Executing ABC.

3.78.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31288$flatten\u0.\u0.$verific$n391$8688, synchronously reset by $abc$31288$u0.u0.me_cnt_clr
Extracted 46 gates and 63 wires to a netlist network with 17 inputs and 14 outputs.

3.78.93.1. Executing ABC.

3.78.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$31131$auto$opt_dff.cc:253:combine_resets$30278
Extracted 37 gates and 55 wires to a netlist network with 18 inputs and 7 outputs.

3.78.94.1. Executing ABC.

3.78.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31451$auto$opt_dff.cc:219:make_patterns_logic$10009, synchronously reset by $abc$31451$auto$opt_dff.cc:253:combine_resets$9980
Extracted 122 gates and 166 wires to a netlist network with 43 inputs and 28 outputs.

3.78.95.1. Executing ABC.

3.78.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34691$u4.u3.we0, synchronously reset by !\rst_i
Extracted 156 gates and 259 wires to a netlist network with 103 inputs and 106 outputs.

3.78.96.1. Executing ABC.

3.78.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31213$u0.u0.chirp_cnt_inc, synchronously reset by !$abc$31213$auto$rtlil.cc:2466:Mux$10610[10]
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 4 outputs.

3.78.97.1. Executing ABC.

3.78.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33731$u1.u0.pid_ld_en, synchronously reset by !\rst_i
Extracted 28 gates and 38 wires to a netlist network with 10 inputs and 16 outputs.

3.78.98.1. Executing ABC.

3.78.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $abc$30557$auto$opt_dff.cc:253:combine_resets$30387
Extracted 49 gates and 103 wires to a netlist network with 54 inputs and 6 outputs.

3.78.99.1. Executing ABC.

3.78.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31725$auto$opt_dff.cc:219:make_patterns_logic$9620, synchronously reset by $abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.100.1. Executing ABC.

3.78.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$32829$auto$opt_dff.cc:253:combine_resets$9969
Extracted 19 gates and 21 wires to a netlist network with 2 inputs and 6 outputs.

3.78.101.1. Executing ABC.

3.78.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32725$auto$opt_dff.cc:219:make_patterns_logic$9924, synchronously reset by !\rst_i
Extracted 30 gates and 38 wires to a netlist network with 8 inputs and 10 outputs.

3.78.102.1. Executing ABC.

3.78.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35290$auto$opt_dff.cc:194:make_patterns_logic$9584, synchronously reset by !\rst_i
Extracted 125 gates and 187 wires to a netlist network with 62 inputs and 33 outputs.

3.78.103.1. Executing ABC.

3.78.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$31812$auto$simplemap.cc:257:simplemap_eqne$19582
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 11 outputs.

3.78.104.1. Executing ABC.

3.78.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35659$u4.u2.we1, synchronously reset by !\rst_i
Extracted 25 gates and 49 wires to a netlist network with 24 inputs and 22 outputs.

3.78.105.1. Executing ABC.

3.78.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37881$u4.u0.we0, synchronously reset by !\rst_i
Extracted 147 gates and 244 wires to a netlist network with 97 inputs and 107 outputs.

3.78.106.1. Executing ABC.

3.78.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31581$auto$opt_dff.cc:219:make_patterns_logic$9890
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.78.107.1. Executing ABC.

3.78.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31608$auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.78.108.1. Executing ABC.

3.78.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$lo088, synchronously reset by $abc$31791$auto$opt_dff.cc:253:combine_resets$9857
Extracted 121 gates and 172 wires to a netlist network with 51 inputs and 69 outputs.

3.78.109.1. Executing ABC.

3.78.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32150$auto$opt_dff.cc:219:make_patterns_logic$9883
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.78.110.1. Executing ABC.

3.78.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32598$u1.u1.crc16_add, synchronously reset by $abc$32598$u1.u1.crc16_clr
Extracted 87 gates and 124 wires to a netlist network with 37 inputs and 19 outputs.

3.78.111.1. Executing ABC.

3.78.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34929$u4.u2.we2, synchronously reset by !\rst_i
Extracted 180 gates and 238 wires to a netlist network with 58 inputs and 96 outputs.

3.78.112.1. Executing ABC.

3.78.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by !\rst_i
Extracted 43 gates and 64 wires to a netlist network with 21 inputs and 22 outputs.

3.78.113.1. Executing ABC.

3.78.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32680$u1.u0.token_le_2
Extracted 34 gates and 64 wires to a netlist network with 30 inputs and 27 outputs.

3.78.114.1. Executing ABC.

3.78.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34199$auto$opt_dff.cc:194:make_patterns_logic$9511, synchronously reset by !\rst_i
Extracted 125 gates and 187 wires to a netlist network with 62 inputs and 33 outputs.

3.78.115.1. Executing ABC.

3.78.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33241$flatten\u4.$verific$n286$3819, synchronously reset by !\rst_i
Extracted 17 gates and 34 wires to a netlist network with 17 inputs and 13 outputs.

3.78.116.1. Executing ABC.

3.78.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$38848$lo039
Extracted 26 gates and 28 wires to a netlist network with 2 inputs and 6 outputs.

3.78.117.1. Executing ABC.

3.78.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31437$auto$opt_dff.cc:219:make_patterns_logic$9550, synchronously reset by $abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.118.1. Executing ABC.

3.78.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31430$auto$opt_dff.cc:219:make_patterns_logic$9547, synchronously reset by $abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.78.119.1. Executing ABC.

3.78.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32532$auto$opt_dff.cc:219:make_patterns_logic$9852, synchronously reset by !\rst_i
Extracted 77 gates and 101 wires to a netlist network with 24 inputs and 12 outputs.

3.78.120.1. Executing ABC.

3.78.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $abc$30593$auto$opt_dff.cc:253:combine_resets$30305
Extracted 502 gates and 923 wires to a netlist network with 421 inputs and 29 outputs.

3.78.121.1. Executing ABC.

3.78.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31230$flatten\u0.\u0.$verific$n165$8660, synchronously reset by $abc$31230$flatten\u0.\u0.$verific$n154$8658
Extracted 40 gates and 52 wires to a netlist network with 12 inputs and 25 outputs.

3.78.122.1. Executing ABC.

3.78.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36835$u4.u1.we0, synchronously reset by !\rst_i
Extracted 156 gates and 263 wires to a netlist network with 107 inputs and 114 outputs.

3.78.123.1. Executing ABC.

3.78.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31635$auto$opt_dff.cc:219:make_patterns_logic$9904
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.78.124.1. Executing ABC.

3.78.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$lo291, synchronously reset by $abc$38848$lo289
Extracted 43 gates and 49 wires to a netlist network with 6 inputs and 12 outputs.

3.78.125.1. Executing ABC.

3.78.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$lo290, synchronously reset by $abc$31709$auto$opt_dff.cc:253:combine_resets$9963
Extracted 15 gates and 18 wires to a netlist network with 3 inputs and 5 outputs.

3.78.126.1. Executing ABC.

3.78.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$u1.u2.fill_buf0
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.78.127.1. Executing ABC.

3.78.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$lo226
Extracted 70 gates and 140 wires to a netlist network with 70 inputs and 34 outputs.

3.78.128.1. Executing ABC.

3.78.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36314$auto$opt_dff.cc:194:make_patterns_logic$9657, synchronously reset by !\rst_i
Extracted 125 gates and 187 wires to a netlist network with 62 inputs and 33 outputs.

3.78.129.1. Executing ABC.

3.78.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33051$auto$opt_dff.cc:194:make_patterns_logic$9651, synchronously reset by !\rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.78.130.1. Executing ABC.

3.78.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$38848$lo254
Extracted 46 gates and 82 wires to a netlist network with 36 inputs and 38 outputs.

3.78.131.1. Executing ABC.

3.78.132. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37411$auto$opt_dff.cc:194:make_patterns_logic$9730, synchronously reset by !\rst_i
Extracted 126 gates and 189 wires to a netlist network with 63 inputs and 34 outputs.

3.78.132.1. Executing ABC.

3.78.133. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35127$auto$opt_dff.cc:194:make_patterns_logic$9588, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.78.133.1. Executing ABC.

3.78.134. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$44624$lo3
Extracted 26 gates and 28 wires to a netlist network with 2 inputs and 6 outputs.

3.78.134.1. Executing ABC.

3.78.135. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 519 gates and 892 wires to a netlist network with 373 inputs and 121 outputs.

3.78.135.1. Executing ABC.

3.78.136. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35449$auto$opt_dff.cc:194:make_patterns_logic$9565, synchronously reset by !$abc$42433$lo17
Extracted 184 gates and 217 wires to a netlist network with 33 inputs and 46 outputs.

3.78.136.1. Executing ABC.

3.78.137. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36505$auto$opt_dff.cc:194:make_patterns_logic$9638, synchronously reset by !$abc$45657$lo23
Extracted 220 gates and 269 wires to a netlist network with 49 inputs and 88 outputs.

3.78.137.1. Executing ABC.

3.78.138. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37570$auto$opt_dff.cc:194:make_patterns_logic$9711, synchronously reset by !$abc$43971$lo23
Extracted 232 gates and 287 wires to a netlist network with 55 inputs and 94 outputs.

3.78.138.1. Executing ABC.

3.78.139. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33083$flatten\u4.$verific$n342$3822, synchronously reset by !\rst_i
Extracted 46 gates and 78 wires to a netlist network with 32 inputs and 35 outputs.

3.78.139.1. Executing ABC.

3.78.140. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31892$auto$opt_dff.cc:194:make_patterns_logic$9578, synchronously reset by !\rst_i
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 5 outputs.

3.78.140.1. Executing ABC.

3.78.141. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$38848$flatten\u0.\u0.$verific$n266$8679
Extracted 27 gates and 29 wires to a netlist network with 2 inputs and 5 outputs.

3.78.141.1. Executing ABC.

3.78.142. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32764$u1.u0.data_valid_d, synchronously reset by $abc$33731$u1.u0.crc16_clr
Extracted 64 gates and 87 wires to a netlist network with 23 inputs and 14 outputs.

3.78.142.1. Executing ABC.

3.78.143. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33272$auto$opt_dff.cc:194:make_patterns_logic$9764
Extracted 646 gates and 1037 wires to a netlist network with 391 inputs and 259 outputs.

3.78.143.1. Executing ABC.

3.78.144. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34004$auto$opt_dff.cc:194:make_patterns_logic$9515, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.78.144.1. Executing ABC.

3.78.145. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38848$u1.u2.fill_buf1
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.78.145.1. Executing ABC.

3.78.146. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$31915$auto$opt_dff.cc:219:make_patterns_logic$9801, synchronously reset by $abc$31915$auto$opt_dff.cc:253:combine_resets$9788
Extracted 102 gates and 132 wires to a netlist network with 30 inputs and 17 outputs.

3.78.146.1. Executing ABC.

3.78.147. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33806$u4.u3.we2, synchronously reset by !\rst_i
Extracted 177 gates and 238 wires to a netlist network with 61 inputs and 104 outputs.

3.78.147.1. Executing ABC.

3.78.148. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$32359$auto$opt_dff.cc:194:make_patterns_logic$9862, synchronously reset by !\rst_i
Extracted 79 gates and 95 wires to a netlist network with 15 inputs and 9 outputs.

3.78.148.1. Executing ABC.

3.78.149. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 2099 gates and 3128 wires to a netlist network with 1029 inputs and 668 outputs.

3.78.149.1. Executing ABC.

yosys> abc -dff

3.79. Executing ABC pass (technology mapping using ABC).

3.79.1. Summary of detected clock domains:
  16 cells in clk=\phy_clk_pad_i, en=$abc$41111$abc$31153$u0.u0.suspend_set, arst={ }, srst=$abc$41111$abc$31153$u0.u0.suspend_clr
  18 cells in clk=\phy_clk_pad_i, en=$abc$41131$abc$31191$u0.u0.xcv_set_hs, arst={ }, srst=$abc$41131$abc$31191$u0.u0.xcv_set_fs
  6 cells in clk=\phy_clk_pad_i, en=$abc$41152$abc$31172$auto$opt_dff.cc:219:make_patterns_logic$9614, arst={ }, srst=$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  5 cells in clk=\phy_clk_pad_i, en=$abc$41160$abc$31180$u0.u0.fs_term_on, arst={ }, srst=$abc$41160$abc$31180$u0.u0.fs_term_off
  6 cells in clk=\phy_clk_pad_i, en=$abc$41168$abc$38848$u0.u0.attached_set, arst={ }, srst=!$abc$41168$abc$31572$auto$simplemap.cc:257:simplemap_eqne$21857
  4 cells in clk=\phy_clk_pad_i, en=$abc$41178$abc$32884$auto$opt_dff.cc:194:make_patterns_logic$9945, arst={ }, srst=!\rst_i
  8 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$41183$abc$31869$auto$opt_dff.cc:253:combine_resets$9825
  3 cells in clk=\phy_clk_pad_i, en=$abc$41194$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9937, arst={ }, srst=!\rst_i
  6 cells in clk=\phy_clk_pad_i, en=$abc$41199$abc$31422$auto$opt_dff.cc:219:make_patterns_logic$9544, arst={ }, srst=$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  23 cells in clk=\phy_clk_pad_i, en=!$abc$41207$abc$31371$auto$rtlil.cc:2549:NotGate$29722, arst={ }, srst=$abc$41207$abc$31371$u0.u0.mode_set_fs
  12 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$41231$abc$31791$auto$opt_dff.cc:253:combine_resets$9873
  27 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$41243$abc$31098$auto$rtlil.cc:2373:ReduceOr$10482
  18 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$41274$abc$32028$auto$opt_dff.cc:253:combine_resets$9933
  5 cells in clk=\phy_clk_pad_i, en=$abc$41295$abc$31281$u0.u0.idle_long_set, arst={ }, srst=$abc$41295$abc$31281$auto$opt_dff.cc:253:combine_resets$10022
  10 cells in clk=\clk_i, en={ }, arst={ }, srst=!$abc$41302$abc$31087$auto$rtlil.cc:2373:ReduceOr$10880
  13 cells in clk=\phy_clk_pad_i, en=$abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=$abc$41313$abc$30991$auto$opt_dff.cc:253:combine_resets$30289
  9 cells in clk=\phy_clk_pad_i, en=$abc$41328$abc$32349$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$41339$abc$34624$auto$opt_dff.cc:194:make_patterns_logic$9488, arst={ }, srst=!\rst_i
  3 cells in clk=\phy_clk_pad_i, en=$abc$41356$abc$32879$auto$opt_dff.cc:194:make_patterns_logic$9949, arst={ }, srst=!\rst_i
  3 cells in clk=\phy_clk_pad_i, en=$abc$41380$abc$31805$auto$opt_dff.cc:219:make_patterns_logic$9617, arst={ }, srst=$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  3 cells in clk=\phy_clk_pad_i, en=$abc$44356$abc$32598$u1.u1.crc16_clr, arst={ }, srst=$abc$41387$abc$32758$auto$opt_dff.cc:253:combine_resets$9911
  2 cells in clk=\clk_i, en=$abc$41409$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9452, arst={ }, srst=!\rst_i
  5 cells in clk=\phy_clk_pad_i, en=$abc$41414$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9535, arst={ }, srst=$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  1 cells in clk=\clk_i, en=$abc$41421$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9573, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$46606$lo129, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\phy_clk_pad_i, en=$abc$41183$abc$31444$auto$opt_dff.cc:219:make_patterns_logic$9553, arst={ }, srst=$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  5 cells in clk=\phy_clk_pad_i, en=$abc$41660$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9462, arst={ }, srst=$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\clk_i, en=$abc$41666$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9500, arst={ }, srst=!\rst_i
  5 cells in clk=\clk_i, en=$abc$41730$abc$33160$u4.attach, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  4 cells in clk=\phy_clk_pad_i, en=$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9699, arst={ }, srst=$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  6 cells in clk=\phy_clk_pad_i, en=$abc$41744$abc$33231$u0.u0.bit_stuff_on, arst={ }, srst=$abc$41744$abc$33231$u0.u0.bit_stuff_off
  2 cells in clk=\clk_i, en=$abc$41809$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9525, arst={ }, srst=!\rst_i
  12 cells in clk=\phy_clk_pad_i, en=$abc$41392$abc$38848$flatten\u4.\u3.$verific$n1271$8150, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$41814$abc$35653$auto$opt_dff.cc:194:make_patterns_logic$9561, arst={ }, srst=!\rst_i
  2 cells in clk=\phy_clk_pad_i, en=$abc$41820$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9608, arst={ }, srst=$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  4 cells in clk=\phy_clk_pad_i, en=$abc$41827$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9465, arst={ }, srst=$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$41833$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9471, arst={ }, srst=$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  4 cells in clk=\phy_clk_pad_i, en=$abc$41839$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9477, arst={ }, srst=$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  6 cells in clk=\phy_clk_pad_i, en=$abc$41845$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9681, arst={ }, srst=$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  4 cells in clk=\phy_clk_pad_i, en=$abc$41853$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9468, arst={ }, srst=$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$41859$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst=$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9480, arst={ }, srst=$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\clk_i, en=$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9671, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=$abc$41874$abc$37828$auto$opt_dff.cc:194:make_patterns_logic$9707, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9719, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=\resume_req_i, arst={ }, srst=$abc$46606$abc$38148$auto$opt_dff.cc:253:combine_resets$9443
  34 cells in clk=\phy_clk_pad_i, en=$abc$48025$abc$32764$u1.u0.data_valid_d, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$abc$41939$abc$38848$flatten\u4.\u0.$verific$n1271$8150, arst={ }, srst=!\rst_i
  4 cells in clk=\phy_clk_pad_i, en=$abc$41957$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9541, arst={ }, srst=$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  1 cells in clk=\clk_i, en=$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9646, arst={ }, srst=!\rst_i
  9 cells in clk=\phy_clk_pad_i, en=$abc$41968$abc$38134$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst=!\rst_i
  38 cells in clk=\phy_clk_pad_i, en=$abc$41671$abc$32946$u1.u0.token_le_1, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$41978$abc$36763$auto$opt_dff.cc:194:make_patterns_logic$9634, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$abc$41984$abc$37248$auto$opt_dff.cc:194:make_patterns_logic$9734, arst={ }, srst=!\rst_i
  31 cells in clk=\phy_clk_pad_i, en=$abc$41884$abc$37834$u4.u0.we1, arst={ }, srst=!\rst_i
  11 cells in clk=\phy_clk_pad_i, en=$abc$42274$abc$38848$flatten\u4.\u1.$verific$n1271$8150, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9598, arst={ }, srst=!\rst_i
  5 cells in clk=\clk_i, en=$abc$42299$abc$33030$flatten\u4.$verific$n222$3805, arst={ }, srst={ }
  2 cells in clk=\phy_clk_pad_i, en=$abc$42313$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9611, arst={ }, srst=$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  22 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$42319$abc$32177$auto$rtlil.cc:2549:NotGate$29970
  2 cells in clk=\phy_clk_pad_i, en=$abc$42345$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9538, arst={ }, srst=$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  4 cells in clk=\clk_i, en=$abc$46606$abc$38154$u4.suspend_start, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\clk_i, en=$abc$46606$lo115, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\phy_clk_pad_i, en=$abc$42359$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9693, arst={ }, srst=$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  1 cells in clk=\clk_i, en=$abc$46606$lo118, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\clk_i, en=$abc$46606$abc$33199$u4.deattach, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  12 cells in clk=\phy_clk_pad_i, en=$abc$42375$abc$31902$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst=!\rst_i
  23 cells in clk=\phy_clk_pad_i, en=$abc$42387$abc$34630$u4.u3.we1, arst={ }, srst=!\rst_i
  34 cells in clk=\phy_clk_pad_i, en=$abc$42637$abc$36788$u4.u1.we1, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$abc$42688$abc$36119$auto$opt_dff.cc:194:make_patterns_logic$9661, arst={ }, srst=!\rst_i
  43 cells in clk=\phy_clk_pad_i, en=$abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=!$abc$42986$abc$31010$flatten\u0.$verific$n42$8542
  6 cells in clk=\clk_i, en=$abc$43036$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9740, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$46606$lo116, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\phy_clk_pad_i, en=$abc$43050$abc$33069$auto$opt_dff.cc:219:make_patterns_logic$9687, arst={ }, srst=$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  4 cells in clk=\clk_i, en=$abc$46606$lo120, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\phy_clk_pad_i, en=$abc$43061$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9623, arst={ }, srst=$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  1 cells in clk=\phy_clk_pad_i, en=$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9626, arst={ }, srst=$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  3 cells in clk=\phy_clk_pad_i, en=$abc$43070$abc$33061$auto$opt_dff.cc:219:make_patterns_logic$9684, arst={ }, srst=$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  14 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$43082$abc$38848$flatten\u0.\u0.$verific$n120$8654
  4 cells in clk=\phy_clk_pad_i, en=$abc$43098$abc$33076$auto$opt_dff.cc:219:make_patterns_logic$9690, arst={ }, srst=$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\phy_clk_pad_i, en=$abc$43104$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst=$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\clk_i, en=$abc$46606$abc$38154$u4.suspend_end, arst={ }, srst=$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  7 cells in clk=\phy_clk_pad_i, en=$abc$43114$abc$33185$auto$opt_dff.cc:194:make_patterns_logic$9724, arst={ }, srst=!\rst_i
  33 cells in clk=\phy_clk_pad_i, en=$abc$49318$lo294, arst={ }, srst=$abc$43124$abc$38848$flatten\u0.\u0.$verific$n318$8682
  30 cells in clk=\phy_clk_pad_i, en=$abc$49318$lo287, arst={ }, srst=!\rst_i
  47 cells in clk=\phy_clk_pad_i, en=$abc$43203$abc$31288$flatten\u0.\u0.$verific$n391$8688, arst={ }, srst=$abc$43203$abc$31288$u0.u0.me_cnt_clr
  33 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$43250$abc$31131$auto$opt_dff.cc:253:combine_resets$30278
  118 cells in clk=\phy_clk_pad_i, en=$abc$43284$abc$31451$auto$opt_dff.cc:219:make_patterns_logic$10009, arst={ }, srst=$abc$43284$abc$31451$auto$opt_dff.cc:253:combine_resets$9980
  11 cells in clk=\phy_clk_pad_i, en=$abc$41345$abc$31879$auto$opt_dff.cc:194:make_patterns_logic$9810, arst={ }, srst=!\rst_i
  14 cells in clk=\phy_clk_pad_i, en=$abc$43603$abc$31213$u0.u0.chirp_cnt_inc, arst={ }, srst=!$abc$43603$abc$31213$auto$rtlil.cc:2466:Mux$10610[10]
  2 cells in clk=\phy_clk_pad_i, en=$abc$43730$abc$31725$auto$opt_dff.cc:219:make_patterns_logic$9620, arst={ }, srst=$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  27 cells in clk=\phy_clk_pad_i, en=$abc$43618$abc$33731$u1.u0.pid_ld_en, arst={ }, srst=!\rst_i
  18 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$43735$abc$32829$auto$opt_dff.cc:253:combine_resets$9969
  74 cells in clk=\clk_i, en={ }, arst={ }, srst=$abc$43651$abc$30557$auto$opt_dff.cc:253:combine_resets$30387
  9 cells in clk=\phy_clk_pad_i, en=$abc$41362$abc$38848$flatten\u4.\u2.$verific$n1271$8150, arst={ }, srst=!\rst_i
  27 cells in clk=\phy_clk_pad_i, en=$abc$43755$abc$32725$auto$opt_dff.cc:219:make_patterns_logic$9924, arst={ }, srst=!\rst_i
  12 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$43910$abc$31812$auto$simplemap.cc:257:simplemap_eqne$19582
  24 cells in clk=\phy_clk_pad_i, en=$abc$43924$abc$35659$u4.u2.we1, arst={ }, srst=!\rst_i
  15 cells in clk=\phy_clk_pad_i, en=$abc$44164$abc$31581$auto$opt_dff.cc:219:make_patterns_logic$9890, arst={ }, srst={ }
  229 cells in clk=\phy_clk_pad_i, en=$abc$41438$abc$34392$auto$opt_dff.cc:194:make_patterns_logic$9492, arst={ }, srst=!$abc$43404$lo15
  78 cells in clk=\phy_clk_pad_i, en=$abc$49238$abc$32359$auto$opt_dff.cc:194:make_patterns_logic$9862, arst={ }, srst=!\rst_i
  16 cells in clk=\phy_clk_pad_i, en=$abc$44191$abc$31608$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  144 cells in clk=\phy_clk_pad_i, en=$abc$43971$abc$37881$u4.u0.we0, arst={ }, srst=!\rst_i
  117 cells in clk=\phy_clk_pad_i, en=$abc$49318$lo089, arst={ }, srst=$abc$44218$abc$31791$auto$opt_dff.cc:253:combine_resets$9857
  12 cells in clk=\phy_clk_pad_i, en=$abc$44329$abc$32150$auto$opt_dff.cc:219:make_patterns_logic$9883, arst={ }, srst={ }
  171 cells in clk=\phy_clk_pad_i, en=$abc$42433$abc$35711$u4.u2.we0, arst={ }, srst=!\rst_i
  86 cells in clk=\phy_clk_pad_i, en=$abc$44356$abc$32598$u1.u1.crc16_add, arst={ }, srst=$abc$44356$abc$32598$u1.u1.crc16_clr
  45 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=!\rst_i
  19 cells in clk=\phy_clk_pad_i, en=$abc$44674$abc$32680$u1.u0.token_le_2, arst={ }, srst={ }
  151 cells in clk=\phy_clk_pad_i, en=$abc$42819$abc$35944$u4.u1.we2, arst={ }, srst=!\rst_i
  17 cells in clk=\clk_i, en=$abc$44846$abc$33241$flatten\u4.$verific$n286$3819, arst={ }, srst=!\rst_i
  26 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$49318$lo039
  2 cells in clk=\phy_clk_pad_i, en=$abc$44906$abc$31437$auto$opt_dff.cc:219:make_patterns_logic$9550, arst={ }, srst=$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  2 cells in clk=\phy_clk_pad_i, en=$abc$44911$abc$31430$auto$opt_dff.cc:219:make_patterns_logic$9547, arst={ }, srst=$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  126 cells in clk=\phy_clk_pad_i, en=$abc$43784$abc$35290$auto$opt_dff.cc:194:make_patterns_logic$9584, arst={ }, srst=!\rst_i
  71 cells in clk=\phy_clk_pad_i, en=$abc$44916$abc$32532$auto$opt_dff.cc:219:make_patterns_logic$9852, arst={ }, srst=!\rst_i
  604 cells in clk=\clk_i, en={ }, arst={ }, srst=$abc$44987$abc$30593$auto$opt_dff.cc:253:combine_resets$30305
  33 cells in clk=\phy_clk_pad_i, en=$abc$45606$abc$31230$flatten\u0.\u0.$verific$n165$8660, arst={ }, srst=$abc$45606$abc$31230$flatten\u0.\u0.$verific$n154$8658
  15 cells in clk=\phy_clk_pad_i, en=$abc$45857$abc$31635$auto$opt_dff.cc:219:make_patterns_logic$9904, arst={ }, srst={ }
  42 cells in clk=\phy_clk_pad_i, en=$abc$49318$lo289, arst={ }, srst=$abc$49318$lo287
  165 cells in clk=\phy_clk_pad_i, en=$abc$45657$abc$36835$u4.u1.we0, arst={ }, srst=!\rst_i
  16 cells in clk=\phy_clk_pad_i, en=$abc$49318$lo288, arst={ }, srst=$abc$45931$abc$31709$auto$opt_dff.cc:253:combine_resets$9963
  154 cells in clk=\phy_clk_pad_i, en=$abc$42115$abc$37070$u4.u0.we2, arst={ }, srst=!\rst_i
  49 cells in clk=\phy_clk_pad_i, en=$abc$45947$abc$38848$u1.u2.fill_buf0, arst={ }, srst={ }
  64 cells in clk=\phy_clk_pad_i, en=$abc$49318$lo242, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$46259$abc$33051$auto$opt_dff.cc:194:make_patterns_logic$9651, arst={ }, srst=!\rst_i
  43 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$49318$lo096
  126 cells in clk=\phy_clk_pad_i, en=$abc$46319$abc$37411$auto$opt_dff.cc:194:make_patterns_logic$9730, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$abc$46446$abc$35127$auto$opt_dff.cc:194:make_patterns_logic$9588, arst={ }, srst=!\rst_i
  26 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$44624$lo3
  193 cells in clk=\phy_clk_pad_i, en=$abc$47249$abc$35449$auto$opt_dff.cc:194:make_patterns_logic$9565, arst={ }, srst=!$abc$42433$lo17
  235 cells in clk=\phy_clk_pad_i, en=$abc$47441$abc$36505$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst=!$abc$45657$lo23
  236 cells in clk=\phy_clk_pad_i, en=$abc$47674$abc$37570$auto$opt_dff.cc:194:make_patterns_logic$9711, arst={ }, srst=!$abc$43971$lo23
  126 cells in clk=\phy_clk_pad_i, en=$abc$46133$abc$36314$auto$opt_dff.cc:194:make_patterns_logic$9657, arst={ }, srst=!\rst_i
  7 cells in clk=\phy_clk_pad_i, en=$abc$47987$abc$31892$auto$opt_dff.cc:194:make_patterns_logic$9578, arst={ }, srst=!\rst_i
  42 cells in clk=\clk_i, en=$abc$47913$abc$33083$flatten\u4.$verific$n342$3822, arst={ }, srst=!\rst_i
  27 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$47997$abc$38848$flatten\u0.\u0.$verific$n266$8679
  126 cells in clk=\phy_clk_pad_i, en=$abc$44720$abc$34199$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst=!\rst_i
  161 cells in clk=\phy_clk_pad_i, en=$abc$44448$abc$34929$u4.u2.we2, arst={ }, srst=!\rst_i
  49 cells in clk=\phy_clk_pad_i, en=$abc$48025$abc$32764$u1.u0.data_valid_d, arst={ }, srst=$abc$48025$abc$33731$u1.u0.crc16_clr
  657 cells in clk=\phy_clk_pad_i, en=$abc$48093$abc$33272$auto$opt_dff.cc:194:make_patterns_logic$9764, arst={ }, srst={ }
  130 cells in clk=\phy_clk_pad_i, en=$abc$48758$abc$34004$auto$opt_dff.cc:194:make_patterns_logic$9515, arst={ }, srst=!\rst_i
  163 cells in clk=\phy_clk_pad_i, en=$abc$43404$abc$34691$u4.u3.we0, arst={ }, srst=!\rst_i
  49 cells in clk=\phy_clk_pad_i, en=$abc$48889$abc$38848$u1.u2.fill_buf1, arst={ }, srst={ }
  94 cells in clk=\phy_clk_pad_i, en=$abc$48971$abc$31915$auto$opt_dff.cc:219:make_patterns_logic$9801, arst={ }, srst=$abc$48971$abc$31915$auto$opt_dff.cc:253:combine_resets$9788
  170 cells in clk=\phy_clk_pad_i, en=$abc$49064$abc$33806$u4.u3.we2, arst={ }, srst=!\rst_i
  550 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  2062 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.79.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41111$abc$31153$u0.u0.suspend_set, synchronously reset by $abc$41111$abc$31153$u0.u0.suspend_clr
Extracted 16 gates and 35 wires to a netlist network with 18 inputs and 10 outputs.

3.79.2.1. Executing ABC.

3.79.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41131$abc$31191$u0.u0.xcv_set_hs, synchronously reset by $abc$41131$abc$31191$u0.u0.xcv_set_fs
Extracted 18 gates and 35 wires to a netlist network with 16 inputs and 7 outputs.

3.79.3.1. Executing ABC.

3.79.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41152$abc$31172$auto$opt_dff.cc:219:make_patterns_logic$9614, synchronously reset by $abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.79.4.1. Executing ABC.

3.79.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41160$abc$31180$u0.u0.fs_term_on, synchronously reset by $abc$41160$abc$31180$u0.u0.fs_term_off
Extracted 5 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.79.5.1. Executing ABC.

3.79.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41168$abc$38848$u0.u0.attached_set, synchronously reset by !$abc$41168$abc$31572$auto$simplemap.cc:257:simplemap_eqne$21857
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 6 outputs.

3.79.6.1. Executing ABC.

3.79.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41178$abc$32884$auto$opt_dff.cc:194:make_patterns_logic$9945, synchronously reset by !\rst_i
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.79.7.1. Executing ABC.

3.79.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$41183$abc$31869$auto$opt_dff.cc:253:combine_resets$9825
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 5 outputs.

3.79.8.1. Executing ABC.

3.79.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41194$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9937, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.9.1. Executing ABC.

3.79.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41199$abc$31422$auto$opt_dff.cc:219:make_patterns_logic$9544, synchronously reset by $abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.79.10.1. Executing ABC.

3.79.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by !$abc$41207$abc$31371$auto$rtlil.cc:2549:NotGate$29722, synchronously reset by $abc$41207$abc$31371$u0.u0.mode_set_fs
Extracted 23 gates and 47 wires to a netlist network with 23 inputs and 19 outputs.

3.79.11.1. Executing ABC.

3.79.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$41231$abc$31791$auto$opt_dff.cc:253:combine_resets$9873
Extracted 12 gates and 23 wires to a netlist network with 11 inputs and 9 outputs.

3.79.12.1. Executing ABC.

3.79.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$41243$abc$31098$auto$rtlil.cc:2373:ReduceOr$10482
Extracted 27 gates and 44 wires to a netlist network with 17 inputs and 10 outputs.

3.79.13.1. Executing ABC.

3.79.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$41274$abc$32028$auto$opt_dff.cc:253:combine_resets$9933
Extracted 18 gates and 35 wires to a netlist network with 17 inputs and 8 outputs.

3.79.14.1. Executing ABC.

3.79.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41295$abc$31281$u0.u0.idle_long_set, synchronously reset by $abc$41295$abc$31281$auto$opt_dff.cc:253:combine_resets$10022
Extracted 5 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

3.79.15.1. Executing ABC.

3.79.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$abc$41302$abc$31087$auto$rtlil.cc:2373:ReduceOr$10880
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 8 outputs.

3.79.16.1. Executing ABC.

3.79.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by $abc$41313$abc$30991$auto$opt_dff.cc:253:combine_resets$30289
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 6 outputs.

3.79.17.1. Executing ABC.

3.79.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41328$abc$32349$auto$opt_dff.cc:194:make_patterns_logic$9866, synchronously reset by !\rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 2 outputs.

3.79.18.1. Executing ABC.

3.79.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41339$abc$34624$auto$opt_dff.cc:194:make_patterns_logic$9488, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.79.19.1. Executing ABC.

3.79.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41356$abc$32879$auto$opt_dff.cc:194:make_patterns_logic$9949, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.79.20.1. Executing ABC.

3.79.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41380$abc$31805$auto$opt_dff.cc:219:make_patterns_logic$9617, synchronously reset by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.79.21.1. Executing ABC.

3.79.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44356$abc$32598$u1.u1.crc16_clr, synchronously reset by $abc$41387$abc$32758$auto$opt_dff.cc:253:combine_resets$9911
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.79.22.1. Executing ABC.

3.79.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41409$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9452, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.79.23.1. Executing ABC.

3.79.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41414$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9535, synchronously reset by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.79.24.1. Executing ABC.

3.79.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41421$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9573, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.79.25.1. Executing ABC.

3.79.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$lo129, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.79.26.1. Executing ABC.

3.79.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51746$abc$41183$abc$31444$auto$opt_dff.cc:219:make_patterns_logic$9553, synchronously reset by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.79.27.1. Executing ABC.

3.79.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41660$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9462, synchronously reset by $abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 5 outputs.

3.79.28.1. Executing ABC.

3.79.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41666$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9500, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.79.29.1. Executing ABC.

3.79.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41730$abc$33160$u4.attach, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 5 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.79.30.1. Executing ABC.

3.79.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9699, synchronously reset by $abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.79.31.1. Executing ABC.

3.79.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41744$abc$33231$u0.u0.bit_stuff_on, synchronously reset by $abc$41744$abc$33231$u0.u0.bit_stuff_off
Extracted 6 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.79.32.1. Executing ABC.

3.79.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41809$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9525, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.79.33.1. Executing ABC.

3.79.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41392$abc$38848$flatten\u4.\u3.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 9 outputs.

3.79.34.1. Executing ABC.

3.79.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41814$abc$35653$auto$opt_dff.cc:194:make_patterns_logic$9561, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.79.35.1. Executing ABC.

3.79.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41820$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9608, synchronously reset by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.36.1. Executing ABC.

3.79.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41827$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9465, synchronously reset by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.79.37.1. Executing ABC.

3.79.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41833$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9471, synchronously reset by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.79.38.1. Executing ABC.

3.79.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41839$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9477, synchronously reset by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.79.39.1. Executing ABC.

3.79.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41845$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9681, synchronously reset by $abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 6 gates and 14 wires to a netlist network with 7 inputs and 5 outputs.

3.79.40.1. Executing ABC.

3.79.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41853$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9468, synchronously reset by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.79.41.1. Executing ABC.

3.79.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41859$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9474, synchronously reset by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.79.42.1. Executing ABC.

3.79.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9480, synchronously reset by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.79.43.1. Executing ABC.

3.79.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9671, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.44.1. Executing ABC.

3.79.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41874$abc$37828$auto$opt_dff.cc:194:make_patterns_logic$9707, synchronously reset by !\rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.79.45.1. Executing ABC.

3.79.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9719, synchronously reset by !\rst_i
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.79.46.1. Executing ABC.

3.79.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \resume_req_i, synchronously reset by $abc$46606$abc$38148$auto$opt_dff.cc:253:combine_resets$9443
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.79.47.1. Executing ABC.

3.79.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48025$abc$32764$u1.u0.data_valid_d
Extracted 34 gates and 53 wires to a netlist network with 19 inputs and 12 outputs.

3.79.48.1. Executing ABC.

3.79.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41939$abc$38848$flatten\u4.\u0.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 8 outputs.

3.79.49.1. Executing ABC.

3.79.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41957$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9541, synchronously reset by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.79.50.1. Executing ABC.

3.79.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9646, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.79.51.1. Executing ABC.

3.79.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41968$abc$38134$auto$opt_dff.cc:194:make_patterns_logic$9505, synchronously reset by !\rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.79.52.1. Executing ABC.

3.79.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41671$abc$32946$u1.u0.token_le_1
Extracted 38 gates and 67 wires to a netlist network with 29 inputs and 34 outputs.

3.79.53.1. Executing ABC.

3.79.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41978$abc$36763$auto$opt_dff.cc:194:make_patterns_logic$9634, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.79.54.1. Executing ABC.

3.79.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41984$abc$37248$auto$opt_dff.cc:194:make_patterns_logic$9734, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.79.55.1. Executing ABC.

3.79.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41884$abc$37834$u4.u0.we1, synchronously reset by !\rst_i
Extracted 31 gates and 59 wires to a netlist network with 28 inputs and 26 outputs.

3.79.56.1. Executing ABC.

3.79.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42274$abc$38848$flatten\u4.\u1.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.79.57.1. Executing ABC.

3.79.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9598, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.79.58.1. Executing ABC.

3.79.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$42299$abc$33030$flatten\u4.$verific$n222$3805
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.79.59.1. Executing ABC.

3.79.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42313$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9611, synchronously reset by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.60.1. Executing ABC.

3.79.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$42319$abc$32177$auto$rtlil.cc:2549:NotGate$29970
Extracted 22 gates and 52 wires to a netlist network with 30 inputs and 20 outputs.

3.79.61.1. Executing ABC.

3.79.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42345$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9538, synchronously reset by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.62.1. Executing ABC.

3.79.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$abc$38154$u4.suspend_start, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 3 outputs.

3.79.63.1. Executing ABC.

3.79.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$lo115, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.79.64.1. Executing ABC.

3.79.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42359$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9693, synchronously reset by $abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.79.65.1. Executing ABC.

3.79.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$lo118, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.79.66.1. Executing ABC.

3.79.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$abc$33199$u4.deattach, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.79.67.1. Executing ABC.

3.79.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42375$abc$31902$auto$opt_dff.cc:194:make_patterns_logic$9805, synchronously reset by !\rst_i
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 9 outputs.

3.79.68.1. Executing ABC.

3.79.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42387$abc$34630$u4.u3.we1, synchronously reset by !\rst_i
Extracted 23 gates and 48 wires to a netlist network with 25 inputs and 22 outputs.

3.79.69.1. Executing ABC.

3.79.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42637$abc$36788$u4.u1.we1, synchronously reset by !\rst_i
Extracted 34 gates and 65 wires to a netlist network with 31 inputs and 27 outputs.

3.79.70.1. Executing ABC.

3.79.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42688$abc$36119$auto$opt_dff.cc:194:make_patterns_logic$9661, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.79.71.1. Executing ABC.

3.79.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51876$abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by !$abc$42986$abc$31010$flatten\u0.$verific$n42$8542
Extracted 43 gates and 74 wires to a netlist network with 31 inputs and 8 outputs.

3.79.72.1. Executing ABC.

3.79.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$43036$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9740, synchronously reset by !\rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.79.73.1. Executing ABC.

3.79.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$lo116, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.79.74.1. Executing ABC.

3.79.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43050$abc$33069$auto$opt_dff.cc:219:make_patterns_logic$9687, synchronously reset by $abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.79.75.1. Executing ABC.

3.79.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$lo120, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 3 outputs.

3.79.76.1. Executing ABC.

3.79.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43061$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9623, synchronously reset by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.77.1. Executing ABC.

3.79.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9626, synchronously reset by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.79.78.1. Executing ABC.

3.79.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43070$abc$33061$auto$opt_dff.cc:219:make_patterns_logic$9684, synchronously reset by $abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.79.79.1. Executing ABC.

3.79.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$43082$abc$38848$flatten\u0.\u0.$verific$n120$8654
Extracted 14 gates and 16 wires to a netlist network with 2 inputs and 4 outputs.

3.79.80.1. Executing ABC.

3.79.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43098$abc$33076$auto$opt_dff.cc:219:make_patterns_logic$9690, synchronously reset by $abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.79.81.1. Executing ABC.

3.79.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43104$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9696, synchronously reset by $abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.82.1. Executing ABC.

3.79.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46606$abc$38154$u4.suspend_end, synchronously reset by $abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.83.1. Executing ABC.

3.79.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43114$abc$33185$auto$opt_dff.cc:194:make_patterns_logic$9724, synchronously reset by !\rst_i
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

3.79.84.1. Executing ABC.

3.79.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49318$lo294, synchronously reset by $abc$43124$abc$38848$flatten\u0.\u0.$verific$n318$8682
Extracted 33 gates and 35 wires to a netlist network with 2 inputs and 11 outputs.

3.79.85.1. Executing ABC.

3.79.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49318$lo287, synchronously reset by !\rst_i
Extracted 30 gates and 42 wires to a netlist network with 12 inputs and 22 outputs.

3.79.86.1. Executing ABC.

3.79.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43203$abc$31288$flatten\u0.\u0.$verific$n391$8688, synchronously reset by $abc$43203$abc$31288$u0.u0.me_cnt_clr
Extracted 47 gates and 64 wires to a netlist network with 17 inputs and 14 outputs.

3.79.87.1. Executing ABC.

3.79.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$43250$abc$31131$auto$opt_dff.cc:253:combine_resets$30278
Extracted 33 gates and 50 wires to a netlist network with 17 inputs and 7 outputs.

3.79.88.1. Executing ABC.

3.79.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43284$abc$31451$auto$opt_dff.cc:219:make_patterns_logic$10009, synchronously reset by $abc$43284$abc$31451$auto$opt_dff.cc:253:combine_resets$9980
Extracted 118 gates and 160 wires to a netlist network with 41 inputs and 27 outputs.

3.79.89.1. Executing ABC.

3.79.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41345$abc$31879$auto$opt_dff.cc:194:make_patterns_logic$9810, synchronously reset by !\rst_i
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 6 outputs.

3.79.90.1. Executing ABC.

3.79.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43603$abc$31213$u0.u0.chirp_cnt_inc, synchronously reset by !$abc$43603$abc$31213$auto$rtlil.cc:2466:Mux$10610[10]
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 4 outputs.

3.79.91.1. Executing ABC.

3.79.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43730$abc$31725$auto$opt_dff.cc:219:make_patterns_logic$9620, synchronously reset by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.92.1. Executing ABC.

3.79.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43618$abc$33731$u1.u0.pid_ld_en, synchronously reset by !\rst_i
Extracted 27 gates and 37 wires to a netlist network with 10 inputs and 15 outputs.

3.79.93.1. Executing ABC.

3.79.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$43735$abc$32829$auto$opt_dff.cc:253:combine_resets$9969
Extracted 18 gates and 20 wires to a netlist network with 2 inputs and 5 outputs.

3.79.94.1. Executing ABC.

3.79.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $abc$43651$abc$30557$auto$opt_dff.cc:253:combine_resets$30387
Extracted 74 gates and 125 wires to a netlist network with 51 inputs and 6 outputs.

3.79.95.1. Executing ABC.

3.79.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41362$abc$38848$flatten\u4.\u2.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 8 outputs.

3.79.96.1. Executing ABC.

3.79.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43755$abc$32725$auto$opt_dff.cc:219:make_patterns_logic$9924, synchronously reset by !\rst_i
Extracted 27 gates and 34 wires to a netlist network with 7 inputs and 10 outputs.

3.79.97.1. Executing ABC.

3.79.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$43910$abc$31812$auto$simplemap.cc:257:simplemap_eqne$19582
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 10 outputs.

3.79.98.1. Executing ABC.

3.79.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43924$abc$35659$u4.u2.we1, synchronously reset by !\rst_i
Extracted 24 gates and 45 wires to a netlist network with 21 inputs and 23 outputs.

3.79.99.1. Executing ABC.

3.79.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44164$abc$31581$auto$opt_dff.cc:219:make_patterns_logic$9890
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.79.100.1. Executing ABC.

3.79.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41438$abc$34392$auto$opt_dff.cc:194:make_patterns_logic$9492, synchronously reset by !$abc$43404$lo15
Extracted 229 gates and 270 wires to a netlist network with 41 inputs and 62 outputs.

3.79.101.1. Executing ABC.

3.79.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49238$abc$32359$auto$opt_dff.cc:194:make_patterns_logic$9862, synchronously reset by !\rst_i
Extracted 78 gates and 94 wires to a netlist network with 16 inputs and 10 outputs.

3.79.102.1. Executing ABC.

3.79.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44191$abc$31608$auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.79.103.1. Executing ABC.

3.79.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43971$abc$37881$u4.u0.we0, synchronously reset by !\rst_i
Extracted 144 gates and 241 wires to a netlist network with 97 inputs and 101 outputs.

3.79.104.1. Executing ABC.

3.79.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49318$lo089, synchronously reset by $abc$44218$abc$31791$auto$opt_dff.cc:253:combine_resets$9857
Extracted 117 gates and 165 wires to a netlist network with 48 inputs and 76 outputs.

3.79.105.1. Executing ABC.

3.79.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44329$abc$32150$auto$opt_dff.cc:219:make_patterns_logic$9883
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.79.106.1. Executing ABC.

3.79.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42433$abc$35711$u4.u2.we0, synchronously reset by !\rst_i
Extracted 171 gates and 285 wires to a netlist network with 114 inputs and 116 outputs.

3.79.107.1. Executing ABC.

3.79.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44356$abc$32598$u1.u1.crc16_add, synchronously reset by $abc$44356$abc$32598$u1.u1.crc16_clr
Extracted 86 gates and 123 wires to a netlist network with 37 inputs and 19 outputs.

3.79.108.1. Executing ABC.

3.79.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by !\rst_i
Extracted 45 gates and 66 wires to a netlist network with 21 inputs and 24 outputs.

3.79.109.1. Executing ABC.

3.79.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44674$abc$32680$u1.u0.token_le_2
Extracted 19 gates and 34 wires to a netlist network with 15 inputs and 13 outputs.

3.79.110.1. Executing ABC.

3.79.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42819$abc$35944$u4.u1.we2, synchronously reset by !\rst_i
Extracted 151 gates and 202 wires to a netlist network with 51 inputs and 88 outputs.

3.79.111.1. Executing ABC.

3.79.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44846$abc$33241$flatten\u4.$verific$n286$3819, synchronously reset by !\rst_i
Extracted 17 gates and 34 wires to a netlist network with 17 inputs and 13 outputs.

3.79.112.1. Executing ABC.

3.79.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$49318$lo039
Extracted 26 gates and 28 wires to a netlist network with 2 inputs and 6 outputs.

3.79.113.1. Executing ABC.

3.79.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44906$abc$31437$auto$opt_dff.cc:219:make_patterns_logic$9550, synchronously reset by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.114.1. Executing ABC.

3.79.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44911$abc$31430$auto$opt_dff.cc:219:make_patterns_logic$9547, synchronously reset by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.79.115.1. Executing ABC.

3.79.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43784$abc$35290$auto$opt_dff.cc:194:make_patterns_logic$9584, synchronously reset by !\rst_i
Extracted 126 gates and 188 wires to a netlist network with 62 inputs and 33 outputs.

3.79.116.1. Executing ABC.

3.79.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44916$abc$32532$auto$opt_dff.cc:219:make_patterns_logic$9852, synchronously reset by !\rst_i
Extracted 71 gates and 94 wires to a netlist network with 23 inputs and 12 outputs.

3.79.117.1. Executing ABC.

3.79.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $abc$44987$abc$30593$auto$opt_dff.cc:253:combine_resets$30305
Extracted 604 gates and 1018 wires to a netlist network with 414 inputs and 29 outputs.

3.79.118.1. Executing ABC.

3.79.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45606$abc$31230$flatten\u0.\u0.$verific$n165$8660, synchronously reset by $abc$45606$abc$31230$flatten\u0.\u0.$verific$n154$8658
Extracted 33 gates and 46 wires to a netlist network with 13 inputs and 24 outputs.

3.79.119.1. Executing ABC.

3.79.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45857$abc$31635$auto$opt_dff.cc:219:make_patterns_logic$9904
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.79.120.1. Executing ABC.

3.79.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49318$lo289, synchronously reset by $abc$49318$lo287
Extracted 42 gates and 47 wires to a netlist network with 5 inputs and 12 outputs.

3.79.121.1. Executing ABC.

3.79.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45657$abc$36835$u4.u1.we0, synchronously reset by !\rst_i
Extracted 165 gates and 281 wires to a netlist network with 116 inputs and 117 outputs.

3.79.122.1. Executing ABC.

3.79.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49318$lo288, synchronously reset by $abc$45931$abc$31709$auto$opt_dff.cc:253:combine_resets$9963
Extracted 16 gates and 19 wires to a netlist network with 3 inputs and 6 outputs.

3.79.123.1. Executing ABC.

3.79.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$42115$abc$37070$u4.u0.we2, synchronously reset by !\rst_i
Extracted 154 gates and 212 wires to a netlist network with 58 inputs and 96 outputs.

3.79.124.1. Executing ABC.

3.79.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45947$abc$38848$u1.u2.fill_buf0
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.79.125.1. Executing ABC.

3.79.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49318$lo242
Extracted 64 gates and 129 wires to a netlist network with 65 inputs and 32 outputs.

3.79.126.1. Executing ABC.

3.79.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46259$abc$33051$auto$opt_dff.cc:194:make_patterns_logic$9651, synchronously reset by !\rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.79.127.1. Executing ABC.

3.79.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$49318$lo096
Extracted 43 gates and 79 wires to a netlist network with 36 inputs and 36 outputs.

3.79.128.1. Executing ABC.

3.79.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46319$abc$37411$auto$opt_dff.cc:194:make_patterns_logic$9730, synchronously reset by !\rst_i
Extracted 126 gates and 189 wires to a netlist network with 63 inputs and 34 outputs.

3.79.129.1. Executing ABC.

3.79.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46446$abc$35127$auto$opt_dff.cc:194:make_patterns_logic$9588, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.79.130.1. Executing ABC.

3.79.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$54448$lo3
Extracted 26 gates and 28 wires to a netlist network with 2 inputs and 6 outputs.

3.79.131.1. Executing ABC.

3.79.132. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47249$abc$35449$auto$opt_dff.cc:194:make_patterns_logic$9565, synchronously reset by !$abc$54147$lo23
Extracted 193 gates and 226 wires to a netlist network with 33 inputs and 42 outputs.

3.79.132.1. Executing ABC.

3.79.133. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47441$abc$36505$auto$opt_dff.cc:194:make_patterns_logic$9638, synchronously reset by !$abc$55664$lo11
Extracted 235 gates and 288 wires to a netlist network with 53 inputs and 87 outputs.

3.79.133.1. Executing ABC.

3.79.134. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47674$abc$37570$auto$opt_dff.cc:194:make_patterns_logic$9711, synchronously reset by !$abc$53823$lo09
Extracted 236 gates and 284 wires to a netlist network with 48 inputs and 83 outputs.

3.79.134.1. Executing ABC.

3.79.135. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46133$abc$36314$auto$opt_dff.cc:194:make_patterns_logic$9657, synchronously reset by !\rst_i
Extracted 126 gates and 188 wires to a netlist network with 62 inputs and 33 outputs.

3.79.135.1. Executing ABC.

3.79.136. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47987$abc$31892$auto$opt_dff.cc:194:make_patterns_logic$9578, synchronously reset by !\rst_i
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

3.79.136.1. Executing ABC.

3.79.137. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$47913$abc$33083$flatten\u4.$verific$n342$3822, synchronously reset by !\rst_i
Extracted 42 gates and 73 wires to a netlist network with 31 inputs and 33 outputs.

3.79.137.1. Executing ABC.

3.79.138. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$47997$abc$38848$flatten\u0.\u0.$verific$n266$8679
Extracted 27 gates and 29 wires to a netlist network with 2 inputs and 5 outputs.

3.79.138.1. Executing ABC.

3.79.139. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44720$abc$34199$auto$opt_dff.cc:194:make_patterns_logic$9511, synchronously reset by !\rst_i
Extracted 126 gates and 188 wires to a netlist network with 62 inputs and 33 outputs.

3.79.139.1. Executing ABC.

3.79.140. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44448$abc$34929$u4.u2.we2, synchronously reset by !\rst_i
Extracted 161 gates and 221 wires to a netlist network with 60 inputs and 98 outputs.

3.79.140.1. Executing ABC.

3.79.141. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52086$abc$48025$abc$32764$u1.u0.data_valid_d, synchronously reset by $abc$54448$abc$48025$abc$33731$u1.u0.crc16_clr
Extracted 49 gates and 59 wires to a netlist network with 10 inputs and 9 outputs.

3.79.141.1. Executing ABC.

3.79.142. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48093$abc$33272$auto$opt_dff.cc:194:make_patterns_logic$9764
Extracted 651 gates and 1045 wires to a netlist network with 394 inputs and 260 outputs.

3.79.142.1. Executing ABC.

3.79.143. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48758$abc$34004$auto$opt_dff.cc:194:make_patterns_logic$9515, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.79.143.1. Executing ABC.

3.79.144. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$43404$abc$34691$u4.u3.we0, synchronously reset by !\rst_i
Extracted 163 gates and 269 wires to a netlist network with 106 inputs and 107 outputs.

3.79.144.1. Executing ABC.

3.79.145. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48889$abc$38848$u1.u2.fill_buf1
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.79.145.1. Executing ABC.

3.79.146. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48971$abc$31915$auto$opt_dff.cc:219:make_patterns_logic$9801, synchronously reset by $abc$48971$abc$31915$auto$opt_dff.cc:253:combine_resets$9788
Extracted 94 gates and 121 wires to a netlist network with 27 inputs and 18 outputs.

3.79.146.1. Executing ABC.

3.79.147. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49064$abc$33806$u4.u3.we2, synchronously reset by !\rst_i
Extracted 170 gates and 228 wires to a netlist network with 58 inputs and 97 outputs.

3.79.147.1. Executing ABC.

3.79.148. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 550 gates and 937 wires to a netlist network with 387 inputs and 124 outputs.

3.79.148.1. Executing ABC.

3.79.149. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 2051 gates and 3058 wires to a netlist network with 1007 inputs and 656 outputs.

3.79.149.1. Executing ABC.

yosys> abc -dff

3.80. Executing ABC pass (technology mapping using ABC).

3.80.1. Summary of detected clock domains:
  19 cells in clk=\phy_clk_pad_i, en=$abc$51677$abc$41111$abc$31153$u0.u0.suspend_set, arst={ }, srst=$abc$51677$abc$41111$abc$31153$u0.u0.suspend_clr
  12 cells in clk=\phy_clk_pad_i, en=$abc$51696$abc$41131$abc$31191$u0.u0.xcv_set_hs, arst={ }, srst=$abc$51696$abc$41131$abc$31191$u0.u0.xcv_set_fs
  6 cells in clk=\phy_clk_pad_i, en=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:219:make_patterns_logic$9614, arst={ }, srst=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  5 cells in clk=\phy_clk_pad_i, en=$abc$51724$abc$41160$abc$31180$u0.u0.fs_term_on, arst={ }, srst=$abc$51724$abc$41160$abc$31180$u0.u0.fs_term_off
  3 cells in clk=\phy_clk_pad_i, en=$abc$51732$abc$41168$abc$38848$u0.u0.attached_set, arst={ }, srst=!$abc$51732$abc$41168$abc$31572$auto$simplemap.cc:257:simplemap_eqne$21857
  4 cells in clk=\phy_clk_pad_i, en=$abc$51741$abc$41178$abc$32884$auto$opt_dff.cc:194:make_patterns_logic$9945, arst={ }, srst=!\rst_i
  8 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:253:combine_resets$9825
  3 cells in clk=\phy_clk_pad_i, en=$abc$51756$abc$41194$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9937, arst={ }, srst=!\rst_i
  6 cells in clk=\phy_clk_pad_i, en=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:219:make_patterns_logic$9544, arst={ }, srst=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  25 cells in clk=\phy_clk_pad_i, en=!$abc$51769$abc$41207$abc$31371$auto$rtlil.cc:2549:NotGate$29722, arst={ }, srst=$abc$51769$abc$41207$abc$31371$u0.u0.mode_set_fs
  11 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$51794$abc$41231$abc$31791$auto$opt_dff.cc:253:combine_resets$9873
  27 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$51808$abc$41243$abc$31098$auto$rtlil.cc:2373:ReduceOr$10482
  18 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$51835$abc$41274$abc$32028$auto$opt_dff.cc:253:combine_resets$9933
  5 cells in clk=\phy_clk_pad_i, en=$abc$51855$abc$41295$abc$31281$u0.u0.idle_long_set, arst={ }, srst=$abc$51855$abc$41295$abc$31281$auto$opt_dff.cc:253:combine_resets$10022
  9 cells in clk=\clk_i, en={ }, arst={ }, srst=!$abc$51862$abc$41302$abc$31087$auto$rtlil.cc:2373:ReduceOr$10880
  8 cells in clk=\phy_clk_pad_i, en=$abc$51892$abc$41328$abc$32349$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=$abc$51902$abc$41339$abc$34624$auto$opt_dff.cc:194:make_patterns_logic$9488, arst={ }, srst=!\rst_i
  3 cells in clk=\phy_clk_pad_i, en=$abc$51908$abc$41356$abc$32879$auto$opt_dff.cc:194:make_patterns_logic$9949, arst={ }, srst=!\rst_i
  5 cells in clk=\phy_clk_pad_i, en=$abc$51914$abc$41380$abc$31805$auto$opt_dff.cc:219:make_patterns_logic$9617, arst={ }, srst=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  3 cells in clk=\phy_clk_pad_i, en=$abc$54356$abc$44356$abc$32598$u1.u1.crc16_clr, arst={ }, srst=$abc$51920$abc$41387$abc$32758$auto$opt_dff.cc:253:combine_resets$9911
  3 cells in clk=\clk_i, en=$abc$59185$abc$41409$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9452, arst={ }, srst=!\rst_i
  5 cells in clk=\phy_clk_pad_i, en=$abc$51929$abc$41414$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9535, arst={ }, srst=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  2 cells in clk=\clk_i, en=$abc$59185$abc$41421$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9573, arst={ }, srst=!\rst_i
  3 cells in clk=\clk_i, en=$abc$59185$lo052, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\phy_clk_pad_i, en=$abc$51746$abc$41183$abc$31444$auto$opt_dff.cc:219:make_patterns_logic$9553, arst={ }, srst=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  5 cells in clk=\phy_clk_pad_i, en=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9462, arst={ }, srst=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  2 cells in clk=\clk_i, en=$abc$59185$abc$41666$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9500, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=$abc$51964$abc$41730$abc$33160$u4.attach, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  4 cells in clk=\phy_clk_pad_i, en=$abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9699, arst={ }, srst=$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  6 cells in clk=\phy_clk_pad_i, en=$abc$51978$abc$41744$abc$33231$u0.u0.bit_stuff_on, arst={ }, srst=$abc$51978$abc$41744$abc$33231$u0.u0.bit_stuff_off
  3 cells in clk=\clk_i, en=$abc$59185$abc$41809$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9525, arst={ }, srst=!\rst_i
  12 cells in clk=\phy_clk_pad_i, en=$abc$51876$abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=$abc$51876$abc$41313$abc$30991$auto$opt_dff.cc:253:combine_resets$30289
  4 cells in clk=\clk_i, en=$abc$52008$abc$41814$abc$35653$auto$opt_dff.cc:194:make_patterns_logic$9561, arst={ }, srst=!\rst_i
  4 cells in clk=\phy_clk_pad_i, en=$abc$52014$abc$41820$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9608, arst={ }, srst=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  3 cells in clk=\phy_clk_pad_i, en=$abc$52019$abc$41827$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9465, arst={ }, srst=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  2 cells in clk=\phy_clk_pad_i, en=$abc$52026$abc$41833$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9471, arst={ }, srst=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$52032$abc$41839$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9477, arst={ }, srst=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  4 cells in clk=\phy_clk_pad_i, en=$abc$52039$abc$41845$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9681, arst={ }, srst=$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  3 cells in clk=\phy_clk_pad_i, en=$abc$52047$abc$41853$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9468, arst={ }, srst=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\phy_clk_pad_i, en=$abc$52054$abc$41859$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  1 cells in clk=\phy_clk_pad_i, en=$abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9480, arst={ }, srst=$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
  3 cells in clk=\clk_i, en=$abc$52066$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9671, arst={ }, srst=!\rst_i
  4 cells in clk=\clk_i, en=$abc$52071$abc$41874$abc$37828$auto$opt_dff.cc:194:make_patterns_logic$9707, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=$abc$52077$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9719, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=\resume_req_i, arst={ }, srst=$abc$59185$abc$46606$abc$38148$auto$opt_dff.cc:253:combine_resets$9443
  4 cells in clk=\phy_clk_pad_i, en=$abc$52170$abc$41957$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9541, arst={ }, srst=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  1 cells in clk=\clk_i, en=$abc$59185$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9646, arst={ }, srst=!\rst_i
  9 cells in clk=\phy_clk_pad_i, en=$abc$52181$abc$41968$abc$38134$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst=!\rst_i
  36 cells in clk=\phy_clk_pad_i, en=$abc$52191$abc$41671$abc$32946$u1.u0.token_le_1, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$52246$abc$41978$abc$36763$auto$opt_dff.cc:194:make_patterns_logic$9634, arst={ }, srst=!\rst_i
  35 cells in clk=\phy_clk_pad_i, en=$abc$52383$abc$41884$abc$37834$u4.u0.we1, arst={ }, srst=!\rst_i
  13 cells in clk=\phy_clk_pad_i, en=$abc$52434$abc$42274$abc$38848$flatten\u4.\u1.$verific$n1271$8150, arst={ }, srst=!\rst_i
  10 cells in clk=\phy_clk_pad_i, en=$abc$51990$abc$41392$abc$38848$flatten\u4.\u3.$verific$n1271$8150, arst={ }, srst=!\rst_i
  2 cells in clk=\clk_i, en=$abc$59185$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9598, arst={ }, srst=!\rst_i
  35 cells in clk=\phy_clk_pad_i, en=$abc$52086$abc$48025$abc$32764$u1.u0.data_valid_d, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$52456$abc$42299$abc$33030$flatten\u4.$verific$n222$3805, arst={ }, srst={ }
  2 cells in clk=\phy_clk_pad_i, en=$abc$52470$abc$42313$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9611, arst={ }, srst=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  26 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$52475$abc$42319$abc$32177$auto$rtlil.cc:2549:NotGate$29970
  3 cells in clk=\phy_clk_pad_i, en=$abc$52499$abc$42345$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9538, arst={ }, srst=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  1 cells in clk=\clk_i, en=$abc$59185$abc$46606$abc$38154$u4.suspend_start, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\clk_i, en=$abc$59185$lo026, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\phy_clk_pad_i, en=$abc$52516$abc$42359$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9693, arst={ }, srst=$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\clk_i, en=$abc$59185$lo005, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\clk_i, en=$abc$59185$abc$46606$abc$33199$u4.deattach, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  11 cells in clk=\phy_clk_pad_i, en=$abc$52532$abc$42375$abc$31902$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst=!\rst_i
  33 cells in clk=\phy_clk_pad_i, en=$abc$52545$abc$42387$abc$34630$u4.u3.we1, arst={ }, srst=!\rst_i
  31 cells in clk=\phy_clk_pad_i, en=$abc$52592$abc$42637$abc$36788$u4.u1.we1, arst={ }, srst=!\rst_i
  43 cells in clk=\phy_clk_pad_i, en=$abc$51876$abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, arst={ }, srst=!$abc$52775$abc$42986$abc$31010$flatten\u0.$verific$n42$8542
  6 cells in clk=\clk_i, en=$abc$52824$abc$43036$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9740, arst={ }, srst=!\rst_i
  1 cells in clk=\clk_i, en=$abc$59185$lo001, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  3 cells in clk=\phy_clk_pad_i, en=$abc$52838$abc$43050$abc$33069$auto$opt_dff.cc:219:make_patterns_logic$9687, arst={ }, srst=$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  3 cells in clk=\clk_i, en=$abc$59185$lo003, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  2 cells in clk=\phy_clk_pad_i, en=$abc$52850$abc$43061$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9623, arst={ }, srst=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  1 cells in clk=\phy_clk_pad_i, en=$abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9626, arst={ }, srst=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  130 cells in clk=\phy_clk_pad_i, en=$abc$52644$abc$42688$abc$36119$auto$opt_dff.cc:194:make_patterns_logic$9661, arst={ }, srst=!\rst_i
  11 cells in clk=\phy_clk_pad_i, en=$abc$52859$abc$43070$abc$33061$auto$opt_dff.cc:219:make_patterns_logic$9684, arst={ }, srst=$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  15 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$52865$abc$43082$abc$38848$flatten\u0.\u0.$verific$n120$8654
  4 cells in clk=\phy_clk_pad_i, en=$abc$52880$abc$43098$abc$33076$auto$opt_dff.cc:219:make_patterns_logic$9690, arst={ }, srst=$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\phy_clk_pad_i, en=$abc$52887$abc$43104$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst=$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
  2 cells in clk=\clk_i, en=$abc$59185$abc$46606$abc$38154$u4.suspend_end, arst={ }, srst=$abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
  7 cells in clk=\phy_clk_pad_i, en=$abc$52897$abc$43114$abc$33185$auto$opt_dff.cc:194:make_patterns_logic$9724, arst={ }, srst=!\rst_i
  33 cells in clk=\phy_clk_pad_i, en=$abc$59836$lo294, arst={ }, srst=$abc$52907$abc$43124$abc$38848$flatten\u0.\u0.$verific$n318$8682
  31 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$53033$abc$43250$abc$31131$auto$opt_dff.cc:253:combine_resets$30278
  120 cells in clk=\phy_clk_pad_i, en=$abc$53065$abc$43284$abc$31451$auto$opt_dff.cc:219:make_patterns_logic$10009, arst={ }, srst=$abc$53065$abc$43284$abc$31451$auto$opt_dff.cc:253:combine_resets$9980
  11 cells in clk=\phy_clk_pad_i, en=$abc$53183$abc$41345$abc$31879$auto$opt_dff.cc:194:make_patterns_logic$9810, arst={ }, srst=!\rst_i
  27 cells in clk=\phy_clk_pad_i, en=$abc$59836$lo287, arst={ }, srst=!\rst_i
  14 cells in clk=\phy_clk_pad_i, en=$abc$53195$abc$43603$abc$31213$u0.u0.chirp_cnt_inc, arst={ }, srst=!$abc$53195$abc$43603$abc$31213$auto$rtlil.cc:2466:Mux$10610[10]
  2 cells in clk=\phy_clk_pad_i, en=$abc$53210$abc$43730$abc$31725$auto$opt_dff.cc:219:make_patterns_logic$9620, arst={ }, srst=$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
  46 cells in clk=\phy_clk_pad_i, en=$abc$52986$abc$43203$abc$31288$flatten\u0.\u0.$verific$n391$8688, arst={ }, srst=$abc$52986$abc$43203$abc$31288$u0.u0.me_cnt_clr
  77 cells in clk=\clk_i, en={ }, arst={ }, srst=$abc$53266$abc$43651$abc$30557$auto$opt_dff.cc:253:combine_resets$30387
  8 cells in clk=\phy_clk_pad_i, en=$abc$53346$abc$41362$abc$38848$flatten\u4.\u2.$verific$n1271$8150, arst={ }, srst=!\rst_i
  25 cells in clk=\phy_clk_pad_i, en=$abc$53363$abc$43755$abc$32725$auto$opt_dff.cc:219:make_patterns_logic$9924, arst={ }, srst=!\rst_i
  12 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$53391$abc$43910$abc$31812$auto$simplemap.cc:257:simplemap_eqne$19582
  26 cells in clk=\phy_clk_pad_i, en=$abc$53404$abc$43924$abc$35659$u4.u2.we1, arst={ }, srst=!\rst_i
  16 cells in clk=\phy_clk_pad_i, en=$abc$53452$abc$44164$abc$31581$auto$opt_dff.cc:219:make_patterns_logic$9890, arst={ }, srst={ }
  130 cells in clk=\phy_clk_pad_i, en=$abc$52252$abc$41984$abc$37248$auto$opt_dff.cc:194:make_patterns_logic$9734, arst={ }, srst=!\rst_i
  80 cells in clk=\phy_clk_pad_i, en=$abc$53715$abc$49238$abc$32359$auto$opt_dff.cc:194:make_patterns_logic$9862, arst={ }, srst=!\rst_i
  10 cells in clk=\phy_clk_pad_i, en=$abc$53796$abc$44191$abc$31608$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  156 cells in clk=\phy_clk_pad_i, en=$abc$53823$abc$43971$abc$37881$u4.u0.we0, arst={ }, srst=!\rst_i
  119 cells in clk=\phy_clk_pad_i, en=$abc$59836$lo089, arst={ }, srst=$abc$54010$abc$44218$abc$31791$auto$opt_dff.cc:253:combine_resets$9857
  15 cells in clk=\phy_clk_pad_i, en=$abc$54120$abc$44329$abc$32150$auto$opt_dff.cc:219:make_patterns_logic$9883, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$52153$abc$41939$abc$38848$flatten\u4.\u0.$verific$n1271$8150, arst={ }, srst=!\rst_i
  87 cells in clk=\phy_clk_pad_i, en=$abc$54356$abc$44356$abc$32598$u1.u1.crc16_add, arst={ }, srst=$abc$54356$abc$44356$abc$32598$u1.u1.crc16_clr
  18 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$53247$abc$43735$abc$32829$auto$opt_dff.cc:253:combine_resets$9969
  43 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=!\rst_i
  20 cells in clk=\phy_clk_pad_i, en=$abc$54499$abc$44674$abc$32680$u1.u0.token_le_2, arst={ }, srst={ }
  231 cells in clk=\phy_clk_pad_i, en=$abc$53479$abc$41438$abc$34392$auto$opt_dff.cc:194:make_patterns_logic$9492, arst={ }, srst=!$abc$58635$lo13
  27 cells in clk=\phy_clk_pad_i, en=$abc$53215$abc$43618$abc$33731$u1.u0.pid_ld_en, arst={ }, srst=!\rst_i
  152 cells in clk=\phy_clk_pad_i, en=$abc$54530$abc$42819$abc$35944$u4.u1.we2, arst={ }, srst=!\rst_i
  18 cells in clk=\clk_i, en=$abc$54690$abc$44846$abc$33241$flatten\u4.$verific$n286$3819, arst={ }, srst=!\rst_i
  26 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$59836$lo039
  2 cells in clk=\phy_clk_pad_i, en=$abc$54750$abc$44906$abc$31437$auto$opt_dff.cc:219:make_patterns_logic$9550, arst={ }, srst=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  2 cells in clk=\phy_clk_pad_i, en=$abc$54755$abc$44911$abc$31430$auto$opt_dff.cc:219:make_patterns_logic$9547, arst={ }, srst=$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
  64 cells in clk=\phy_clk_pad_i, en=$abc$54886$abc$44916$abc$32532$auto$opt_dff.cc:219:make_patterns_logic$9852, arst={ }, srst=!\rst_i
  125 cells in clk=\phy_clk_pad_i, en=$abc$54760$abc$43784$abc$35290$auto$opt_dff.cc:194:make_patterns_logic$9584, arst={ }, srst=!\rst_i
  577 cells in clk=\clk_i, en={ }, arst={ }, srst=$abc$54954$abc$44987$abc$30593$auto$opt_dff.cc:253:combine_resets$30305
  32 cells in clk=\phy_clk_pad_i, en=$abc$55548$abc$45606$abc$31230$flatten\u0.\u0.$verific$n165$8660, arst={ }, srst=$abc$55548$abc$45606$abc$31230$flatten\u0.\u0.$verific$n154$8658
  15 cells in clk=\phy_clk_pad_i, en=$abc$55590$abc$45857$abc$31635$auto$opt_dff.cc:219:make_patterns_logic$9904, arst={ }, srst={ }
  41 cells in clk=\phy_clk_pad_i, en=$abc$59836$lo289, arst={ }, srst=$abc$59836$lo287
  174 cells in clk=\phy_clk_pad_i, en=$abc$55664$abc$45657$abc$36835$u4.u1.we0, arst={ }, srst=!\rst_i
  15 cells in clk=\phy_clk_pad_i, en=$abc$59836$lo288, arst={ }, srst=$abc$55867$abc$45931$abc$31709$auto$opt_dff.cc:253:combine_resets$9963
  151 cells in clk=\phy_clk_pad_i, en=$abc$55884$abc$42115$abc$37070$u4.u0.we2, arst={ }, srst=!\rst_i
  49 cells in clk=\phy_clk_pad_i, en=$abc$56048$abc$45947$abc$38848$u1.u2.fill_buf0, arst={ }, srst={ }
  64 cells in clk=\phy_clk_pad_i, en=$abc$59836$lo242, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$56227$abc$46259$abc$33051$auto$opt_dff.cc:194:make_patterns_logic$9651, arst={ }, srst=!\rst_i
  551 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  40 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$59836$lo096
  126 cells in clk=\phy_clk_pad_i, en=$abc$56282$abc$46319$abc$37411$auto$opt_dff.cc:194:make_patterns_logic$9730, arst={ }, srst=!\rst_i
  130 cells in clk=\phy_clk_pad_i, en=$abc$56409$abc$46446$abc$35127$auto$opt_dff.cc:194:make_patterns_logic$9588, arst={ }, srst=!\rst_i
  26 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$54448$lo3
  195 cells in clk=\phy_clk_pad_i, en=$abc$56569$abc$47249$abc$35449$auto$opt_dff.cc:194:make_patterns_logic$9565, arst={ }, srst=!$abc$54147$lo23
  229 cells in clk=\phy_clk_pad_i, en=$abc$56770$abc$47441$abc$36505$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst=!$abc$55664$lo11
  229 cells in clk=\phy_clk_pad_i, en=$abc$57016$abc$47674$abc$37570$auto$opt_dff.cc:194:make_patterns_logic$9711, arst={ }, srst=!$abc$53823$lo09
  130 cells in clk=\phy_clk_pad_i, en=$abc$58504$abc$48758$abc$34004$auto$opt_dff.cc:194:make_patterns_logic$9515, arst={ }, srst=!\rst_i
  158 cells in clk=\phy_clk_pad_i, en=$abc$58635$abc$43404$abc$34691$u4.u3.we0, arst={ }, srst=!\rst_i
  126 cells in clk=\phy_clk_pad_i, en=$abc$57263$abc$46133$abc$36314$auto$opt_dff.cc:194:make_patterns_logic$9657, arst={ }, srst=!\rst_i
  7 cells in clk=\phy_clk_pad_i, en=$abc$57389$abc$47987$abc$31892$auto$opt_dff.cc:194:make_patterns_logic$9578, arst={ }, srst=!\rst_i
  51 cells in clk=\clk_i, en=$abc$57399$abc$47913$abc$33083$flatten\u4.$verific$n342$3822, arst={ }, srst=!\rst_i
  91 cells in clk=\phy_clk_pad_i, en=$abc$58917$abc$48971$abc$31915$auto$opt_dff.cc:219:make_patterns_logic$9801, arst={ }, srst=$abc$58917$abc$48971$abc$31915$auto$opt_dff.cc:253:combine_resets$9788
  49 cells in clk=\phy_clk_pad_i, en=$abc$58835$abc$48889$abc$38848$u1.u2.fill_buf1, arst={ }, srst={ }
  27 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst=$abc$57471$abc$47997$abc$38848$flatten\u0.\u0.$verific$n266$8679
  170 cells in clk=\phy_clk_pad_i, en=$abc$54147$abc$42433$abc$35711$u4.u2.we0, arst={ }, srst=!\rst_i
  126 cells in clk=\phy_clk_pad_i, en=$abc$57499$abc$44720$abc$34199$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst=!\rst_i
  163 cells in clk=\phy_clk_pad_i, en=$abc$57625$abc$44448$abc$34929$u4.u2.we2, arst={ }, srst=!\rst_i
  159 cells in clk=\phy_clk_pad_i, en=$abc$59010$abc$49064$abc$33806$u4.u3.we2, arst={ }, srst=!\rst_i
  49 cells in clk=\phy_clk_pad_i, en=$abc$52086$abc$48025$abc$32764$u1.u0.data_valid_d, arst={ }, srst=$abc$54448$abc$48025$abc$33731$u1.u0.crc16_clr
  635 cells in clk=\phy_clk_pad_i, en=$abc$57844$abc$48093$abc$33272$auto$opt_dff.cc:194:make_patterns_logic$9764, arst={ }, srst={ }
  2049 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.80.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51677$abc$41111$abc$31153$u0.u0.suspend_set, synchronously reset by $abc$51677$abc$41111$abc$31153$u0.u0.suspend_clr
Extracted 19 gates and 40 wires to a netlist network with 20 inputs and 11 outputs.

3.80.2.1. Executing ABC.

3.80.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51696$abc$41131$abc$31191$u0.u0.xcv_set_hs, synchronously reset by $abc$51696$abc$41131$abc$31191$u0.u0.xcv_set_fs
Extracted 12 gates and 24 wires to a netlist network with 11 inputs and 5 outputs.

3.80.3.1. Executing ABC.

3.80.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:219:make_patterns_logic$9614, synchronously reset by $abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.80.4.1. Executing ABC.

3.80.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51724$abc$41160$abc$31180$u0.u0.fs_term_on, synchronously reset by $abc$51724$abc$41160$abc$31180$u0.u0.fs_term_off
Extracted 5 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.80.5.1. Executing ABC.

3.80.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51732$abc$41168$abc$38848$u0.u0.attached_set, synchronously reset by !$abc$51732$abc$41168$abc$31572$auto$simplemap.cc:257:simplemap_eqne$21857
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.80.6.1. Executing ABC.

3.80.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51741$abc$41178$abc$32884$auto$opt_dff.cc:194:make_patterns_logic$9945, synchronously reset by !\rst_i
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.80.7.1. Executing ABC.

3.80.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:253:combine_resets$9825
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 5 outputs.

3.80.8.1. Executing ABC.

3.80.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51756$abc$41194$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9937, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.9.1. Executing ABC.

3.80.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:219:make_patterns_logic$9544, synchronously reset by $abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.80.10.1. Executing ABC.

3.80.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by !$abc$51769$abc$41207$abc$31371$auto$rtlil.cc:2549:NotGate$29722, synchronously reset by $abc$51769$abc$41207$abc$31371$u0.u0.mode_set_fs
Extracted 25 gates and 48 wires to a netlist network with 22 inputs and 20 outputs.

3.80.11.1. Executing ABC.

3.80.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$51794$abc$41231$abc$31791$auto$opt_dff.cc:253:combine_resets$9873
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 7 outputs.

3.80.12.1. Executing ABC.

3.80.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$51808$abc$41243$abc$31098$auto$rtlil.cc:2373:ReduceOr$10482
Extracted 27 gates and 43 wires to a netlist network with 16 inputs and 10 outputs.

3.80.13.1. Executing ABC.

3.80.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$51835$abc$41274$abc$32028$auto$opt_dff.cc:253:combine_resets$9933
Extracted 18 gates and 35 wires to a netlist network with 17 inputs and 8 outputs.

3.80.14.1. Executing ABC.

3.80.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51855$abc$41295$abc$31281$u0.u0.idle_long_set, synchronously reset by $abc$51855$abc$41295$abc$31281$auto$opt_dff.cc:253:combine_resets$10022
Extracted 5 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

3.80.15.1. Executing ABC.

3.80.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by !$abc$51862$abc$41302$abc$31087$auto$rtlil.cc:2373:ReduceOr$10880
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 7 outputs.

3.80.16.1. Executing ABC.

3.80.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51892$abc$41328$abc$32349$auto$opt_dff.cc:194:make_patterns_logic$9866, synchronously reset by !\rst_i
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 2 outputs.

3.80.17.1. Executing ABC.

3.80.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$51902$abc$41339$abc$34624$auto$opt_dff.cc:194:make_patterns_logic$9488, synchronously reset by !\rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.80.18.1. Executing ABC.

3.80.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51908$abc$41356$abc$32879$auto$opt_dff.cc:194:make_patterns_logic$9949, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.80.19.1. Executing ABC.

3.80.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51914$abc$41380$abc$31805$auto$opt_dff.cc:219:make_patterns_logic$9617, synchronously reset by $abc$62188$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.80.20.1. Executing ABC.

3.80.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54356$abc$44356$abc$32598$u1.u1.crc16_clr, synchronously reset by $abc$51920$abc$41387$abc$32758$auto$opt_dff.cc:253:combine_resets$9911
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.80.21.1. Executing ABC.

3.80.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$41409$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9452, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.22.1. Executing ABC.

3.80.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51929$abc$41414$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9535, synchronously reset by $abc$62230$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 5 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.80.23.1. Executing ABC.

3.80.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$41421$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9573, synchronously reset by !\rst_i
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.80.24.1. Executing ABC.

3.80.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$lo052, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.80.25.1. Executing ABC.

3.80.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$62215$abc$51746$abc$41183$abc$31444$auto$opt_dff.cc:219:make_patterns_logic$9553, synchronously reset by $abc$62230$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.80.26.1. Executing ABC.

3.80.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9462, synchronously reset by $abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 5 gates and 13 wires to a netlist network with 7 inputs and 5 outputs.

3.80.27.1. Executing ABC.

3.80.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$41666$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9500, synchronously reset by !\rst_i
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.80.28.1. Executing ABC.

3.80.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$51964$abc$41730$abc$33160$u4.attach, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.80.29.1. Executing ABC.

3.80.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$62215$abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9699, synchronously reset by $abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.80.30.1. Executing ABC.

3.80.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51978$abc$41744$abc$33231$u0.u0.bit_stuff_on, synchronously reset by $abc$51978$abc$41744$abc$33231$u0.u0.bit_stuff_off
Extracted 6 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.80.31.1. Executing ABC.

3.80.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$41809$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9525, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.32.1. Executing ABC.

3.80.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51876$abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by $abc$51876$abc$41313$abc$30991$auto$opt_dff.cc:253:combine_resets$30289
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 5 outputs.

3.80.33.1. Executing ABC.

3.80.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$52008$abc$41814$abc$35653$auto$opt_dff.cc:194:make_patterns_logic$9561, synchronously reset by !\rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.80.34.1. Executing ABC.

3.80.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52014$abc$41820$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9608, synchronously reset by $abc$62188$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.80.35.1. Executing ABC.

3.80.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52019$abc$41827$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9465, synchronously reset by $abc$62405$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.80.36.1. Executing ABC.

3.80.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52026$abc$41833$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9471, synchronously reset by $abc$62405$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.37.1. Executing ABC.

3.80.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52032$abc$41839$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9477, synchronously reset by $abc$62405$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.80.38.1. Executing ABC.

3.80.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52039$abc$41845$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9681, synchronously reset by $abc$62425$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.80.39.1. Executing ABC.

3.80.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52047$abc$41853$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9468, synchronously reset by $abc$62405$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.80.40.1. Executing ABC.

3.80.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52054$abc$41859$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9474, synchronously reset by $abc$62405$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.80.41.1. Executing ABC.

3.80.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$62215$abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9480, synchronously reset by $abc$62405$abc$51952$abc$41660$abc$38848$auto$opt_dff.cc:253:combine_resets$9459
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.80.42.1. Executing ABC.

3.80.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$52066$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9671, synchronously reset by !\rst_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.43.1. Executing ABC.

3.80.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$52071$abc$41874$abc$37828$auto$opt_dff.cc:194:make_patterns_logic$9707, synchronously reset by !\rst_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.80.44.1. Executing ABC.

3.80.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$52077$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9719, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.80.45.1. Executing ABC.

3.80.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \resume_req_i, synchronously reset by $abc$59185$abc$46606$abc$38148$auto$opt_dff.cc:253:combine_resets$9443
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.46.1. Executing ABC.

3.80.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52170$abc$41957$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9541, synchronously reset by $abc$62230$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.80.47.1. Executing ABC.

3.80.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9646, synchronously reset by !\rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.80.48.1. Executing ABC.

3.80.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52181$abc$41968$abc$38134$auto$opt_dff.cc:194:make_patterns_logic$9505, synchronously reset by !\rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.80.49.1. Executing ABC.

3.80.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52191$abc$41671$abc$32946$u1.u0.token_le_1
Extracted 36 gates and 63 wires to a netlist network with 27 inputs and 32 outputs.

3.80.50.1. Executing ABC.

3.80.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$52246$abc$41978$abc$36763$auto$opt_dff.cc:194:make_patterns_logic$9634, synchronously reset by !\rst_i
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.80.51.1. Executing ABC.

3.80.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52383$abc$41884$abc$37834$u4.u0.we1, synchronously reset by !\rst_i
Extracted 35 gates and 66 wires to a netlist network with 31 inputs and 29 outputs.

3.80.52.1. Executing ABC.

3.80.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52434$abc$42274$abc$38848$flatten\u4.\u1.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 9 outputs.

3.80.53.1. Executing ABC.

3.80.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51990$abc$41392$abc$38848$flatten\u4.\u3.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 8 outputs.

3.80.54.1. Executing ABC.

3.80.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$46606$abc$38154$auto$opt_dff.cc:194:make_patterns_logic$9598, synchronously reset by !\rst_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.80.55.1. Executing ABC.

3.80.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52086$abc$48025$abc$32764$u1.u0.data_valid_d
Extracted 35 gates and 54 wires to a netlist network with 19 inputs and 13 outputs.

3.80.56.1. Executing ABC.

3.80.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$52456$abc$42299$abc$33030$flatten\u4.$verific$n222$3805
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

3.80.57.1. Executing ABC.

3.80.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52470$abc$42313$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9611, synchronously reset by $abc$62188$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.58.1. Executing ABC.

3.80.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$52475$abc$42319$abc$32177$auto$rtlil.cc:2549:NotGate$29970
Extracted 26 gates and 58 wires to a netlist network with 32 inputs and 23 outputs.

3.80.59.1. Executing ABC.

3.80.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52499$abc$42345$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9538, synchronously reset by $abc$62230$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.80.60.1. Executing ABC.

3.80.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$46606$abc$38154$u4.suspend_start, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.80.61.1. Executing ABC.

3.80.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$lo026, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.80.62.1. Executing ABC.

3.80.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52516$abc$42359$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9693, synchronously reset by $abc$62425$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 3 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.80.63.1. Executing ABC.

3.80.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$lo005, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.64.1. Executing ABC.

3.80.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$46606$abc$33199$u4.deattach, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.80.65.1. Executing ABC.

3.80.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52532$abc$42375$abc$31902$auto$opt_dff.cc:194:make_patterns_logic$9805, synchronously reset by !\rst_i
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 9 outputs.

3.80.66.1. Executing ABC.

3.80.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52545$abc$42387$abc$34630$u4.u3.we1, synchronously reset by !\rst_i
Extracted 33 gates and 63 wires to a netlist network with 30 inputs and 27 outputs.

3.80.67.1. Executing ABC.

3.80.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52592$abc$42637$abc$36788$u4.u1.we1, synchronously reset by !\rst_i
Extracted 31 gates and 58 wires to a netlist network with 27 inputs and 26 outputs.

3.80.68.1. Executing ABC.

3.80.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51876$abc$42986$abc$30991$auto$opt_dff.cc:194:make_patterns_logic$10040, synchronously reset by !$abc$52775$abc$42986$abc$31010$flatten\u0.$verific$n42$8542
Extracted 43 gates and 75 wires to a netlist network with 32 inputs and 9 outputs.

3.80.69.1. Executing ABC.

3.80.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$52824$abc$43036$abc$38848$auto$opt_dff.cc:194:make_patterns_logic$9740, synchronously reset by !\rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.80.70.1. Executing ABC.

3.80.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$lo001, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.80.71.1. Executing ABC.

3.80.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52838$abc$43050$abc$33069$auto$opt_dff.cc:219:make_patterns_logic$9687, synchronously reset by $abc$62425$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 3 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

3.80.72.1. Executing ABC.

3.80.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$lo003, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.80.73.1. Executing ABC.

3.80.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52850$abc$43061$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9623, synchronously reset by $abc$62188$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.74.1. Executing ABC.

3.80.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$62215$abc$51746$abc$41183$abc$31869$auto$opt_dff.cc:219:make_patterns_logic$9626, synchronously reset by $abc$62188$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 1 gates and 2 wires to a netlist network with 0 inputs and 1 outputs.

3.80.75.1. Executing ABC.

3.80.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52644$abc$42688$abc$36119$auto$opt_dff.cc:194:make_patterns_logic$9661, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.80.76.1. Executing ABC.

3.80.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52859$abc$43070$abc$33061$auto$opt_dff.cc:219:make_patterns_logic$9684, synchronously reset by $abc$62425$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 11 gates and 24 wires to a netlist network with 12 inputs and 4 outputs.

3.80.77.1. Executing ABC.

3.80.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$52865$abc$43082$abc$38848$flatten\u0.\u0.$verific$n120$8654
Extracted 15 gates and 17 wires to a netlist network with 2 inputs and 4 outputs.

3.80.78.1. Executing ABC.

3.80.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52880$abc$43098$abc$33076$auto$opt_dff.cc:219:make_patterns_logic$9690, synchronously reset by $abc$62425$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 4 gates and 10 wires to a netlist network with 5 inputs and 4 outputs.

3.80.79.1. Executing ABC.

3.80.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52887$abc$43104$abc$38848$auto$opt_dff.cc:219:make_patterns_logic$9696, synchronously reset by $abc$62425$abc$51971$abc$41737$abc$33061$auto$opt_dff.cc:253:combine_resets$9678
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.80.1. Executing ABC.

3.80.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59185$abc$46606$abc$38154$u4.suspend_end, synchronously reset by $abc$59185$abc$46606$abc$33160$auto$opt_dff.cc:253:combine_resets$9750
Extracted 2 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.80.81.1. Executing ABC.

3.80.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52897$abc$43114$abc$33185$auto$opt_dff.cc:194:make_patterns_logic$9724, synchronously reset by !\rst_i
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

3.80.82.1. Executing ABC.

3.80.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59836$lo294, synchronously reset by $abc$52907$abc$43124$abc$38848$flatten\u0.\u0.$verific$n318$8682
Extracted 33 gates and 35 wires to a netlist network with 2 inputs and 11 outputs.

3.80.83.1. Executing ABC.

3.80.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$53033$abc$43250$abc$31131$auto$opt_dff.cc:253:combine_resets$30278
Extracted 31 gates and 48 wires to a netlist network with 17 inputs and 7 outputs.

3.80.84.1. Executing ABC.

3.80.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53065$abc$43284$abc$31451$auto$opt_dff.cc:219:make_patterns_logic$10009, synchronously reset by $abc$53065$abc$43284$abc$31451$auto$opt_dff.cc:253:combine_resets$9980
Extracted 120 gates and 164 wires to a netlist network with 43 inputs and 30 outputs.

3.80.85.1. Executing ABC.

3.80.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53183$abc$41345$abc$31879$auto$opt_dff.cc:194:make_patterns_logic$9810, synchronously reset by !\rst_i
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 6 outputs.

3.80.86.1. Executing ABC.

3.80.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59836$lo287, synchronously reset by !\rst_i
Extracted 27 gates and 39 wires to a netlist network with 12 inputs and 22 outputs.

3.80.87.1. Executing ABC.

3.80.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53195$abc$43603$abc$31213$u0.u0.chirp_cnt_inc, synchronously reset by !$abc$53195$abc$43603$abc$31213$auto$rtlil.cc:2466:Mux$10610[10]
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 4 outputs.

3.80.88.1. Executing ABC.

3.80.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53210$abc$43730$abc$31725$auto$opt_dff.cc:219:make_patterns_logic$9620, synchronously reset by $abc$62188$abc$51716$abc$41152$abc$31172$auto$opt_dff.cc:253:combine_resets$9605
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.89.1. Executing ABC.

3.80.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52986$abc$43203$abc$31288$flatten\u0.\u0.$verific$n391$8688, synchronously reset by $abc$52986$abc$43203$abc$31288$u0.u0.me_cnt_clr
Extracted 46 gates and 63 wires to a netlist network with 17 inputs and 14 outputs.

3.80.90.1. Executing ABC.

3.80.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $abc$53266$abc$43651$abc$30557$auto$opt_dff.cc:253:combine_resets$30387
Extracted 77 gates and 131 wires to a netlist network with 54 inputs and 6 outputs.

3.80.91.1. Executing ABC.

3.80.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53346$abc$41362$abc$38848$flatten\u4.\u2.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 8 outputs.

3.80.92.1. Executing ABC.

3.80.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53363$abc$43755$abc$32725$auto$opt_dff.cc:219:make_patterns_logic$9924, synchronously reset by !\rst_i
Extracted 25 gates and 32 wires to a netlist network with 7 inputs and 9 outputs.

3.80.93.1. Executing ABC.

3.80.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$53391$abc$43910$abc$31812$auto$simplemap.cc:257:simplemap_eqne$19582
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 10 outputs.

3.80.94.1. Executing ABC.

3.80.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53404$abc$43924$abc$35659$u4.u2.we1, synchronously reset by !\rst_i
Extracted 26 gates and 51 wires to a netlist network with 25 inputs and 20 outputs.

3.80.95.1. Executing ABC.

3.80.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53452$abc$44164$abc$31581$auto$opt_dff.cc:219:make_patterns_logic$9890
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.80.96.1. Executing ABC.

3.80.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52252$abc$41984$abc$37248$auto$opt_dff.cc:194:make_patterns_logic$9734, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.80.97.1. Executing ABC.

3.80.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53715$abc$49238$abc$32359$auto$opt_dff.cc:194:make_patterns_logic$9862, synchronously reset by !\rst_i
Extracted 80 gates and 96 wires to a netlist network with 16 inputs and 10 outputs.

3.80.98.1. Executing ABC.

3.80.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53796$abc$44191$abc$31608$auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.80.99.1. Executing ABC.

3.80.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53823$abc$43971$abc$37881$u4.u0.we0, synchronously reset by !\rst_i
Extracted 156 gates and 264 wires to a netlist network with 108 inputs and 112 outputs.

3.80.100.1. Executing ABC.

3.80.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59836$lo089, synchronously reset by $abc$62265$abc$54010$abc$44218$abc$31791$auto$opt_dff.cc:253:combine_resets$9857
Extracted 119 gates and 178 wires to a netlist network with 59 inputs and 76 outputs.

3.80.101.1. Executing ABC.

3.80.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54120$abc$44329$abc$32150$auto$opt_dff.cc:219:make_patterns_logic$9883
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.80.102.1. Executing ABC.

3.80.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52153$abc$41939$abc$38848$flatten\u4.\u0.$verific$n1271$8150, synchronously reset by !\rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 8 outputs.

3.80.103.1. Executing ABC.

3.80.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54356$abc$44356$abc$32598$u1.u1.crc16_add, synchronously reset by $abc$54356$abc$44356$abc$32598$u1.u1.crc16_clr
Extracted 87 gates and 124 wires to a netlist network with 37 inputs and 20 outputs.

3.80.104.1. Executing ABC.

3.80.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$53247$abc$43735$abc$32829$auto$opt_dff.cc:253:combine_resets$9969
Extracted 18 gates and 20 wires to a netlist network with 2 inputs and 5 outputs.

3.80.105.1. Executing ABC.

3.80.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by !\rst_i
Extracted 43 gates and 63 wires to a netlist network with 20 inputs and 22 outputs.

3.80.106.1. Executing ABC.

3.80.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54499$abc$44674$abc$32680$u1.u0.token_le_2
Extracted 20 gates and 36 wires to a netlist network with 16 inputs and 14 outputs.

3.80.107.1. Executing ABC.

3.80.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53479$abc$41438$abc$34392$auto$opt_dff.cc:194:make_patterns_logic$9492, synchronously reset by !$abc$58635$lo13
Extracted 231 gates and 272 wires to a netlist network with 41 inputs and 62 outputs.

3.80.108.1. Executing ABC.

3.80.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$53215$abc$43618$abc$33731$u1.u0.pid_ld_en, synchronously reset by !\rst_i
Extracted 27 gates and 37 wires to a netlist network with 10 inputs and 15 outputs.

3.80.109.1. Executing ABC.

3.80.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54530$abc$42819$abc$35944$u4.u1.we2, synchronously reset by !\rst_i
Extracted 152 gates and 203 wires to a netlist network with 51 inputs and 88 outputs.

3.80.110.1. Executing ABC.

3.80.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$54690$abc$44846$abc$33241$flatten\u4.$verific$n286$3819, synchronously reset by !\rst_i
Extracted 18 gates and 36 wires to a netlist network with 18 inputs and 14 outputs.

3.80.111.1. Executing ABC.

3.80.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$59836$lo039
Extracted 26 gates and 28 wires to a netlist network with 2 inputs and 6 outputs.

3.80.112.1. Executing ABC.

3.80.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54750$abc$44906$abc$31437$auto$opt_dff.cc:219:make_patterns_logic$9550, synchronously reset by $abc$62230$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.113.1. Executing ABC.

3.80.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54755$abc$44911$abc$31430$auto$opt_dff.cc:219:make_patterns_logic$9547, synchronously reset by $abc$62230$abc$51761$abc$41199$abc$31422$auto$opt_dff.cc:253:combine_resets$9532
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

3.80.114.1. Executing ABC.

3.80.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54886$abc$44916$abc$32532$auto$opt_dff.cc:219:make_patterns_logic$9852, synchronously reset by !\rst_i
Extracted 64 gates and 88 wires to a netlist network with 24 inputs and 11 outputs.

3.80.115.1. Executing ABC.

3.80.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54760$abc$43784$abc$35290$auto$opt_dff.cc:194:make_patterns_logic$9584, synchronously reset by !\rst_i
Extracted 125 gates and 187 wires to a netlist network with 62 inputs and 33 outputs.

3.80.116.1. Executing ABC.

3.80.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, synchronously reset by $abc$54954$abc$44987$abc$30593$auto$opt_dff.cc:253:combine_resets$30305
Extracted 577 gates and 989 wires to a netlist network with 412 inputs and 29 outputs.

3.80.117.1. Executing ABC.

3.80.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55548$abc$45606$abc$31230$flatten\u0.\u0.$verific$n165$8660, synchronously reset by $abc$55548$abc$45606$abc$31230$flatten\u0.\u0.$verific$n154$8658
Extracted 32 gates and 45 wires to a netlist network with 13 inputs and 23 outputs.

3.80.118.1. Executing ABC.

3.80.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55590$abc$45857$abc$31635$auto$opt_dff.cc:219:make_patterns_logic$9904
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.80.119.1. Executing ABC.

3.80.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59836$lo289, synchronously reset by $abc$59836$lo287
Extracted 41 gates and 45 wires to a netlist network with 4 inputs and 12 outputs.

3.80.120.1. Executing ABC.

3.80.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55664$abc$45657$abc$36835$u4.u1.we0, synchronously reset by !\rst_i
Extracted 174 gates and 297 wires to a netlist network with 123 inputs and 123 outputs.

3.80.121.1. Executing ABC.

3.80.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59836$lo288, synchronously reset by $abc$55867$abc$45931$abc$31709$auto$opt_dff.cc:253:combine_resets$9963
Extracted 15 gates and 18 wires to a netlist network with 3 inputs and 5 outputs.

3.80.122.1. Executing ABC.

3.80.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55884$abc$42115$abc$37070$u4.u0.we2, synchronously reset by !\rst_i
Extracted 151 gates and 205 wires to a netlist network with 54 inputs and 90 outputs.

3.80.123.1. Executing ABC.

3.80.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56048$abc$45947$abc$38848$u1.u2.fill_buf0
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.80.124.1. Executing ABC.

3.80.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59836$lo242
Extracted 64 gates and 129 wires to a netlist network with 65 inputs and 32 outputs.

3.80.125.1. Executing ABC.

3.80.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56227$abc$46259$abc$33051$auto$opt_dff.cc:194:make_patterns_logic$9651, synchronously reset by !\rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 5 outputs.

3.80.126.1. Executing ABC.

3.80.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 551 gates and 937 wires to a netlist network with 386 inputs and 123 outputs.

3.80.127.1. Executing ABC.

3.80.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$59836$lo096
Extracted 40 gates and 75 wires to a netlist network with 35 inputs and 33 outputs.

3.80.128.1. Executing ABC.

3.80.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56282$abc$46319$abc$37411$auto$opt_dff.cc:194:make_patterns_logic$9730, synchronously reset by !\rst_i
Extracted 126 gates and 189 wires to a netlist network with 63 inputs and 34 outputs.

3.80.129.1. Executing ABC.

3.80.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56409$abc$46446$abc$35127$auto$opt_dff.cc:194:make_patterns_logic$9588, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.80.130.1. Executing ABC.

3.80.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$64459$lo3
Extracted 26 gates and 28 wires to a netlist network with 2 inputs and 6 outputs.

3.80.131.1. Executing ABC.

3.80.132. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56569$abc$47249$abc$35449$auto$opt_dff.cc:194:make_patterns_logic$9565, synchronously reset by !$abc$54147$lo23
Extracted 195 gates and 226 wires to a netlist network with 31 inputs and 40 outputs.

3.80.132.1. Executing ABC.

3.80.133. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56770$abc$47441$abc$36505$auto$opt_dff.cc:194:make_patterns_logic$9638, synchronously reset by !$abc$65947$lo19
Extracted 229 gates and 283 wires to a netlist network with 54 inputs and 88 outputs.

3.80.133.1. Executing ABC.

3.80.134. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57016$abc$47674$abc$37570$auto$opt_dff.cc:194:make_patterns_logic$9711, synchronously reset by !$abc$63985$lo23
Extracted 229 gates and 277 wires to a netlist network with 48 inputs and 82 outputs.

3.80.134.1. Executing ABC.

3.80.135. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58504$abc$48758$abc$34004$auto$opt_dff.cc:194:make_patterns_logic$9515, synchronously reset by !\rst_i
Extracted 130 gates and 197 wires to a netlist network with 67 inputs and 33 outputs.

3.80.135.1. Executing ABC.

3.80.136. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58635$abc$43404$abc$34691$u4.u3.we0, synchronously reset by !\rst_i
Extracted 158 gates and 259 wires to a netlist network with 101 inputs and 109 outputs.

3.80.136.1. Executing ABC.

3.80.137. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57263$abc$46133$abc$36314$auto$opt_dff.cc:194:make_patterns_logic$9657, synchronously reset by !\rst_i
Extracted 126 gates and 189 wires to a netlist network with 63 inputs and 34 outputs.

3.80.137.1. Executing ABC.

3.80.138. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57389$abc$47987$abc$31892$auto$opt_dff.cc:194:make_patterns_logic$9578, synchronously reset by !\rst_i
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

3.80.138.1. Executing ABC.

3.80.139. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$57399$abc$47913$abc$33083$flatten\u4.$verific$n342$3822, synchronously reset by !\rst_i
Extracted 51 gates and 87 wires to a netlist network with 36 inputs and 36 outputs.

3.80.139.1. Executing ABC.

3.80.140. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58917$abc$48971$abc$31915$auto$opt_dff.cc:219:make_patterns_logic$9801, synchronously reset by $abc$58917$abc$48971$abc$31915$auto$opt_dff.cc:253:combine_resets$9788
Extracted 91 gates and 117 wires to a netlist network with 26 inputs and 17 outputs.

3.80.140.1. Executing ABC.

3.80.141. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58835$abc$48889$abc$38848$u1.u2.fill_buf1
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.80.141.1. Executing ABC.

3.80.142. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, synchronously reset by $abc$57471$abc$47997$abc$38848$flatten\u0.\u0.$verific$n266$8679
Extracted 27 gates and 29 wires to a netlist network with 2 inputs and 5 outputs.

3.80.142.1. Executing ABC.

3.80.143. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$54147$abc$42433$abc$35711$u4.u2.we0, synchronously reset by !\rst_i
Extracted 170 gates and 283 wires to a netlist network with 113 inputs and 115 outputs.

3.80.143.1. Executing ABC.

3.80.144. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57499$abc$44720$abc$34199$auto$opt_dff.cc:194:make_patterns_logic$9511, synchronously reset by !\rst_i
Extracted 126 gates and 189 wires to a netlist network with 63 inputs and 34 outputs.

3.80.144.1. Executing ABC.

3.80.145. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57625$abc$44448$abc$34929$u4.u2.we2, synchronously reset by !\rst_i
Extracted 163 gates and 223 wires to a netlist network with 60 inputs and 101 outputs.

3.80.145.1. Executing ABC.

3.80.146. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59010$abc$49064$abc$33806$u4.u3.we2, synchronously reset by !\rst_i
Extracted 159 gates and 221 wires to a netlist network with 62 inputs and 97 outputs.

3.80.146.1. Executing ABC.

3.80.147. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$62706$abc$52086$abc$48025$abc$32764$u1.u0.data_valid_d, synchronously reset by $abc$64459$abc$54448$abc$48025$abc$33731$u1.u0.crc16_clr
Extracted 49 gates and 59 wires to a netlist network with 10 inputs and 9 outputs.

3.80.147.1. Executing ABC.

3.80.148. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57844$abc$48093$abc$33272$auto$opt_dff.cc:194:make_patterns_logic$9764
Extracted 629 gates and 1019 wires to a netlist network with 390 inputs and 256 outputs.

3.80.148.1. Executing ABC.

3.80.149. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 2038 gates and 3029 wires to a netlist network with 991 inputs and 649 outputs.

3.80.149.1. Executing ABC.

yosys> opt_ffinv

3.81. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 231 inverters.

yosys> opt -sat

3.82. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.82.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~17 debug messages>

yosys> opt_merge -nomux

3.82.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~1005 debug messages>
Removed a total of 335 cells.

yosys> opt_muxtree

3.82.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.82.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.82.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.82.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 151 unused cells and 57484 unused wires.
<suppressed ~509 debug messages>

yosys> opt_expr

3.82.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.82.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.82.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.82.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.82.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.82.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.82.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.82.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.83. Executing BMUXMAP pass.

yosys> demuxmap

3.84. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_ZjGVYi/abc_tmp_1.scr

3.85. Executing ABC pass (technology mapping using ABC).

3.85.1. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Extracted 6717 gates and 8377 wires to a netlist network with 1660 inputs and 1287 outputs.

3.85.1.1. Executing ABC.
DE:   #PIs = 1660  #Luts =  2333  Max Lvl =  12  Avg Lvl =   3.97  [   0.70 sec. at Pass 0]
DE:   #PIs = 1660  #Luts =  2157  Max Lvl =  11  Avg Lvl =   3.56  [  19.80 sec. at Pass 1]
DE:   #PIs = 1660  #Luts =  2120  Max Lvl =  11  Avg Lvl =   3.55  [   5.56 sec. at Pass 2]
DE:   #PIs = 1660  #Luts =  2113  Max Lvl =  11  Avg Lvl =   3.49  [   6.06 sec. at Pass 3]
DE:   #PIs = 1660  #Luts =  2105  Max Lvl =  11  Avg Lvl =   3.51  [   4.56 sec. at Pass 4]
DE:   #PIs = 1660  #Luts =  2101  Max Lvl =  11  Avg Lvl =   3.53  [   5.64 sec. at Pass 5]
DE:   #PIs = 1660  #Luts =  2101  Max Lvl =  10  Avg Lvl =   3.53  [   6.29 sec. at Pass 6]
DE:   #PIs = 1660  #Luts =  2092  Max Lvl =  11  Avg Lvl =   3.48  [   5.01 sec. at Pass 7]
DE:   #PIs = 1660  #Luts =  2092  Max Lvl =  11  Avg Lvl =   3.48  [   4.11 sec. at Pass 8]
DE:   #PIs = 1660  #Luts =  2088  Max Lvl =  11  Avg Lvl =   3.51  [   6.47 sec. at Pass 9]
DE:   #PIs = 1660  #Luts =  2083  Max Lvl =  11  Avg Lvl =   3.50  [  10.02 sec. at Pass 10]
DE:   #PIs = 1660  #Luts =  2082  Max Lvl =  11  Avg Lvl =   3.71  [   5.47 sec. at Pass 11]
DE:   #PIs = 1660  #Luts =  2079  Max Lvl =  10  Avg Lvl =   3.71  [   4.39 sec. at Pass 12]
DE:   #PIs = 1660  #Luts =  2074  Max Lvl =  10  Avg Lvl =   3.47  [   6.13 sec. at Pass 13]
DE:   #PIs = 1660  #Luts =  2073  Max Lvl =  10  Avg Lvl =   3.42  [   5.20 sec. at Pass 14]
DE:   #PIs = 1660  #Luts =  2072  Max Lvl =  10  Avg Lvl =   3.42  [   9.39 sec. at Pass 15]
DE:   #PIs = 1660  #Luts =  2069  Max Lvl =  10  Avg Lvl =   3.42  [   1.77 sec. at Pass 16]

yosys> opt_expr

3.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.88. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.89. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.91. Executing OPT_SHARE pass.

yosys> opt_dff

3.92. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 7562 unused wires.
<suppressed ~74 debug messages>

yosys> opt_expr

3.94. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.95. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 7 inverters.

yosys> stat

3.96. Printing statistics.

=== usbf_top ===

   Number of wires:               4354
   Number of wire bits:          12129
   Number of public wires:        1099
   Number of public wire bits:    8657
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3791
     $_DFFE_PP_                    264
     $_DFF_P_                      451
     $_SDFFE_PN0P_                 525
     $_SDFFE_PN1P_                 228
     $_SDFFE_PP0N_                   1
     $_SDFFE_PP0P_                 154
     $_SDFF_PN0_                     9
     $_SDFF_PP0_                    76
     $lut                         2066
     adder_carry                    17


yosys> shregmap -minlen 8 -maxlen 20

3.97. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.98. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.99. Printing statistics.

=== usbf_top ===

   Number of wires:               6259
   Number of wire bits:          14034
   Number of public wires:        1099
   Number of public wire bits:    8657
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5692
     $_DFFE_PP0P_                  264
     $_DFF_P_                     1444
     $_MUX_                       1901
     $lut                         2066
     adder_carry                    17


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.100. Executing TECHMAP pass (map to technology primitives).

3.100.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.100.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.100.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~4174 debug messages>

yosys> opt_expr -mux_undef

3.101. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~42796 debug messages>

yosys> simplemap

3.102. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~22317 debug messages>
Removed a total of 7439 cells.

yosys> opt_dff -nodffe -nosdff

3.105. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 2 unused cells and 10285 unused wires.
<suppressed ~3 debug messages>

yosys> opt -nodffe -nosdff

3.107. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.107.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1446 debug messages>

yosys> opt_merge -nomux

3.107.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.107.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.107.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.107.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.107.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 258 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.107.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.107.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.107.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.107.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.107.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.107.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.107.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

3.107.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_ZjGVYi/abc_tmp_2.scr

3.108. Executing ABC pass (technology mapping using ABC).

3.108.1. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Extracted 10184 gates and 11883 wires to a netlist network with 1697 inputs and 1547 outputs.

3.108.1.1. Executing ABC.
DE:   #PIs = 1697  #Luts =  2657  Max Lvl =  11  Avg Lvl =   4.04  [   0.71 sec. at Pass 0]
DE:   #PIs = 1697  #Luts =  2656  Max Lvl =  11  Avg Lvl =   3.89  [  27.32 sec. at Pass 1]
DE:   #PIs = 1697  #Luts =  2639  Max Lvl =  11  Avg Lvl =   3.86  [   7.74 sec. at Pass 2]
DE:   #PIs = 1697  #Luts =  2624  Max Lvl =  11  Avg Lvl =   4.28  [   8.77 sec. at Pass 3]
DE:   #PIs = 1697  #Luts =  2624  Max Lvl =  11  Avg Lvl =   4.28  [   8.47 sec. at Pass 4]
DE:   #PIs = 1697  #Luts =  2624  Max Lvl =  11  Avg Lvl =   4.28  [   8.64 sec. at Pass 5]
DE:   #PIs = 1697  #Luts =  2624  Max Lvl =  11  Avg Lvl =   4.28  [   9.33 sec. at Pass 6]
DE:   #PIs = 1697  #Luts =  2623  Max Lvl =  11  Avg Lvl =   3.83  [   1.95 sec. at Pass 7]

yosys> opt_expr

3.109. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.111. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.112. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.113. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.114. Executing OPT_SHARE pass.

yosys> opt_dff

3.115. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.116. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 9865 unused wires.
<suppressed ~33 debug messages>

yosys> opt_expr

3.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.118. Executing HIERARCHY pass (managing design hierarchy).

3.118.1. Analyzing design hierarchy..
Top module:  \usbf_top

3.118.2. Analyzing design hierarchy..
Top module:  \usbf_top
Removed 0 unused modules.

yosys> stat

3.119. Printing statistics.

=== usbf_top ===

   Number of wires:               4914
   Number of wire bits:          12672
   Number of public wires:        1067
   Number of public wire bits:    8625
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4348
     $lut                         2623
     adder_carry                    17
     dffsre                       1708


yosys> opt_clean -purge

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 897 unused wires.
<suppressed ~897 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.121. Executing Verilog backend.
Dumping module `\usbf_top'.

Warnings: 18 unique messages, 18 total
End of script. Logfile hash: 808e04f748, CPU: user 97.63s system 8.84s, MEM: 153.93 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 94% 6x abc (1037 sec), 1% 50x opt_expr (20 sec), ...
real 486.25
user 994.39
sys 107.00
