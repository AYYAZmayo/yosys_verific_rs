
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.70
 Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k usbf_pa.v usbf_mem_arb.v usbf_defines.v usbf_wb.v usbf_utmi_ls.v usbf_crc5.v usbf_utmi_if.v usbf_crc16.v usbf_ep_rf.v usbf_rf.v usbf_pl.v usbf_pd.v usbf_ep_rf_dummy.v usbf_idma.v usbf_pe.v usbf_top.v

yosys> verific -vlog2k usbf_pa.v usbf_mem_arb.v usbf_defines.v usbf_wb.v usbf_utmi_ls.v usbf_crc5.v usbf_utmi_if.v usbf_crc16.v usbf_ep_rf.v usbf_rf.v usbf_pl.v usbf_pd.v usbf_ep_rf_dummy.v usbf_idma.v usbf_pe.v usbf_top.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pa.v'
VERIFIC-INFO [VERI-1328] usbf_pa.v:94: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pa.v:94: back to file 'usbf_pa.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_mem_arb.v'
VERIFIC-INFO [VERI-1328] usbf_mem_arb.v:90: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_mem_arb.v:90: back to file 'usbf_mem_arb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_defines.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_wb.v'
VERIFIC-INFO [VERI-1328] usbf_wb.v:95: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_wb.v:95: back to file 'usbf_wb.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_ls.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_ls.v:99: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_ls.v:99: back to file 'usbf_utmi_ls.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc5.v'
VERIFIC-INFO [VERI-1328] usbf_crc5.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc5.v:76: back to file 'usbf_crc5.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_utmi_if.v'
VERIFIC-INFO [VERI-1328] usbf_utmi_if.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_utmi_if.v:101: back to file 'usbf_utmi_if.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_crc16.v'
VERIFIC-INFO [VERI-1328] usbf_crc16.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_crc16.v:76: back to file 'usbf_crc16.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf.v:93: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf.v:93: back to file 'usbf_ep_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_rf.v'
VERIFIC-INFO [VERI-1328] usbf_rf.v:108: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_rf.v:108: back to file 'usbf_rf.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pl.v'
VERIFIC-INFO [VERI-1328] usbf_pl.v:100: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pl.v:100: back to file 'usbf_pl.v'
VERIFIC-INFO [VERI-2561] usbf_pl.v:384: undeclared symbol 'send_zero_length', assumed default net type 'wire'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pd.v'
VERIFIC-INFO [VERI-1328] usbf_pd.v:101: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pd.v:101: back to file 'usbf_pd.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_ep_rf_dummy.v'
VERIFIC-INFO [VERI-1328] usbf_ep_rf_dummy.v:76: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_ep_rf_dummy.v:76: back to file 'usbf_ep_rf_dummy.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_idma.v'
VERIFIC-INFO [VERI-1328] usbf_idma.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_idma.v:110: back to file 'usbf_idma.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_pe.v'
VERIFIC-INFO [VERI-1328] usbf_pe.v:116: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_pe.v:116: back to file 'usbf_pe.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbf_top.v'
VERIFIC-INFO [VERI-1328] usbf_top.v:110: analyzing included file 'usbf_defines.v'
VERIFIC-INFO [VERI-2320] usbf_top.v:110: back to file 'usbf_top.v'

yosys> synth_rs -top usbf_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.69

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v +/rapidsilicon/genesis/dsp_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Generating RTLIL representation for module `\RS_DSP3'.
Generating RTLIL representation for module `\RS_DSP3_MULT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_params'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top usbf_top

3.4. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] usbf_top.v:112: compiling module 'usbf_top'
VERIFIC-INFO [VERI-1018] usbf_utmi_if.v:103: compiling module 'usbf_utmi_if'
VERIFIC-INFO [VERI-1018] usbf_utmi_ls.v:101: compiling module 'usbf_utmi_ls'
VERIFIC-WARNING [VERI-1173] usbf_utmi_ls.v:448: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pl.v:102: compiling module 'usbf_pl'
VERIFIC-INFO [VERI-1018] usbf_pd.v:103: compiling module 'usbf_pd'
VERIFIC-INFO [VERI-1018] usbf_crc5.v:84: compiling module 'usbf_crc5'
VERIFIC-INFO [VERI-1018] usbf_crc16.v:84: compiling module 'usbf_crc16'
VERIFIC-WARNING [VERI-1173] usbf_pd.v:373: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pa.v:96: compiling module 'usbf_pa'
VERIFIC-WARNING [VERI-1173] usbf_pa.v:314: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_idma.v:112: compiling module 'usbf_idma'
VERIFIC-WARNING [VERI-1209] usbf_idma.v:289: expression size 17 truncated to fit in target size 15
VERIFIC-WARNING [VERI-1173] usbf_idma.v:462: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_pe.v:118: compiling module 'usbf_pe'
VERIFIC-WARNING [VERI-1173] usbf_pe.v:438: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:446: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:453: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:460: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:479: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:424: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:493: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:532: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:501: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_pe.v:845: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_mem_arb.v:92: compiling module 'usbf_mem_arb'
VERIFIC-INFO [VERI-1018] usbf_rf.v:111: compiling module 'usbf_rf'
VERIFIC-WARNING [VERI-1173] usbf_rf.v:307: synthesis - simulation differences may occur when using full_case directive
VERIFIC-WARNING [VERI-1173] usbf_rf.v:391: synthesis - simulation differences may occur when using full_case directive
VERIFIC-INFO [VERI-1018] usbf_ep_rf.v:96: compiling module 'usbf_ep_rf'
VERIFIC-INFO [VERI-1018] usbf_ep_rf_dummy.v:79: compiling module 'usbf_ep_rf_dummy'
VERIFIC-INFO [VERI-1018] usbf_wb.v:97: compiling module 'usbf_wb'
VERIFIC-WARNING [VERI-1173] usbf_wb.v:209: synthesis - simulation differences may occur when using full_case directive
Importing module usbf_top.
Importing module usbf_mem_arb.
Importing module usbf_pl.
Importing module usbf_idma.
Importing module usbf_pa.
Importing module usbf_crc16.
Importing module usbf_pd.
Importing module usbf_crc5.
Importing module usbf_pe.
Importing module usbf_rf.
Importing module usbf_ep_rf.
Importing module usbf_ep_rf_dummy.
Importing module usbf_utmi_if.
Importing module usbf_utmi_ls.
Importing module usbf_wb.

3.4.1. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls

3.4.2. Analyzing design hierarchy..
Top module:  \usbf_top
Used module:     \usbf_wb
Used module:     \usbf_rf
Used module:         \usbf_ep_rf_dummy
Used module:         \usbf_ep_rf
Used module:     \usbf_mem_arb
Used module:     \usbf_pl
Used module:         \usbf_pe
Used module:         \usbf_idma
Used module:         \usbf_pa
Used module:             \usbf_crc16
Used module:         \usbf_pd
Used module:             \usbf_crc5
Used module:     \usbf_utmi_if
Used module:         \usbf_utmi_ls
Removed 0 unused modules.

yosys> proc

3.5. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.5.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.5.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_wb.
<suppressed ~1 debug messages>
Optimizing module usbf_utmi_ls.
<suppressed ~6 debug messages>
Optimizing module usbf_utmi_if.
<suppressed ~1 debug messages>
Optimizing module usbf_ep_rf_dummy.
<suppressed ~4 debug messages>
Optimizing module usbf_ep_rf.
<suppressed ~15 debug messages>
Optimizing module usbf_rf.
<suppressed ~5 debug messages>
Optimizing module usbf_pe.
<suppressed ~10 debug messages>
Optimizing module usbf_crc5.
Optimizing module usbf_pd.
<suppressed ~3 debug messages>
Optimizing module usbf_crc16.
Optimizing module usbf_pa.
<suppressed ~1 debug messages>
Optimizing module usbf_idma.
<suppressed ~7 debug messages>
Optimizing module usbf_pl.
<suppressed ~4 debug messages>
Optimizing module usbf_mem_arb.
Optimizing module usbf_top.

yosys> bmuxmap

3.6. Executing BMUXMAP pass.

yosys> demuxmap

3.7. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.8. Executing FLATTEN pass (flatten design).
Deleting now unused module usbf_crc16.
Deleting now unused module usbf_crc5.
Deleting now unused module usbf_ep_rf.
Deleting now unused module usbf_ep_rf_dummy.
Deleting now unused module usbf_idma.
Deleting now unused module usbf_mem_arb.
Deleting now unused module usbf_pa.
Deleting now unused module usbf_pd.
Deleting now unused module usbf_pe.
Deleting now unused module usbf_pl.
Deleting now unused module usbf_rf.
Deleting now unused module usbf_utmi_if.
Deleting now unused module usbf_utmi_ls.
Deleting now unused module usbf_wb.
<suppressed ~29 debug messages>

yosys> bmuxmap

3.9. Executing BMUXMAP pass.

yosys> demuxmap

3.10. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic -formal

3.11. Executing TRIBUF pass.

yosys> deminout

3.12. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~47 debug messages>

yosys> opt_clean

3.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 62 unused cells and 6326 unused wires.
<suppressed ~810 debug messages>

yosys> check

3.15. Executing CHECK pass (checking for obvious problems).
Checking module usbf_top...
Found and reported 0 problems.

yosys> opt_expr

3.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~109 debug messages>

yosys> opt_merge -nomux

3.17. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

yosys> opt_muxtree

3.18. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~218 debug messages>

yosys> opt_reduce

3.19. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
    New ctrl vector for $pmux cell $flatten\u1.\u0.$verific$Select_213$usbf_pd.v:433$2857: { $flatten\u1.\u0.$verific$n584$2603 $flatten\u1.\u0.$verific$n586$2605 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_148$usbf_pa.v:382$2406: { $flatten\u1.\u1.$verific$n401$2250 $flatten\u1.\u1.$verific$n406$2255 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_154$usbf_pa.v:382$2412: { $flatten\u1.\u1.$verific$n402$2251 $flatten\u1.\u1.$verific$n403$2252 $flatten\u1.\u1.$verific$n404$2253 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_156$usbf_pa.v:382$2414: { $flatten\u1.\u1.$verific$n404$2253 $flatten\u1.\u1.$verific$n405$2254 }
    New ctrl vector for $pmux cell $flatten\u1.\u1.$verific$Select_158$usbf_pa.v:382$2415: { $flatten\u1.\u1.$verific$n404$2253 $flatten\u1.\u1.$verific$n405$2254 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_273$usbf_idma.v:631$2202: { $flatten\u1.\u2.$verific$n1445$1943 $flatten\u1.\u2.$verific$n1463$1951 }
    New ctrl vector for $pmux cell $flatten\u1.\u2.$verific$Select_277$usbf_idma.v:631$2206: { $flatten\u1.\u2.$verific$n1446$1944 $flatten\u1.\u2.$verific$n1447$1945 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$Select_688$usbf_pe.v:1091$3726: { $flatten\u1.\u3.$verific$n1654$3138 $flatten\u1.\u3.$verific$n1660$3144 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_115$usbf_pe.v:485$3345: { $flatten\u1.\u3.$verific$n253$2923 $auto$opt_reduce.cc:134:opt_pmux$9256 $flatten\u1.\u3.$verific$n258$2927 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_166$usbf_pe.v:487$3399: { $flatten\u1.\u3.$verific$n275$2935 $flatten\u1.\u3.$verific$n283$2939 $flatten\u1.\u3.$verific$n285$2941 $auto$opt_reduce.cc:134:opt_pmux$9260 $auto$opt_reduce.cc:134:opt_pmux$9258 $flatten\u1.\u3.$verific$n311$2952 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_172$usbf_pe.v:498$3405: { $flatten\u1.\u3.$verific$n319$2954 $flatten\u1.\u3.$verific$n320$2955 $flatten\u1.\u3.$verific$n321$2956 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3408: $auto$opt_reduce.cc:134:opt_pmux$9262
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_267$usbf_pe.v:539$3422: { $flatten\u1.\u3.$verific$n423$2957 $auto$opt_reduce.cc:134:opt_pmux$9268 $auto$opt_reduce.cc:134:opt_pmux$9266 $auto$opt_reduce.cc:134:opt_pmux$9264 $flatten\u1.\u3.$verific$n311$2952 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_686$usbf_pe.v:1091$3724: { $flatten\u1.\u3.$verific$n1654$3138 $flatten\u1.\u3.$verific$n1660$3144 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_689$usbf_pe.v:1091$3727: { $flatten\u1.\u3.$verific$n1654$3138 $flatten\u1.\u3.$verific$n1656$3140 $flatten\u1.\u3.$verific$n1657$3141 $flatten\u1.\u3.$verific$n1658$3142 $flatten\u1.\u3.$verific$n1659$3143 $flatten\u1.\u3.$verific$n1660$3144 $flatten\u1.\u3.$verific$n1661$3145 $flatten\u1.\u3.$verific$n1662$3146 $auto$opt_reduce.cc:134:opt_pmux$9270 }
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$3718: $flatten\u1.\u3.$verific$n194$2918
    New ctrl vector for $pmux cell $flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3323: $flatten\u1.\u3.$verific$n183$2916
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_333$usbf_utmi_ls.v:650$9045: { $flatten\u0.\u0.$verific$n1011$8722 $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1013$8724 $flatten\u0.\u0.$verific$n1014$8725 $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1017$8728 $flatten\u0.\u0.$verific$n1020$8731 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_336$usbf_utmi_ls.v:650$9048: { $flatten\u0.\u0.$verific$n1028$8738 $flatten\u0.\u0.$verific$n1012$8723 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_339$usbf_utmi_ls.v:650$9051: { $flatten\u0.\u0.$verific$n1031$8740 $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1017$8728 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_345$usbf_utmi_ls.v:650$9056: { $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1038$8743 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_348$usbf_utmi_ls.v:650$9059: { $flatten\u0.\u0.$verific$n1040$8744 $flatten\u0.\u0.$verific$n1014$8725 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_351$usbf_utmi_ls.v:650$9062: { $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1013$8724 $flatten\u0.\u0.$verific$n1019$8730 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_353$usbf_utmi_ls.v:650$9064: { $flatten\u0.\u0.$verific$n1012$8723 $flatten\u0.\u0.$verific$n1013$8724 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_356$usbf_utmi_ls.v:650$9067: { $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1064$8749 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_358$usbf_utmi_ls.v:650$9069: { $flatten\u0.\u0.$verific$n1015$8726 $flatten\u0.\u0.$verific$n1024$8735 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_360$usbf_utmi_ls.v:650$9071: { $flatten\u0.\u0.$verific$n1017$8728 $flatten\u0.\u0.$verific$n1020$8731 }
    New ctrl vector for $pmux cell $flatten\u0.\u0.$verific$Select_367$usbf_utmi_ls.v:650$9078: { $flatten\u0.\u0.$verific$n1022$8733 $flatten\u0.\u0.$verific$n1023$8734 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_77$usbf_wb.v:278$9175: { $flatten\u5.$verific$n347$9104 $auto$opt_reduce.cc:134:opt_pmux$9272 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_79$usbf_wb.v:278$9177: { $flatten\u5.$verific$n347$9104 $flatten\u5.$verific$n348$9105 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$Select_84$usbf_wb.v:278$9182: { $auto$opt_reduce.cc:134:opt_pmux$9274 $flatten\u5.$verific$n350$9107 }
    New ctrl vector for $pmux cell $flatten\u5.$verific$select_80$usbf_wb.v:278$9178: { $flatten\u5.$verific$n347$9104 $auto$opt_reduce.cc:134:opt_pmux$9276 $flatten\u5.$verific$n350$9107 $flatten\u5.$verific$n351$9108 $flatten\u5.$verific$n352$9109 }
  Optimizing cells in module \usbf_top.
Performed a total of 32 changes.

yosys> opt_merge

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.21. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.22. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$VStatus_r_reg$usbf_top.v:269$24 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$wb_data_o_reg$usbf_wb.v:166$9132 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u5.$verific$state_reg$usbf_wb.v:198$9151 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u3.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u2.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u1.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_left_reg$usbf_ep_rf.v:433$8462 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.\u0.$verific$buf0_orig_m3_reg$usbf_ep_rf.v:449$8477 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_stat_r_reg$usbf_rf.v:322$4164 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_reg$usbf_rf.v:345$4179 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4177 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4207 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4206 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$8982 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$8849 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$rx_data_reg$usbf_utmi_if.v:204$8571 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4195 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$dout_reg$usbf_rf.v:412$4210 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4341 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4407 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4374 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$8577 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$tx_data_to_cnt_reg$usbf_pe.v:768$3594 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$token_pid_sel_reg$usbf_pe.v:414$3317 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$this_dpid_reg$usbf_pe.v:539$3423 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$3648 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$size_next_r_reg$usbf_pe.v:665$3522 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$rx_ack_to_cnt_reg$usbf_pe.v:751$3584 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$next_dpid_reg$usbf_pe.v:487$3400 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_sizeb_reg$usbf_pe.v:654$3515 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$new_size_reg$usbf_pe.v:657$3518 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$idin_reg$usbf_pe.v:704$3556 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_reg$usbf_pe.v:605$3468 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u3.$verific$adr_r_reg$usbf_pe.v:662$3520 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$2169 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$2105 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$2089 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rx_data_st_r_reg$usbf_idma.v:265$2042 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$2148 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$2146 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$last_buf_adr_reg$usbf_idma.v:289$2060 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$2135 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cw_reg$usbf_idma.v:286$2056 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u2.$verific$adr_cb_reg$usbf_idma.v:307$2072 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$2387 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$2343 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2696 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2694 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2812 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2647 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2754 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2753 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2752 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2767 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1356 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1349 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$hms_cnt_reg$usbf_pl.v:321$1363 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1336 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$8990 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$ps_cnt_reg$usbf_utmi_ls.v:320$8894 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps_reg$usbf_utmi_ls.v:358$8937 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$8946 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$8958 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$line_state_r_reg$usbf_utmi_ls.v:265$8853 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$8906 ($aldff) from module usbf_top.
Removing never-active async load on $flatten\u0.\u0.$verific$idle_cnt1_next_reg$usbf_utmi_ls.v:332$8909 ($aldff) from module usbf_top.

yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 33 unused cells and 158 unused wires.
<suppressed ~34 debug messages>

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_muxtree

3.25. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~218 debug messages>

yosys> opt_reduce

3.26. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.28. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.29. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.31. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 2

yosys> fsm -encoding binary

3.32. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.32.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking usbf_top.u0.u0.OpMode as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u1.u0.state.
Not marking usbf_top.u1.u3.next_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking usbf_top.u1.u3.this_dpid as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register usbf_top.u5.state.

yosys> fsm_extract

3.32.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\u1.u0.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u1.\u0.$verific$state_reg$usbf_pd.v:360$2812
  root of input selection tree: $flatten\u1.\u0.$verific$n458$2627
  found reset state: 4'0001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 4'0001
  found ctrl input: $flatten\u1.\u0.$verific$n586$2605
  found ctrl input: $flatten\u1.\u0.$verific$n585$2604
  found ctrl input: $flatten\u1.\u0.$verific$n584$2603
  found ctrl input: $flatten\u1.\u0.$verific$n583$2602
  found state code: 4'0000
  found ctrl input: $flatten\u1.\u0.$verific$n496$2586
  found ctrl input: \u0.rx_active
  found ctrl input: $flatten\u1.\u0.$verific$n541$2599
  found ctrl input: $flatten\u1.\u0.$verific$n480$2578
  found ctrl input: $flatten\u1.\u0.$verific$n490$2581
  found ctrl input: $flatten\u1.\u0.$verific$n494$2584
  found ctrl input: $flatten\u1.\u0.$verific$n500$2590
  found state code: 4'1000
  found state code: 4'0100
  found ctrl input: $flatten\u1.\u0.$verific$n473$2576
  found state code: 4'0010
  found ctrl output: $flatten\u1.\u0.$verific$n586$2605
  found ctrl output: $flatten\u1.\u0.$verific$n585$2604
  found ctrl output: $flatten\u1.\u0.$verific$n584$2603
  found ctrl output: $flatten\u1.\u0.$verific$n583$2602
  ctrl inputs: { $flatten\u1.\u0.$verific$n473$2576 $flatten\u1.\u0.$verific$n480$2578 $flatten\u1.\u0.$verific$n490$2581 $flatten\u1.\u0.$verific$n494$2584 $flatten\u1.\u0.$verific$n496$2586 $flatten\u1.\u0.$verific$n500$2590 $flatten\u1.\u0.$verific$n541$2599 \u0.rx_active \rst_i }
  ctrl outputs: { $flatten\u1.\u0.$verific$n458$2627 $flatten\u1.\u0.$verific$n583$2602 $flatten\u1.\u0.$verific$n584$2603 $flatten\u1.\u0.$verific$n585$2604 $flatten\u1.\u0.$verific$n586$2605 }
  transition:     4'0000 9'--------0 ->     4'0001 8'00010000
  transition:     4'0000 9'--------1 ->     4'0000 8'00000000
  transition:     4'1000 9'--------0 ->     4'0001 8'00010001
  transition:     4'1000 9'----0---1 ->     4'1000 8'10000001
  transition:     4'1000 9'----1--01 ->     4'0001 8'00010001
  transition:     4'1000 9'----1--11 ->     4'1000 8'10000001
  transition:     4'0100 9'--------0 ->     4'0001 8'00010010
  transition:     4'0100 9'----0-0-1 ->     4'0100 8'01000010
  transition:     4'0100 9'----1-001 ->     4'0001 8'00010010
  transition:     4'0100 9'----1-011 ->     4'0100 8'01000010
  transition:     4'0100 9'------1-1 ->     4'0001 8'00010010
  transition:     4'0010 9'--------0 ->     4'0001 8'00010100
  transition:     4'0010 9'-000-0--1 ->     4'0010 8'00100100
  transition:     4'0010 9'-000-1-01 ->     4'0001 8'00010100
  transition:     4'0010 9'-000-1-11 ->     4'0010 8'00100100
  transition:     4'0010 9'-001----1 ->     4'1000 8'10000100
  transition:     4'0010 9'-01-----1 ->     4'0100 8'01000100
  transition:     4'0010 9'-1-----01 ->     4'0001 8'00010100
  transition:     4'0010 9'-1-----11 ->     4'0010 8'00100100
  transition:     4'0001 9'--------0 ->     4'0001 8'00011000
  transition:     4'0001 9'0-------1 ->     4'0001 8'00011000
  transition:     4'0001 9'1-------1 ->     4'0010 8'00101000
Extracting FSM `\u5.state' from module `\usbf_top'.
  found $dff cell for state register: $flatten\u5.$verific$state_reg$usbf_wb.v:198$9151
  root of input selection tree: $flatten\u5.$verific$n260$9118
  found reset state: 6'000001 (guessed from mux tree)
  found ctrl input: \rst_i
  found state code: 6'000001
  found ctrl input: $flatten\u5.$verific$n352$9109
  found ctrl input: $flatten\u5.$verific$n351$9108
  found ctrl input: $flatten\u5.$verific$n350$9107
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$9272
  found ctrl input: $flatten\u5.$verific$n347$9104
  found state code: 6'000000
  found state code: 6'100000
  found state code: 6'010000
  found ctrl input: \u2.wack
  found ctrl input: $flatten\u5.$verific$n317$9102
  found ctrl input: $flatten\u5.$verific$n305$9101
  found ctrl input: $flatten\u5.$verific$n294$9097
  found ctrl input: $flatten\u5.$verific$n282$9095
  found state code: 6'000010
  found state code: 6'000100
  found state code: 6'001000
  found ctrl output: $flatten\u5.$verific$n347$9104
  found ctrl output: $flatten\u5.$verific$n348$9105
  found ctrl output: $flatten\u5.$verific$n349$9106
  found ctrl output: $flatten\u5.$verific$n350$9107
  found ctrl output: $flatten\u5.$verific$n351$9108
  found ctrl output: $flatten\u5.$verific$n352$9109
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$9272 \u2.wack $flatten\u5.$verific$n282$9095 $flatten\u5.$verific$n294$9097 $flatten\u5.$verific$n305$9101 $flatten\u5.$verific$n317$9102 \rst_i }
  ctrl outputs: { $flatten\u5.$verific$n352$9109 $flatten\u5.$verific$n351$9108 $flatten\u5.$verific$n350$9107 $flatten\u5.$verific$n349$9106 $flatten\u5.$verific$n348$9105 $flatten\u5.$verific$n347$9104 $flatten\u5.$verific$n260$9118 }
  transition:   6'000000 7'------0 ->   6'000001 12'000000000001
  transition:   6'000000 7'------1 ->   6'000000 12'000000000000
  transition:   6'100000 7'------0 ->   6'000001 12'100000000001
  transition:   6'100000 7'------1 ->   6'000001 12'100000000001
  transition:   6'010000 7'------0 ->   6'000001 12'010000000001
  transition:   6'010000 7'------1 ->   6'100000 12'010000100000
  transition:   6'001000 7'------0 ->   6'000001 12'001000000001
  transition:   6'001000 7'------1 ->   6'010000 12'001000010000
  transition:   6'000100 7'------0 ->   6'000001 12'000100000001
  transition:   6'000100 7'-0----1 ->   6'000100 12'000100000100
  transition:   6'000100 7'-1----1 ->   6'010000 12'000100010000
  transition:   6'000010 7'------0 ->   6'000001 12'000010000001
  transition:   6'000010 7'-0----1 ->   6'000010 12'000010000010
  transition:   6'000010 7'-1----1 ->   6'010000 12'000010010000
  transition:   6'000001 7'------0 ->   6'000001 12'000001000001
  transition:   6'000001 7'--00001 ->   6'000001 12'000001000001
  transition:   6'000001 7'--10001 ->   6'000010 12'000001000010
  transition:   6'000001 7'---1001 ->   6'000100 12'000001000100
  transition:   6'000001 7'----101 ->   6'001000 12'000001001000
  transition:   6'000001 7'-----11 ->   6'001000 12'000001001000

yosys> fsm_opt

3.32.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u5.state$9283' from module `\usbf_top'.
  Merging pattern 7'------0 and 7'------1 from group (1 6 12'100000000001).
  Merging pattern 7'------1 and 7'------0 from group (1 6 12'100000000001).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$9272.
Optimizing FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top'.

yosys> opt_clean

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 29 unused cells and 29 unused wires.
<suppressed ~32 debug messages>

yosys> fsm_opt

3.32.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top'.
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [0].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [1].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [2].
  Removing unused output signal $flatten\u1.\u0.$verific$n458$2627 [3].
Optimizing FSM `$fsm$\u5.state$9283' from module `\usbf_top'.
  Removing unused output signal $flatten\u5.$verific$n260$9118 [0].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [1].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [2].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [3].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [4].
  Removing unused output signal $flatten\u5.$verific$n260$9118 [5].
  Removing unused output signal $flatten\u5.$verific$n351$9108.
  Removing unused output signal $flatten\u5.$verific$n352$9109.

yosys> fsm_recode -encoding binary

3.32.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  0000 -> 001
  1000 -> 010
  0100 -> 011
  0010 -> 100
  0001 -> 000
Recoding FSM `$fsm$\u5.state$9283' from module `\usbf_top' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  000000 -> 001
  100000 -> 010
  010000 -> 011
  001000 -> 100
  000100 -> 101
  000010 -> 110
  000001 -> 000

yosys> fsm_info

3.32.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\u1.u0.state$9277' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u1.u0.state$9277 (\u1.u0.state):

  Number of input signals:    9
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: \rst_i
    1: \u0.rx_active
    2: $flatten\u1.\u0.$verific$n541$2599
    3: $flatten\u1.\u0.$verific$n500$2590
    4: $flatten\u1.\u0.$verific$n496$2586
    5: $flatten\u1.\u0.$verific$n494$2584
    6: $flatten\u1.\u0.$verific$n490$2581
    7: $flatten\u1.\u0.$verific$n480$2578
    8: $flatten\u1.\u0.$verific$n473$2576

  Output signals:
    0: $flatten\u1.\u0.$verific$n586$2605
    1: $flatten\u1.\u0.$verific$n585$2604
    2: $flatten\u1.\u0.$verific$n584$2603
    3: $flatten\u1.\u0.$verific$n583$2602

  State encoding:
    0:      3'001
    1:      3'010
    2:      3'011
    3:      3'100
    4:      3'000  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'--------1   ->     0 4'0000
      1:     0 9'--------0   ->     4 4'0000
      2:     1 9'----1--11   ->     1 4'0001
      3:     1 9'----0---1   ->     1 4'0001
      4:     1 9'--------0   ->     4 4'0001
      5:     1 9'----1--01   ->     4 4'0001
      6:     2 9'----1-011   ->     2 4'0010
      7:     2 9'----0-0-1   ->     2 4'0010
      8:     2 9'--------0   ->     4 4'0010
      9:     2 9'----1-001   ->     4 4'0010
     10:     2 9'------1-1   ->     4 4'0010
     11:     3 9'-001----1   ->     1 4'0100
     12:     3 9'-01-----1   ->     2 4'0100
     13:     3 9'-000-1-11   ->     3 4'0100
     14:     3 9'-1-----11   ->     3 4'0100
     15:     3 9'-000-0--1   ->     3 4'0100
     16:     3 9'--------0   ->     4 4'0100
     17:     3 9'-000-1-01   ->     4 4'0100
     18:     3 9'-1-----01   ->     4 4'0100
     19:     4 9'1-------1   ->     3 4'1000
     20:     4 9'--------0   ->     4 4'1000
     21:     4 9'0-------1   ->     4 4'1000

-------------------------------------

FSM `$fsm$\u5.state$9283' from module `usbf_top':
-------------------------------------

  Information on FSM $fsm$\u5.state$9283 (\u5.state):

  Number of input signals:    6
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: \rst_i
    1: $flatten\u5.$verific$n317$9102
    2: $flatten\u5.$verific$n305$9101
    3: $flatten\u5.$verific$n294$9097
    4: $flatten\u5.$verific$n282$9095
    5: \u2.wack

  Output signals:
    0: $flatten\u5.$verific$n347$9104
    1: $flatten\u5.$verific$n348$9105
    2: $flatten\u5.$verific$n349$9106
    3: $flatten\u5.$verific$n350$9107

  State encoding:
    0:      3'001
    1:      3'010
    2:      3'011
    3:      3'100
    4:      3'101
    5:      3'110
    6:      3'000  <RESET STATE>

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 6'-----1   ->     0 4'0000
      1:     0 6'-----0   ->     6 4'0000
      2:     1 6'------   ->     6 4'0000
      3:     2 6'-----1   ->     1 4'0000
      4:     2 6'-----0   ->     6 4'0000
      5:     3 6'-----1   ->     2 4'1000
      6:     3 6'-----0   ->     6 4'1000
      7:     4 6'1----1   ->     2 4'0100
      8:     4 6'0----1   ->     4 4'0100
      9:     4 6'-----0   ->     6 4'0100
     10:     5 6'1----1   ->     2 4'0010
     11:     5 6'0----1   ->     5 4'0010
     12:     5 6'-----0   ->     6 4'0010
     13:     6 6'---101   ->     3 4'0001
     14:     6 6'----11   ->     3 4'0001
     15:     6 6'--1001   ->     4 4'0001
     16:     6 6'-10001   ->     5 4'0001
     17:     6 6'-----0   ->     6 4'0001
     18:     6 6'-00001   ->     6 4'0001

-------------------------------------

yosys> fsm_map

3.32.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\u1.u0.state$9277' from module `\usbf_top'.
Mapping FSM `$fsm$\u5.state$9283' from module `\usbf_top'.

yosys> opt_expr

3.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~216 debug messages>

yosys> opt_reduce

3.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.38. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.39. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$resume_req_r_reg$usbf_top.v:292$32 ($dff) from module usbf_top (D = $verific$n46$10, Q = \resume_req_r).
Adding EN signal on $flatten\u4.\u3.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1278$8269, Q = \u4.u3.uc_dpd).
Adding EN signal on $flatten\u4.\u3.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1296$8272, Q = \u4.u3.uc_bsel).
Adding EN signal on $flatten\u4.\u3.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1733$8224, Q = \u4.u3.r2).
Adding EN signal on $flatten\u4.\u3.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n387$8133, Q = \u4.u3.ots_stop).
Adding EN signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1250$8265 [0], Q = \u4.u3.int_stat [0]).
Adding EN signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1250$8265 [1], Q = \u4.u3.int_stat [1]).
Adding EN signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1250$8265 [4], Q = \u4.u3.int_stat [4]).
Adding EN signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1250$8265 [3], Q = \u4.u3.int_stat [3]).
Adding EN signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1250$8265 [6], Q = \u4.u3.int_stat [6]).
Adding EN signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1250$8265 [2], Q = \u4.u3.int_stat [2]).
Adding EN signal on $flatten\u4.\u3.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1250$8265 [5], Q = \u4.u3.int_stat [5]).
Adding EN signal on $flatten\u4.\u3.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n461$8247, Q = \u4.u3.ienb).
Adding EN signal on $flatten\u4.\u3.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n468$8248, Q = \u4.u3.iena).
Adding EN signal on $flatten\u4.\u3.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1715$8215, Q = \u4.u3.dma_req_r).
Adding EN signal on $flatten\u4.\u3.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1431$8280, Q = \u4.u3.dma_out_cnt).
Adding EN signal on $flatten\u4.\u3.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1566$8287, Q = \u4.u3.dma_in_cnt).
Adding EN signal on $flatten\u4.\u3.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1742$8227, Q = \u4.u3.dma_ack_wr1).
Adding EN signal on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = { $flatten\u4.\u3.$verific$n373$8241 [12:9] $flatten\u4.\u3.$verific$n373$8241 [6:0] }, Q = { \u4.u3.csr1 [12:9] \u4.u3.csr1 [6:0] }).
Adding EN signal on $flatten\u4.\u3.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n373$8241 [8:7], Q = \u4.u3.csr1 [8:7]).
Adding EN signal on $flatten\u4.\u3.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n359$8240, Q = \u4.u3.csr0).
Adding EN signal on $flatten\u4.\u3.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n959$8259, Q = \u4.u3.buf1).
Adding EN signal on $flatten\u4.\u3.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n724$8256, Q = \u4.u3.buf0).
Adding EN signal on $flatten\u4.\u3.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u3.$verific$n1126$8261, Q = \u4.u3.buf0_orig).
Adding EN signal on $flatten\u4.\u2.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1278$8269, Q = \u4.u2.uc_dpd).
Adding EN signal on $flatten\u4.\u2.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1296$8272, Q = \u4.u2.uc_bsel).
Adding EN signal on $flatten\u4.\u2.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1733$8224, Q = \u4.u2.r2).
Adding EN signal on $flatten\u4.\u2.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n387$8133, Q = \u4.u2.ots_stop).
Adding EN signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1250$8265 [0], Q = \u4.u2.int_stat [0]).
Adding EN signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1250$8265 [1], Q = \u4.u2.int_stat [1]).
Adding EN signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1250$8265 [4], Q = \u4.u2.int_stat [4]).
Adding EN signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1250$8265 [3], Q = \u4.u2.int_stat [3]).
Adding EN signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1250$8265 [6], Q = \u4.u2.int_stat [6]).
Adding EN signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1250$8265 [2], Q = \u4.u2.int_stat [2]).
Adding EN signal on $flatten\u4.\u2.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1250$8265 [5], Q = \u4.u2.int_stat [5]).
Adding EN signal on $flatten\u4.\u2.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n461$8247, Q = \u4.u2.ienb).
Adding EN signal on $flatten\u4.\u2.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n468$8248, Q = \u4.u2.iena).
Adding EN signal on $flatten\u4.\u2.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1715$8215, Q = \u4.u2.dma_req_r).
Adding EN signal on $flatten\u4.\u2.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1431$8280, Q = \u4.u2.dma_out_cnt).
Adding EN signal on $flatten\u4.\u2.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1566$8287, Q = \u4.u2.dma_in_cnt).
Adding EN signal on $flatten\u4.\u2.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1742$8227, Q = \u4.u2.dma_ack_wr1).
Adding EN signal on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = { $flatten\u4.\u2.$verific$n373$8241 [12:9] $flatten\u4.\u2.$verific$n373$8241 [6:0] }, Q = { \u4.u2.csr1 [12:9] \u4.u2.csr1 [6:0] }).
Adding EN signal on $flatten\u4.\u2.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n373$8241 [8:7], Q = \u4.u2.csr1 [8:7]).
Adding EN signal on $flatten\u4.\u2.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n359$8240, Q = \u4.u2.csr0).
Adding EN signal on $flatten\u4.\u2.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n959$8259, Q = \u4.u2.buf1).
Adding EN signal on $flatten\u4.\u2.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n724$8256, Q = \u4.u2.buf0).
Adding EN signal on $flatten\u4.\u2.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u2.$verific$n1126$8261, Q = \u4.u2.buf0_orig).
Adding EN signal on $flatten\u4.\u1.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1278$8269, Q = \u4.u1.uc_dpd).
Adding EN signal on $flatten\u4.\u1.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1296$8272, Q = \u4.u1.uc_bsel).
Adding EN signal on $flatten\u4.\u1.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1733$8224, Q = \u4.u1.r2).
Adding EN signal on $flatten\u4.\u1.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n387$8133, Q = \u4.u1.ots_stop).
Adding EN signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1250$8265 [0], Q = \u4.u1.int_stat [0]).
Adding EN signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1250$8265 [1], Q = \u4.u1.int_stat [1]).
Adding EN signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1250$8265 [4], Q = \u4.u1.int_stat [4]).
Adding EN signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1250$8265 [3], Q = \u4.u1.int_stat [3]).
Adding EN signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1250$8265 [6], Q = \u4.u1.int_stat [6]).
Adding EN signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1250$8265 [2], Q = \u4.u1.int_stat [2]).
Adding EN signal on $flatten\u4.\u1.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1250$8265 [5], Q = \u4.u1.int_stat [5]).
Adding EN signal on $flatten\u4.\u1.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n461$8247, Q = \u4.u1.ienb).
Adding EN signal on $flatten\u4.\u1.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n468$8248, Q = \u4.u1.iena).
Adding EN signal on $flatten\u4.\u1.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1715$8215, Q = \u4.u1.dma_req_r).
Adding EN signal on $flatten\u4.\u1.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1431$8280, Q = \u4.u1.dma_out_cnt).
Adding EN signal on $flatten\u4.\u1.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1566$8287, Q = \u4.u1.dma_in_cnt).
Adding EN signal on $flatten\u4.\u1.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1742$8227, Q = \u4.u1.dma_ack_wr1).
Adding EN signal on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = { $flatten\u4.\u1.$verific$n373$8241 [12:9] $flatten\u4.\u1.$verific$n373$8241 [6:0] }, Q = { \u4.u1.csr1 [12:9] \u4.u1.csr1 [6:0] }).
Adding EN signal on $flatten\u4.\u1.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n373$8241 [8:7], Q = \u4.u1.csr1 [8:7]).
Adding EN signal on $flatten\u4.\u1.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n359$8240, Q = \u4.u1.csr0).
Adding EN signal on $flatten\u4.\u1.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n959$8259, Q = \u4.u1.buf1).
Adding EN signal on $flatten\u4.\u1.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n724$8256, Q = \u4.u1.buf0).
Adding EN signal on $flatten\u4.\u1.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u1.$verific$n1126$8261, Q = \u4.u1.buf0_orig).
Adding EN signal on $flatten\u4.\u0.$verific$uc_dpd_reg$usbf_ep_rf.v:350$8389 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1278$8269, Q = \u4.u0.uc_dpd).
Adding EN signal on $flatten\u4.\u0.$verific$uc_bsel_reg$usbf_ep_rf.v:360$8394 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1296$8272, Q = \u4.u0.uc_bsel).
Adding EN signal on $flatten\u4.\u0.$verific$r2_reg$usbf_ep_rf.v:487$8507 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1733$8224, Q = \u4.u0.r2).
Adding EN signal on $flatten\u4.\u0.$verific$ots_stop_reg$usbf_ep_rf.v:250$8334 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n387$8133, Q = \u4.u0.ots_stop).
Adding EN signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1250$8265 [0], Q = \u4.u0.int_stat [0]).
Adding EN signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1250$8265 [1], Q = \u4.u0.int_stat [1]).
Adding EN signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1250$8265 [4], Q = \u4.u0.int_stat [4]).
Adding EN signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1250$8265 [3], Q = \u4.u0.int_stat [3]).
Adding EN signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1250$8265 [6], Q = \u4.u0.int_stat [6]).
Adding EN signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1250$8265 [2], Q = \u4.u0.int_stat [2]).
Adding EN signal on $flatten\u4.\u0.$verific$int_stat_reg$usbf_ep_rf.v:340$8383 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1250$8265 [5], Q = \u4.u0.int_stat [5]).
Adding EN signal on $flatten\u4.\u0.$verific$ienb_reg$usbf_ep_rf.v:268$8342 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n461$8247, Q = \u4.u0.ienb).
Adding EN signal on $flatten\u4.\u0.$verific$iena_reg$usbf_ep_rf.v:268$8343 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n468$8248, Q = \u4.u0.iena).
Adding EN signal on $flatten\u4.\u0.$verific$dma_req_r_reg$usbf_ep_rf.v:473$8496 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1715$8215, Q = \u4.u0.dma_req_r).
Adding EN signal on $flatten\u4.\u0.$verific$dma_out_cnt_reg$usbf_ep_rf.v:397$8436 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1431$8280, Q = \u4.u0.dma_out_cnt).
Adding EN signal on $flatten\u4.\u0.$verific$dma_in_cnt_reg$usbf_ep_rf.v:422$8454 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1566$8287, Q = \u4.u0.dma_in_cnt).
Adding EN signal on $flatten\u4.\u0.$verific$dma_ack_wr1_reg$usbf_ep_rf.v:502$8511 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1742$8227, Q = \u4.u0.dma_ack_wr1).
Adding EN signal on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = { $flatten\u4.\u0.$verific$n373$8241 [12:9] $flatten\u4.\u0.$verific$n373$8241 [6:0] }, Q = { \u4.u0.csr1 [12:9] \u4.u0.csr1 [6:0] }).
Adding EN signal on $flatten\u4.\u0.$verific$csr1_reg$usbf_ep_rf.v:250$8333 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n373$8241 [8:7], Q = \u4.u0.csr1 [8:7]).
Adding EN signal on $flatten\u4.\u0.$verific$csr0_reg$usbf_ep_rf.v:250$8332 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n359$8240, Q = \u4.u0.csr0).
Adding EN signal on $flatten\u4.\u0.$verific$buf1_reg$usbf_ep_rf.v:294$8360 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n959$8259, Q = \u4.u0.buf1).
Adding EN signal on $flatten\u4.\u0.$verific$buf0_reg$usbf_ep_rf.v:282$8354 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n724$8256, Q = \u4.u0.buf0).
Adding EN signal on $flatten\u4.\u0.$verific$buf0_orig_reg$usbf_ep_rf.v:303$8363 ($dff) from module usbf_top (D = $flatten\u4.\u0.$verific$n1126$8261, Q = \u4.u0.buf0_orig).
Adding EN signal on $flatten\u4.$verific$utmi_vend_wr_r_reg$usbf_rf.v:334$4172 ($dff) from module usbf_top (D = $flatten\u4.$verific$n227$3809, Q = \u4.utmi_vend_wr_r).
Adding EN signal on $flatten\u4.$verific$utmi_vend_ctrl_r_reg$usbf_rf.v:342$4177 ($dff) from module usbf_top (D = \wb_data_i [3:0], Q = \u4.utmi_vend_ctrl_r).
Adding EN signal on $flatten\u4.$verific$intb_msk_reg$usbf_rf.v:388$4207 ($dff) from module usbf_top (D = $flatten\u4.$verific$n393$4029, Q = \u4.intb_msk).
Adding EN signal on $flatten\u4.$verific$inta_msk_reg$usbf_rf.v:388$4206 ($dff) from module usbf_top (D = $flatten\u4.$verific$n383$4028, Q = \u4.inta_msk).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [5], Q = \u4.int_srcb [5]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [0], Q = \u4.int_srcb [0]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [6], Q = \u4.int_srcb [6]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [2], Q = \u4.int_srcb [2]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [1], Q = \u4.int_srcb [1]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [7], Q = \u4.int_srcb [7]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [4], Q = \u4.int_srcb [4]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [3], Q = \u4.int_srcb [3]).
Adding EN signal on $flatten\u4.$verific$int_srcb_reg$usbf_rf.v:673$4208 ($dff) from module usbf_top (D = $flatten\u4.$verific$n6986$4148 [8], Q = \u4.int_srcb [8]).
Adding EN signal on $flatten\u4.$verific$funct_adr_reg$usbf_rf.v:370$4195 ($dff) from module usbf_top (D = $flatten\u4.$verific$n303$4022, Q = \u4.funct_adr).
Adding EN signal on $flatten\u4.$verific$dma_out_buf_avail_reg$usbf_rf.v:624$4473 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4601$3950, Q = \u4.dma_out_buf_avail).
Adding EN signal on $flatten\u4.$verific$dma_in_buf_sz1_reg$usbf_rf.v:591$4440 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4567$3918, Q = \u4.dma_in_buf_sz1).
Adding EN signal on $flatten\u4.$verific$csr_reg$usbf_rf.v:492$4341 ($dff) from module usbf_top (D = $flatten\u4.$verific$n2289$4082, Q = \u4.csr).
Adding EN signal on $flatten\u4.$verific$buf1_reg$usbf_rf.v:558$4407 ($dff) from module usbf_top (D = $flatten\u4.$verific$n4469$4146, Q = \u4.buf1).
Adding EN signal on $flatten\u4.$verific$buf0_reg$usbf_rf.v:525$4374 ($dff) from module usbf_top (D = $flatten\u4.$verific$n3379$4114, Q = \u4.buf0).
Adding EN signal on $flatten\u1.\u3.$verific$state_reg$usbf_pe.v:823$3648 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n1370$3238, Q = \u1.u3.state).
Adding EN signal on $flatten\u1.\u3.$verific$setup_token_reg$usbf_pe.v:592$3453 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n517$2986, Q = \u1.u3.setup_token).
Adding EN signal on $flatten\u1.\u3.$verific$out_token_reg$usbf_pe.v:581$3449 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n507$2983, Q = \u1.u3.out_token).
Adding EN signal on $flatten\u1.\u3.$verific$in_token_reg$usbf_pe.v:570$3445 ($dff) from module usbf_top (D = $flatten\u1.\u3.$verific$n497$2980, Q = \u1.u3.in_token).
Adding EN signal on $flatten\u1.\u2.$verific$state_reg$usbf_idma.v:449$2169 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1258$2003, Q = \u1.u2.state).
Adding EN signal on $flatten\u1.\u2.$verific$sizu_c_reg$usbf_idma.v:346$2105 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n575$1984, Q = \u1.u2.sizu_c).
Adding EN signal on $flatten\u1.\u2.$verific$sizd_c_reg$usbf_idma.v:326$2089 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n460$1978, Q = \u1.u2.sizd_c).
Adding EN signal on $flatten\u1.\u2.$verific$send_data_r_reg$usbf_idma.v:431$2164 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n1234$1931, Q = \u1.u2.send_data_r).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf1_reg$usbf_idma.v:403$2148 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf1).
Adding EN signal on $flatten\u1.\u2.$verific$rd_buf0_reg$usbf_idma.v:400$2146 ($dff) from module usbf_top (D = \sram_data_i, Q = \u1.u2.rd_buf0).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [31:24], Q = \u1.u2.dtmp_r [31:24]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [23:16], Q = \u1.u2.dtmp_r [23:16]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [15:8], Q = \u1.u2.dtmp_r [15:8]).
Adding EN signal on $flatten\u1.\u2.$verific$dtmp_r_reg$usbf_idma.v:372$2124 ($dff) from module usbf_top (D = $flatten\u1.\u2.$verific$n746$1988 [7:0], Q = \u1.u2.dtmp_r [7:0]).
Adding EN signal on $flatten\u1.\u2.$verific$dout_r_reg$usbf_idma.v:382$2135 ($dff) from module usbf_top (D = \u1.u2.dtmp_r, Q = \u1.u2.dout_r).
Adding EN signal on $flatten\u1.\u1.$verific$zero_length_r_reg$usbf_pa.v:187$2291 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n14$2217, Q = \u1.u1.zero_length_r).
Adding EN signal on $flatten\u1.\u1.$verific$state_reg$usbf_pa.v:303$2387 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n337$2273, Q = \u1.u1.state).
Adding EN signal on $flatten\u1.\u1.$verific$send_token_r_reg$usbf_pa.v:204$2300 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n29$2223, Q = \u1.u1.send_token_r).
Adding EN signal on $flatten\u1.\u1.$verific$crc16_reg$usbf_pa.v:264$2343 ($dff) from module usbf_top (D = $flatten\u1.\u1.$verific$n241$2270, Q = \u1.u1.crc16).
Adding EN signal on $flatten\u1.\u0.$verific$token1_reg$usbf_pd.v:251$2696 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token1).
Adding EN signal on $flatten\u1.\u0.$verific$token0_reg$usbf_pd.v:248$2694 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.token0).
Adding EN signal on $flatten\u1.\u0.$verific$rxv2_reg$usbf_pd.v:311$2743 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n236$2568, Q = \u1.u0.rxv2).
Adding EN signal on $flatten\u1.\u0.$verific$rxv1_reg$usbf_pd.v:300$2738 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n226$2564, Q = \u1.u0.rxv1).
Adding EN signal on $flatten\u1.\u0.$verific$pid_reg$usbf_pd.v:221$2647 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n36$2611, Q = \u1.u0.pid).
Adding EN signal on $flatten\u1.\u0.$verific$d2_reg$usbf_pd.v:321$2754 ($dff) from module usbf_top (D = \u1.u0.d1, Q = \u1.u0.d2).
Adding EN signal on $flatten\u1.\u0.$verific$d1_reg$usbf_pd.v:321$2753 ($dff) from module usbf_top (D = \u1.u0.d0, Q = \u1.u0.d1).
Adding EN signal on $flatten\u1.\u0.$verific$d0_reg$usbf_pd.v:321$2752 ($dff) from module usbf_top (D = \u0.rx_data, Q = \u1.u0.d0).
Adding EN signal on $flatten\u1.\u0.$verific$crc16_sum_reg$usbf_pd.v:338$2767 ($dff) from module usbf_top (D = $flatten\u1.\u0.$verific$n393$2624, Q = \u1.u0.crc16_sum).
Adding EN signal on $flatten\u1.$verific$sof_time_reg$usbf_pl.v:308$1356 ($dff) from module usbf_top (D = $flatten\u1.$verific$n199$1298, Q = \u1.sof_time).
Adding EN signal on $flatten\u1.$verific$mfm_cnt_reg$usbf_pl.v:299$1349 ($dff) from module usbf_top (D = $flatten\u1.$verific$n132$1293, Q = \u1.mfm_cnt).
Adding EN signal on $flatten\u1.$verific$frame_no_r_reg$usbf_pl.v:283$1336 ($dff) from module usbf_top (D = $flatten\u1.$verific$n68$1287, Q = \u1.frame_no_r).
Adding EN signal on $flatten\u0.\u0.$verific$usb_suspend_reg$usbf_utmi_ls.v:236$8835 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n28$8625, Q = \u0.u0.usb_suspend).
Adding EN signal on $flatten\u0.\u0.$verific$usb_attached_reg$usbf_utmi_ls.v:241$8838 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n34$8627, Q = \u0.u0.usb_attached).
Adding EN signal on $flatten\u0.\u0.$verific$state_reg$usbf_utmi_ls.v:417$8990 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n564$8790, Q = \u0.u0.state).
Adding EN signal on $flatten\u0.\u0.$verific$mode_hs_reg$usbf_utmi_ls.v:231$8832 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n22$8623, Q = \u0.u0.mode_hs).
Adding EN signal on $flatten\u0.\u0.$verific$me_ps2_reg$usbf_utmi_ls.v:367$8946 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n356$8776, Q = \u0.u0.me_ps2).
Adding EN signal on $flatten\u0.\u0.$verific$me_cnt_reg$usbf_utmi_ls.v:376$8958 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n420$8780, Q = \u0.u0.me_cnt).
Adding EN signal on $flatten\u0.\u0.$verific$idle_long_reg$usbf_utmi_ls.v:292$8875 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n100$8645, Q = \u0.u0.idle_long).
Adding EN signal on $flatten\u0.\u0.$verific$idle_cnt1_reg$usbf_utmi_ls.v:329$8906 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n184$8766, Q = \u0.u0.idle_cnt1).
Adding EN signal on $flatten\u0.\u0.$verific$chirp_cnt_reg$usbf_utmi_ls.v:399$8982 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n486$8785, Q = \u0.u0.chirp_cnt).
Adding EN signal on $flatten\u0.\u0.$verific$XcvSelect_reg$usbf_utmi_ls.v:251$8844 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n46$8631, Q = \u0.u0.XcvSelect).
Adding EN signal on $flatten\u0.\u0.$verific$TermSel_reg$usbf_utmi_ls.v:246$8841 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n40$8629, Q = \u0.u0.TermSel).
Adding EN signal on $flatten\u0.\u0.$verific$OpMode_reg$usbf_utmi_ls.v:256$8849 ($dff) from module usbf_top (D = $flatten\u0.\u0.$verific$n58$8757, Q = \u0.u0.OpMode).
Adding EN signal on $flatten\u0.$verific$DataOut_reg$usbf_utmi_if.v:214$8577 ($dff) from module usbf_top (D = $flatten\u0.$verific$n70$8557, Q = \u0.DataOut).

yosys> opt_clean

3.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 27 unused cells and 43 unused wires.
<suppressed ~28 debug messages>

yosys> opt_expr

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~23 debug messages>

yosys> opt_muxtree

3.42. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~207 debug messages>

yosys> opt_reduce

3.43. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.44. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~225 debug messages>
Removed a total of 75 cells.

yosys> opt_share

3.45. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.46. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_muxtree

3.49. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

yosys> opt_reduce

3.50. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.52. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.53. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.56. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 4) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9313 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9501 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9296 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9339 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9551 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9695 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9700 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9706 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9487 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9494 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9709 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9715 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9721 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9378 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9380 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9445 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9442 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9428 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9451 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9454 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9459 ($ne).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u0.$verific$equal_19$usbf_ep_rf.v:225$8309 ($eq).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u1.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9556 ($ne).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u2.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 10 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u4.\u3.$verific$equal_7$usbf_ep_rf.v:208$8300 ($eq).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
Removed top 3 bits (of 12) from port B of cell usbf_top.$flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le).
Removed top 3 bits (of 12) from port A of cell usbf_top.$flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9688 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9681 ($ne).
Removed top 25 bits (of 32) from mux cell usbf_top.$flatten\u4.$auto$bmuxmap.cc:60:execute$9226 ($mux).
Removed top 3 bits (of 32) from mux cell usbf_top.$flatten\u4.$auto$bmuxmap.cc:60:execute$9227 ($mux).
Removed top 3 bits (of 32) from mux cell usbf_top.$flatten\u4.$auto$bmuxmap.cc:60:execute$9231 ($mux).
Removed top 6 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_113$usbf_rf.v:370$4190 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_123$usbf_rf.v:384$4198 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_156$usbf_rf.v:414$4211 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_159$usbf_rf.v:415$4214 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_162$usbf_rf.v:416$4217 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u4.$verific$equal_165$usbf_rf.v:417$4220 ($eq).
Removed top 5 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_66$usbf_rf.v:318$4159 ($eq).
Removed top 4 bits (of 7) from port B of cell usbf_top.$flatten\u4.$verific$equal_76$usbf_rf.v:332$4166 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9653 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9648 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9645 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9639 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9636 ($ne).
Removed top 3 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9633 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9630 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9624 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9618 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9612 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9609 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9603 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9598 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9591 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9584 ($ne).
Removed top 12 bits (of 16) from port A of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$4516 ($or).
Removed top 12 bits (of 16) from port B of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$4516 ($or).
Removed top 12 bits (of 16) from port Y of cell usbf_top.$flatten\u4.$verific$or_645$usbf_rf.v:765$4516 ($or).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9309 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9837 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9843 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9846 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9849 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9852 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9855 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9858 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9861 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9864 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9867 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9870 ($ne).
Removed top 1 bits (of 5) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9888 ($ne).
Removed top 1 bits (of 5) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9892 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9896 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9901 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9904 ($ne).
Removed top 1 bits (of 5) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9910 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9912 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9914 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9916 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9920 ($ne).
Removed top 2 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9922 ($ne).
Removed top 2 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9924 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9929 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9932 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9935 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9942 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9949 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9956 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9963 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9969 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9976 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9978 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9983 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9991 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9994 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9997 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$10009 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$10012 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$10059 ($ne).
Removed top 3 bits (of 6) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9331 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9326 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9548 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_46$usbf_pd.v:240$2680 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_38$usbf_pd.v:236$2673 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_32$usbf_pd.v:233$2667 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_28$usbf_pd.v:231$2663 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_24$usbf_pd.v:229$2659 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:77:implement_pattern_cache$9322 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_20$usbf_pd.v:227$2655 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u0.$verific$equal_16$usbf_pd.v:225$2651 ($eq).
Removed top 1 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_146$usbf_pa.v:368$2404 ($eq).
Removed top 2 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_145$usbf_pa.v:351$2403 ($eq).
Removed top 3 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_143$usbf_pa.v:331$2401 ($eq).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.\u1.$verific$equal_142$usbf_pa.v:315$2400 ($eq).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084 ($sub).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9542 ($ne).
Removed top 1 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_267$usbf_idma.v:594$2196 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_266$usbf_idma.v:575$2195 ($eq).
Removed top 3 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_265$usbf_idma.v:559$2194 ($eq).
Removed top 4 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_264$usbf_idma.v:536$2193 ($eq).
Removed top 5 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_263$usbf_idma.v:513$2192 ($eq).
Removed top 6 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_262$usbf_idma.v:490$2191 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_261$usbf_idma.v:463$2190 ($eq).
Removed top 13 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_213$usbf_idma.v:431$2158 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u2.$verific$equal_124$usbf_idma.v:369$2116 ($eq).
Removed top 10 bits (of 11) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100 ($add).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073 ($add).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065 ($add).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
Removed top 2 bits (of 17) from port Y of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
Removed top 2 bits (of 17) from port A of cell usbf_top.$flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_79$usbf_pe.v:441$3323 ($mux).
Removed top 1 bits (of 4) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_725$usbf_pe.v:449$3718 ($mux).
Removed top 1 bits (of 2) from mux cell usbf_top.$flatten\u1.\u3.$verific$select_207$usbf_pe.v:538$3408 ($mux).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9539 ($ne).
Removed top 3 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9536 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9533 ($ne).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$not_equal_501$usbf_pe.v:733$3571 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9527 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_9$usbf_pe.v:367$3272 ($eq).
Removed top 1 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_684$usbf_pe.v:1056$3722 ($eq).
Removed top 2 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_683$usbf_pe.v:1047$3721 ($eq).
Removed top 3 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_682$usbf_pe.v:1009$3720 ($eq).
Removed top 4 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_681$usbf_pe.v:995$3719 ($eq).
Removed top 7 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_678$usbf_pe.v:925$3717 ($eq).
Removed top 8 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_677$usbf_pe.v:915$3716 ($eq).
Removed top 9 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_676$usbf_pe.v:846$3715 ($eq).
Removed top 5 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_580$usbf_pe.v:803$3636 ($eq).
Removed top 6 bits (of 10) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_578$usbf_pe.v:803$3634 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_532$usbf_pe.v:771$3595 ($eq).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_519$usbf_pe.v:754$3585 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_3$usbf_pe.v:363$3266 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_273$usbf_pe.v:547$3427 ($eq).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_171$usbf_pe.v:497$3404 ($eq).
Removed top 2 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_170$usbf_pe.v:496$3403 ($eq).
Removed top 1 bits (of 4) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_169$usbf_pe.v:495$3402 ($eq).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$equal_13$usbf_pe.v:370$3276 ($eq).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581 ($add).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549 ($add).
Removed top 3 bits (of 17) from port B of cell usbf_top.$flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525 ($add).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$3527 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3495 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3492 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3476 ($lt).
Removed top 3 bits (of 14) from port B of cell usbf_top.$flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3471 ($lt).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u1.$verific$add_47$usbf_pl.v:299$1344 ($add).
Removed top 11 bits (of 12) from port B of cell usbf_top.$flatten\u1.$verific$add_58$usbf_pl.v:308$1352 ($add).
Removed top 4 bits (of 5) from port B of cell usbf_top.$flatten\u1.$verific$add_69$usbf_pl.v:321$1360 ($add).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9833 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9830 ($ne).
Removed top 3 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9827 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9824 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9818 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9812 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9806 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9803 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9797 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9792 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9785 ($ne).
Removed top 1 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9778 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9294 ($eq).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$fsm_map.cc:215:map_fsm$9295 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9727 ($ne).
Removed top 3 bits (of 4) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9730 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9733 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9736 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9742 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9745 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9750 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9521 ($ne).
Removed top 1 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9515 ($ne).
Removed top 2 bits (of 3) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9512 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$auto$opt_dff.cc:195:make_patterns_logic$9506 ($ne).
Removed top 1 bits (of 2) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_61$usbf_utmi_ls.v:268$8856 ($eq).
Removed top 1 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_330$usbf_utmi_ls.v:632$9042 ($eq).
Removed top 2 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_329$usbf_utmi_ls.v:617$9041 ($eq).
Removed top 3 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_328$usbf_utmi_ls.v:602$9040 ($eq).
Removed top 4 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_327$usbf_utmi_ls.v:594$9039 ($eq).
Removed top 5 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_326$usbf_utmi_ls.v:579$9038 ($eq).
Removed top 6 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_325$usbf_utmi_ls.v:560$9037 ($eq).
Removed top 7 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_324$usbf_utmi_ls.v:552$9036 ($eq).
Removed top 9 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_323$usbf_utmi_ls.v:539$9035 ($eq).
Removed top 8 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_322$usbf_utmi_ls.v:534$9034 ($eq).
Removed top 10 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_321$usbf_utmi_ls.v:518$9033 ($eq).
Removed top 11 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_320$usbf_utmi_ls.v:502$9032 ($eq).
Removed top 12 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_319$usbf_utmi_ls.v:486$9031 ($eq).
Removed top 13 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_318$usbf_utmi_ls.v:461$9030 ($eq).
Removed top 14 bits (of 15) from port B of cell usbf_top.$flatten\u0.\u0.$verific$equal_317$usbf_utmi_ls.v:449$9029 ($eq).
Removed top 2 bits (of 3) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935 ($add).
Removed top 7 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907 ($add).
Removed top 3 bits (of 4) from port B of cell usbf_top.$flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891 ($add).
Removed top 6 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$8968 ($lt).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$8964 ($lt).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$8960 ($lt).
Removed top 1 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$8930 ($lt).
Removed top 2 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$8922 ($lt).
Removed top 2 bits (of 8) from port B of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918 ($lt).
Removed top 4 bits (of 8) from port A of cell usbf_top.$flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$8914 ($lt).
Removed top 1 bits (of 5) from wire usbf_top.$auto$fsm_map.cc:238:map_fsm$9299.
Removed top 1 bits (of 7) from wire usbf_top.$auto$fsm_map.cc:238:map_fsm$9385.
Removed top 2 bits (of 17) from wire usbf_top.$flatten\u1.\u2.$verific$n169$1958.
Removed top 1 bits (of 15) from wire usbf_top.$flatten\u1.\u2.$verific$n254$1961.
Removed top 5 bits (of 9) from wire usbf_top.$flatten\u1.\u3.$verific$n1516$3248.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n185$3161.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n196$3162.
Removed top 1 bits (of 2) from wire usbf_top.$flatten\u1.\u3.$verific$n403$3199.
Removed top 384 bits (of 512) from wire usbf_top.$flatten\u4.$auto$bmuxmap.cc:58:execute$9189.
Removed top 192 bits (of 256) from wire usbf_top.$flatten\u4.$auto$bmuxmap.cc:58:execute$9206.
Removed top 32 bits (of 128) from wire usbf_top.$flatten\u4.$auto$bmuxmap.cc:58:execute$9225.
Removed top 12 bits (of 16) from wire usbf_top.$flatten\u4.$verific$n6984$4151.

yosys> peepopt

3.57. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.59. Executing BMUXMAP pass.

yosys> demuxmap

3.60. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.61. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module usbf_top:
  creating $macc model for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954 ($add).
  creating $macc model for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978 ($add).
  creating $macc model for $flatten\u1.$verific$add_47$usbf_pl.v:299$1344 ($add).
  creating $macc model for $flatten\u1.$verific$add_58$usbf_pl.v:308$1352 ($add).
  creating $macc model for $flatten\u1.$verific$add_69$usbf_pl.v:321$1360 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100 ($add).
  creating $macc model for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084 ($sub).
  creating $macc model for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591 ($add).
  creating $macc model for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$3516 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447 ($add).
  creating $macc model for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$8460 ($sub).
  creating $macc model for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475 ($sub).
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$8460.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449.
  creating $alu model for $macc $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447.
  creating $alu model for $macc $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431.
  creating $alu model for $macc $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$3516.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549.
  creating $alu model for $macc $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525.
  creating $alu model for $macc $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065.
  creating $alu model for $macc $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057.
  creating $alu model for $macc $flatten\u1.$verific$add_69$usbf_pl.v:321$1360.
  creating $alu model for $macc $flatten\u1.$verific$add_58$usbf_pl.v:308$1352.
  creating $alu model for $macc $flatten\u1.$verific$add_47$usbf_pl.v:299$1344.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907.
  creating $alu model for $macc $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$8914 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$8922 ($lt): merged with $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918.
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$8930 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$8960 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$8964 ($lt): new $alu
  creating $alu model for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$8968 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3471 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3476 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3492 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3495 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$3527 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$3545 ($lt): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540.
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$8455 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$8463 ($le): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$8472 ($lt): new $alu
  creating $alu model for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$8478 ($lt): new $alu
  creating $alu model for $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$3533 ($ne): merged with $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540.
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10118
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10129
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10140
  creating $alu cell for $flatten\u4.\u3.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10149
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10158
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10163
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10168
  creating $alu cell for $flatten\u4.\u2.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10177
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10186
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10197
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10208
  creating $alu cell for $flatten\u4.\u1.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10217
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_240$usbf_ep_rf.v:454$8478: $auto$alumacc.cc:485:replace_alu$10226
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_232$usbf_ep_rf.v:445$8472: $auto$alumacc.cc:485:replace_alu$10237
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_223$usbf_ep_rf.v:436$8463: $auto$alumacc.cc:485:replace_alu$10248
  creating $alu cell for $flatten\u4.\u0.$verific$LessThan_213$usbf_ep_rf.v:427$8455: $auto$alumacc.cc:485:replace_alu$10257
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_418$usbf_pe.v:691$3540, $flatten\u1.\u3.$verific$LessThan_424$usbf_pe.v:694$3545, $flatten\u1.\u3.$verific$not_equal_409$usbf_pe.v:679$3533: $auto$alumacc.cc:485:replace_alu$10266
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_402$usbf_pe.v:674$3527: $auto$alumacc.cc:485:replace_alu$10279
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_362$usbf_pe.v:641$3495: $auto$alumacc.cc:485:replace_alu$10290
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_358$usbf_pe.v:638$3492: $auto$alumacc.cc:485:replace_alu$10301
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_339$usbf_pe.v:622$3476: $auto$alumacc.cc:485:replace_alu$10312
  creating $alu cell for $flatten\u1.\u3.$verific$LessThan_333$usbf_pe.v:611$3471: $auto$alumacc.cc:485:replace_alu$10323
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_212$usbf_utmi_ls.v:385$8968: $auto$alumacc.cc:485:replace_alu$10334
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_206$usbf_utmi_ls.v:382$8964: $auto$alumacc.cc:485:replace_alu$10339
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_200$usbf_utmi_ls.v:379$8960: $auto$alumacc.cc:485:replace_alu$10344
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_160$usbf_utmi_ls.v:350$8930: $auto$alumacc.cc:485:replace_alu$10349
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_142$usbf_utmi_ls.v:341$8918, $flatten\u0.\u0.$verific$LessThan_148$usbf_utmi_ls.v:344$8922: $auto$alumacc.cc:485:replace_alu$10354
  creating $alu cell for $flatten\u0.\u0.$verific$LessThan_136$usbf_utmi_ls.v:338$8914: $auto$alumacc.cc:485:replace_alu$10365
  creating $alu cell for $flatten\u0.\u0.$verific$add_107$usbf_utmi_ls.v:320$8891: $auto$alumacc.cc:485:replace_alu$10370
  creating $alu cell for $flatten\u0.\u0.$verific$add_127$usbf_utmi_ls.v:332$8907: $auto$alumacc.cc:485:replace_alu$10373
  creating $alu cell for $flatten\u0.\u0.$verific$add_167$usbf_utmi_ls.v:358$8935: $auto$alumacc.cc:485:replace_alu$10376
  creating $alu cell for $flatten\u0.\u0.$verific$add_178$usbf_utmi_ls.v:367$8942: $auto$alumacc.cc:485:replace_alu$10379
  creating $alu cell for $flatten\u0.\u0.$verific$add_193$usbf_utmi_ls.v:376$8954: $auto$alumacc.cc:485:replace_alu$10382
  creating $alu cell for $flatten\u0.\u0.$verific$add_230$usbf_utmi_ls.v:399$8978: $auto$alumacc.cc:485:replace_alu$10385
  creating $alu cell for $flatten\u1.$verific$add_47$usbf_pl.v:299$1344: $auto$alumacc.cc:485:replace_alu$10388
  creating $alu cell for $flatten\u1.$verific$add_58$usbf_pl.v:308$1352: $auto$alumacc.cc:485:replace_alu$10391
  creating $alu cell for $flatten\u1.$verific$add_69$usbf_pl.v:321$1360: $auto$alumacc.cc:485:replace_alu$10394
  creating $alu cell for $flatten\u1.\u2.$verific$add_44$usbf_idma.v:289$2057: $auto$alumacc.cc:485:replace_alu$10397
  creating $alu cell for $flatten\u1.\u2.$verific$add_51$usbf_idma.v:296$2065: $auto$alumacc.cc:485:replace_alu$10400
  creating $alu cell for $flatten\u1.\u2.$verific$add_64$usbf_idma.v:310$2073: $auto$alumacc.cc:485:replace_alu$10403
  creating $alu cell for $flatten\u1.\u2.$verific$add_98$usbf_idma.v:346$2100: $auto$alumacc.cc:485:replace_alu$10406
  creating $alu cell for $flatten\u1.\u2.$verific$sub_78$usbf_idma.v:326$2084: $auto$alumacc.cc:485:replace_alu$10409
  creating $alu cell for $flatten\u1.\u3.$verific$add_399$usbf_pe.v:670$3525: $auto$alumacc.cc:485:replace_alu$10412
  creating $alu cell for $flatten\u1.\u3.$verific$add_428$usbf_pe.v:701$3549: $auto$alumacc.cc:485:replace_alu$10415
  creating $alu cell for $flatten\u1.\u3.$verific$add_514$usbf_pe.v:751$3581: $auto$alumacc.cc:485:replace_alu$10418
  creating $alu cell for $flatten\u1.\u3.$verific$add_527$usbf_pe.v:768$3591: $auto$alumacc.cc:485:replace_alu$10421
  creating $alu cell for $flatten\u1.\u3.$verific$sub_387$usbf_pe.v:657$3516: $auto$alumacc.cc:485:replace_alu$10424
  creating $alu cell for $flatten\u4.\u0.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10427
  creating $alu cell for $flatten\u4.\u0.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10430
  creating $alu cell for $flatten\u4.\u0.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10433
  creating $alu cell for $flatten\u4.\u0.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10436
  creating $alu cell for $flatten\u4.\u0.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10439
  creating $alu cell for $flatten\u4.\u0.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10442
  creating $alu cell for $flatten\u4.\u1.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10445
  creating $alu cell for $flatten\u4.\u1.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10448
  creating $alu cell for $flatten\u4.\u1.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10451
  creating $alu cell for $flatten\u4.\u1.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10454
  creating $alu cell for $flatten\u4.\u1.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10457
  creating $alu cell for $flatten\u4.\u1.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10460
  creating $alu cell for $flatten\u4.\u2.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10463
  creating $alu cell for $flatten\u4.\u2.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10466
  creating $alu cell for $flatten\u4.\u2.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10469
  creating $alu cell for $flatten\u4.\u2.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10472
  creating $alu cell for $flatten\u4.\u2.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10475
  creating $alu cell for $flatten\u4.\u2.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10478
  creating $alu cell for $flatten\u4.\u3.$verific$add_180$usbf_ep_rf.v:397$8431: $auto$alumacc.cc:485:replace_alu$10481
  creating $alu cell for $flatten\u4.\u3.$verific$add_201$usbf_ep_rf.v:419$8447: $auto$alumacc.cc:485:replace_alu$10484
  creating $alu cell for $flatten\u4.\u3.$verific$sub_175$usbf_ep_rf.v:394$8426: $auto$alumacc.cc:485:replace_alu$10487
  creating $alu cell for $flatten\u4.\u3.$verific$sub_206$usbf_ep_rf.v:422$8449: $auto$alumacc.cc:485:replace_alu$10490
  creating $alu cell for $flatten\u4.\u3.$verific$sub_219$usbf_ep_rf.v:433$8460: $auto$alumacc.cc:485:replace_alu$10493
  creating $alu cell for $flatten\u4.\u3.$verific$sub_236$usbf_ep_rf.v:449$8475: $auto$alumacc.cc:485:replace_alu$10496
  created 71 $alu and 0 $macc cells.

yosys> opt_expr

3.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

yosys> opt_reduce

3.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.67. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.68. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 4 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 5 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 6 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 7 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 8 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 9 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 10 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 11 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 12 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 13 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 14 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.
Setting constant 0-bit at position 15 on $flatten\u4.$verific$int_srca_reg$usbf_rf.v:781$4517 ($dff) from module usbf_top.

yosys> opt_clean

3.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 1 unused cells and 32 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_muxtree

3.71. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~215 debug messages>

yosys> opt_reduce

3.72. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.74. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.75. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.77. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 2

yosys> stat

3.78. Printing statistics.

=== usbf_top ===

   Number of wires:               3252
   Number of wire bits:          18929
   Number of public wires:        1545
   Number of public wire bits:   10179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2178
     $alu                           71
     $and                          337
     $dff                          202
     $dffe                         156
     $eq                           138
     $logic_not                     14
     $mux                          502
     $ne                           140
     $not                          155
     $or                           171
     $pmux                          34
     $reduce_and                    59
     $reduce_bool                   22
     $reduce_or                     57
     $xor                          120


yosys> memory -nomap

3.79. Executing MEMORY pass.

yosys> opt_mem

3.79.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.79.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.79.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.79.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.79.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.79.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> memory_share

3.79.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.79.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.79.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> memory_collect

3.79.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.80. Printing statistics.

=== usbf_top ===

   Number of wires:               3252
   Number of wire bits:          18929
   Number of public wires:        1545
   Number of public wire bits:   10179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2178
     $alu                           71
     $and                          337
     $dff                          202
     $dffe                         156
     $eq                           138
     $logic_not                     14
     $mux                          502
     $ne                           140
     $not                          155
     $or                           171
     $pmux                          34
     $reduce_and                    59
     $reduce_bool                   22
     $reduce_or                     57
     $xor                          120


yosys> muxpack

3.81. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~399 debug messages>

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> pmuxtree

3.83. Executing PMUXTREE pass.

yosys> muxpack

3.84. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10932 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10934 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10924 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10926 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10916 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10918 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10890 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10892 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10796 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10798 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10778 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10780 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10754 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10756 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10746 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10748 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10698 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10700 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10634 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10636 to a pmux with 2 cases.
Converting usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10626 ... usbf_top.$auto$pmuxtree.cc:65:recursive_mux_generator$10628 to a pmux with 2 cases.
Converted 22 (p)mux cells into 11 pmux cells.
<suppressed ~494 debug messages>

yosys> memory_map

3.85. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.86. Printing statistics.

=== usbf_top ===

   Number of wires:               3470
   Number of wire bits:          19553
   Number of public wires:        1545
   Number of public wire bits:   10179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2351
     $alu                           71
     $and                          337
     $dff                          202
     $dffe                         156
     $eq                           138
     $logic_not                     14
     $mux                          601
     $ne                           140
     $not                          189
     $or                           190
     $pmux                          11
     $reduce_and                    59
     $reduce_bool                   22
     $reduce_or                    101
     $xor                          120


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.87. Executing TECHMAP pass (map to technology primitives).

3.87.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.87.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.87.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$7ec5e66ab88c9f51d035070dfe0a06ec346d1216\_90_alu for cells of type $alu.
Using template $paramod$ef65f5ca875905bb4cb2e7b079483d1c2cdf9c89\_90_alu for cells of type $alu.
Using template $paramod$ee3d784672cdb1cb32d9a801a3af776716f16b74\_90_alu for cells of type $alu.
Using template $paramod$b2cd65b42e0277574bcf6ce63cb040566ad68684\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$6831557730818fb92b11a295f9eb33ff8fa62af1\_90_alu for cells of type $alu.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_90_alu for cells of type $alu.
Using template $paramod$ec32b97001540459632a2df9accd677d3703ea0f\_90_alu for cells of type $alu.
Using template $paramod$5fa769bd6f6ca230a24c9bbc0e120f15bcfea838\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$2b7d033a8bf6b47b9d47acee9aa242dd67f0faa1\_80_rs_alu for cells of type $alu.
Using template $paramod$1ed7ec530b1ba361931392f2f8504f82ccdfecaa\_90_alu for cells of type $alu.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$3b7577489eb4433b1d5620cab7f3794743dee5ea\_90_alu for cells of type $alu.
Using template $paramod$dffbee7ee942d66441f7a53b64a65f15e3631443\_90_alu for cells of type $alu.
Using template $paramod$091610cd349a68bd5539cffd7126f0d76e9bca00\_90_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$a950948e19702336540a1f557d0a91306bdb9188\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$fc69e1e055122f161e82f14586c9accf99d83cb8\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using template $paramod$150d098cb9cca1819459bc5073194c8c53d2862d\_90_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~8654 debug messages>

yosys> stat

3.88. Printing statistics.

=== usbf_top ===

   Number of wires:               8925
   Number of wire bits:         116163
   Number of public wires:        1545
   Number of public wire bits:   10179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18169
     $_AND_                       3099
     $_DFFE_PP_                   1179
     $_DFF_P_                      561
     $_MUX_                       6145
     $_NOT_                       1139
     $_OR_                        2945
     $_XOR_                       3084
     adder_carry                    17


yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~4611 debug messages>

yosys> opt_merge -nomux

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~6135 debug messages>
Removed a total of 2045 cells.

yosys> opt_muxtree

3.91. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.92. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.94. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.95. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 1038 unused cells and 4452 unused wires.
<suppressed ~1044 debug messages>

yosys> opt_expr

3.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.98. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.99. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.100. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.101. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.102. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.103. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1795 debug messages>

yosys> techmap -map +/techmap.v

3.106. Executing TECHMAP pass (map to technology primitives).

3.106.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.107. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.108. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~1005 debug messages>
Removed a total of 335 cells.

yosys> opt_muxtree

3.109. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.110. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.111. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.112. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$24663 ($_DFFE_PP_) from module usbf_top.

yosys> opt_clean

3.113. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 208 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.114. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.118. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 2

yosys> abc -dff

3.121. Executing ABC pass (technology mapping using ABC).

3.121.1. Summary of detected clock domains:
  10 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10017, arst={ }, srst={ }
  45 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10076, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9564, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10073, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10070, arst={ }, srst={ }
  16 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10067, arst={ }, srst={ }
  20 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10064, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10061, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10058, arst={ }, srst={ }
  45 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10055, arst={ }, srst={ }
  44 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10052, arst={ }, srst={ }
  19 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10049, arst={ }, srst={ }
  195 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$10046, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9765, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9758, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9772, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9779, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9786, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9793, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9817, arst={ }, srst={ }
  24 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10008, arst={ }, srst={ }
  45 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10011, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9571, arst={ }, srst={ }
  13 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10014, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9526, arst={ }, srst={ }
  97 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9925, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9903, arst={ }, srst={ }
  16 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9900, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9968, arst={ }, srst={ }
  67 cells in clk=\phy_clk_pad_i, en=\u1.u2.word_done, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9943, arst={ }, srst={ }
  48 cells in clk=\phy_clk_pad_i, en=\u1.u2.fill_buf0, arst={ }, srst={ }
  48 cells in clk=\phy_clk_pad_i, en=\u1.u2.fill_buf1, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9934, arst={ }, srst={ }
  126 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9931, arst={ }, srst={ }
  92 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9928, arst={ }, srst={ }
  34 cells in clk=\phy_clk_pad_i, en=\u1.u0.token_le_2, arst={ }, srst={ }
  128 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9985, arst={ }, srst={ }
  1 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9982, arst={ }, srst={ }
  55 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9979, arst={ }, srst={ }
  51 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10005, arst={ }, srst={ }
  84 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10002, arst={ }, srst={ }
  34 cells in clk=\phy_clk_pad_i, en=\u1.u0.data_valid_d, arst={ }, srst={ }
  27 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9996, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9993, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9990, arst={ }, srst={ }
  39 cells in clk=\phy_clk_pad_i, en=\u1.u0.token_le_1, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9964, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9957, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9950, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9863, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9860, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9857, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9854, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9851, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9848, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9845, arst={ }, srst={ }
  12 cells in clk=\clk_i, en=$auto$simplemap.cc:251:simplemap_eqne$22911 [1], arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9578, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9585, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9592, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9599, arst={ }, srst={ }
  56 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9836, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9842, arst={ }, srst={ }
  14 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9869, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9623, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9661, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9668, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9675, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9682, arst={ }, srst={ }
  414 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9872, arst={ }, srst={ }
  137 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9689, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9541, arst={ }, srst={ }
  149 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9538, arst={ }, srst={ }
  162 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9535, arst={ }, srst={ }
  98 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9532, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9520, arst={ }, srst={ }
  152 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9514, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9460, arst={ }, srst={ }
  227 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9453, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9450, arst={ }, srst={ }
  13 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst={ }
  92 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9635, arst={ }, srst={ }
  130 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9632, arst={ }, srst={ }
  66 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9629, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9617, arst={ }, srst={ }
  200 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9611, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9608, arst={ }, srst={ }
  16 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9602, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9557, arst={ }, srst={ }
  184 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9550, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9547, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9735, arst={ }, srst={ }
  115 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9732, arst={ }, srst={ }
  162 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9729, arst={ }, srst={ }
  98 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9726, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9714, arst={ }, srst={ }
  152 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9708, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9441, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9705, arst={ }, srst={ }
  16 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9699, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9654, arst={ }, srst={ }
  210 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9647, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9644, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9832, arst={ }, srst={ }
  115 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9829, arst={ }, srst={ }
  130 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9826, arst={ }, srst={ }
  66 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9823, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9811, arst={ }, srst={ }
  152 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9802, arst={ }, srst={ }
  16 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9796, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9751, arst={ }, srst={ }
  190 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9744, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9741, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9481, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9467, arst={ }, srst={ }
  14 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9720, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9502, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9495, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:219:make_patterns_logic$9488, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$auto$opt_dff.cc:194:make_patterns_logic$9444, arst={ }, srst={ }
  1145 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  3656 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.121.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10017
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 7 outputs.

3.121.2.1. Executing ABC.

3.121.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10076
Extracted 45 gates and 80 wires to a netlist network with 34 inputs and 9 outputs.

3.121.3.1. Executing ABC.

3.121.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9564
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 6 outputs.

3.121.4.1. Executing ABC.

3.121.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10073
Extracted 7 gates and 14 wires to a netlist network with 6 inputs and 3 outputs.

3.121.5.1. Executing ABC.

3.121.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10070
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 3 outputs.

3.121.6.1. Executing ABC.

3.121.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10067
Extracted 16 gates and 33 wires to a netlist network with 16 inputs and 7 outputs.

3.121.7.1. Executing ABC.

3.121.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10064
Extracted 20 gates and 29 wires to a netlist network with 8 inputs and 5 outputs.

3.121.8.1. Executing ABC.

3.121.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10061
Extracted 32 gates and 44 wires to a netlist network with 12 inputs and 31 outputs.

3.121.9.1. Executing ABC.

3.121.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10058
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 2 outputs.

3.121.10.1. Executing ABC.

3.121.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10055
Extracted 45 gates and 48 wires to a netlist network with 2 inputs and 13 outputs.

3.121.11.1. Executing ABC.

3.121.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10052
Extracted 44 gates and 46 wires to a netlist network with 1 inputs and 11 outputs.

3.121.12.1. Executing ABC.

3.121.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10049
Extracted 19 gates and 37 wires to a netlist network with 17 inputs and 16 outputs.

3.121.13.1. Executing ABC.

3.121.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$10046
Extracted 195 gates and 244 wires to a netlist network with 47 inputs and 24 outputs.

3.121.14.1. Executing ABC.

3.121.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9765
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.121.15.1. Executing ABC.

3.121.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9758
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.121.16.1. Executing ABC.

3.121.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9772
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.121.17.1. Executing ABC.

3.121.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9779
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.18.1. Executing ABC.

3.121.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9786
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.19.1. Executing ABC.

3.121.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9793
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.20.1. Executing ABC.

3.121.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9817
Extracted 11 gates and 23 wires to a netlist network with 10 inputs and 5 outputs.

3.121.21.1. Executing ABC.

3.121.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10008
Extracted 24 gates and 30 wires to a netlist network with 5 inputs and 5 outputs.

3.121.22.1. Executing ABC.

3.121.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10011
Extracted 45 gates and 61 wires to a netlist network with 15 inputs and 23 outputs.

3.121.23.1. Executing ABC.

3.121.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9571
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.121.24.1. Executing ABC.

3.121.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10014
Extracted 13 gates and 28 wires to a netlist network with 14 inputs and 8 outputs.

3.121.25.1. Executing ABC.

3.121.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9526
Extracted 11 gates and 23 wires to a netlist network with 10 inputs and 5 outputs.

3.121.26.1. Executing ABC.

3.121.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9925
Extracted 97 gates and 129 wires to a netlist network with 30 inputs and 14 outputs.

3.121.27.1. Executing ABC.

3.121.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9903
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 6 outputs.

3.121.28.1. Executing ABC.

3.121.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9900
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 9 outputs.

3.121.29.1. Executing ABC.

3.121.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9968
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.121.30.1. Executing ABC.

3.121.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u2.word_done
Extracted 67 gates and 136 wires to a netlist network with 69 inputs and 34 outputs.

3.121.31.1. Executing ABC.

3.121.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9943
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.121.32.1. Executing ABC.

3.121.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u2.fill_buf0
Extracted 48 gates and 81 wires to a netlist network with 33 inputs and 16 outputs.

3.121.33.1. Executing ABC.

3.121.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u2.fill_buf1
Extracted 48 gates and 81 wires to a netlist network with 33 inputs and 16 outputs.

3.121.34.1. Executing ABC.

3.121.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9934
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 2 outputs.

3.121.35.1. Executing ABC.

3.121.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9931
Extracted 126 gates and 147 wires to a netlist network with 20 inputs and 9 outputs.

3.121.36.1. Executing ABC.

3.121.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9928
Extracted 92 gates and 128 wires to a netlist network with 36 inputs and 67 outputs.

3.121.37.1. Executing ABC.

3.121.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u0.token_le_2
Extracted 34 gates and 63 wires to a netlist network with 28 inputs and 22 outputs.

3.121.38.1. Executing ABC.

3.121.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9985
Extracted 128 gates and 165 wires to a netlist network with 37 inputs and 25 outputs.

3.121.39.1. Executing ABC.

3.121.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9982
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.121.40.1. Executing ABC.

3.121.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9979
Extracted 55 gates and 66 wires to a netlist network with 9 inputs and 10 outputs.

3.121.41.1. Executing ABC.

3.121.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10005
Extracted 51 gates and 73 wires to a netlist network with 21 inputs and 24 outputs.

3.121.42.1. Executing ABC.

3.121.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10002
Extracted 84 gates and 96 wires to a netlist network with 12 inputs and 11 outputs.

3.121.43.1. Executing ABC.

3.121.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u0.data_valid_d
Extracted 34 gates and 50 wires to a netlist network with 15 inputs and 12 outputs.

3.121.44.1. Executing ABC.

3.121.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9996
Extracted 27 gates and 37 wires to a netlist network with 10 inputs and 15 outputs.

3.121.45.1. Executing ABC.

3.121.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9993
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.121.46.1. Executing ABC.

3.121.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9990
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.121.47.1. Executing ABC.

3.121.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by \u1.u0.token_le_1
Extracted 39 gates and 64 wires to a netlist network with 24 inputs and 28 outputs.

3.121.48.1. Executing ABC.

3.121.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9964
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 9 outputs.

3.121.49.1. Executing ABC.

3.121.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9957
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 9 outputs.

3.121.50.1. Executing ABC.

3.121.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9950
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 9 outputs.

3.121.51.1. Executing ABC.

3.121.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9866
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 5 outputs.

3.121.52.1. Executing ABC.

3.121.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9863
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.121.53.1. Executing ABC.

3.121.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9860
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.121.54.1. Executing ABC.

3.121.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9857
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.121.55.1. Executing ABC.

3.121.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9854
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.121.56.1. Executing ABC.

3.121.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9851
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.121.57.1. Executing ABC.

3.121.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9848
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.121.58.1. Executing ABC.

3.121.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9845
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.121.59.1. Executing ABC.

3.121.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$simplemap.cc:251:simplemap_eqne$22911 [1]
Extracted 12 gates and 24 wires to a netlist network with 11 inputs and 9 outputs.

3.121.60.1. Executing ABC.

3.121.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9578
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.121.61.1. Executing ABC.

3.121.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9585
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.62.1. Executing ABC.

3.121.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9592
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.63.1. Executing ABC.

3.121.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9599
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.64.1. Executing ABC.

3.121.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9836
Extracted 56 gates and 87 wires to a netlist network with 30 inputs and 49 outputs.

3.121.65.1. Executing ABC.

3.121.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9842
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.121.66.1. Executing ABC.

3.121.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9869
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 10 outputs.

3.121.67.1. Executing ABC.

3.121.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9623
Extracted 9 gates and 18 wires to a netlist network with 7 inputs and 5 outputs.

3.121.68.1. Executing ABC.

3.121.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9661
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 5 outputs.

3.121.69.1. Executing ABC.

3.121.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9668
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.70.1. Executing ABC.

3.121.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9675
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.71.1. Executing ABC.

3.121.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9682
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.72.1. Executing ABC.

3.121.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9872
Extracted 414 gates and 636 wires to a netlist network with 221 inputs and 261 outputs.

3.121.73.1. Executing ABC.

3.121.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 137 gates and 176 wires to a netlist network with 37 inputs and 15 outputs.

3.121.74.1. Executing ABC.

3.121.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9689
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.75.1. Executing ABC.

3.121.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9696
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.121.76.1. Executing ABC.

3.121.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9541
Extracted 11 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.121.77.1. Executing ABC.

3.121.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9538
Extracted 149 gates and 215 wires to a netlist network with 65 inputs and 140 outputs.

3.121.78.1. Executing ABC.

3.121.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9535
Extracted 162 gates and 298 wires to a netlist network with 135 inputs and 65 outputs.

3.121.79.1. Executing ABC.

3.121.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9532
Extracted 98 gates and 168 wires to a netlist network with 69 inputs and 65 outputs.

3.121.80.1. Executing ABC.

3.121.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9520
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.121.81.1. Executing ABC.

3.121.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9514
Extracted 152 gates and 191 wires to a netlist network with 39 inputs and 85 outputs.

3.121.82.1. Executing ABC.

3.121.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9511
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.121.83.1. Executing ABC.

3.121.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9505
Extracted 32 gates and 58 wires to a netlist network with 26 inputs and 29 outputs.

3.121.84.1. Executing ABC.

3.121.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9460
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.121.85.1. Executing ABC.

3.121.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9453
Extracted 227 gates and 379 wires to a netlist network with 151 inputs and 158 outputs.

3.121.86.1. Executing ABC.

3.121.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9450
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.121.87.1. Executing ABC.

3.121.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9638
Extracted 13 gates and 28 wires to a netlist network with 14 inputs and 9 outputs.

3.121.88.1. Executing ABC.

3.121.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9635
Extracted 92 gates and 143 wires to a netlist network with 51 inputs and 83 outputs.

3.121.89.1. Executing ABC.

3.121.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9632
Extracted 130 gates and 233 wires to a netlist network with 102 inputs and 65 outputs.

3.121.90.1. Executing ABC.

3.121.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9629
Extracted 66 gates and 103 wires to a netlist network with 36 inputs and 33 outputs.

3.121.91.1. Executing ABC.

3.121.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9617
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.121.92.1. Executing ABC.

3.121.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9611
Extracted 200 gates and 263 wires to a netlist network with 63 inputs and 133 outputs.

3.121.93.1. Executing ABC.

3.121.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9608
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.121.94.1. Executing ABC.

3.121.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9602
Extracted 16 gates and 32 wires to a netlist network with 16 inputs and 15 outputs.

3.121.95.1. Executing ABC.

3.121.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9557
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.96.1. Executing ABC.

3.121.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9550
Extracted 184 gates and 308 wires to a netlist network with 123 inputs and 142 outputs.

3.121.97.1. Executing ABC.

3.121.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9547
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.121.98.1. Executing ABC.

3.121.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9735
Extracted 11 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.121.99.1. Executing ABC.

3.121.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9732
Extracted 115 gates and 178 wires to a netlist network with 63 inputs and 106 outputs.

3.121.100.1. Executing ABC.

3.121.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9729
Extracted 162 gates and 298 wires to a netlist network with 135 inputs and 65 outputs.

3.121.101.1. Executing ABC.

3.121.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9726
Extracted 98 gates and 168 wires to a netlist network with 69 inputs and 65 outputs.

3.121.102.1. Executing ABC.

3.121.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9714
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.121.103.1. Executing ABC.

3.121.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9708
Extracted 152 gates and 191 wires to a netlist network with 39 inputs and 85 outputs.

3.121.104.1. Executing ABC.

3.121.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9441
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.121.105.1. Executing ABC.

3.121.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9705
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.121.106.1. Executing ABC.

3.121.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9699
Extracted 16 gates and 32 wires to a netlist network with 16 inputs and 15 outputs.

3.121.107.1. Executing ABC.

3.121.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9654
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.108.1. Executing ABC.

3.121.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9647
Extracted 210 gates and 355 wires to a netlist network with 144 inputs and 148 outputs.

3.121.109.1. Executing ABC.

3.121.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9644
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.121.110.1. Executing ABC.

3.121.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9832
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.121.111.1. Executing ABC.

3.121.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9829
Extracted 115 gates and 178 wires to a netlist network with 63 inputs and 106 outputs.

3.121.112.1. Executing ABC.

3.121.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9826
Extracted 130 gates and 233 wires to a netlist network with 102 inputs and 65 outputs.

3.121.113.1. Executing ABC.

3.121.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9823
Extracted 66 gates and 103 wires to a netlist network with 36 inputs and 33 outputs.

3.121.114.1. Executing ABC.

3.121.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9811
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.121.115.1. Executing ABC.

3.121.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9805
Extracted 152 gates and 191 wires to a netlist network with 39 inputs and 85 outputs.

3.121.116.1. Executing ABC.

3.121.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9802
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.121.117.1. Executing ABC.

3.121.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9796
Extracted 16 gates and 32 wires to a netlist network with 16 inputs and 15 outputs.

3.121.118.1. Executing ABC.

3.121.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9751
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.119.1. Executing ABC.

3.121.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9744
Extracted 190 gates and 314 wires to a netlist network with 123 inputs and 142 outputs.

3.121.120.1. Executing ABC.

3.121.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9741
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.121.121.1. Executing ABC.

3.121.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9481
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.122.1. Executing ABC.

3.121.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9474
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.123.1. Executing ABC.

3.121.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9467
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.124.1. Executing ABC.

3.121.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9720
Extracted 14 gates and 29 wires to a netlist network with 13 inputs and 6 outputs.

3.121.125.1. Executing ABC.

3.121.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9502
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.126.1. Executing ABC.

3.121.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9495
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.127.1. Executing ABC.

3.121.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$9488
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.121.128.1. Executing ABC.

3.121.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$9444
Extracted 9 gates and 20 wires to a netlist network with 10 inputs and 7 outputs.

3.121.129.1. Executing ABC.

3.121.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 1145 gates and 1826 wires to a netlist network with 680 inputs and 132 outputs.

3.121.130.1. Executing ABC.

3.121.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 3639 gates and 5041 wires to a netlist network with 1400 inputs and 881 outputs.

3.121.131.1. Executing ABC.

yosys> abc -dff

3.122. Executing ABC pass (technology mapping using ABC).

3.122.1. Summary of detected clock domains:
  12 cells in clk=\phy_clk_pad_i, en=$abc$34024$auto$opt_dff.cc:194:make_patterns_logic$9900, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$39795$auto$opt_dff.cc:219:make_patterns_logic$9502, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$33793$auto$opt_dff.cc:219:make_patterns_logic$9779, arst={ }, srst={ }
  36 cells in clk=\phy_clk_pad_i, en=$abc$34736$auto$opt_dff.cc:219:make_patterns_logic$9979, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9982, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$34011$auto$opt_dff.cc:194:make_patterns_logic$9903, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$36743$auto$opt_dff.cc:219:make_patterns_logic$9460, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$36681$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9644, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9714, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$abc$35211$auto$opt_dff.cc:194:make_patterns_logic$9848, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$36000$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$abc$33416$auto$opt_dff.cc:194:make_patterns_logic$10070, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$33407$auto$opt_dff.cc:194:make_patterns_logic$10073, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$33312$auto$opt_dff.cc:194:make_patterns_logic$10017, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$38621$auto$opt_dff.cc:219:make_patterns_logic$9654, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$33817$auto$opt_dff.cc:194:make_patterns_logic$9817, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$33809$auto$opt_dff.cc:219:make_patterns_logic$9793, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$33784$auto$opt_dff.cc:219:make_patterns_logic$9772, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$33774$auto$opt_dff.cc:219:make_patterns_logic$9758, arst={ }, srst={ }
  25 cells in clk=\phy_clk_pad_i, en=$abc$33614$auto$opt_dff.cc:194:make_patterns_logic$10049, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$33898$auto$opt_dff.cc:219:make_patterns_logic$9571, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$33397$auto$opt_dff.cc:219:make_patterns_logic$9564, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$39773$auto$opt_dff.cc:219:make_patterns_logic$9467, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$34335$auto$opt_dff.cc:194:make_patterns_logic$9934, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$35219$auto$opt_dff.cc:194:make_patterns_logic$9845, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9450, arst={ }, srst={ }
  31 cells in clk=\phy_clk_pad_i, en=$abc$34558$u1.u0.token_le_2, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9520, arst={ }, srst={ }
  14 cells in clk=\phy_clk_pad_i, en=$abc$39779$auto$opt_dff.cc:194:make_patterns_logic$9720, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$33924$auto$opt_dff.cc:194:make_patterns_logic$9526, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9547, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$37689$auto$opt_dff.cc:219:make_patterns_logic$9557, arst={ }, srst={ }
  15 cells in clk=\phy_clk_pad_i, en=$abc$37009$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9832, arst={ }, srst={ }
  45 cells in clk=\phy_clk_pad_i, en=$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10052, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$39801$auto$opt_dff.cc:219:make_patterns_logic$9495, arst={ }, srst={ }
  80 cells in clk=\phy_clk_pad_i, en=$abc$33936$auto$opt_dff.cc:219:make_patterns_logic$9925, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$abc$33909$auto$opt_dff.cc:194:make_patterns_logic$10014, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$38573$auto$opt_dff.cc:194:make_patterns_logic$9705, arst={ }, srst={ }
  146 cells in clk=\phy_clk_pad_i, en=$abc$39048$auto$opt_dff.cc:194:make_patterns_logic$9826, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$38567$auto$opt_dff.cc:194:make_patterns_logic$9441, arst={ }, srst={ }
  106 cells in clk=\phy_clk_pad_i, en=$abc$34346$auto$opt_dff.cc:194:make_patterns_logic$9931, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$33513$auto$opt_dff.cc:194:make_patterns_logic$10058, arst={ }, srst={ }
  49 cells in clk=\phy_clk_pad_i, en=$abc$33465$auto$opt_dff.cc:194:make_patterns_logic$10061, arst={ }, srst={ }
  14 cells in clk=\phy_clk_pad_i, en=$abc$33446$auto$opt_dff.cc:194:make_patterns_logic$10064, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$33427$auto$opt_dff.cc:194:make_patterns_logic$10067, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$33764$auto$opt_dff.cc:219:make_patterns_logic$9765, arst={ }, srst={ }
  21 cells in clk=\phy_clk_pad_i, en=$abc$33829$auto$opt_dff.cc:194:make_patterns_logic$10008, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$39807$auto$opt_dff.cc:219:make_patterns_logic$9488, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$39813$auto$opt_dff.cc:194:make_patterns_logic$9444, arst={ }, srst={ }
  122 cells in clk=\phy_clk_pad_i, en=$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9928, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$39767$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$39761$auto$opt_dff.cc:219:make_patterns_logic$9481, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9741, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$39514$auto$opt_dff.cc:219:make_patterns_logic$9751, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$39466$auto$opt_dff.cc:194:make_patterns_logic$9802, arst={ }, srst={ }
  33 cells in clk=\phy_clk_pad_i, en=$abc$39473$auto$opt_dff.cc:194:make_patterns_logic$9796, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9811, arst={ }, srst={ }
  194 cells in clk=\phy_clk_pad_i, en=$abc$39314$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst={ }
  91 cells in clk=\phy_clk_pad_i, en=$abc$39211$auto$opt_dff.cc:194:make_patterns_logic$9823, arst={ }, srst={ }
  131 cells in clk=\phy_clk_pad_i, en=$abc$34603$auto$opt_dff.cc:194:make_patterns_logic$9985, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$33801$auto$opt_dff.cc:219:make_patterns_logic$9786, arst={ }, srst={ }
  46 cells in clk=\phy_clk_pad_i, en=$abc$33520$auto$opt_dff.cc:194:make_patterns_logic$10055, arst={ }, srst={ }
  146 cells in clk=\phy_clk_pad_i, en=$abc$37946$auto$opt_dff.cc:194:make_patterns_logic$9732, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$37928$auto$opt_dff.cc:194:make_patterns_logic$9735, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$37641$auto$opt_dff.cc:194:make_patterns_logic$9608, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9617, arst={ }, srst={ }
  213 cells in clk=\phy_clk_pad_i, en=$abc$37695$auto$opt_dff.cc:194:make_patterns_logic$9550, arst={ }, srst={ }
  31 cells in clk=\phy_clk_pad_i, en=$abc$38580$auto$opt_dff.cc:194:make_patterns_logic$9699, arst={ }, srst={ }
  140 cells in clk=\phy_clk_pad_i, en=$abc$38117$auto$opt_dff.cc:194:make_patterns_logic$9729, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$35204$auto$opt_dff.cc:194:make_patterns_logic$9851, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$35183$auto$opt_dff.cc:194:make_patterns_logic$9860, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$35026$auto$opt_dff.cc:194:make_patterns_logic$9990, arst={ }, srst={ }
  134 cells in clk=\phy_clk_pad_i, en=$abc$33635$auto$opt_dff.cc:219:make_patterns_logic$10046, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$35141$auto$opt_dff.cc:219:make_patterns_logic$9950, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$abc$37648$auto$opt_dff.cc:194:make_patterns_logic$9602, arst={ }, srst={ }
  134 cells in clk=\phy_clk_pad_i, en=$abc$37175$auto$opt_dff.cc:194:make_patterns_logic$9632, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$36008$auto$opt_dff.cc:194:make_patterns_logic$9541, arst={ }, srst={ }
  182 cells in clk=\phy_clk_pad_i, en=$abc$36026$auto$opt_dff.cc:194:make_patterns_logic$9538, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35992$auto$opt_dff.cc:219:make_patterns_logic$9689, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35442$auto$opt_dff.cc:219:make_patterns_logic$9682, arst={ }, srst={ }
  12 cells in clk=\clk_i, en=$abc$35226$auto$simplemap.cc:251:simplemap_eqne$22911[1], arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35257$auto$opt_dff.cc:219:make_patterns_logic$9585, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35273$auto$opt_dff.cc:219:make_patterns_logic$9599, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$35417$auto$opt_dff.cc:219:make_patterns_logic$9661, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35434$auto$opt_dff.cc:219:make_patterns_logic$9675, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35246$auto$opt_dff.cc:219:make_patterns_logic$9578, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35265$auto$opt_dff.cc:219:make_patterns_logic$9592, arst={ }, srst={ }
  71 cells in clk=\clk_i, en=$abc$35281$auto$opt_dff.cc:194:make_patterns_logic$9836, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$35370$auto$opt_dff.cc:194:make_patterns_logic$9842, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$35405$auto$opt_dff.cc:194:make_patterns_logic$9623, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$35426$auto$opt_dff.cc:219:make_patterns_logic$9668, arst={ }, srst={ }
  1 cells in clk=\clk_i, en=$abc$35197$auto$opt_dff.cc:194:make_patterns_logic$9854, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$35176$auto$opt_dff.cc:194:make_patterns_logic$9863, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$35190$auto$opt_dff.cc:194:make_patterns_logic$9857, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$35168$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$35114$auto$opt_dff.cc:219:make_patterns_logic$9957, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$35087$auto$opt_dff.cc:219:make_patterns_logic$9964, arst={ }, srst={ }
  31 cells in clk=\phy_clk_pad_i, en=$abc$35032$u1.u0.token_le_1, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$abc$34988$auto$opt_dff.cc:194:make_patterns_logic$9996, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$35020$auto$opt_dff.cc:194:make_patterns_logic$9993, arst={ }, srst={ }
  30 cells in clk=\phy_clk_pad_i, en=$abc$34923$u1.u0.data_valid_d, arst={ }, srst={ }
  89 cells in clk=\phy_clk_pad_i, en=$abc$34834$auto$opt_dff.cc:194:make_patterns_logic$10002, arst={ }, srst={ }
  51 cells in clk=\phy_clk_pad_i, en=$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10005, arst={ }, srst={ }
  143 cells in clk=\phy_clk_pad_i, en=$abc$37027$auto$opt_dff.cc:194:make_patterns_logic$9635, arst={ }, srst={ }
  35 cells in clk=\phy_clk_pad_i, en=$abc$36688$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst={ }
  210 cells in clk=\phy_clk_pad_i, en=$abc$38627$auto$opt_dff.cc:194:make_patterns_logic$9647, arst={ }, srst={ }
  152 cells in clk=\phy_clk_pad_i, en=$abc$38877$auto$opt_dff.cc:194:make_patterns_logic$9829, arst={ }, srst={ }
  476 cells in clk=\phy_clk_pad_i, en=$abc$35450$auto$opt_dff.cc:194:make_patterns_logic$9872, arst={ }, srst={ }
  134 cells in clk=\phy_clk_pad_i, en=$abc$36231$auto$opt_dff.cc:194:make_patterns_logic$9535, arst={ }, srst={ }
  39 cells in clk=\phy_clk_pad_i, en=$abc$33852$auto$opt_dff.cc:194:make_patterns_logic$10011, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$34039$auto$opt_dff.cc:194:make_patterns_logic$9968, arst={ }, srst={ }
  231 cells in clk=\phy_clk_pad_i, en=$abc$37441$auto$opt_dff.cc:194:make_patterns_logic$9611, arst={ }, srst={ }
  81 cells in clk=\phy_clk_pad_i, en=$abc$33325$auto$opt_dff.cc:194:make_patterns_logic$10076, arst={ }, srst={ }
  204 cells in clk=\phy_clk_pad_i, en=$abc$36529$auto$opt_dff.cc:194:make_patterns_logic$9514, arst={ }, srst={ }
  92 cells in clk=\phy_clk_pad_i, en=$abc$37338$auto$opt_dff.cc:194:make_patterns_logic$9629, arst={ }, srst={ }
  20 cells in clk=\clk_i, en=$abc$35377$auto$opt_dff.cc:194:make_patterns_logic$9869, arst={ }, srst={ }
  194 cells in clk=\phy_clk_pad_i, en=$abc$36752$auto$opt_dff.cc:194:make_patterns_logic$9453, arst={ }, srst={ }
  206 cells in clk=\phy_clk_pad_i, en=$abc$39520$auto$opt_dff.cc:194:make_patterns_logic$9744, arst={ }, srst={ }
  106 cells in clk=\phy_clk_pad_i, en=$abc$35898$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  68 cells in clk=\phy_clk_pad_i, en=$abc$41071$lo189, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$34146$auto$opt_dff.cc:219:make_patterns_logic$9943, arst={ }, srst={ }
  1148 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  49 cells in clk=\phy_clk_pad_i, en=$abc$41071$u1.u2.fill_buf0, arst={ }, srst={ }
  49 cells in clk=\phy_clk_pad_i, en=$abc$41071$u1.u2.fill_buf1, arst={ }, srst={ }
  100 cells in clk=\phy_clk_pad_i, en=$abc$36394$auto$opt_dff.cc:194:make_patterns_logic$9532, arst={ }, srst={ }
  122 cells in clk=\phy_clk_pad_i, en=$abc$38280$auto$opt_dff.cc:194:make_patterns_logic$9726, arst={ }, srst={ }
  197 cells in clk=\phy_clk_pad_i, en=$abc$38415$auto$opt_dff.cc:194:make_patterns_logic$9708, arst={ }, srst={ }
  2392 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.122.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34024$auto$opt_dff.cc:194:make_patterns_logic$9900
Extracted 12 gates and 23 wires to a netlist network with 11 inputs and 8 outputs.

3.122.2.1. Executing ABC.

3.122.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39795$auto$opt_dff.cc:219:make_patterns_logic$9502
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 5 outputs.

3.122.3.1. Executing ABC.

3.122.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33793$auto$opt_dff.cc:219:make_patterns_logic$9779
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 5 outputs.

3.122.4.1. Executing ABC.

3.122.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34736$auto$opt_dff.cc:219:make_patterns_logic$9979
Extracted 36 gates and 44 wires to a netlist network with 8 inputs and 10 outputs.

3.122.5.1. Executing ABC.

3.122.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9982
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.122.6.1. Executing ABC.

3.122.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34011$auto$opt_dff.cc:194:make_patterns_logic$9903
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 6 outputs.

3.122.7.1. Executing ABC.

3.122.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36743$auto$opt_dff.cc:219:make_patterns_logic$9460
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.122.8.1. Executing ABC.

3.122.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36681$auto$opt_dff.cc:194:make_patterns_logic$9511
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.122.9.1. Executing ABC.

3.122.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9644
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.122.10.1. Executing ABC.

3.122.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9714
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.122.11.1. Executing ABC.

3.122.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35211$auto$opt_dff.cc:194:make_patterns_logic$9848
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 5 outputs.

3.122.12.1. Executing ABC.

3.122.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36000$auto$opt_dff.cc:219:make_patterns_logic$9696
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 5 outputs.

3.122.13.1. Executing ABC.

3.122.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33416$auto$opt_dff.cc:194:make_patterns_logic$10070
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 3 outputs.

3.122.14.1. Executing ABC.

3.122.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33407$auto$opt_dff.cc:194:make_patterns_logic$10073
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.122.15.1. Executing ABC.

3.122.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33312$auto$opt_dff.cc:194:make_patterns_logic$10017
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.122.16.1. Executing ABC.

3.122.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38621$auto$opt_dff.cc:219:make_patterns_logic$9654
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.122.17.1. Executing ABC.

3.122.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33817$auto$opt_dff.cc:194:make_patterns_logic$9817
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 5 outputs.

3.122.18.1. Executing ABC.

3.122.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33809$auto$opt_dff.cc:219:make_patterns_logic$9793
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.122.19.1. Executing ABC.

3.122.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33784$auto$opt_dff.cc:219:make_patterns_logic$9772
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.122.20.1. Executing ABC.

3.122.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33774$auto$opt_dff.cc:219:make_patterns_logic$9758
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.122.21.1. Executing ABC.

3.122.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33614$auto$opt_dff.cc:194:make_patterns_logic$10049
Extracted 25 gates and 46 wires to a netlist network with 21 inputs and 18 outputs.

3.122.22.1. Executing ABC.

3.122.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33898$auto$opt_dff.cc:219:make_patterns_logic$9571
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 5 outputs.

3.122.23.1. Executing ABC.

3.122.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33397$auto$opt_dff.cc:219:make_patterns_logic$9564
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.122.24.1. Executing ABC.

3.122.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39773$auto$opt_dff.cc:219:make_patterns_logic$9467
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.122.25.1. Executing ABC.

3.122.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34335$auto$opt_dff.cc:194:make_patterns_logic$9934
Extracted 12 gates and 22 wires to a netlist network with 10 inputs and 3 outputs.

3.122.26.1. Executing ABC.

3.122.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35219$auto$opt_dff.cc:194:make_patterns_logic$9845
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.122.27.1. Executing ABC.

3.122.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9450
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.122.28.1. Executing ABC.

3.122.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34558$u1.u0.token_le_2
Extracted 31 gates and 57 wires to a netlist network with 26 inputs and 23 outputs.

3.122.29.1. Executing ABC.

3.122.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9520
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.122.30.1. Executing ABC.

3.122.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39779$auto$opt_dff.cc:194:make_patterns_logic$9720
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 6 outputs.

3.122.31.1. Executing ABC.

3.122.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33924$auto$opt_dff.cc:194:make_patterns_logic$9526
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 5 outputs.

3.122.32.1. Executing ABC.

3.122.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9547
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.122.33.1. Executing ABC.

3.122.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37689$auto$opt_dff.cc:219:make_patterns_logic$9557
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 4 outputs.

3.122.34.1. Executing ABC.

3.122.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37009$auto$opt_dff.cc:194:make_patterns_logic$9638
Extracted 15 gates and 29 wires to a netlist network with 14 inputs and 12 outputs.

3.122.35.1. Executing ABC.

3.122.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9832
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 2 outputs.

3.122.36.1. Executing ABC.

3.122.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10052
Extracted 45 gates and 48 wires to a netlist network with 3 inputs and 11 outputs.

3.122.37.1. Executing ABC.

3.122.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39801$auto$opt_dff.cc:219:make_patterns_logic$9495
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.122.38.1. Executing ABC.

3.122.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33936$auto$opt_dff.cc:219:make_patterns_logic$9925
Extracted 80 gates and 109 wires to a netlist network with 29 inputs and 12 outputs.

3.122.39.1. Executing ABC.

3.122.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33909$auto$opt_dff.cc:194:make_patterns_logic$10014
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.122.40.1. Executing ABC.

3.122.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38573$auto$opt_dff.cc:194:make_patterns_logic$9705
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.122.41.1. Executing ABC.

3.122.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39048$auto$opt_dff.cc:194:make_patterns_logic$9826
Extracted 146 gates and 264 wires to a netlist network with 118 inputs and 63 outputs.

3.122.42.1. Executing ABC.

3.122.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$38567$auto$opt_dff.cc:194:make_patterns_logic$9441
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.43.1. Executing ABC.

3.122.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34346$auto$opt_dff.cc:194:make_patterns_logic$9931
Extracted 106 gates and 124 wires to a netlist network with 17 inputs and 9 outputs.

3.122.44.1. Executing ABC.

3.122.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33513$auto$opt_dff.cc:194:make_patterns_logic$10058
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.122.45.1. Executing ABC.

3.122.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33465$auto$opt_dff.cc:194:make_patterns_logic$10061
Extracted 49 gates and 60 wires to a netlist network with 11 inputs and 24 outputs.

3.122.46.1. Executing ABC.

3.122.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33446$auto$opt_dff.cc:194:make_patterns_logic$10064
Extracted 14 gates and 20 wires to a netlist network with 6 inputs and 3 outputs.

3.122.47.1. Executing ABC.

3.122.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33427$auto$opt_dff.cc:194:make_patterns_logic$10067
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 3 outputs.

3.122.48.1. Executing ABC.

3.122.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33764$auto$opt_dff.cc:219:make_patterns_logic$9765
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.122.49.1. Executing ABC.

3.122.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33829$auto$opt_dff.cc:194:make_patterns_logic$10008
Extracted 21 gates and 26 wires to a netlist network with 5 inputs and 5 outputs.

3.122.50.1. Executing ABC.

3.122.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39807$auto$opt_dff.cc:219:make_patterns_logic$9488
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.51.1. Executing ABC.

3.122.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39813$auto$opt_dff.cc:194:make_patterns_logic$9444
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.122.52.1. Executing ABC.

3.122.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9928
Extracted 122 gates and 185 wires to a netlist network with 63 inputs and 79 outputs.

3.122.53.1. Executing ABC.

3.122.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39767$auto$opt_dff.cc:219:make_patterns_logic$9474
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.54.1. Executing ABC.

3.122.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39761$auto$opt_dff.cc:219:make_patterns_logic$9481
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.122.55.1. Executing ABC.

3.122.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9741
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.122.56.1. Executing ABC.

3.122.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39514$auto$opt_dff.cc:219:make_patterns_logic$9751
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.122.57.1. Executing ABC.

3.122.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39466$auto$opt_dff.cc:194:make_patterns_logic$9802
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.122.58.1. Executing ABC.

3.122.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39473$auto$opt_dff.cc:194:make_patterns_logic$9796
Extracted 33 gates and 64 wires to a netlist network with 31 inputs and 28 outputs.

3.122.59.1. Executing ABC.

3.122.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9811
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.122.60.1. Executing ABC.

3.122.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39314$auto$opt_dff.cc:194:make_patterns_logic$9805
Extracted 194 gates and 226 wires to a netlist network with 32 inputs and 50 outputs.

3.122.61.1. Executing ABC.

3.122.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39211$auto$opt_dff.cc:194:make_patterns_logic$9823
Extracted 91 gates and 153 wires to a netlist network with 62 inputs and 52 outputs.

3.122.62.1. Executing ABC.

3.122.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34603$auto$opt_dff.cc:194:make_patterns_logic$9985
Extracted 131 gates and 170 wires to a netlist network with 39 inputs and 28 outputs.

3.122.63.1. Executing ABC.

3.122.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33801$auto$opt_dff.cc:219:make_patterns_logic$9786
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.64.1. Executing ABC.

3.122.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33520$auto$opt_dff.cc:194:make_patterns_logic$10055
Extracted 46 gates and 48 wires to a netlist network with 2 inputs and 12 outputs.

3.122.65.1. Executing ABC.

3.122.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37946$auto$opt_dff.cc:194:make_patterns_logic$9732
Extracted 146 gates and 243 wires to a netlist network with 97 inputs and 113 outputs.

3.122.66.1. Executing ABC.

3.122.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37928$auto$opt_dff.cc:194:make_patterns_logic$9735
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 8 outputs.

3.122.67.1. Executing ABC.

3.122.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$37641$auto$opt_dff.cc:194:make_patterns_logic$9608
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.122.68.1. Executing ABC.

3.122.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9617
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.122.69.1. Executing ABC.

3.122.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37695$auto$opt_dff.cc:194:make_patterns_logic$9550
Extracted 213 gates and 356 wires to a netlist network with 143 inputs and 137 outputs.

3.122.70.1. Executing ABC.

3.122.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38580$auto$opt_dff.cc:194:make_patterns_logic$9699
Extracted 31 gates and 59 wires to a netlist network with 28 inputs and 26 outputs.

3.122.71.1. Executing ABC.

3.122.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38117$auto$opt_dff.cc:194:make_patterns_logic$9729
Extracted 140 gates and 252 wires to a netlist network with 112 inputs and 65 outputs.

3.122.72.1. Executing ABC.

3.122.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35204$auto$opt_dff.cc:194:make_patterns_logic$9851
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.122.73.1. Executing ABC.

3.122.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35183$auto$opt_dff.cc:194:make_patterns_logic$9860
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 3 outputs.

3.122.74.1. Executing ABC.

3.122.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35026$auto$opt_dff.cc:194:make_patterns_logic$9990
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.122.75.1. Executing ABC.

3.122.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33635$auto$opt_dff.cc:219:make_patterns_logic$10046
Extracted 134 gates and 178 wires to a netlist network with 44 inputs and 28 outputs.

3.122.76.1. Executing ABC.

3.122.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35141$auto$opt_dff.cc:219:make_patterns_logic$9950
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.122.77.1. Executing ABC.

3.122.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37648$auto$opt_dff.cc:194:make_patterns_logic$9602
Extracted 32 gates and 60 wires to a netlist network with 28 inputs and 26 outputs.

3.122.78.1. Executing ABC.

3.122.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37175$auto$opt_dff.cc:194:make_patterns_logic$9632
Extracted 134 gates and 240 wires to a netlist network with 106 inputs and 58 outputs.

3.122.79.1. Executing ABC.

3.122.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36008$auto$opt_dff.cc:194:make_patterns_logic$9541
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 7 outputs.

3.122.80.1. Executing ABC.

3.122.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36026$auto$opt_dff.cc:194:make_patterns_logic$9538
Extracted 182 gates and 277 wires to a netlist network with 95 inputs and 109 outputs.

3.122.81.1. Executing ABC.

3.122.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35992$auto$opt_dff.cc:219:make_patterns_logic$9689
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.82.1. Executing ABC.

3.122.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35442$auto$opt_dff.cc:219:make_patterns_logic$9682
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.83.1. Executing ABC.

3.122.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35226$auto$simplemap.cc:251:simplemap_eqne$22911[1]
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 10 outputs.

3.122.84.1. Executing ABC.

3.122.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35257$auto$opt_dff.cc:219:make_patterns_logic$9585
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.85.1. Executing ABC.

3.122.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35273$auto$opt_dff.cc:219:make_patterns_logic$9599
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.86.1. Executing ABC.

3.122.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35417$auto$opt_dff.cc:219:make_patterns_logic$9661
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.122.87.1. Executing ABC.

3.122.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35434$auto$opt_dff.cc:219:make_patterns_logic$9675
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.88.1. Executing ABC.

3.122.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35246$auto$opt_dff.cc:219:make_patterns_logic$9578
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.89.1. Executing ABC.

3.122.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35265$auto$opt_dff.cc:219:make_patterns_logic$9592
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.90.1. Executing ABC.

3.122.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35281$auto$opt_dff.cc:194:make_patterns_logic$9836
Extracted 71 gates and 107 wires to a netlist network with 36 inputs and 37 outputs.

3.122.91.1. Executing ABC.

3.122.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35370$auto$opt_dff.cc:194:make_patterns_logic$9842
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 3 outputs.

3.122.92.1. Executing ABC.

3.122.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35405$auto$opt_dff.cc:194:make_patterns_logic$9623
Extracted 9 gates and 16 wires to a netlist network with 7 inputs and 5 outputs.

3.122.93.1. Executing ABC.

3.122.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35426$auto$opt_dff.cc:219:make_patterns_logic$9668
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.122.94.1. Executing ABC.

3.122.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35197$auto$opt_dff.cc:194:make_patterns_logic$9854
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.122.95.1. Executing ABC.

3.122.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35176$auto$opt_dff.cc:194:make_patterns_logic$9863
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.122.96.1. Executing ABC.

3.122.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35190$auto$opt_dff.cc:194:make_patterns_logic$9857
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.122.97.1. Executing ABC.

3.122.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35168$auto$opt_dff.cc:194:make_patterns_logic$9866
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.122.98.1. Executing ABC.

3.122.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35114$auto$opt_dff.cc:219:make_patterns_logic$9957
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.122.99.1. Executing ABC.

3.122.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35087$auto$opt_dff.cc:219:make_patterns_logic$9964
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.122.100.1. Executing ABC.

3.122.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35032$u1.u0.token_le_1
Extracted 31 gates and 54 wires to a netlist network with 23 inputs and 27 outputs.

3.122.101.1. Executing ABC.

3.122.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34988$auto$opt_dff.cc:194:make_patterns_logic$9996
Extracted 32 gates and 44 wires to a netlist network with 12 inputs and 16 outputs.

3.122.102.1. Executing ABC.

3.122.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35020$auto$opt_dff.cc:194:make_patterns_logic$9993
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.122.103.1. Executing ABC.

3.122.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34923$u1.u0.data_valid_d
Extracted 30 gates and 45 wires to a netlist network with 15 inputs and 10 outputs.

3.122.104.1. Executing ABC.

3.122.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34834$auto$opt_dff.cc:194:make_patterns_logic$10002
Extracted 89 gates and 101 wires to a netlist network with 12 inputs and 10 outputs.

3.122.105.1. Executing ABC.

3.122.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10005
Extracted 51 gates and 54 wires to a netlist network with 3 inputs and 13 outputs.

3.122.106.1. Executing ABC.

3.122.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37027$auto$opt_dff.cc:194:make_patterns_logic$9635
Extracted 143 gates and 226 wires to a netlist network with 83 inputs and 107 outputs.

3.122.107.1. Executing ABC.

3.122.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36688$auto$opt_dff.cc:194:make_patterns_logic$9505
Extracted 35 gates and 68 wires to a netlist network with 33 inputs and 26 outputs.

3.122.108.1. Executing ABC.

3.122.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38627$auto$opt_dff.cc:194:make_patterns_logic$9647
Extracted 210 gates and 347 wires to a netlist network with 137 inputs and 134 outputs.

3.122.109.1. Executing ABC.

3.122.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38877$auto$opt_dff.cc:194:make_patterns_logic$9829
Extracted 152 gates and 247 wires to a netlist network with 95 inputs and 116 outputs.

3.122.110.1. Executing ABC.

3.122.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35450$auto$opt_dff.cc:194:make_patterns_logic$9872
Extracted 470 gates and 682 wires to a netlist network with 212 inputs and 259 outputs.

3.122.111.1. Executing ABC.

3.122.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36231$auto$opt_dff.cc:194:make_patterns_logic$9535
Extracted 134 gates and 240 wires to a netlist network with 106 inputs and 54 outputs.

3.122.112.1. Executing ABC.

3.122.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33852$auto$opt_dff.cc:194:make_patterns_logic$10011
Extracted 39 gates and 54 wires to a netlist network with 15 inputs and 23 outputs.

3.122.113.1. Executing ABC.

3.122.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34039$auto$opt_dff.cc:194:make_patterns_logic$9968
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 2 outputs.

3.122.114.1. Executing ABC.

3.122.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37441$auto$opt_dff.cc:194:make_patterns_logic$9611
Extracted 231 gates and 297 wires to a netlist network with 66 inputs and 114 outputs.

3.122.115.1. Executing ABC.

3.122.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$33325$auto$opt_dff.cc:194:make_patterns_logic$10076
Extracted 81 gates and 128 wires to a netlist network with 47 inputs and 10 outputs.

3.122.116.1. Executing ABC.

3.122.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36529$auto$opt_dff.cc:194:make_patterns_logic$9514
Extracted 204 gates and 240 wires to a netlist network with 36 inputs and 58 outputs.

3.122.117.1. Executing ABC.

3.122.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$37338$auto$opt_dff.cc:194:make_patterns_logic$9629
Extracted 92 gates and 155 wires to a netlist network with 63 inputs and 49 outputs.

3.122.118.1. Executing ABC.

3.122.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$35377$auto$opt_dff.cc:194:make_patterns_logic$9869
Extracted 20 gates and 38 wires to a netlist network with 18 inputs and 16 outputs.

3.122.119.1. Executing ABC.

3.122.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36752$auto$opt_dff.cc:194:make_patterns_logic$9453
Extracted 194 gates and 318 wires to a netlist network with 124 inputs and 117 outputs.

3.122.120.1. Executing ABC.

3.122.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$39520$auto$opt_dff.cc:194:make_patterns_logic$9744
Extracted 206 gates and 337 wires to a netlist network with 131 inputs and 124 outputs.

3.122.121.1. Executing ABC.

3.122.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$35898$auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 106 gates and 140 wires to a netlist network with 34 inputs and 17 outputs.

3.122.122.1. Executing ABC.

3.122.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41071$lo189
Extracted 68 gates and 137 wires to a netlist network with 69 inputs and 34 outputs.

3.122.123.1. Executing ABC.

3.122.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$34146$auto$opt_dff.cc:219:make_patterns_logic$9943
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.122.124.1. Executing ABC.

3.122.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 1148 gates and 1830 wires to a netlist network with 682 inputs and 111 outputs.

3.122.125.1. Executing ABC.

3.122.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41071$u1.u2.fill_buf0
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.122.126.1. Executing ABC.

3.122.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$41071$u1.u2.fill_buf1
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.122.127.1. Executing ABC.

3.122.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$36394$auto$opt_dff.cc:194:make_patterns_logic$9532
Extracted 100 gates and 171 wires to a netlist network with 71 inputs and 56 outputs.

3.122.128.1. Executing ABC.

3.122.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38280$auto$opt_dff.cc:194:make_patterns_logic$9726
Extracted 122 gates and 215 wires to a netlist network with 93 inputs and 65 outputs.

3.122.129.1. Executing ABC.

3.122.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$38415$auto$opt_dff.cc:194:make_patterns_logic$9708
Extracted 197 gates and 235 wires to a netlist network with 38 inputs and 57 outputs.

3.122.130.1. Executing ABC.

3.122.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 2381 gates and 3329 wires to a netlist network with 948 inputs and 648 outputs.

3.122.131.1. Executing ABC.

yosys> abc -dff

3.123. Executing ABC pass (technology mapping using ABC).

3.123.1. Summary of detected clock domains:
  11 cells in clk=\phy_clk_pad_i, en=$abc$44330$abc$34024$auto$opt_dff.cc:194:make_patterns_logic$9900, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$44343$abc$39795$auto$opt_dff.cc:219:make_patterns_logic$9502, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$44352$abc$33793$auto$opt_dff.cc:219:make_patterns_logic$9779, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$44396$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9982, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$44401$abc$34011$auto$opt_dff.cc:194:make_patterns_logic$9903, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$44414$abc$36743$auto$opt_dff.cc:219:make_patterns_logic$9460, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$44424$abc$36681$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$44431$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9644, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$44436$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9714, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$abc$44442$abc$35211$auto$opt_dff.cc:194:make_patterns_logic$9848, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$44450$abc$36000$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$abc$44459$abc$33416$auto$opt_dff.cc:194:make_patterns_logic$10070, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$44469$abc$33407$auto$opt_dff.cc:194:make_patterns_logic$10073, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$abc$44477$abc$33312$auto$opt_dff.cc:194:make_patterns_logic$10017, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$44486$abc$38621$auto$opt_dff.cc:219:make_patterns_logic$9654, arst={ }, srst={ }
  14 cells in clk=\phy_clk_pad_i, en=$abc$44494$abc$33817$auto$opt_dff.cc:194:make_patterns_logic$9817, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$44506$abc$33809$auto$opt_dff.cc:219:make_patterns_logic$9793, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$44514$abc$33784$auto$opt_dff.cc:219:make_patterns_logic$9772, arst={ }, srst={ }
  8 cells in clk=\phy_clk_pad_i, en=$abc$44523$abc$33774$auto$opt_dff.cc:219:make_patterns_logic$9758, arst={ }, srst={ }
  26 cells in clk=\phy_clk_pad_i, en=$abc$44532$abc$33614$auto$opt_dff.cc:194:make_patterns_logic$10049, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$44558$abc$33898$auto$opt_dff.cc:219:make_patterns_logic$9571, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$44567$abc$33397$auto$opt_dff.cc:219:make_patterns_logic$9564, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$44575$abc$39773$auto$opt_dff.cc:219:make_patterns_logic$9467, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$44582$abc$34335$auto$opt_dff.cc:194:make_patterns_logic$9934, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$50696$abc$35219$auto$opt_dff.cc:194:make_patterns_logic$9845, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$44600$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9450, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$44646$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9520, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$44652$abc$39779$auto$opt_dff.cc:194:make_patterns_logic$9720, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9547, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$44683$abc$37689$auto$opt_dff.cc:219:make_patterns_logic$9557, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$44712$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9832, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$44764$abc$39801$auto$opt_dff.cc:219:make_patterns_logic$9495, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$44848$abc$33909$auto$opt_dff.cc:194:make_patterns_logic$10014, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$44862$abc$38573$auto$opt_dff.cc:194:make_patterns_logic$9705, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$45030$abc$38567$auto$opt_dff.cc:194:make_patterns_logic$9441, arst={ }, srst={ }
  106 cells in clk=\phy_clk_pad_i, en=$abc$45035$abc$34346$auto$opt_dff.cc:194:make_patterns_logic$9931, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$45142$abc$33513$auto$opt_dff.cc:194:make_patterns_logic$10058, arst={ }, srst={ }
  40 cells in clk=\phy_clk_pad_i, en=$abc$45149$abc$33465$auto$opt_dff.cc:194:make_patterns_logic$10061, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$abc$45217$abc$33427$auto$opt_dff.cc:194:make_patterns_logic$10067, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$45229$abc$33764$auto$opt_dff.cc:219:make_patterns_logic$9765, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$45262$abc$39807$auto$opt_dff.cc:219:make_patterns_logic$9488, arst={ }, srst={ }
  16 cells in clk=\phy_clk_pad_i, en=$abc$45268$abc$39813$auto$opt_dff.cc:194:make_patterns_logic$9444, arst={ }, srst={ }
  21 cells in clk=\phy_clk_pad_i, en=$abc$45240$abc$33829$auto$opt_dff.cc:194:make_patterns_logic$10008, arst={ }, srst={ }
  117 cells in clk=\phy_clk_pad_i, en=$abc$45286$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9928, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$45398$abc$39767$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$45404$abc$39761$auto$opt_dff.cc:219:make_patterns_logic$9481, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$45413$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9741, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$45418$abc$39514$auto$opt_dff.cc:219:make_patterns_logic$9751, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$45425$abc$39466$auto$opt_dff.cc:194:make_patterns_logic$9802, arst={ }, srst={ }
  30 cells in clk=\phy_clk_pad_i, en=$abc$45432$abc$39473$auto$opt_dff.cc:194:make_patterns_logic$9796, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9811, arst={ }, srst={ }
  187 cells in clk=\phy_clk_pad_i, en=$abc$45490$abc$39314$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$45199$abc$33446$auto$opt_dff.cc:194:make_patterns_logic$10064, arst={ }, srst={ }
  132 cells in clk=\phy_clk_pad_i, en=$abc$45843$abc$34603$auto$opt_dff.cc:194:make_patterns_logic$9985, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$45976$abc$33801$auto$opt_dff.cc:219:make_patterns_logic$9786, arst={ }, srst={ }
  46 cells in clk=\phy_clk_pad_i, en=$abc$45982$abc$33520$auto$opt_dff.cc:194:make_patterns_logic$10055, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$44667$abc$33924$auto$opt_dff.cc:194:make_patterns_logic$9526, arst={ }, srst={ }
  13 cells in clk=\phy_clk_pad_i, en=$abc$46207$abc$37928$auto$opt_dff.cc:194:make_patterns_logic$9735, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$46224$abc$37641$auto$opt_dff.cc:194:make_patterns_logic$9608, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9617, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$abc$46500$abc$38580$auto$opt_dff.cc:194:make_patterns_logic$9699, arst={ }, srst={ }
  28 cells in clk=\phy_clk_pad_i, en=$abc$44605$abc$34558$u1.u0.token_le_2, arst={ }, srst={ }
  45 cells in clk=\phy_clk_pad_i, en=$abc$44718$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10052, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$50696$abc$35204$auto$opt_dff.cc:194:make_patterns_logic$9851, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$46720$abc$35183$auto$opt_dff.cc:194:make_patterns_logic$9860, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$46726$abc$35026$auto$opt_dff.cc:194:make_patterns_logic$9990, arst={ }, srst={ }
  104 cells in clk=\phy_clk_pad_i, en=$abc$45725$abc$39211$auto$opt_dff.cc:194:make_patterns_logic$9823, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$46864$abc$35141$auto$opt_dff.cc:219:make_patterns_logic$9950, arst={ }, srst={ }
  40 cells in clk=\phy_clk_pad_i, en=$abc$46891$abc$37648$auto$opt_dff.cc:194:make_patterns_logic$9602, arst={ }, srst={ }
  134 cells in clk=\phy_clk_pad_i, en=$abc$46943$abc$37175$auto$opt_dff.cc:194:make_patterns_logic$9632, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$47099$abc$36008$auto$opt_dff.cc:194:make_patterns_logic$9541, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$47289$abc$35992$auto$opt_dff.cc:219:make_patterns_logic$9689, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$47295$abc$35442$auto$opt_dff.cc:219:make_patterns_logic$9682, arst={ }, srst={ }
  12 cells in clk=\clk_i, en=$abc$47301$abc$35226$auto$simplemap.cc:251:simplemap_eqne$22911[1], arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$47322$abc$35257$auto$opt_dff.cc:219:make_patterns_logic$9585, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$47328$abc$35273$auto$opt_dff.cc:219:make_patterns_logic$9599, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$47334$abc$35417$auto$opt_dff.cc:219:make_patterns_logic$9661, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$47340$abc$35434$auto$opt_dff.cc:219:make_patterns_logic$9675, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$47346$abc$35246$auto$opt_dff.cc:219:make_patterns_logic$9578, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$47352$abc$35265$auto$opt_dff.cc:219:make_patterns_logic$9592, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$47435$abc$35370$auto$opt_dff.cc:194:make_patterns_logic$9842, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$47441$abc$35405$auto$opt_dff.cc:194:make_patterns_logic$9623, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$47453$abc$35426$auto$opt_dff.cc:219:make_patterns_logic$9668, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$50696$abc$35197$auto$opt_dff.cc:194:make_patterns_logic$9854, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$47463$abc$35176$auto$opt_dff.cc:194:make_patterns_logic$9863, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$50696$abc$35190$auto$opt_dff.cc:194:make_patterns_logic$9857, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$50696$abc$35168$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$47478$abc$35114$auto$opt_dff.cc:219:make_patterns_logic$9957, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$47505$abc$35087$auto$opt_dff.cc:219:make_patterns_logic$9964, arst={ }, srst={ }
  35 cells in clk=\phy_clk_pad_i, en=$abc$47532$abc$35032$u1.u0.token_le_1, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$abc$47579$abc$34988$auto$opt_dff.cc:194:make_patterns_logic$9996, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$47612$abc$35020$auto$opt_dff.cc:194:make_patterns_logic$9993, arst={ }, srst={ }
  30 cells in clk=\phy_clk_pad_i, en=$abc$47618$abc$34923$u1.u0.data_valid_d, arst={ }, srst={ }
  55 cells in clk=\phy_clk_pad_i, en=$abc$47769$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10005, arst={ }, srst={ }
  24 cells in clk=\phy_clk_pad_i, en=$abc$48010$abc$36688$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst={ }
  223 cells in clk=\phy_clk_pad_i, en=$abc$48062$abc$38627$auto$opt_dff.cc:194:make_patterns_logic$9647, arst={ }, srst={ }
  156 cells in clk=\phy_clk_pad_i, en=$abc$48314$abc$38877$auto$opt_dff.cc:194:make_patterns_logic$9829, arst={ }, srst={ }
  76 cells in clk=\phy_clk_pad_i, en=$abc$44771$abc$33936$auto$opt_dff.cc:219:make_patterns_logic$9925, arst={ }, srst={ }
  87 cells in clk=\phy_clk_pad_i, en=$abc$47681$abc$34834$auto$opt_dff.cc:194:make_patterns_logic$10002, arst={ }, srst={ }
  482 cells in clk=\phy_clk_pad_i, en=$abc$48495$abc$35450$auto$opt_dff.cc:194:make_patterns_logic$9872, arst={ }, srst={ }
  128 cells in clk=\phy_clk_pad_i, en=$abc$49033$abc$36231$auto$opt_dff.cc:194:make_patterns_logic$9535, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$49231$abc$34039$auto$opt_dff.cc:194:make_patterns_logic$9968, arst={ }, srst={ }
  78 cells in clk=\phy_clk_pad_i, en=$abc$49508$abc$33325$auto$opt_dff.cc:194:make_patterns_logic$10076, arst={ }, srst={ }
  193 cells in clk=\phy_clk_pad_i, en=$abc$49594$abc$36529$auto$opt_dff.cc:194:make_patterns_logic$9514, arst={ }, srst={ }
  149 cells in clk=\phy_clk_pad_i, en=$abc$47838$abc$37027$auto$opt_dff.cc:194:make_patterns_logic$9635, arst={ }, srst={ }
  17 cells in clk=\clk_i, en=$abc$49946$abc$35377$auto$opt_dff.cc:194:make_patterns_logic$9869, arst={ }, srst={ }
  235 cells in clk=\phy_clk_pad_i, en=$abc$49980$abc$36752$auto$opt_dff.cc:194:make_patterns_logic$9453, arst={ }, srst={ }
  238 cells in clk=\phy_clk_pad_i, en=$abc$46235$abc$37695$auto$opt_dff.cc:194:make_patterns_logic$9550, arst={ }, srst={ }
  237 cells in clk=\phy_clk_pad_i, en=$abc$50215$abc$39520$auto$opt_dff.cc:194:make_patterns_logic$9744, arst={ }, srst={ }
  166 cells in clk=\phy_clk_pad_i, en=$abc$46029$abc$37946$auto$opt_dff.cc:194:make_patterns_logic$9732, arst={ }, srst={ }
  214 cells in clk=\phy_clk_pad_i, en=$abc$52361$abc$38415$auto$opt_dff.cc:194:make_patterns_logic$9708, arst={ }, srst={ }
  33 cells in clk=\phy_clk_pad_i, en=$abc$49185$abc$33852$auto$opt_dff.cc:194:make_patterns_logic$10011, arst={ }, srst={ }
  101 cells in clk=\phy_clk_pad_i, en=$abc$50465$abc$35898$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$50669$abc$34146$auto$opt_dff.cc:219:make_patterns_logic$9943, arst={ }, srst={ }
  49 cells in clk=\phy_clk_pad_i, en=$abc$51944$abc$41071$u1.u2.fill_buf0, arst={ }, srst={ }
  136 cells in clk=\phy_clk_pad_i, en=$abc$44869$abc$39048$auto$opt_dff.cc:194:make_patterns_logic$9826, arst={ }, srst={ }
  49 cells in clk=\phy_clk_pad_i, en=$abc$52026$abc$41071$u1.u2.fill_buf1, arst={ }, srst={ }
  94 cells in clk=\phy_clk_pad_i, en=$abc$52108$abc$36394$auto$opt_dff.cc:194:make_patterns_logic$9532, arst={ }, srst={ }
  118 cells in clk=\phy_clk_pad_i, en=$abc$52230$abc$38280$auto$opt_dff.cc:194:make_patterns_logic$9726, arst={ }, srst={ }
  14 cells in clk=\phy_clk_pad_i, en=$abc$44691$abc$37009$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst={ }
  62 cells in clk=\clk_i, en=$abc$47358$abc$35281$auto$opt_dff.cc:194:make_patterns_logic$9836, arst={ }, srst={ }
  133 cells in clk=\phy_clk_pad_i, en=$abc$46733$abc$33635$auto$opt_dff.cc:219:make_patterns_logic$10046, arst={ }, srst={ }
  64 cells in clk=\phy_clk_pad_i, en=$abc$52595$lo218, arst={ }, srst={ }
  100 cells in clk=\phy_clk_pad_i, en=$abc$49831$abc$37338$auto$opt_dff.cc:194:make_patterns_logic$9629, arst={ }, srst={ }
  249 cells in clk=\phy_clk_pad_i, en=$abc$49237$abc$37441$auto$opt_dff.cc:194:make_patterns_logic$9611, arst={ }, srst={ }
  1167 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  142 cells in clk=\phy_clk_pad_i, en=$abc$46552$abc$38117$auto$opt_dff.cc:194:make_patterns_logic$9729, arst={ }, srst={ }
  171 cells in clk=\phy_clk_pad_i, en=$abc$47115$abc$36026$auto$opt_dff.cc:194:make_patterns_logic$9538, arst={ }, srst={ }
  36 cells in clk=\phy_clk_pad_i, en=$abc$44361$abc$34736$auto$opt_dff.cc:219:make_patterns_logic$9979, arst={ }, srst={ }
  2395 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.123.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44330$abc$34024$auto$opt_dff.cc:194:make_patterns_logic$9900
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 8 outputs.

3.123.2.1. Executing ABC.

3.123.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44343$abc$39795$auto$opt_dff.cc:219:make_patterns_logic$9502
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.123.3.1. Executing ABC.

3.123.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44352$abc$33793$auto$opt_dff.cc:219:make_patterns_logic$9779
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.123.4.1. Executing ABC.

3.123.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44396$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9982
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.123.5.1. Executing ABC.

3.123.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44401$abc$34011$auto$opt_dff.cc:194:make_patterns_logic$9903
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 6 outputs.

3.123.6.1. Executing ABC.

3.123.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44414$abc$36743$auto$opt_dff.cc:219:make_patterns_logic$9460
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.123.7.1. Executing ABC.

3.123.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44424$abc$36681$auto$opt_dff.cc:194:make_patterns_logic$9511
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.123.8.1. Executing ABC.

3.123.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44431$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9644
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.123.9.1. Executing ABC.

3.123.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44436$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9714
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.123.10.1. Executing ABC.

3.123.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44442$abc$35211$auto$opt_dff.cc:194:make_patterns_logic$9848
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.123.11.1. Executing ABC.

3.123.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44450$abc$36000$auto$opt_dff.cc:219:make_patterns_logic$9696
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.123.12.1. Executing ABC.

3.123.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44459$abc$33416$auto$opt_dff.cc:194:make_patterns_logic$10070
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.123.13.1. Executing ABC.

3.123.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44469$abc$33407$auto$opt_dff.cc:194:make_patterns_logic$10073
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.123.14.1. Executing ABC.

3.123.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44477$abc$33312$auto$opt_dff.cc:194:make_patterns_logic$10017
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 5 outputs.

3.123.15.1. Executing ABC.

3.123.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44486$abc$38621$auto$opt_dff.cc:219:make_patterns_logic$9654
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 5 outputs.

3.123.16.1. Executing ABC.

3.123.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44494$abc$33817$auto$opt_dff.cc:194:make_patterns_logic$9817
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 8 outputs.

3.123.17.1. Executing ABC.

3.123.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44506$abc$33809$auto$opt_dff.cc:219:make_patterns_logic$9793
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 5 outputs.

3.123.18.1. Executing ABC.

3.123.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44514$abc$33784$auto$opt_dff.cc:219:make_patterns_logic$9772
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.123.19.1. Executing ABC.

3.123.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44523$abc$33774$auto$opt_dff.cc:219:make_patterns_logic$9758
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.123.20.1. Executing ABC.

3.123.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44532$abc$33614$auto$opt_dff.cc:194:make_patterns_logic$10049
Extracted 26 gates and 46 wires to a netlist network with 20 inputs and 18 outputs.

3.123.21.1. Executing ABC.

3.123.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44558$abc$33898$auto$opt_dff.cc:219:make_patterns_logic$9571
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.123.22.1. Executing ABC.

3.123.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44567$abc$33397$auto$opt_dff.cc:219:make_patterns_logic$9564
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.123.23.1. Executing ABC.

3.123.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44575$abc$39773$auto$opt_dff.cc:219:make_patterns_logic$9467
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 5 outputs.

3.123.24.1. Executing ABC.

3.123.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44582$abc$34335$auto$opt_dff.cc:194:make_patterns_logic$9934
Extracted 12 gates and 22 wires to a netlist network with 10 inputs and 3 outputs.

3.123.25.1. Executing ABC.

3.123.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$35219$auto$opt_dff.cc:194:make_patterns_logic$9845
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 5 outputs.

3.123.26.1. Executing ABC.

3.123.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44600$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9450
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.123.27.1. Executing ABC.

3.123.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44646$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9520
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.123.28.1. Executing ABC.

3.123.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44652$abc$39779$auto$opt_dff.cc:194:make_patterns_logic$9720
Extracted 12 gates and 23 wires to a netlist network with 11 inputs and 6 outputs.

3.123.29.1. Executing ABC.

3.123.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9547
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

3.123.30.1. Executing ABC.

3.123.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44683$abc$37689$auto$opt_dff.cc:219:make_patterns_logic$9557
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.123.31.1. Executing ABC.

3.123.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44712$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9832
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.32.1. Executing ABC.

3.123.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44764$abc$39801$auto$opt_dff.cc:219:make_patterns_logic$9495
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.123.33.1. Executing ABC.

3.123.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44848$abc$33909$auto$opt_dff.cc:194:make_patterns_logic$10014
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 5 outputs.

3.123.34.1. Executing ABC.

3.123.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$44862$abc$38573$auto$opt_dff.cc:194:make_patterns_logic$9705
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.123.35.1. Executing ABC.

3.123.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$45030$abc$38567$auto$opt_dff.cc:194:make_patterns_logic$9441
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.36.1. Executing ABC.

3.123.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45035$abc$34346$auto$opt_dff.cc:194:make_patterns_logic$9931
Extracted 106 gates and 123 wires to a netlist network with 17 inputs and 9 outputs.

3.123.37.1. Executing ABC.

3.123.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45142$abc$33513$auto$opt_dff.cc:194:make_patterns_logic$10058
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.123.38.1. Executing ABC.

3.123.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45149$abc$33465$auto$opt_dff.cc:194:make_patterns_logic$10061
Extracted 40 gates and 52 wires to a netlist network with 12 inputs and 22 outputs.

3.123.39.1. Executing ABC.

3.123.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45217$abc$33427$auto$opt_dff.cc:194:make_patterns_logic$10067
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 3 outputs.

3.123.40.1. Executing ABC.

3.123.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45229$abc$33764$auto$opt_dff.cc:219:make_patterns_logic$9765
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.123.41.1. Executing ABC.

3.123.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45262$abc$39807$auto$opt_dff.cc:219:make_patterns_logic$9488
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.123.42.1. Executing ABC.

3.123.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45268$abc$39813$auto$opt_dff.cc:194:make_patterns_logic$9444
Extracted 16 gates and 31 wires to a netlist network with 15 inputs and 12 outputs.

3.123.43.1. Executing ABC.

3.123.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45240$abc$33829$auto$opt_dff.cc:194:make_patterns_logic$10008
Extracted 21 gates and 26 wires to a netlist network with 5 inputs and 5 outputs.

3.123.44.1. Executing ABC.

3.123.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45286$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9928
Extracted 117 gates and 177 wires to a netlist network with 60 inputs and 85 outputs.

3.123.45.1. Executing ABC.

3.123.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45398$abc$39767$auto$opt_dff.cc:219:make_patterns_logic$9474
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.123.46.1. Executing ABC.

3.123.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45404$abc$39761$auto$opt_dff.cc:219:make_patterns_logic$9481
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 4 outputs.

3.123.47.1. Executing ABC.

3.123.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$45413$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9741
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.123.48.1. Executing ABC.

3.123.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45418$abc$39514$auto$opt_dff.cc:219:make_patterns_logic$9751
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 4 outputs.

3.123.49.1. Executing ABC.

3.123.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$45425$abc$39466$auto$opt_dff.cc:194:make_patterns_logic$9802
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.123.50.1. Executing ABC.

3.123.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45432$abc$39473$auto$opt_dff.cc:194:make_patterns_logic$9796
Extracted 30 gates and 57 wires to a netlist network with 27 inputs and 24 outputs.

3.123.51.1. Executing ABC.

3.123.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9811
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.123.52.1. Executing ABC.

3.123.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45490$abc$39314$auto$opt_dff.cc:194:make_patterns_logic$9805
Extracted 187 gates and 242 wires to a netlist network with 55 inputs and 71 outputs.

3.123.53.1. Executing ABC.

3.123.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45199$abc$33446$auto$opt_dff.cc:194:make_patterns_logic$10064
Extracted 18 gates and 23 wires to a netlist network with 5 inputs and 4 outputs.

3.123.54.1. Executing ABC.

3.123.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45843$abc$34603$auto$opt_dff.cc:194:make_patterns_logic$9985
Extracted 132 gates and 171 wires to a netlist network with 39 inputs and 28 outputs.

3.123.55.1. Executing ABC.

3.123.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45976$abc$33801$auto$opt_dff.cc:219:make_patterns_logic$9786
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.56.1. Executing ABC.

3.123.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45982$abc$33520$auto$opt_dff.cc:194:make_patterns_logic$10055
Extracted 46 gates and 48 wires to a netlist network with 2 inputs and 12 outputs.

3.123.57.1. Executing ABC.

3.123.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44667$abc$33924$auto$opt_dff.cc:194:make_patterns_logic$9526
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 6 outputs.

3.123.58.1. Executing ABC.

3.123.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46207$abc$37928$auto$opt_dff.cc:194:make_patterns_logic$9735
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 9 outputs.

3.123.59.1. Executing ABC.

3.123.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46224$abc$37641$auto$opt_dff.cc:194:make_patterns_logic$9608
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.123.60.1. Executing ABC.

3.123.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9617
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.123.61.1. Executing ABC.

3.123.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46500$abc$38580$auto$opt_dff.cc:194:make_patterns_logic$9699
Extracted 32 gates and 60 wires to a netlist network with 28 inputs and 25 outputs.

3.123.62.1. Executing ABC.

3.123.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44605$abc$34558$u1.u0.token_le_2
Extracted 28 gates and 50 wires to a netlist network with 22 inputs and 23 outputs.

3.123.63.1. Executing ABC.

3.123.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44718$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10052
Extracted 45 gates and 48 wires to a netlist network with 3 inputs and 11 outputs.

3.123.64.1. Executing ABC.

3.123.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$35204$auto$opt_dff.cc:194:make_patterns_logic$9851
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 4 outputs.

3.123.65.1. Executing ABC.

3.123.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$46720$abc$35183$auto$opt_dff.cc:194:make_patterns_logic$9860
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 4 outputs.

3.123.66.1. Executing ABC.

3.123.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46726$abc$35026$auto$opt_dff.cc:194:make_patterns_logic$9990
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs.

3.123.67.1. Executing ABC.

3.123.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$45725$abc$39211$auto$opt_dff.cc:194:make_patterns_logic$9823
Extracted 104 gates and 180 wires to a netlist network with 76 inputs and 57 outputs.

3.123.68.1. Executing ABC.

3.123.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46864$abc$35141$auto$opt_dff.cc:219:make_patterns_logic$9950
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.123.69.1. Executing ABC.

3.123.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46891$abc$37648$auto$opt_dff.cc:194:make_patterns_logic$9602
Extracted 40 gates and 72 wires to a netlist network with 32 inputs and 31 outputs.

3.123.70.1. Executing ABC.

3.123.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46943$abc$37175$auto$opt_dff.cc:194:make_patterns_logic$9632
Extracted 134 gates and 241 wires to a netlist network with 107 inputs and 56 outputs.

3.123.71.1. Executing ABC.

3.123.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47099$abc$36008$auto$opt_dff.cc:194:make_patterns_logic$9541
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 7 outputs.

3.123.72.1. Executing ABC.

3.123.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47289$abc$35992$auto$opt_dff.cc:219:make_patterns_logic$9689
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.73.1. Executing ABC.

3.123.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47295$abc$35442$auto$opt_dff.cc:219:make_patterns_logic$9682
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.74.1. Executing ABC.

3.123.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$47301$abc$35226$auto$simplemap.cc:251:simplemap_eqne$22911[1]
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 10 outputs.

3.123.75.1. Executing ABC.

3.123.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47322$abc$35257$auto$opt_dff.cc:219:make_patterns_logic$9585
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.76.1. Executing ABC.

3.123.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47328$abc$35273$auto$opt_dff.cc:219:make_patterns_logic$9599
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.77.1. Executing ABC.

3.123.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47334$abc$35417$auto$opt_dff.cc:219:make_patterns_logic$9661
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 2 outputs.

3.123.78.1. Executing ABC.

3.123.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47340$abc$35434$auto$opt_dff.cc:219:make_patterns_logic$9675
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.79.1. Executing ABC.

3.123.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47346$abc$35246$auto$opt_dff.cc:219:make_patterns_logic$9578
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.80.1. Executing ABC.

3.123.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47352$abc$35265$auto$opt_dff.cc:219:make_patterns_logic$9592
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.123.81.1. Executing ABC.

3.123.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$47435$abc$35370$auto$opt_dff.cc:194:make_patterns_logic$9842
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 3 outputs.

3.123.82.1. Executing ABC.

3.123.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47441$abc$35405$auto$opt_dff.cc:194:make_patterns_logic$9623
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 6 outputs.

3.123.83.1. Executing ABC.

3.123.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47453$abc$35426$auto$opt_dff.cc:219:make_patterns_logic$9668
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.123.84.1. Executing ABC.

3.123.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$35197$auto$opt_dff.cc:194:make_patterns_logic$9854
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 3 outputs.

3.123.85.1. Executing ABC.

3.123.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$47463$abc$35176$auto$opt_dff.cc:194:make_patterns_logic$9863
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 4 outputs.

3.123.86.1. Executing ABC.

3.123.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$35190$auto$opt_dff.cc:194:make_patterns_logic$9857
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.123.87.1. Executing ABC.

3.123.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$50696$abc$35168$auto$opt_dff.cc:194:make_patterns_logic$9866
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.123.88.1. Executing ABC.

3.123.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47478$abc$35114$auto$opt_dff.cc:219:make_patterns_logic$9957
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.123.89.1. Executing ABC.

3.123.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47505$abc$35087$auto$opt_dff.cc:219:make_patterns_logic$9964
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.123.90.1. Executing ABC.

3.123.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47532$abc$35032$u1.u0.token_le_1
Extracted 35 gates and 60 wires to a netlist network with 25 inputs and 31 outputs.

3.123.91.1. Executing ABC.

3.123.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47579$abc$34988$auto$opt_dff.cc:194:make_patterns_logic$9996
Extracted 32 gates and 44 wires to a netlist network with 12 inputs and 16 outputs.

3.123.92.1. Executing ABC.

3.123.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47612$abc$35020$auto$opt_dff.cc:194:make_patterns_logic$9993
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 3 outputs.

3.123.93.1. Executing ABC.

3.123.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47618$abc$34923$u1.u0.data_valid_d
Extracted 30 gates and 44 wires to a netlist network with 14 inputs and 10 outputs.

3.123.94.1. Executing ABC.

3.123.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47769$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10005
Extracted 55 gates and 73 wires to a netlist network with 18 inputs and 23 outputs.

3.123.95.1. Executing ABC.

3.123.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48010$abc$36688$auto$opt_dff.cc:194:make_patterns_logic$9505
Extracted 24 gates and 49 wires to a netlist network with 25 inputs and 20 outputs.

3.123.96.1. Executing ABC.

3.123.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48062$abc$38627$auto$opt_dff.cc:194:make_patterns_logic$9647
Extracted 223 gates and 363 wires to a netlist network with 140 inputs and 133 outputs.

3.123.97.1. Executing ABC.

3.123.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48314$abc$38877$auto$opt_dff.cc:194:make_patterns_logic$9829
Extracted 156 gates and 249 wires to a netlist network with 93 inputs and 111 outputs.

3.123.98.1. Executing ABC.

3.123.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44771$abc$33936$auto$opt_dff.cc:219:make_patterns_logic$9925
Extracted 76 gates and 105 wires to a netlist network with 29 inputs and 12 outputs.

3.123.99.1. Executing ABC.

3.123.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47681$abc$34834$auto$opt_dff.cc:194:make_patterns_logic$10002
Extracted 87 gates and 99 wires to a netlist network with 12 inputs and 10 outputs.

3.123.100.1. Executing ABC.

3.123.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$48495$abc$35450$auto$opt_dff.cc:194:make_patterns_logic$9872
Extracted 476 gates and 693 wires to a netlist network with 217 inputs and 259 outputs.

3.123.101.1. Executing ABC.

3.123.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49033$abc$36231$auto$opt_dff.cc:194:make_patterns_logic$9535
Extracted 128 gates and 229 wires to a netlist network with 101 inputs and 55 outputs.

3.123.102.1. Executing ABC.

3.123.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49231$abc$34039$auto$opt_dff.cc:194:make_patterns_logic$9968
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 3 outputs.

3.123.103.1. Executing ABC.

3.123.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49508$abc$33325$auto$opt_dff.cc:194:make_patterns_logic$10076
Extracted 78 gates and 126 wires to a netlist network with 48 inputs and 10 outputs.

3.123.104.1. Executing ABC.

3.123.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49594$abc$36529$auto$opt_dff.cc:194:make_patterns_logic$9514
Extracted 193 gates and 245 wires to a netlist network with 52 inputs and 73 outputs.

3.123.105.1. Executing ABC.

3.123.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47838$abc$37027$auto$opt_dff.cc:194:make_patterns_logic$9635
Extracted 149 gates and 232 wires to a netlist network with 83 inputs and 95 outputs.

3.123.106.1. Executing ABC.

3.123.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$49946$abc$35377$auto$opt_dff.cc:194:make_patterns_logic$9869
Extracted 17 gates and 33 wires to a netlist network with 16 inputs and 14 outputs.

3.123.107.1. Executing ABC.

3.123.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49980$abc$36752$auto$opt_dff.cc:194:make_patterns_logic$9453
Extracted 235 gates and 378 wires to a netlist network with 143 inputs and 136 outputs.

3.123.108.1. Executing ABC.

3.123.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46235$abc$37695$auto$opt_dff.cc:194:make_patterns_logic$9550
Extracted 238 gates and 381 wires to a netlist network with 143 inputs and 149 outputs.

3.123.109.1. Executing ABC.

3.123.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$50215$abc$39520$auto$opt_dff.cc:194:make_patterns_logic$9744
Extracted 237 gates and 378 wires to a netlist network with 141 inputs and 144 outputs.

3.123.110.1. Executing ABC.

3.123.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46029$abc$37946$auto$opt_dff.cc:194:make_patterns_logic$9732
Extracted 166 gates and 263 wires to a netlist network with 97 inputs and 132 outputs.

3.123.111.1. Executing ABC.

3.123.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52361$abc$38415$auto$opt_dff.cc:194:make_patterns_logic$9708
Extracted 214 gates and 261 wires to a netlist network with 47 inputs and 60 outputs.

3.123.112.1. Executing ABC.

3.123.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49185$abc$33852$auto$opt_dff.cc:194:make_patterns_logic$10011
Extracted 33 gates and 48 wires to a netlist network with 15 inputs and 23 outputs.

3.123.113.1. Executing ABC.

3.123.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$50465$abc$35898$auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 101 gates and 134 wires to a netlist network with 33 inputs and 17 outputs.

3.123.114.1. Executing ABC.

3.123.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$50669$abc$34146$auto$opt_dff.cc:219:make_patterns_logic$9943
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.123.115.1. Executing ABC.

3.123.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$51944$abc$41071$u1.u2.fill_buf0
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.123.116.1. Executing ABC.

3.123.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44869$abc$39048$auto$opt_dff.cc:194:make_patterns_logic$9826
Extracted 136 gates and 245 wires to a netlist network with 109 inputs and 58 outputs.

3.123.117.1. Executing ABC.

3.123.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52026$abc$41071$u1.u2.fill_buf1
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.123.118.1. Executing ABC.

3.123.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52108$abc$36394$auto$opt_dff.cc:194:make_patterns_logic$9532
Extracted 94 gates and 160 wires to a netlist network with 66 inputs and 56 outputs.

3.123.119.1. Executing ABC.

3.123.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52230$abc$38280$auto$opt_dff.cc:194:make_patterns_logic$9726
Extracted 118 gates and 208 wires to a netlist network with 90 inputs and 65 outputs.

3.123.120.1. Executing ABC.

3.123.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44691$abc$37009$auto$opt_dff.cc:194:make_patterns_logic$9638
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 9 outputs.

3.123.121.1. Executing ABC.

3.123.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$47358$abc$35281$auto$opt_dff.cc:194:make_patterns_logic$9836
Extracted 62 gates and 96 wires to a netlist network with 34 inputs and 35 outputs.

3.123.122.1. Executing ABC.

3.123.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46733$abc$33635$auto$opt_dff.cc:219:make_patterns_logic$10046
Extracted 133 gates and 176 wires to a netlist network with 43 inputs and 28 outputs.

3.123.123.1. Executing ABC.

3.123.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$52595$lo218
Extracted 64 gates and 129 wires to a netlist network with 65 inputs and 32 outputs.

3.123.124.1. Executing ABC.

3.123.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49831$abc$37338$auto$opt_dff.cc:194:make_patterns_logic$9629
Extracted 100 gates and 172 wires to a netlist network with 72 inputs and 54 outputs.

3.123.125.1. Executing ABC.

3.123.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$49237$abc$37441$auto$opt_dff.cc:194:make_patterns_logic$9611
Extracted 249 gates and 322 wires to a netlist network with 73 inputs and 113 outputs.

3.123.126.1. Executing ABC.

3.123.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 1167 gates and 1849 wires to a netlist network with 682 inputs and 114 outputs.

3.123.127.1. Executing ABC.

3.123.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$46552$abc$38117$auto$opt_dff.cc:194:make_patterns_logic$9729
Extracted 142 gates and 257 wires to a netlist network with 115 inputs and 65 outputs.

3.123.128.1. Executing ABC.

3.123.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$47115$abc$36026$auto$opt_dff.cc:194:make_patterns_logic$9538
Extracted 171 gates and 267 wires to a netlist network with 96 inputs and 109 outputs.

3.123.129.1. Executing ABC.

3.123.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$44361$abc$34736$auto$opt_dff.cc:219:make_patterns_logic$9979
Extracted 36 gates and 42 wires to a netlist network with 6 inputs and 7 outputs.

3.123.130.1. Executing ABC.

3.123.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 2384 gates and 3346 wires to a netlist network with 962 inputs and 661 outputs.

3.123.131.1. Executing ABC.

yosys> abc -dff

3.124. Executing ABC pass (technology mapping using ABC).

3.124.1. Summary of detected clock domains:
  12 cells in clk=\phy_clk_pad_i, en=$abc$55249$abc$44330$abc$34024$auto$opt_dff.cc:194:make_patterns_logic$9900, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55262$abc$44343$abc$39795$auto$opt_dff.cc:219:make_patterns_logic$9502, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55270$abc$44352$abc$33793$auto$opt_dff.cc:219:make_patterns_logic$9779, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$55278$abc$44396$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9982, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$55283$abc$44401$abc$34011$auto$opt_dff.cc:194:make_patterns_logic$9903, arst={ }, srst={ }
  9 cells in clk=\phy_clk_pad_i, en=$abc$55296$abc$44414$abc$36743$auto$opt_dff.cc:219:make_patterns_logic$9460, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$55306$abc$44424$abc$36681$auto$opt_dff.cc:194:make_patterns_logic$9511, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$55313$abc$44431$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9644, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$55318$abc$44436$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9714, arst={ }, srst={ }
  6 cells in clk=\clk_i, en=$abc$55323$abc$44442$abc$35211$auto$opt_dff.cc:194:make_patterns_logic$9848, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55330$abc$44450$abc$36000$auto$opt_dff.cc:219:make_patterns_logic$9696, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$abc$55338$abc$44459$abc$33416$auto$opt_dff.cc:194:make_patterns_logic$10070, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$55348$abc$44469$abc$33407$auto$opt_dff.cc:194:make_patterns_logic$10073, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55357$abc$44477$abc$33312$auto$opt_dff.cc:194:make_patterns_logic$10017, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55367$abc$44486$abc$38621$auto$opt_dff.cc:219:make_patterns_logic$9654, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$55376$abc$44494$abc$33817$auto$opt_dff.cc:194:make_patterns_logic$9817, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$55391$abc$44506$abc$33809$auto$opt_dff.cc:219:make_patterns_logic$9793, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$abc$55400$abc$44514$abc$33784$auto$opt_dff.cc:219:make_patterns_logic$9772, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55411$abc$44523$abc$33774$auto$opt_dff.cc:219:make_patterns_logic$9758, arst={ }, srst={ }
  24 cells in clk=\phy_clk_pad_i, en=$abc$55421$abc$44532$abc$33614$auto$opt_dff.cc:194:make_patterns_logic$10049, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55446$abc$44558$abc$33898$auto$opt_dff.cc:219:make_patterns_logic$9571, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$55453$abc$44567$abc$33397$auto$opt_dff.cc:219:make_patterns_logic$9564, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$55460$abc$44575$abc$39773$auto$opt_dff.cc:219:make_patterns_logic$9467, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$55469$abc$44582$abc$34335$auto$opt_dff.cc:194:make_patterns_logic$9934, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$55481$abc$50696$abc$35219$auto$opt_dff.cc:194:make_patterns_logic$9845, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$61919$abc$44600$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9450, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$55493$abc$44646$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9520, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$61919$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9547, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$55515$abc$44683$abc$37689$auto$opt_dff.cc:219:make_patterns_logic$9557, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$55523$abc$44712$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9832, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$55528$abc$44764$abc$39801$auto$opt_dff.cc:219:make_patterns_logic$9495, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$55536$abc$44848$abc$33909$auto$opt_dff.cc:194:make_patterns_logic$10014, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$55547$abc$44862$abc$38573$auto$opt_dff.cc:194:make_patterns_logic$9705, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$55554$abc$45030$abc$38567$auto$opt_dff.cc:194:make_patterns_logic$9441, arst={ }, srst={ }
  6 cells in clk=\phy_clk_pad_i, en=$abc$55664$abc$45142$abc$33513$auto$opt_dff.cc:194:make_patterns_logic$10058, arst={ }, srst={ }
  40 cells in clk=\phy_clk_pad_i, en=$abc$55671$abc$45149$abc$33465$auto$opt_dff.cc:194:make_patterns_logic$10061, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$55712$abc$45217$abc$33427$auto$opt_dff.cc:194:make_patterns_logic$10067, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$abc$55724$abc$45229$abc$33764$auto$opt_dff.cc:219:make_patterns_logic$9765, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$55735$abc$45262$abc$39807$auto$opt_dff.cc:219:make_patterns_logic$9488, arst={ }, srst={ }
  14 cells in clk=\phy_clk_pad_i, en=$abc$55743$abc$45268$abc$39813$auto$opt_dff.cc:194:make_patterns_logic$9444, arst={ }, srst={ }
  21 cells in clk=\phy_clk_pad_i, en=$abc$55764$abc$45240$abc$33829$auto$opt_dff.cc:194:make_patterns_logic$10008, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$55897$abc$45398$abc$39767$auto$opt_dff.cc:219:make_patterns_logic$9474, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$55904$abc$45404$abc$39761$auto$opt_dff.cc:219:make_patterns_logic$9481, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$55912$abc$45413$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9741, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$55917$abc$45418$abc$39514$auto$opt_dff.cc:219:make_patterns_logic$9751, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$55925$abc$45425$abc$39466$auto$opt_dff.cc:194:make_patterns_logic$9802, arst={ }, srst={ }
  31 cells in clk=\phy_clk_pad_i, en=$abc$55932$abc$45432$abc$39473$auto$opt_dff.cc:194:make_patterns_logic$9796, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$55982$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9811, arst={ }, srst={ }
  104 cells in clk=\phy_clk_pad_i, en=$abc$55559$abc$45035$abc$34346$auto$opt_dff.cc:194:make_patterns_logic$9931, arst={ }, srst={ }
  17 cells in clk=\phy_clk_pad_i, en=$abc$56199$abc$45199$abc$33446$auto$opt_dff.cc:194:make_patterns_logic$10064, arst={ }, srst={ }
  132 cells in clk=\phy_clk_pad_i, en=$abc$56218$abc$45843$abc$34603$auto$opt_dff.cc:194:make_patterns_logic$9985, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$56350$abc$45976$abc$33801$auto$opt_dff.cc:219:make_patterns_logic$9786, arst={ }, srst={ }
  46 cells in clk=\phy_clk_pad_i, en=$abc$56356$abc$45982$abc$33520$auto$opt_dff.cc:194:make_patterns_logic$10055, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$56403$abc$44667$abc$33924$auto$opt_dff.cc:194:make_patterns_logic$9526, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$56416$abc$46207$abc$37928$auto$opt_dff.cc:194:make_patterns_logic$9735, arst={ }, srst={ }
  5 cells in clk=\clk_i, en=$abc$56434$abc$46224$abc$37641$auto$opt_dff.cc:194:make_patterns_logic$9608, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$61919$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9617, arst={ }, srst={ }
  30 cells in clk=\phy_clk_pad_i, en=$abc$56496$abc$44605$abc$34558$u1.u0.token_le_2, arst={ }, srst={ }
  113 cells in clk=\phy_clk_pad_i, en=$abc$55786$abc$45286$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9928, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$56582$abc$50696$abc$35204$auto$opt_dff.cc:194:make_patterns_logic$9851, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$56589$abc$46720$abc$35183$auto$opt_dff.cc:194:make_patterns_logic$9860, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$abc$63474$abc$44361$abc$34736$auto$opt_dff.cc:219:make_patterns_logic$9979, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$56596$abc$46726$abc$35026$auto$opt_dff.cc:194:make_patterns_logic$9990, arst={ }, srst={ }
  12 cells in clk=\phy_clk_pad_i, en=$abc$55498$abc$44652$abc$39779$auto$opt_dff.cc:194:make_patterns_logic$9720, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$56725$abc$46864$abc$35141$auto$opt_dff.cc:219:make_patterns_logic$9950, arst={ }, srst={ }
  34 cells in clk=\phy_clk_pad_i, en=$abc$56752$abc$46891$abc$37648$auto$opt_dff.cc:194:make_patterns_logic$9602, arst={ }, srst={ }
  10 cells in clk=\phy_clk_pad_i, en=$abc$56963$abc$47099$abc$36008$auto$opt_dff.cc:194:make_patterns_logic$9541, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$56979$abc$47289$abc$35992$auto$opt_dff.cc:219:make_patterns_logic$9689, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$56985$abc$47295$abc$35442$auto$opt_dff.cc:219:make_patterns_logic$9682, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$57012$abc$47322$abc$35257$auto$opt_dff.cc:219:make_patterns_logic$9585, arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$57018$abc$47328$abc$35273$auto$opt_dff.cc:219:make_patterns_logic$9599, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$57024$abc$47334$abc$35417$auto$opt_dff.cc:219:make_patterns_logic$9661, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$57030$abc$47340$abc$35434$auto$opt_dff.cc:219:make_patterns_logic$9675, arst={ }, srst={ }
  11 cells in clk=\clk_i, en=$abc$56991$abc$47301$abc$35226$auto$simplemap.cc:251:simplemap_eqne$22911[1], arst={ }, srst={ }
  3 cells in clk=\phy_clk_pad_i, en=$abc$57036$abc$47346$abc$35246$auto$opt_dff.cc:219:make_patterns_logic$9578, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$57042$abc$47352$abc$35265$auto$opt_dff.cc:219:make_patterns_logic$9592, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$57049$abc$47435$abc$35370$auto$opt_dff.cc:194:make_patterns_logic$9842, arst={ }, srst={ }
  11 cells in clk=\phy_clk_pad_i, en=$abc$57055$abc$47441$abc$35405$auto$opt_dff.cc:194:make_patterns_logic$9623, arst={ }, srst={ }
  4 cells in clk=\phy_clk_pad_i, en=$abc$57068$abc$47453$abc$35426$auto$opt_dff.cc:219:make_patterns_logic$9668, arst={ }, srst={ }
  1 cells in clk=\clk_i, en=$abc$57074$abc$50696$abc$35197$auto$opt_dff.cc:194:make_patterns_logic$9854, arst={ }, srst={ }
  2 cells in clk=\clk_i, en=$abc$57080$abc$47463$abc$35176$auto$opt_dff.cc:194:make_patterns_logic$9863, arst={ }, srst={ }
  3 cells in clk=\clk_i, en=$abc$61919$abc$50696$abc$35190$auto$opt_dff.cc:194:make_patterns_logic$9857, arst={ }, srst={ }
  4 cells in clk=\clk_i, en=$abc$61919$abc$50696$abc$35168$auto$opt_dff.cc:194:make_patterns_logic$9866, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$57098$abc$47478$abc$35114$auto$opt_dff.cc:219:make_patterns_logic$9957, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$57125$abc$47505$abc$35087$auto$opt_dff.cc:219:make_patterns_logic$9964, arst={ }, srst={ }
  46 cells in clk=\phy_clk_pad_i, en=$abc$57152$abc$47532$abc$35032$u1.u0.token_le_1, arst={ }, srst={ }
  32 cells in clk=\phy_clk_pad_i, en=$abc$57202$abc$47579$abc$34988$auto$opt_dff.cc:194:make_patterns_logic$9996, arst={ }, srst={ }
  45 cells in clk=\phy_clk_pad_i, en=$abc$56536$abc$44718$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10052, arst={ }, srst={ }
  7 cells in clk=\phy_clk_pad_i, en=$abc$57235$abc$47612$abc$35020$auto$opt_dff.cc:194:make_patterns_logic$9993, arst={ }, srst={ }
  44 cells in clk=\phy_clk_pad_i, en=$abc$56445$abc$46500$abc$38580$auto$opt_dff.cc:194:make_patterns_logic$9699, arst={ }, srst={ }
  53 cells in clk=\phy_clk_pad_i, en=$abc$57305$abc$47769$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10005, arst={ }, srst={ }
  27 cells in clk=\phy_clk_pad_i, en=$abc$57364$abc$48010$abc$36688$auto$opt_dff.cc:194:make_patterns_logic$9505, arst={ }, srst={ }
  219 cells in clk=\phy_clk_pad_i, en=$abc$57410$abc$48062$abc$38627$auto$opt_dff.cc:194:make_patterns_logic$9647, arst={ }, srst={ }
  169 cells in clk=\phy_clk_pad_i, en=$abc$57667$abc$48314$abc$38877$auto$opt_dff.cc:194:make_patterns_logic$9829, arst={ }, srst={ }
  98 cells in clk=\phy_clk_pad_i, en=$abc$56602$abc$45725$abc$39211$auto$opt_dff.cc:194:make_patterns_logic$9823, arst={ }, srst={ }
  74 cells in clk=\phy_clk_pad_i, en=$abc$57843$abc$44771$abc$33936$auto$opt_dff.cc:219:make_patterns_logic$9925, arst={ }, srst={ }
  87 cells in clk=\phy_clk_pad_i, en=$abc$57919$abc$47681$abc$34834$auto$opt_dff.cc:194:make_patterns_logic$10002, arst={ }, srst={ }
  141 cells in clk=\phy_clk_pad_i, en=$abc$58540$abc$49033$abc$36231$auto$opt_dff.cc:194:make_patterns_logic$9535, arst={ }, srst={ }
  5 cells in clk=\phy_clk_pad_i, en=$abc$58693$abc$49231$abc$34039$auto$opt_dff.cc:194:make_patterns_logic$9968, arst={ }, srst={ }
  82 cells in clk=\phy_clk_pad_i, en=$abc$58700$abc$49508$abc$33325$auto$opt_dff.cc:194:make_patterns_logic$10076, arst={ }, srst={ }
  214 cells in clk=\phy_clk_pad_i, en=$abc$58790$abc$49594$abc$36529$auto$opt_dff.cc:194:make_patterns_logic$9514, arst={ }, srst={ }
  149 cells in clk=\phy_clk_pad_i, en=$abc$59013$abc$47838$abc$37027$auto$opt_dff.cc:194:make_patterns_logic$9635, arst={ }, srst={ }
  18 cells in clk=\clk_i, en=$abc$59173$abc$49946$abc$35377$auto$opt_dff.cc:194:make_patterns_logic$9869, arst={ }, srst={ }
  482 cells in clk=\phy_clk_pad_i, en=$abc$58007$abc$48495$abc$35450$auto$opt_dff.cc:194:make_patterns_logic$9872, arst={ }, srst={ }
  258 cells in clk=\phy_clk_pad_i, en=$abc$59205$abc$49980$abc$36752$auto$opt_dff.cc:194:make_patterns_logic$9453, arst={ }, srst={ }
  260 cells in clk=\phy_clk_pad_i, en=$abc$59474$abc$46235$abc$37695$auto$opt_dff.cc:194:make_patterns_logic$9550, arst={ }, srst={ }
  242 cells in clk=\phy_clk_pad_i, en=$abc$59753$abc$50215$abc$39520$auto$opt_dff.cc:194:make_patterns_logic$9744, arst={ }, srst={ }
  173 cells in clk=\phy_clk_pad_i, en=$abc$60032$abc$46029$abc$37946$auto$opt_dff.cc:194:make_patterns_logic$9732, arst={ }, srst={ }
  229 cells in clk=\phy_clk_pad_i, en=$abc$60229$abc$52361$abc$38415$auto$opt_dff.cc:194:make_patterns_logic$9708, arst={ }, srst={ }
  23 cells in clk=\phy_clk_pad_i, en=$abc$60460$abc$49185$abc$33852$auto$opt_dff.cc:194:make_patterns_logic$10011, arst={ }, srst={ }
  96 cells in clk=\phy_clk_pad_i, en=$abc$60506$abc$50465$abc$35898$auto$opt_dff.cc:219:make_patterns_logic$9897, arst={ }, srst={ }
  18 cells in clk=\phy_clk_pad_i, en=$abc$60603$abc$50669$abc$34146$auto$opt_dff.cc:219:make_patterns_logic$9943, arst={ }, srst={ }
  49 cells in clk=\phy_clk_pad_i, en=$abc$60630$abc$51944$abc$41071$u1.u2.fill_buf0, arst={ }, srst={ }
  134 cells in clk=\phy_clk_pad_i, en=$abc$60712$abc$44869$abc$39048$auto$opt_dff.cc:194:make_patterns_logic$9826, arst={ }, srst={ }
  49 cells in clk=\phy_clk_pad_i, en=$abc$60868$abc$52026$abc$41071$u1.u2.fill_buf1, arst={ }, srst={ }
  91 cells in clk=\phy_clk_pad_i, en=$abc$60950$abc$52108$abc$36394$auto$opt_dff.cc:194:make_patterns_logic$9532, arst={ }, srst={ }
  120 cells in clk=\phy_clk_pad_i, en=$abc$61072$abc$52230$abc$38280$auto$opt_dff.cc:194:make_patterns_logic$9726, arst={ }, srst={ }
  114 cells in clk=\phy_clk_pad_i, en=$abc$56809$abc$46943$abc$37175$auto$opt_dff.cc:194:make_patterns_logic$9632, arst={ }, srst={ }
  15 cells in clk=\phy_clk_pad_i, en=$abc$61203$abc$44691$abc$37009$auto$opt_dff.cc:194:make_patterns_logic$9638, arst={ }, srst={ }
  70 cells in clk=\clk_i, en=$abc$61221$abc$47358$abc$35281$auto$opt_dff.cc:194:make_patterns_logic$9836, arst={ }, srst={ }
  29 cells in clk=\phy_clk_pad_i, en=$abc$57242$abc$47618$abc$34923$u1.u0.data_valid_d, arst={ }, srst={ }
  130 cells in clk=\phy_clk_pad_i, en=$abc$61296$abc$46733$abc$33635$auto$opt_dff.cc:219:make_patterns_logic$10046, arst={ }, srst={ }
  64 cells in clk=\phy_clk_pad_i, en=$abc$63508$lo218, arst={ }, srst={ }
  110 cells in clk=\phy_clk_pad_i, en=$abc$61523$abc$49831$abc$37338$auto$opt_dff.cc:194:make_patterns_logic$9629, arst={ }, srst={ }
  212 cells in clk=\phy_clk_pad_i, en=$abc$55988$abc$45490$abc$39314$auto$opt_dff.cc:194:make_patterns_logic$9805, arst={ }, srst={ }
  258 cells in clk=\phy_clk_pad_i, en=$abc$61643$abc$49237$abc$37441$auto$opt_dff.cc:194:make_patterns_logic$9611, arst={ }, srst={ }
  140 cells in clk=\phy_clk_pad_i, en=$abc$63137$abc$46552$abc$38117$auto$opt_dff.cc:194:make_patterns_logic$9729, arst={ }, srst={ }
  176 cells in clk=\phy_clk_pad_i, en=$abc$63300$abc$47115$abc$36026$auto$opt_dff.cc:194:make_patterns_logic$9538, arst={ }, srst={ }
  1134 cells in clk=\clk_i, en={ }, arst={ }, srst={ }
  2363 cells in clk=\phy_clk_pad_i, en={ }, arst={ }, srst={ }

3.124.2. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55249$abc$44330$abc$34024$auto$opt_dff.cc:194:make_patterns_logic$9900
Extracted 12 gates and 23 wires to a netlist network with 11 inputs and 8 outputs.

3.124.2.1. Executing ABC.

3.124.3. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55262$abc$44343$abc$39795$auto$opt_dff.cc:219:make_patterns_logic$9502
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.124.3.1. Executing ABC.

3.124.4. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55270$abc$44352$abc$33793$auto$opt_dff.cc:219:make_patterns_logic$9779
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.124.4.1. Executing ABC.

3.124.5. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55278$abc$44396$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9982
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.124.5.1. Executing ABC.

3.124.6. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55283$abc$44401$abc$34011$auto$opt_dff.cc:194:make_patterns_logic$9903
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 6 outputs.

3.124.6.1. Executing ABC.

3.124.7. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55296$abc$44414$abc$36743$auto$opt_dff.cc:219:make_patterns_logic$9460
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.124.7.1. Executing ABC.

3.124.8. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55306$abc$44424$abc$36681$auto$opt_dff.cc:194:make_patterns_logic$9511
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.124.8.1. Executing ABC.

3.124.9. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55313$abc$44431$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9644
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.124.9.1. Executing ABC.

3.124.10. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55318$abc$44436$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9714
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.124.10.1. Executing ABC.

3.124.11. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55323$abc$44442$abc$35211$auto$opt_dff.cc:194:make_patterns_logic$9848
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.124.11.1. Executing ABC.

3.124.12. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55330$abc$44450$abc$36000$auto$opt_dff.cc:219:make_patterns_logic$9696
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.124.12.1. Executing ABC.

3.124.13. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55338$abc$44459$abc$33416$auto$opt_dff.cc:194:make_patterns_logic$10070
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 3 outputs.

3.124.13.1. Executing ABC.

3.124.14. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55348$abc$44469$abc$33407$auto$opt_dff.cc:194:make_patterns_logic$10073
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.124.14.1. Executing ABC.

3.124.15. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55357$abc$44477$abc$33312$auto$opt_dff.cc:194:make_patterns_logic$10017
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.124.15.1. Executing ABC.

3.124.16. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55367$abc$44486$abc$38621$auto$opt_dff.cc:219:make_patterns_logic$9654
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.124.16.1. Executing ABC.

3.124.17. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55376$abc$44494$abc$33817$auto$opt_dff.cc:194:make_patterns_logic$9817
Extracted 12 gates and 22 wires to a netlist network with 10 inputs and 7 outputs.

3.124.17.1. Executing ABC.

3.124.18. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55391$abc$44506$abc$33809$auto$opt_dff.cc:219:make_patterns_logic$9793
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.124.18.1. Executing ABC.

3.124.19. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55400$abc$44514$abc$33784$auto$opt_dff.cc:219:make_patterns_logic$9772
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.124.19.1. Executing ABC.

3.124.20. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55411$abc$44523$abc$33774$auto$opt_dff.cc:219:make_patterns_logic$9758
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.124.20.1. Executing ABC.

3.124.21. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55421$abc$44532$abc$33614$auto$opt_dff.cc:194:make_patterns_logic$10049
Extracted 24 gates and 43 wires to a netlist network with 19 inputs and 19 outputs.

3.124.21.1. Executing ABC.

3.124.22. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55446$abc$44558$abc$33898$auto$opt_dff.cc:219:make_patterns_logic$9571
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.124.22.1. Executing ABC.

3.124.23. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55453$abc$44567$abc$33397$auto$opt_dff.cc:219:make_patterns_logic$9564
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 5 outputs.

3.124.23.1. Executing ABC.

3.124.24. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55460$abc$44575$abc$39773$auto$opt_dff.cc:219:make_patterns_logic$9467
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.124.24.1. Executing ABC.

3.124.25. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55469$abc$44582$abc$34335$auto$opt_dff.cc:194:make_patterns_logic$9934
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 3 outputs.

3.124.25.1. Executing ABC.

3.124.26. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55481$abc$50696$abc$35219$auto$opt_dff.cc:194:make_patterns_logic$9845
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.124.26.1. Executing ABC.

3.124.27. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$61919$abc$44600$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9450
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.124.27.1. Executing ABC.

3.124.28. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55493$abc$44646$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9520
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.124.28.1. Executing ABC.

3.124.29. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$61919$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9547
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.124.29.1. Executing ABC.

3.124.30. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55515$abc$44683$abc$37689$auto$opt_dff.cc:219:make_patterns_logic$9557
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.124.30.1. Executing ABC.

3.124.31. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55523$abc$44712$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9832
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.31.1. Executing ABC.

3.124.32. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55528$abc$44764$abc$39801$auto$opt_dff.cc:219:make_patterns_logic$9495
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 5 outputs.

3.124.32.1. Executing ABC.

3.124.33. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55536$abc$44848$abc$33909$auto$opt_dff.cc:194:make_patterns_logic$10014
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 7 outputs.

3.124.33.1. Executing ABC.

3.124.34. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55547$abc$44862$abc$38573$auto$opt_dff.cc:194:make_patterns_logic$9705
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.124.34.1. Executing ABC.

3.124.35. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55554$abc$45030$abc$38567$auto$opt_dff.cc:194:make_patterns_logic$9441
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.35.1. Executing ABC.

3.124.36. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55664$abc$45142$abc$33513$auto$opt_dff.cc:194:make_patterns_logic$10058
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 2 outputs.

3.124.36.1. Executing ABC.

3.124.37. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55671$abc$45149$abc$33465$auto$opt_dff.cc:194:make_patterns_logic$10061
Extracted 40 gates and 52 wires to a netlist network with 12 inputs and 22 outputs.

3.124.37.1. Executing ABC.

3.124.38. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55712$abc$45217$abc$33427$auto$opt_dff.cc:194:make_patterns_logic$10067
Extracted 11 gates and 22 wires to a netlist network with 11 inputs and 3 outputs.

3.124.38.1. Executing ABC.

3.124.39. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55724$abc$45229$abc$33764$auto$opt_dff.cc:219:make_patterns_logic$9765
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 5 outputs.

3.124.39.1. Executing ABC.

3.124.40. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55735$abc$45262$abc$39807$auto$opt_dff.cc:219:make_patterns_logic$9488
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.40.1. Executing ABC.

3.124.41. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55743$abc$45268$abc$39813$auto$opt_dff.cc:194:make_patterns_logic$9444
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 10 outputs.

3.124.41.1. Executing ABC.

3.124.42. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55764$abc$45240$abc$33829$auto$opt_dff.cc:194:make_patterns_logic$10008
Extracted 21 gates and 26 wires to a netlist network with 5 inputs and 5 outputs.

3.124.42.1. Executing ABC.

3.124.43. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55897$abc$45398$abc$39767$auto$opt_dff.cc:219:make_patterns_logic$9474
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.43.1. Executing ABC.

3.124.44. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55904$abc$45404$abc$39761$auto$opt_dff.cc:219:make_patterns_logic$9481
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.124.44.1. Executing ABC.

3.124.45. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55912$abc$45413$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9741
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.124.45.1. Executing ABC.

3.124.46. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55917$abc$45418$abc$39514$auto$opt_dff.cc:219:make_patterns_logic$9751
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.124.46.1. Executing ABC.

3.124.47. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55925$abc$45425$abc$39466$auto$opt_dff.cc:194:make_patterns_logic$9802
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.124.47.1. Executing ABC.

3.124.48. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55932$abc$45432$abc$39473$auto$opt_dff.cc:194:make_patterns_logic$9796
Extracted 31 gates and 57 wires to a netlist network with 26 inputs and 22 outputs.

3.124.48.1. Executing ABC.

3.124.49. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$55982$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9811
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

3.124.49.1. Executing ABC.

3.124.50. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55559$abc$45035$abc$34346$auto$opt_dff.cc:194:make_patterns_logic$9931
Extracted 104 gates and 121 wires to a netlist network with 17 inputs and 9 outputs.

3.124.50.1. Executing ABC.

3.124.51. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56199$abc$45199$abc$33446$auto$opt_dff.cc:194:make_patterns_logic$10064
Extracted 17 gates and 22 wires to a netlist network with 5 inputs and 3 outputs.

3.124.51.1. Executing ABC.

3.124.52. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56218$abc$45843$abc$34603$auto$opt_dff.cc:194:make_patterns_logic$9985
Extracted 132 gates and 170 wires to a netlist network with 38 inputs and 28 outputs.

3.124.52.1. Executing ABC.

3.124.53. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56350$abc$45976$abc$33801$auto$opt_dff.cc:219:make_patterns_logic$9786
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.53.1. Executing ABC.

3.124.54. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56356$abc$45982$abc$33520$auto$opt_dff.cc:194:make_patterns_logic$10055
Extracted 46 gates and 48 wires to a netlist network with 2 inputs and 12 outputs.

3.124.54.1. Executing ABC.

3.124.55. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56403$abc$44667$abc$33924$auto$opt_dff.cc:194:make_patterns_logic$9526
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 6 outputs.

3.124.55.1. Executing ABC.

3.124.56. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56416$abc$46207$abc$37928$auto$opt_dff.cc:194:make_patterns_logic$9735
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 8 outputs.

3.124.56.1. Executing ABC.

3.124.57. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$56434$abc$46224$abc$37641$auto$opt_dff.cc:194:make_patterns_logic$9608
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.124.57.1. Executing ABC.

3.124.58. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$61919$abc$50696$abc$39829$auto$opt_dff.cc:194:make_patterns_logic$9617
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

3.124.58.1. Executing ABC.

3.124.59. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56496$abc$44605$abc$34558$u1.u0.token_le_2
Extracted 30 gates and 54 wires to a netlist network with 24 inputs and 23 outputs.

3.124.59.1. Executing ABC.

3.124.60. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55786$abc$45286$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$9928
Extracted 113 gates and 183 wires to a netlist network with 70 inputs and 85 outputs.

3.124.60.1. Executing ABC.

3.124.61. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$56582$abc$50696$abc$35204$auto$opt_dff.cc:194:make_patterns_logic$9851
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 4 outputs.

3.124.61.1. Executing ABC.

3.124.62. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$56589$abc$46720$abc$35183$auto$opt_dff.cc:194:make_patterns_logic$9860
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 3 outputs.

3.124.62.1. Executing ABC.

3.124.63. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$63474$abc$44361$abc$34736$auto$opt_dff.cc:219:make_patterns_logic$9979
Extracted 32 gates and 39 wires to a netlist network with 7 inputs and 8 outputs.

3.124.63.1. Executing ABC.

3.124.64. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56596$abc$46726$abc$35026$auto$opt_dff.cc:194:make_patterns_logic$9990
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs.

3.124.64.1. Executing ABC.

3.124.65. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55498$abc$44652$abc$39779$auto$opt_dff.cc:194:make_patterns_logic$9720
Extracted 12 gates and 22 wires to a netlist network with 10 inputs and 5 outputs.

3.124.65.1. Executing ABC.

3.124.66. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56725$abc$46864$abc$35141$auto$opt_dff.cc:219:make_patterns_logic$9950
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.124.66.1. Executing ABC.

3.124.67. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56752$abc$46891$abc$37648$auto$opt_dff.cc:194:make_patterns_logic$9602
Extracted 34 gates and 60 wires to a netlist network with 26 inputs and 25 outputs.

3.124.67.1. Executing ABC.

3.124.68. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56963$abc$47099$abc$36008$auto$opt_dff.cc:194:make_patterns_logic$9541
Extracted 10 gates and 20 wires to a netlist network with 10 inputs and 9 outputs.

3.124.68.1. Executing ABC.

3.124.69. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56979$abc$47289$abc$35992$auto$opt_dff.cc:219:make_patterns_logic$9689
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.124.69.1. Executing ABC.

3.124.70. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56985$abc$47295$abc$35442$auto$opt_dff.cc:219:make_patterns_logic$9682
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.70.1. Executing ABC.

3.124.71. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57012$abc$47322$abc$35257$auto$opt_dff.cc:219:make_patterns_logic$9585
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.124.71.1. Executing ABC.

3.124.72. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57018$abc$47328$abc$35273$auto$opt_dff.cc:219:make_patterns_logic$9599
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.72.1. Executing ABC.

3.124.73. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57024$abc$47334$abc$35417$auto$opt_dff.cc:219:make_patterns_logic$9661
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 3 outputs.

3.124.73.1. Executing ABC.

3.124.74. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57030$abc$47340$abc$35434$auto$opt_dff.cc:219:make_patterns_logic$9675
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.124.74.1. Executing ABC.

3.124.75. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$56991$abc$47301$abc$35226$auto$simplemap.cc:251:simplemap_eqne$22911[1]
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.124.75.1. Executing ABC.

3.124.76. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57036$abc$47346$abc$35246$auto$opt_dff.cc:219:make_patterns_logic$9578
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.124.76.1. Executing ABC.

3.124.77. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57042$abc$47352$abc$35265$auto$opt_dff.cc:219:make_patterns_logic$9592
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.124.77.1. Executing ABC.

3.124.78. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$57049$abc$47435$abc$35370$auto$opt_dff.cc:194:make_patterns_logic$9842
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 3 outputs.

3.124.78.1. Executing ABC.

3.124.79. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57055$abc$47441$abc$35405$auto$opt_dff.cc:194:make_patterns_logic$9623
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 6 outputs.

3.124.79.1. Executing ABC.

3.124.80. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57068$abc$47453$abc$35426$auto$opt_dff.cc:219:make_patterns_logic$9668
Extracted 4 gates and 10 wires to a netlist network with 6 inputs and 3 outputs.

3.124.80.1. Executing ABC.

3.124.81. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$57074$abc$50696$abc$35197$auto$opt_dff.cc:194:make_patterns_logic$9854
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.124.81.1. Executing ABC.

3.124.82. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$57080$abc$47463$abc$35176$auto$opt_dff.cc:194:make_patterns_logic$9863
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.124.82.1. Executing ABC.

3.124.83. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$61919$abc$50696$abc$35190$auto$opt_dff.cc:194:make_patterns_logic$9857
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.124.83.1. Executing ABC.

3.124.84. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$61919$abc$50696$abc$35168$auto$opt_dff.cc:194:make_patterns_logic$9866
Extracted 4 gates and 9 wires to a netlist network with 5 inputs and 3 outputs.

3.124.84.1. Executing ABC.

3.124.85. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57098$abc$47478$abc$35114$auto$opt_dff.cc:219:make_patterns_logic$9957
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.124.85.1. Executing ABC.

3.124.86. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57125$abc$47505$abc$35087$auto$opt_dff.cc:219:make_patterns_logic$9964
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.124.86.1. Executing ABC.

3.124.87. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57152$abc$47532$abc$35032$u1.u0.token_le_1
Extracted 46 gates and 77 wires to a netlist network with 31 inputs and 38 outputs.

3.124.87.1. Executing ABC.

3.124.88. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57202$abc$47579$abc$34988$auto$opt_dff.cc:194:make_patterns_logic$9996
Extracted 32 gates and 44 wires to a netlist network with 12 inputs and 16 outputs.

3.124.88.1. Executing ABC.

3.124.89. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56536$abc$44718$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10052
Extracted 45 gates and 48 wires to a netlist network with 3 inputs and 11 outputs.

3.124.89.1. Executing ABC.

3.124.90. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57235$abc$47612$abc$35020$auto$opt_dff.cc:194:make_patterns_logic$9993
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs.

3.124.90.1. Executing ABC.

3.124.91. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56445$abc$46500$abc$38580$auto$opt_dff.cc:194:make_patterns_logic$9699
Extracted 44 gates and 78 wires to a netlist network with 34 inputs and 33 outputs.

3.124.91.1. Executing ABC.

3.124.92. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57305$abc$47769$abc$41071$auto$opt_dff.cc:194:make_patterns_logic$10005
Extracted 53 gates and 68 wires to a netlist network with 15 inputs and 23 outputs.

3.124.92.1. Executing ABC.

3.124.93. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57364$abc$48010$abc$36688$auto$opt_dff.cc:194:make_patterns_logic$9505
Extracted 27 gates and 52 wires to a netlist network with 25 inputs and 23 outputs.

3.124.93.1. Executing ABC.

3.124.94. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57410$abc$48062$abc$38627$auto$opt_dff.cc:194:make_patterns_logic$9647
Extracted 219 gates and 352 wires to a netlist network with 133 inputs and 132 outputs.

3.124.94.1. Executing ABC.

3.124.95. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57667$abc$48314$abc$38877$auto$opt_dff.cc:194:make_patterns_logic$9829
Extracted 169 gates and 266 wires to a netlist network with 97 inputs and 106 outputs.

3.124.95.1. Executing ABC.

3.124.96. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56602$abc$45725$abc$39211$auto$opt_dff.cc:194:make_patterns_logic$9823
Extracted 98 gates and 168 wires to a netlist network with 70 inputs and 55 outputs.

3.124.96.1. Executing ABC.

3.124.97. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57843$abc$44771$abc$33936$auto$opt_dff.cc:219:make_patterns_logic$9925
Extracted 74 gates and 102 wires to a netlist network with 28 inputs and 12 outputs.

3.124.97.1. Executing ABC.

3.124.98. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57919$abc$47681$abc$34834$auto$opt_dff.cc:194:make_patterns_logic$10002
Extracted 87 gates and 99 wires to a netlist network with 12 inputs and 10 outputs.

3.124.98.1. Executing ABC.

3.124.99. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58540$abc$49033$abc$36231$auto$opt_dff.cc:194:make_patterns_logic$9535
Extracted 141 gates and 255 wires to a netlist network with 114 inputs and 58 outputs.

3.124.99.1. Executing ABC.

3.124.100. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58693$abc$49231$abc$34039$auto$opt_dff.cc:194:make_patterns_logic$9968
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 2 outputs.

3.124.100.1. Executing ABC.

3.124.101. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58700$abc$49508$abc$33325$auto$opt_dff.cc:194:make_patterns_logic$10076
Extracted 82 gates and 130 wires to a netlist network with 48 inputs and 10 outputs.

3.124.101.1. Executing ABC.

3.124.102. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58790$abc$49594$abc$36529$auto$opt_dff.cc:194:make_patterns_logic$9514
Extracted 214 gates and 267 wires to a netlist network with 53 inputs and 68 outputs.

3.124.102.1. Executing ABC.

3.124.103. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59013$abc$47838$abc$37027$auto$opt_dff.cc:194:make_patterns_logic$9635
Extracted 149 gates and 234 wires to a netlist network with 85 inputs and 85 outputs.

3.124.103.1. Executing ABC.

3.124.104. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$59173$abc$49946$abc$35377$auto$opt_dff.cc:194:make_patterns_logic$9869
Extracted 18 gates and 36 wires to a netlist network with 18 inputs and 15 outputs.

3.124.104.1. Executing ABC.

3.124.105. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$58007$abc$48495$abc$35450$auto$opt_dff.cc:194:make_patterns_logic$9872
Extracted 476 gates and 709 wires to a netlist network with 233 inputs and 260 outputs.

3.124.105.1. Executing ABC.

3.124.106. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59205$abc$49980$abc$36752$auto$opt_dff.cc:194:make_patterns_logic$9453
Extracted 258 gates and 405 wires to a netlist network with 147 inputs and 150 outputs.

3.124.106.1. Executing ABC.

3.124.107. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59474$abc$46235$abc$37695$auto$opt_dff.cc:194:make_patterns_logic$9550
Extracted 260 gates and 405 wires to a netlist network with 145 inputs and 144 outputs.

3.124.107.1. Executing ABC.

3.124.108. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$59753$abc$50215$abc$39520$auto$opt_dff.cc:194:make_patterns_logic$9744
Extracted 242 gates and 382 wires to a netlist network with 140 inputs and 138 outputs.

3.124.108.1. Executing ABC.

3.124.109. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60032$abc$46029$abc$37946$auto$opt_dff.cc:194:make_patterns_logic$9732
Extracted 173 gates and 270 wires to a netlist network with 97 inputs and 109 outputs.

3.124.109.1. Executing ABC.

3.124.110. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60229$abc$52361$abc$38415$auto$opt_dff.cc:194:make_patterns_logic$9708
Extracted 229 gates and 276 wires to a netlist network with 47 inputs and 59 outputs.

3.124.110.1. Executing ABC.

3.124.111. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60460$abc$49185$abc$33852$auto$opt_dff.cc:194:make_patterns_logic$10011
Extracted 23 gates and 37 wires to a netlist network with 14 inputs and 23 outputs.

3.124.111.1. Executing ABC.

3.124.112. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60506$abc$50465$abc$35898$auto$opt_dff.cc:219:make_patterns_logic$9897
Extracted 96 gates and 129 wires to a netlist network with 33 inputs and 17 outputs.

3.124.112.1. Executing ABC.

3.124.113. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60603$abc$50669$abc$34146$auto$opt_dff.cc:219:make_patterns_logic$9943
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.124.113.1. Executing ABC.

3.124.114. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60630$abc$51944$abc$41071$u1.u2.fill_buf0
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.124.114.1. Executing ABC.

3.124.115. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60712$abc$44869$abc$39048$auto$opt_dff.cc:194:make_patterns_logic$9826
Extracted 134 gates and 240 wires to a netlist network with 106 inputs and 59 outputs.

3.124.115.1. Executing ABC.

3.124.116. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60868$abc$52026$abc$41071$u1.u2.fill_buf1
Extracted 49 gates and 84 wires to a netlist network with 35 inputs and 17 outputs.

3.124.116.1. Executing ABC.

3.124.117. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$60950$abc$52108$abc$36394$auto$opt_dff.cc:194:make_patterns_logic$9532
Extracted 91 gates and 154 wires to a netlist network with 63 inputs and 54 outputs.

3.124.117.1. Executing ABC.

3.124.118. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$61072$abc$52230$abc$38280$auto$opt_dff.cc:194:make_patterns_logic$9726
Extracted 120 gates and 212 wires to a netlist network with 92 inputs and 65 outputs.

3.124.118.1. Executing ABC.

3.124.119. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$56809$abc$46943$abc$37175$auto$opt_dff.cc:194:make_patterns_logic$9632
Extracted 114 gates and 201 wires to a netlist network with 87 inputs and 45 outputs.

3.124.119.1. Executing ABC.

3.124.120. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$61203$abc$44691$abc$37009$auto$opt_dff.cc:194:make_patterns_logic$9638
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 10 outputs.

3.124.120.1. Executing ABC.

3.124.121. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$61221$abc$47358$abc$35281$auto$opt_dff.cc:194:make_patterns_logic$9836
Extracted 70 gates and 106 wires to a netlist network with 36 inputs and 36 outputs.

3.124.121.1. Executing ABC.

3.124.122. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$57242$abc$47618$abc$34923$u1.u0.data_valid_d
Extracted 29 gates and 43 wires to a netlist network with 14 inputs and 9 outputs.

3.124.122.1. Executing ABC.

3.124.123. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$61296$abc$46733$abc$33635$auto$opt_dff.cc:219:make_patterns_logic$10046
Extracted 130 gates and 171 wires to a netlist network with 41 inputs and 29 outputs.

3.124.123.1. Executing ABC.

3.124.124. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$63508$lo218
Extracted 64 gates and 129 wires to a netlist network with 65 inputs and 32 outputs.

3.124.124.1. Executing ABC.

3.124.125. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$61523$abc$49831$abc$37338$auto$opt_dff.cc:194:make_patterns_logic$9629
Extracted 110 gates and 192 wires to a netlist network with 82 inputs and 58 outputs.

3.124.125.1. Executing ABC.

3.124.126. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$55988$abc$45490$abc$39314$auto$opt_dff.cc:194:make_patterns_logic$9805
Extracted 212 gates and 264 wires to a netlist network with 52 inputs and 67 outputs.

3.124.126.1. Executing ABC.

3.124.127. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$61643$abc$49237$abc$37441$auto$opt_dff.cc:194:make_patterns_logic$9611
Extracted 258 gates and 337 wires to a netlist network with 79 inputs and 114 outputs.

3.124.127.1. Executing ABC.

3.124.128. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$63137$abc$46552$abc$38117$auto$opt_dff.cc:194:make_patterns_logic$9729
Extracted 140 gates and 253 wires to a netlist network with 113 inputs and 65 outputs.

3.124.128.1. Executing ABC.

3.124.129. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i, enabled by $abc$63300$abc$47115$abc$36026$auto$opt_dff.cc:194:make_patterns_logic$9538
Extracted 176 gates and 270 wires to a netlist network with 94 inputs and 111 outputs.

3.124.129.1. Executing ABC.

3.124.130. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i
Extracted 1134 gates and 1806 wires to a netlist network with 672 inputs and 107 outputs.

3.124.130.1. Executing ABC.

3.124.131. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \phy_clk_pad_i
Extracted 2352 gates and 3288 wires to a netlist network with 936 inputs and 644 outputs.

3.124.131.1. Executing ABC.

yosys> opt_ffinv

3.125. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 5 inverters.

yosys> opt_expr

3.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~112 debug messages>

yosys> opt_merge -nomux

3.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~840 debug messages>
Removed a total of 280 cells.

yosys> opt_muxtree

3.128. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.129. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.130. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.131. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73654 in front of them:
        $abc$67822$auto$blifparse.cc:381:parse_blif$67899
        $abc$70280$auto$blifparse.cc:381:parse_blif$70340

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74070 in front of them:
        $abc$70001$auto$blifparse.cc:381:parse_blif$70197
        $abc$70280$auto$blifparse.cc:381:parse_blif$70367

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74088 in front of them:
        $abc$70001$auto$blifparse.cc:381:parse_blif$70233
        $abc$70280$auto$blifparse.cc:381:parse_blif$70503

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74100 in front of them:
        $abc$70001$auto$blifparse.cc:381:parse_blif$70213
        $abc$70280$auto$blifparse.cc:381:parse_blif$70366

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73511 in front of them:
        $abc$66546$auto$blifparse.cc:381:parse_blif$66555
        $abc$71845$auto$blifparse.cc:381:parse_blif$71854

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73487 in front of them:
        $abc$67416$auto$blifparse.cc:381:parse_blif$67423
        $abc$66291$auto$blifparse.cc:381:parse_blif$66295

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73801 in front of them:
        $abc$66983$auto$blifparse.cc:381:parse_blif$66990
        $abc$67229$auto$blifparse.cc:381:parse_blif$67233

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73806 in front of them:
        $abc$67416$auto$blifparse.cc:381:parse_blif$67421
        $abc$66291$auto$blifparse.cc:381:parse_blif$66299

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73482 in front of them:
        $abc$66983$auto$blifparse.cc:381:parse_blif$66988
        $abc$67229$auto$blifparse.cc:381:parse_blif$67235

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74143 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69767
        $abc$70001$auto$blifparse.cc:381:parse_blif$70201

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73947 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69826
        $abc$67822$auto$blifparse.cc:381:parse_blif$67888

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74067 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69950
        $abc$67822$auto$blifparse.cc:381:parse_blif$67874

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74144 in front of them:
        $abc$67822$auto$blifparse.cc:381:parse_blif$67891
        $abc$70280$auto$blifparse.cc:381:parse_blif$70325

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74085 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69795
        $abc$67822$auto$blifparse.cc:381:parse_blif$67902

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74097 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69794
        $abc$67822$auto$blifparse.cc:381:parse_blif$67904

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73553 in front of them:
        $abc$66546$auto$blifparse.cc:381:parse_blif$66557
        $abc$71845$auto$blifparse.cc:381:parse_blif$71852

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73653 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69941
        $abc$70001$auto$blifparse.cc:381:parse_blif$70210

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73556 in front of them:
        $abc$67319$auto$blifparse.cc:381:parse_blif$67328
        $abc$66996$auto$blifparse.cc:381:parse_blif$67005

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73516 in front of them:
        $abc$67319$auto$blifparse.cc:381:parse_blif$67329
        $abc$66996$auto$blifparse.cc:381:parse_blif$67003

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73704 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69772
        $abc$67822$auto$blifparse.cc:381:parse_blif$67881

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73446 in front of them:
        $abc$70001$auto$blifparse.cc:381:parse_blif$70142
        $abc$70280$auto$blifparse.cc:381:parse_blif$70388

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73950 in front of them:
        $abc$70001$auto$blifparse.cc:381:parse_blif$70219
        $abc$70280$auto$blifparse.cc:381:parse_blif$70500

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73439 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69914
        $abc$67822$auto$blifparse.cc:381:parse_blif$68009

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73709 in front of them:
        $abc$70001$auto$blifparse.cc:381:parse_blif$70165
        $abc$70280$auto$blifparse.cc:381:parse_blif$70492


yosys> opt_dff -nosdff -sat

3.132. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.133. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 5 unused cells and 59040 unused wires.
<suppressed ~444 debug messages>

yosys> opt_expr

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~24 debug messages>

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~24 debug messages>

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$73655 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69941
        $abc$67822$auto$blifparse.cc:381:parse_blif$67899

    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$73176$auto$blifparse.cc:381:parse_blif$74145 in front of them:
        $abc$69718$auto$blifparse.cc:381:parse_blif$69767
        $abc$67822$auto$blifparse.cc:381:parse_blif$67891


yosys> opt_dff -nosdff -sat

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 3

yosys> bmuxmap

3.149. Executing BMUXMAP pass.

yosys> demuxmap

3.150. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_CRY9DT/abc_tmp_1.scr

3.151. Executing ABC pass (technology mapping using ABC).

3.151.1. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Extracted 7560 gates and 9258 wires to a netlist network with 1698 inputs and 1380 outputs.

3.151.1.1. Executing ABC.
DE:   #PIs = 1698  #Luts =  2502  Max Lvl =  10  Avg Lvl =   3.95  [   0.52 sec. at Pass 0]
DE:   #PIs = 1698  #Luts =  2299  Max Lvl =  12  Avg Lvl =   3.94  [  14.44 sec. at Pass 1]
DE:   #PIs = 1698  #Luts =  2272  Max Lvl =  12  Avg Lvl =   3.65  [   3.15 sec. at Pass 2]
DE:   #PIs = 1698  #Luts =  2267  Max Lvl =  12  Avg Lvl =   3.86  [   4.15 sec. at Pass 3]
DE:   #PIs = 1698  #Luts =  2257  Max Lvl =  11  Avg Lvl =   3.69  [   6.48 sec. at Pass 4]
DE:   #PIs = 1698  #Luts =  2255  Max Lvl =  11  Avg Lvl =   3.80  [   7.80 sec. at Pass 5]
DE:   #PIs = 1698  #Luts =  2255  Max Lvl =  11  Avg Lvl =   3.80  [   6.42 sec. at Pass 6]
DE:   #PIs = 1698  #Luts =  2255  Max Lvl =  11  Avg Lvl =   3.80  [   7.32 sec. at Pass 7]
DE:   #PIs = 1698  #Luts =  2251  Max Lvl =  11  Avg Lvl =   3.78  [   5.75 sec. at Pass 8]
DE:   #PIs = 1698  #Luts =  2251  Max Lvl =  11  Avg Lvl =   3.78  [  10.33 sec. at Pass 9]
DE:   #PIs = 1698  #Luts =  2251  Max Lvl =  11  Avg Lvl =   3.78  [   5.95 sec. at Pass 10]
DE:   #PIs = 1698  #Luts =  2251  Max Lvl =  11  Avg Lvl =   3.78  [   7.51 sec. at Pass 11]
DE:   #PIs = 1698  #Luts =  2249  Max Lvl =  11  Avg Lvl =   3.59  [   2.30 sec. at Pass 12]

yosys> opt_expr

3.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~22 debug messages>

yosys> opt_reduce

3.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.157. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.158. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 8531 unused wires.
<suppressed ~78 debug messages>

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.161. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 5 inverters.

yosys> stat

3.162. Printing statistics.

=== usbf_top ===

   Number of wires:               4613
   Number of wire bits:          12215
   Number of public wires:        1025
   Number of public wire bits:    8482
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3998
     $_DFFE_PP_                   1172
     $_DFF_P_                      536
     $lut                         2247
     $mux                           26
     adder_carry                    17


yosys> shregmap -minlen 8 -maxlen 20

3.163. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.164. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.165. Printing statistics.

=== usbf_top ===

   Number of wires:               4617
   Number of wire bits:          12219
   Number of public wires:        1025
   Number of public wire bits:    8482
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3998
     $_DFFE_PP0P_                 1172
     $_DFF_P_                      536
     $lut                         2247
     $mux                           26
     adder_carry                    17


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.166. Executing TECHMAP pass (map to technology primitives).

3.166.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.166.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/Raptor/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.166.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~5289 debug messages>

yosys> opt_expr -mux_undef

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~49010 debug messages>

yosys> simplemap

3.168. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge

3.170. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~19491 debug messages>
Removed a total of 6497 cells.

yosys> opt_dff -nodffe -nosdff

3.171. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.172. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 1 unused cells and 13646 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.173. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
<suppressed ~1228 debug messages>

yosys> opt_merge -nomux

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.175. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.176. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.178. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.179. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.180. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 62 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.181. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_CRY9DT/abc_tmp_2.scr

3.182. Executing ABC pass (technology mapping using ABC).

3.182.1. Extracting gate netlist of module `\usbf_top' to `<abc-temp-dir>/input.blif'..
Extracted 8725 gates and 10403 wires to a netlist network with 1676 inputs and 1373 outputs.

3.182.1.1. Executing ABC.
DE:   #PIs = 1676  #Luts =  2268  Max Lvl =  12  Avg Lvl =   3.65  [   0.53 sec. at Pass 0]
DE:   #PIs = 1676  #Luts =  2268  Max Lvl =  12  Avg Lvl =   3.65  [  21.41 sec. at Pass 1]
DE:   #PIs = 1676  #Luts =  2255  Max Lvl =  12  Avg Lvl =   3.60  [   4.08 sec. at Pass 2]
DE:   #PIs = 1676  #Luts =  2253  Max Lvl =  12  Avg Lvl =   3.59  [   6.78 sec. at Pass 3]
DE:   #PIs = 1676  #Luts =  2251  Max Lvl =  11  Avg Lvl =   3.55  [   6.45 sec. at Pass 4]
DE:   #PIs = 1676  #Luts =  2250  Max Lvl =  12  Avg Lvl =   3.42  [   6.09 sec. at Pass 5]
DE:   #PIs = 1676  #Luts =  2249  Max Lvl =  12  Avg Lvl =   3.62  [   5.13 sec. at Pass 6]
DE:   #PIs = 1676  #Luts =  2246  Max Lvl =  11  Avg Lvl =   3.49  [   9.56 sec. at Pass 7]
DE:   #PIs = 1676  #Luts =  2244  Max Lvl =  11  Avg Lvl =   3.66  [   4.93 sec. at Pass 8]
DE:   #PIs = 1676  #Luts =  2243  Max Lvl =  11  Avg Lvl =   3.44  [   9.02 sec. at Pass 9]
DE:   #PIs = 1676  #Luts =  2243  Max Lvl =  11  Avg Lvl =   3.44  [   5.90 sec. at Pass 10]
DE:   #PIs = 1676  #Luts =  2243  Max Lvl =  11  Avg Lvl =   3.44  [  11.56 sec. at Pass 11]
DE:   #PIs = 1676  #Luts =  2241  Max Lvl =  11  Avg Lvl =   3.71  [   5.59 sec. at Pass 12]
DE:   #PIs = 1676  #Luts =  2237  Max Lvl =  11  Avg Lvl =   3.66  [   6.37 sec. at Pass 13]
DE:   #PIs = 1676  #Luts =  2237  Max Lvl =  11  Avg Lvl =   3.66  [   4.92 sec. at Pass 14]
DE:   #PIs = 1676  #Luts =  2237  Max Lvl =  11  Avg Lvl =   3.66  [   8.19 sec. at Pass 15]
DE:   #PIs = 1676  #Luts =  2237  Max Lvl =  11  Avg Lvl =   3.66  [   2.64 sec. at Pass 16]

yosys> opt_expr

3.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.

yosys> opt_merge -nomux

3.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.185. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbf_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.186. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbf_top.
Performed a total of 0 changes.

yosys> opt_merge

3.187. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbf_top'.
Removed a total of 0 cells.

yosys> opt_share

3.188. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.189. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.190. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 8510 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbf_top.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.192. Executing HIERARCHY pass (managing design hierarchy).

3.192.1. Analyzing design hierarchy..
Top module:  \usbf_top

3.192.2. Analyzing design hierarchy..
Top module:  \usbf_top
Removed 0 unused modules.

yosys> stat

3.193. Printing statistics.

=== usbf_top ===

   Number of wires:               4576
   Number of wire bits:          12178
   Number of public wires:        1025
   Number of public wire bits:    8482
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3961
     $lut                         2236
     adder_carry                    17
     dffsre                       1708


yosys> opt_clean -purge

3.194. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbf_top..
Removed 0 unused cells and 900 unused wires.
<suppressed ~900 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.195. Executing Verilog backend.
Dumping module `\usbf_top'.

Warnings: 18 unique messages, 18 total
End of script. Logfile hash: dcdbd2fe40, CPU: user 80.76s system 4.42s, MEM: 166.86 MB peak
Yosys 0.18+10 (git sha1 c98b0e94e, gcc 9.4.0 -fPIC -Os)
Time spent: 95% 6x abc (1032 sec), 1% 49x opt_expr (16 sec), ...
real 421.48
user 973.28
sys 108.24
