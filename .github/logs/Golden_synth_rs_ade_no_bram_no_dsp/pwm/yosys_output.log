
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.36
 Yosys 0.17+76 (git sha1 ba67c2ec9, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv pwm_reg_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_reg_cdc.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv pwm.sv pwm_chan.sv pwm_core.sv pwm_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

yosys> verific -sv prim_alert_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv pwm_reg_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_buf.sv prim_diff_decode.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_reg_cdc.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_sync_reqack.sv pwm.sv pwm_chan.sv pwm_core.sv pwm_reg_top.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:10: parameter 'NOutputs' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:11: parameter 'NumAlerts' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:14: parameter 'BlockAw' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:99: parameter 'PWM_ALERT_TEST_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:100: parameter 'PWM_REGWEN_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:101: parameter 'PWM_CFG_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:102: parameter 'PWM_PWM_EN_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:103: parameter 'PWM_INVERT_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:104: parameter 'PWM_PWM_PARAM_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:105: parameter 'PWM_PWM_PARAM_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:106: parameter 'PWM_PWM_PARAM_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:107: parameter 'PWM_PWM_PARAM_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:108: parameter 'PWM_PWM_PARAM_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:109: parameter 'PWM_PWM_PARAM_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:110: parameter 'PWM_DUTY_CYCLE_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:111: parameter 'PWM_DUTY_CYCLE_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:112: parameter 'PWM_DUTY_CYCLE_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:113: parameter 'PWM_DUTY_CYCLE_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:114: parameter 'PWM_DUTY_CYCLE_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:115: parameter 'PWM_DUTY_CYCLE_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:116: parameter 'PWM_BLINK_PARAM_0_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:117: parameter 'PWM_BLINK_PARAM_1_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:118: parameter 'PWM_BLINK_PARAM_2_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:119: parameter 'PWM_BLINK_PARAM_3_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:120: parameter 'PWM_BLINK_PARAM_4_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:121: parameter 'PWM_BLINK_PARAM_5_OFFSET' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:124: parameter 'PWM_ALERT_TEST_RESVAL' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:125: parameter 'PWM_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pwm_reg_pkg.sv:155: parameter 'PWM_PERMIT' declared inside package 'pwm_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_chan.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pwm_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'

yosys> synth_rs -top pwm -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.52

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top pwm

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] pwm.sv:6: compiling module 'pwm'
VERIFIC-INFO [VERI-1018] pwm_reg_top.sv:8: compiling module 'pwm_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:3: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:9: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=7)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:44: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_sync_reqack.sv:26: compiling module 'prim_sync_reqack'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)'
VERIFIC-INFO [VERI-1018] prim_reg_cdc.sv:8: compiling module 'prim_reg_cdc'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)'
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] pwm_core.sv:7: compiling module 'pwm_core'
VERIFIC-INFO [VERI-1018] pwm_chan.sv:5: compiling module 'pwm_chan'
Importing module pwm.
Importing module prim_alert_sender.
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module pwm_core.
Importing module pwm_chan.
Importing module pwm_reg_top.
Importing module prim_reg_cdc.
Importing module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
Importing module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
Importing module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
Importing module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
Importing module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
Importing module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_sync_reqack.
Importing module prim_flop_2sync(Width=1).
Importing module tlul_adapter_reg(RegAw=7).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.

3.3.1. Analyzing design hierarchy..
Top module:  \pwm
Used module:     \pwm_core
Used module:         \pwm_chan
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \pwm_reg_top
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)
Used module:         \prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc
Used module:             \prim_sync_reqack
Used module:                 \prim_flop_2sync(Width=1)
Used module:         \prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)
Used module:         \prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)
Used module:         \prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.3.2. Analyzing design hierarchy..
Top module:  \pwm
Used module:     \pwm_core
Used module:         \pwm_chan
Used module:     \prim_alert_sender
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \pwm_reg_top
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111)
Used module:         \prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_reg_cdc
Used module:             \prim_sync_reqack
Used module:                 \prim_flop_2sync(Width=1)
Used module:         \prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111)
Used module:         \prim_reg_cdc(BitMask=32'b11000000000000001111111111111111)
Used module:         \prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111)
Used module:         \prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000)
Used module:         \tlul_adapter_reg(RegAw=7)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=7).
<suppressed ~11 debug messages>
Optimizing module prim_flop_2sync(Width=1).
Optimizing module prim_sync_reqack.
<suppressed ~4 debug messages>
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
<suppressed ~5 debug messages>
Optimizing module prim_reg_cdc.
<suppressed ~5 debug messages>
Optimizing module pwm_reg_top.
<suppressed ~2 debug messages>
Optimizing module pwm_chan.
<suppressed ~5 debug messages>
Optimizing module pwm_core.
<suppressed ~4 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender.
<suppressed ~7 debug messages>
Optimizing module pwm.
<suppressed ~1 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=7).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_sync_reqack.
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg(DW=4,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=4'b0111).
Deleting now unused module prim_subreg(DW=27,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=27'b01000000000000000).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0111111111111111).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW0C_prim_subreg_pkg,RESVAL=1'b1).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_reg_cdc(ResetVal=32'b01111111111111110111111111111111).
Deleting now unused module prim_reg_cdc(ResetVal=32'b0111000000000001000000000000000).
Deleting now unused module prim_reg_cdc(DataWidth=6,ResetVal=6'b0,BitMask=6'b111111).
Deleting now unused module prim_reg_cdc(BitMask=32'b11000000000000001111111111111111).
Deleting now unused module prim_reg_cdc.
Deleting now unused module pwm_reg_top.
Deleting now unused module pwm_chan.
Deleting now unused module pwm_core.
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_buf.
Deleting now unused module prim_alert_sender.
<suppressed ~121 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~87 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 475 unused cells and 11332 unused wires.
<suppressed ~1934 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module pwm...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~59 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~171 debug messages>
Removed a total of 57 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_blink_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_blink_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_blink_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_blink_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_cfg_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_cfg_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_cfg_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_cfg_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_core_tgl.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_core_tgl.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_core_tgl.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_core_tgl.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_core_tgl.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_core_tgl.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_core_tgl.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_core_tgl.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_duty_cycle_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_invert_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_invert_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_invert_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_invert_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_en_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_en_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_en_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_en_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_0_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_0_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_1_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_1_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_2_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_2_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_3_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_3_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_4_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_4_cdc.u_prim_sync.dst_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i11$prim_sync_reqack.sv:94$9555: \u_reg.u_pwm_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i8$prim_sync_reqack.sv:85$9553: \u_reg.u_pwm_param_5_cdc.u_prim_sync.src_fsm_cs -> 1'0
      Replacing known input bits on port B of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i21$prim_sync_reqack.sv:124$9564: \u_reg.u_pwm_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'1
      Replacing known input bits on port A of cell $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$i19$prim_sync_reqack.sv:115$9563: \u_reg.u_pwm_param_5_cdc.u_prim_sync.dst_fsm_cs -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~291 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_614$pwm_reg_top.sv:2770$8941: { $flatten\u_reg.$verific$n4607$2793 $flatten\u_reg.$verific$n4610$2796 $flatten\u_reg.$verific$n4613$2799 $flatten\u_reg.$verific$n4616$2802 $flatten\u_reg.$verific$n4619$2805 $flatten\u_reg.$verific$n4622$2808 $flatten\u_reg.$verific$n4625$2811 $flatten\u_reg.$verific$n4628$2814 $flatten\u_reg.$verific$n4631$2817 $flatten\u_reg.$verific$n4634$2820 $flatten\u_reg.$verific$n4637$2823 $flatten\u_reg.$verific$n4640$2826 $flatten\u_reg.$verific$n4643$2829 $flatten\u_reg.$verific$n4646$2832 $flatten\u_reg.$verific$n4649$2835 $flatten\u_reg.$verific$n4652$2838 $flatten\u_reg.$verific$n4655$2841 $flatten\u_reg.$verific$n4658$2844 $flatten\u_reg.$verific$n4661$2847 $flatten\u_reg.$verific$n4664$2850 $flatten\u_reg.$verific$n4667$2853 $flatten\u_reg.$verific$n4670$2856 $flatten\u_reg.$verific$n4672$2858 }
  Optimizing cells in module \pwm.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$1587 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9661 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9660 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9659 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9669 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9649 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9670 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$1496 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$1500 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$1588 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.$verific$phase_ctr_q_reg$pwm_core.sv:96$1710 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$1586 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$1587 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9161 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9233 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$1589 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_0.$verific$qe_reg$prim_subreg.sv:67$9405 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9233 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_invert_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9377 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.$verific$beat_ctr_q_reg$pwm_core.sv:79$1694 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$qe_reg$prim_subreg.sv:67$9465 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_core_tgl.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_clk_div.$verific$qe_reg$prim_subreg.sv:67$9486 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$1588 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9305 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9304 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_cfg_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9286 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_x_5.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_x_4.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$1498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_x_3.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$1497 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1633 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$1499 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_x_2.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_x_1.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_x_0.$verific$qe_reg$prim_subreg.sv:67$9444 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\req_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.\ack_sync.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$1616 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$src_req_q_reg$prim_sync_reqack.sv:139$9573 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$src_fsm_cs_reg$prim_sync_reqack.sv:139$9572 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$dst_fsm_cs_reg$prim_sync_reqack.sv:148$9577 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.\u_prim_sync.$verific$dst_ack_q_reg$prim_sync_reqack.sv:148$9578 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$txn_bits_q_reg$prim_reg_cdc.sv:98$9089 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$pwm_reg_top.sv:62$3081 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$htbt_direction_reg$pwm_chan.sv:106$2541 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$htbt_ctr_q_reg$pwm_chan.sv:83$2516 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$dc_htbt_q_reg$pwm_chan.sv:127$2564 ($aldff) from module pwm.
Changing const-value async load to async reset on $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$blink_ctr_q_reg$pwm_chan.sv:56$2498 ($aldff) from module pwm.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 75 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~3 debug messages>

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~291 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Handling D = Q on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($adff) from module pwm (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_0_x_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_0_y_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_1_x_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_1_y_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_2_x_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_2_y_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_3_x_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_3_y_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_4_x_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_4_y_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_5_x_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_blink_param_5_y_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 1-bit at position 15 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_cfg_clk_div.$verific$q_reg$prim_subreg.sv:72$9490 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_cfg_cntr_en.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_cfg_dc_resn.$verific$q_reg$prim_subreg.sv:72$9511 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_0_a_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_0_b_0.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_1_a_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_1_b_1.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_2_a_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_2_b_2.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_3_a_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_3_b_3.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_4_a_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_4_b_4.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_5_a_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 1 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 2 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 3 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 4 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 5 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 6 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 7 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 8 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 9 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 10 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 11 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 12 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 13 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 1-bit at position 14 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_duty_cycle_5_b_5.$verific$q_reg$prim_subreg.sv:72$9469 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_invert_invert_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_en_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_blink_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_htbt_en_0.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_0_phase_delay_0.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_blink_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_htbt_en_1.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_1_phase_delay_1.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_blink_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_htbt_en_2.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_2_phase_delay_2.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_blink_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_htbt_en_3.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_3_phase_delay_3.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_blink_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_htbt_en_4.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_4_phase_delay_4.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_blink_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_htbt_en_5.$verific$q_reg[0]$prim_subreg.sv:72$9408 ($dlatch) from module pwm.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_pwm_param_5_phase_delay_5.$verific$q_reg$prim_subreg.sv:72$9448 ($dlatch) from module pwm.
Setting constant 1-bit at position 0 on $flatten\u_reg.\u_regwen.$verific$q_reg[0]$prim_subreg.sv:72$9429 ($dlatch) from module pwm.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~329 debug messages>

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[2].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[0].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[3].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[4].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.$verific$mux_66$pwm_core.sv:70$1685.
    dead port 1/2 on $mux $flatten\u_pwm_core.$verific$mux_65$pwm_core.sv:70$1684.
    dead port 2/2 on $mux $flatten\u_pwm_core.$verific$mux_65$pwm_core.sv:70$1684.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[1].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_13$pwm_chan.sv:45$2489.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_14$pwm_chan.sv:45$2490.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_40$pwm_chan.sv:72$2509.
    dead port 1/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
    dead port 2/2 on $mux $flatten\u_pwm_core.\gen_chan_insts[5].u_chan.$verific$mux_41$pwm_chan.sv:72$2510.
Removed 51 multiplexer ports.
<suppressed ~255 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 317 unused cells and 739 unused wires.
<suppressed ~600 debug messages>

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~208 debug messages>

yosys> opt_reduce

3.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.11.30. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~208 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:80$9661 ($adff) from module pwm (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:80$9660 ($adff) from module pwm (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:80$9659 ($adff) from module pwm (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:90$9669 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n182$9619, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:67$9649 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n75$9599, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:90$9670 ($adff) from module pwm (D = $flatten\u_reg.\u_reg_if.$verific$n248$9601, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_5_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_5_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_4_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_4_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_3_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_3_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_2_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_2_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_1_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_1_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9160 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_0_cdc.$verific$n177$9129, Q = \u_reg.u_pwm_param_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9142 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_param_0_cdc.$verific$n14$9112, Q = \u_reg.u_pwm_param_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_en_cdc.$verific$n73$9201, Q = \u_reg.u_pwm_en_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_pwm_en_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($adff) from module pwm (D = $flatten\u_reg.\u_pwm_en_cdc.$verific$n14$9184, Q = \u_reg.u_pwm_en_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_invert_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9232 ($adff) from module pwm (D = $flatten\u_reg.\u_invert_cdc.$verific$n73$9201, Q = \u_reg.u_invert_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_invert_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9214 ($adff) from module pwm (D = $flatten\u_reg.\u_invert_cdc.$verific$n14$9184, Q = \u_reg.u_invert_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_5_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_4_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_3_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_2_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_1_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9376 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$n177$9345, Q = \u_reg.u_duty_cycle_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9358 ($adff) from module pwm (D = $flatten\u_reg.\u_duty_cycle_0_cdc.$verific$n14$9328, Q = \u_reg.u_duty_cycle_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_cfg_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9304 ($adff) from module pwm (D = $flatten\u_reg.\u_cfg_cdc.$verific$n177$9273, Q = \u_reg.u_cfg_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_cfg_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9286 ($adff) from module pwm (D = $flatten\u_reg.\u_cfg_cdc.$verific$n14$9256, Q = \u_reg.u_cfg_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_5_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_5_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_5_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_5_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_5_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_4_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_4_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_4_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_4_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_4_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_3_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_3_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_3_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_3_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_3_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_2_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_2_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_2_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_2_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_2_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_1_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_1_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_1_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_1_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_1_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_q_reg$prim_reg_cdc.sv:98$9088 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_0_cdc.$verific$n177$9057, Q = \u_reg.u_blink_param_0_cdc.src_q).
Adding EN signal on $flatten\u_reg.\u_blink_param_0_cdc.$verific$src_busy_q_reg$prim_reg_cdc.sv:55$9070 ($adff) from module pwm (D = $flatten\u_reg.\u_blink_param_0_cdc.$verific$n14$9040, Q = \u_reg.u_blink_param_0_cdc.src_busy_q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$pwm_reg_top.sv:62$3081 ($adff) from module pwm (D = 1'1, Q = \u_reg.intg_err_q).
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10680 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10674 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10668 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10662 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10656 ($adffe) from module pwm.
Setting constant 0-bit at position 16 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 17 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 18 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 19 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 20 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 21 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 22 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 23 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 24 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 25 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 26 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 27 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 28 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 29 on $auto$ff.cc:262:slice$10650 ($adffe) from module pwm.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$10642 ($adffe) from module pwm.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$10642 ($adffe) from module pwm.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~44 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell pwm.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:55$9629 ($eq).
Removed top 31 bits (of 32) from port A of cell pwm.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10278 ($shl).
Removed top 28 bits (of 32) from port Y of cell pwm.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_18$tlul_err.sv:44$10278 ($shl).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_289$pwm_reg_top.sv:2568$8737 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_287$pwm_reg_top.sv:2567$8736 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_285$pwm_reg_top.sv:2566$8735 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_283$pwm_reg_top.sv:2565$8734 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_281$pwm_reg_top.sv:2564$8733 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_279$pwm_reg_top.sv:2563$8732 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_277$pwm_reg_top.sv:2562$8731 ($eq).
Removed top 1 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_275$pwm_reg_top.sv:2561$8730 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_273$pwm_reg_top.sv:2560$8729 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_271$pwm_reg_top.sv:2559$8728 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_269$pwm_reg_top.sv:2558$8727 ($eq).
Removed top 2 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_267$pwm_reg_top.sv:2557$8726 ($eq).
Removed top 3 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_265$pwm_reg_top.sv:2556$8725 ($eq).
Removed top 3 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_263$pwm_reg_top.sv:2555$8724 ($eq).
Removed top 4 bits (of 5) from port B of cell pwm.$flatten\u_reg.$verific$equal_261$pwm_reg_top.sv:2554$8723 ($eq).
Removed top 3 bits (of 4) from wire pwm.$flatten\u_reg.$verific$n3674$2944.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 2 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module pwm:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10813: { $flatten\u_reg.$verific$n4658$2844 $flatten\u_reg.$verific$n4661$2847 $flatten\u_reg.$verific$n4664$2850 $flatten\u_reg.$verific$n4667$2853 $flatten\u_reg.$verific$n4670$2856 $flatten\u_reg.$verific$n4672$2858 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10845: { $flatten\u_reg.$verific$n4640$2826 $flatten\u_reg.$verific$n4643$2829 $flatten\u_reg.$verific$n4646$2832 $flatten\u_reg.$verific$n4649$2835 $flatten\u_reg.$verific$n4652$2838 $flatten\u_reg.$verific$n4655$2841 $flatten\u_reg.$verific$n4658$2844 $flatten\u_reg.$verific$n4661$2847 $flatten\u_reg.$verific$n4664$2850 $flatten\u_reg.$verific$n4667$2853 $flatten\u_reg.$verific$n4670$2856 $flatten\u_reg.$verific$n4672$2858 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$10841: { $flatten\u_reg.$verific$n4622$2808 $flatten\u_reg.$verific$n4625$2811 $flatten\u_reg.$verific$n4628$2814 $flatten\u_reg.$verific$n4631$2817 $flatten\u_reg.$verific$n4634$2820 $flatten\u_reg.$verific$n4637$2823 }
  Optimizing cells in module \pwm.
Performed a total of 3 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~203 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== pwm ===

   Number of wires:               3900
   Number of wire bits:          18543
   Number of public wires:        3234
   Number of public wire bits:   15932
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1202
     $adff                         196
     $adffe                         49
     $and                          231
     $bmux                          15
     $eq                            24
     $logic_not                      2
     $mux                          379
     $ne                             1
     $not                          101
     $or                           105
     $reduce_and                     3
     $reduce_bool                   43
     $reduce_or                     18
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== pwm ===

   Number of wires:               3900
   Number of wire bits:          18543
   Number of public wires:        3234
   Number of public wire bits:   15932
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1202
     $adff                         196
     $adffe                         49
     $and                          231
     $bmux                          15
     $eq                            24
     $logic_not                      2
     $mux                          379
     $ne                             1
     $not                          101
     $or                           105
     $reduce_and                     3
     $reduce_bool                   43
     $reduce_or                     18
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> stat

3.24. Printing statistics.

=== pwm ===

   Number of wires:               3900
   Number of wire bits:          18543
   Number of public wires:        3234
   Number of public wire bits:   15932
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1202
     $adff                         196
     $adffe                         49
     $and                          231
     $bmux                          15
     $eq                            24
     $logic_not                      2
     $mux                          379
     $ne                             1
     $not                          101
     $or                           105
     $reduce_and                     3
     $reduce_bool                   43
     $reduce_or                     18
     $reduce_xor                    28
     $shl                            1
     $xor                            6


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $ne.
No more expansions possible.
<suppressed ~1456 debug messages>

yosys> stat

3.26. Printing statistics.

=== pwm ===

   Number of wires:               4276
   Number of wire bits:          21621
   Number of public wires:        3234
   Number of public wire bits:   15932
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4626
     $_AND_                        242
     $_DFFE_PN0P_                  419
     $_DFFE_PN1P_                  184
     $_DFF_PN0_                    193
     $_DFF_PN1_                      7
     $_MUX_                       2431
     $_NOT_                        134
     $_OR_                         327
     $_XOR_                        689


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~558 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~2415 debug messages>
Removed a total of 805 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$15572 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [2], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$15571 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$15570 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [0]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 6 unused cells and 360 unused wires.
<suppressed ~7 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~35 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$15559 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$15558 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$15505 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$15504 ($_DFF_PN0_) from module pwm (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 43 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~32 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 38 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~254 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 70 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~355 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15543 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$15527
        $auto$simplemap.cc:278:simplemap_mux$15523

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$15548 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$15528
        $auto$simplemap.cc:278:simplemap_mux$15524


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~2 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~73 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$16393, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$16313, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$16168, arst=!\rst_ni, srst={ }
  38 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$16185, arst=!\rst_ni, srst={ }
  65 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10681, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10647, arst=!\rst_ni, srst={ }
  607 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10738, arst=!\rst_ni, srst={ }
  109 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10690, arst=!\rst_ni, srst={ }
  30 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10693, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10696, arst=!\rst_ni, srst={ }
  108 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10699, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10684, arst=!\rst_ni, srst={ }
  17 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10687, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10678, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10675, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10672, arst=!\rst_ni, srst={ }
  41 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10669, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10666, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10663, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10660, arst=!\rst_ni, srst={ }
  66 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10657, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10654, arst=!\rst_ni, srst={ }
  41 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10651, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10732, arst=!\rst_ni, srst={ }
  113 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10735, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10726, arst=!\rst_ni, srst={ }
  104 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10729, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10720, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10723, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10714, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10717, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10708, arst=!\rst_ni, srst={ }
  104 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10711, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10702, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10705, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  104 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  104 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  174 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  238 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }

3.33.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$16393, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$16313, asynchronously reset by !\rst_ni
Extracted 29 gates and 37 wires to a netlist network with 7 inputs and 4 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$16168, asynchronously reset by !\rst_ni
Extracted 28 gates and 42 wires to a netlist network with 12 inputs and 17 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$16185, asynchronously reset by !\rst_ni
Extracted 38 gates and 58 wires to a netlist network with 18 inputs and 12 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10681, asynchronously reset by !\rst_ni
Extracted 65 gates and 98 wires to a netlist network with 33 inputs and 23 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10647, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 607 gates and 909 wires to a netlist network with 300 inputs and 59 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10738, asynchronously reset by !\rst_ni
Extracted 21 gates and 32 wires to a netlist network with 11 inputs and 12 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 109 gates and 183 wires to a netlist network with 74 inputs and 39 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10690, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10693, asynchronously reset by !\rst_ni
Extracted 30 gates and 52 wires to a netlist network with 22 inputs and 12 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10696, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10699, asynchronously reset by !\rst_ni
Extracted 108 gates and 183 wires to a netlist network with 74 inputs and 37 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10684, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10687, asynchronously reset by !\rst_ni
Extracted 17 gates and 27 wires to a netlist network with 10 inputs and 7 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10678, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10675, asynchronously reset by !\rst_ni
Extracted 68 gates and 115 wires to a netlist network with 47 inputs and 25 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10672, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10669, asynchronously reset by !\rst_ni
Extracted 41 gates and 63 wires to a netlist network with 22 inputs and 19 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10666, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 6 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10663, asynchronously reset by !\rst_ni
Extracted 62 gates and 105 wires to a netlist network with 43 inputs and 21 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10660, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 6 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10657, asynchronously reset by !\rst_ni
Extracted 66 gates and 112 wires to a netlist network with 46 inputs and 23 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10654, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10651, asynchronously reset by !\rst_ni
Extracted 41 gates and 63 wires to a netlist network with 22 inputs and 19 outputs.

3.33.26.1. Executing ABC.

3.33.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10732, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 8 outputs.

3.33.27.1. Executing ABC.

3.33.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10735, asynchronously reset by !\rst_ni
Extracted 113 gates and 157 wires to a netlist network with 43 inputs and 39 outputs.

3.33.28.1. Executing ABC.

3.33.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10726, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 6 outputs.

3.33.29.1. Executing ABC.

3.33.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10729, asynchronously reset by !\rst_ni
Extracted 104 gates and 162 wires to a netlist network with 57 inputs and 35 outputs.

3.33.30.1. Executing ABC.

3.33.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10720, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 8 outputs.

3.33.31.1. Executing ABC.

3.33.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10723, asynchronously reset by !\rst_ni
Extracted 105 gates and 178 wires to a netlist network with 72 inputs and 36 outputs.

3.33.32.1. Executing ABC.

3.33.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10714, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 8 outputs.

3.33.33.1. Executing ABC.

3.33.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10717, asynchronously reset by !\rst_ni
Extracted 69 gates and 106 wires to a netlist network with 36 inputs and 33 outputs.

3.33.34.1. Executing ABC.

3.33.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10708, asynchronously reset by !\rst_ni
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 8 outputs.

3.33.35.1. Executing ABC.

3.33.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10711, asynchronously reset by !\rst_ni
Extracted 104 gates and 176 wires to a netlist network with 71 inputs and 35 outputs.

3.33.36.1. Executing ABC.

3.33.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10702, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.33.37.1. Executing ABC.

3.33.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10705, asynchronously reset by !\rst_ni
Extracted 69 gates and 106 wires to a netlist network with 36 inputs and 33 outputs.

3.33.38.1. Executing ABC.

3.33.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.39.1. Executing ABC.

3.33.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.33.40.1. Executing ABC.

3.33.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.41.1. Executing ABC.

3.33.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 104 gates and 175 wires to a netlist network with 71 inputs and 35 outputs.

3.33.42.1. Executing ABC.

3.33.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.43.1. Executing ABC.

3.33.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 105 gates and 177 wires to a netlist network with 72 inputs and 36 outputs.

3.33.44.1. Executing ABC.

3.33.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.45.1. Executing ABC.

3.33.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 69 gates and 105 wires to a netlist network with 36 inputs and 33 outputs.

3.33.46.1. Executing ABC.

3.33.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.33.47.1. Executing ABC.

3.33.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 104 gates and 175 wires to a netlist network with 71 inputs and 35 outputs.

3.33.48.1. Executing ABC.

3.33.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 174 gates and 197 wires to a netlist network with 22 inputs and 22 outputs.

3.33.49.1. Executing ABC.

3.33.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 238 gates and 297 wires to a netlist network with 58 inputs and 62 outputs.

3.33.50.1. Executing ABC.

3.33.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 6 outputs.

3.33.51.1. Executing ABC.

3.33.52. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 69 gates and 105 wires to a netlist network with 36 inputs and 33 outputs.

3.33.52.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  11 cells in clk=\clk_i, en=$abc$17673$auto$opt_dff.cc:194:make_patterns_logic$10678, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$10654, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17751$auto$opt_dff.cc:194:make_patterns_logic$10672, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$17891$auto$opt_dff.cc:194:make_patterns_logic$10660, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$17819$auto$opt_dff.cc:194:make_patterns_logic$10666, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$18441$auto$opt_dff.cc:194:make_patterns_logic$10714, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$18811$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$18701$auto$opt_dff.cc:194:make_patterns_logic$10702, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$18292$auto$opt_dff.cc:194:make_patterns_logic$10720, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$19048$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$18162$auto$opt_dff.cc:194:make_patterns_logic$10726, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$19277$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$18036$auto$opt_dff.cc:194:make_patterns_logic$10732, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$18821$u_reg.intg_err, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_i, en=$abc$18555$auto$opt_dff.cc:194:make_patterns_logic$10708, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$19388$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  57 cells in clk=\clk_i, en=$abc$17683$auto$opt_dff.cc:194:make_patterns_logic$10675, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$abc$17650$auto$opt_dff.cc:194:make_patterns_logic$10687, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$17902$auto$opt_dff.cc:194:make_patterns_logic$10657, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$17830$auto$opt_dff.cc:194:make_patterns_logic$10663, arst=!\rst_ni, srst={ }
  44 cells in clk=\clk_i, en=$abc$17760$auto$opt_dff.cc:194:make_patterns_logic$10669, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$17496$auto$opt_dff.cc:194:make_patterns_logic$10696, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$19161$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$17641$auto$opt_dff.cc:194:make_patterns_logic$10684, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$19398$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$17505$auto$opt_dff.cc:194:make_patterns_logic$10699, arst=!\rst_ni, srst={ }
  86 cells in clk=\clk_i, en=$abc$19171$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$18568$auto$opt_dff.cc:194:make_patterns_logic$10711, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$18710$auto$opt_dff.cc:194:make_patterns_logic$10705, arst=!\rst_ni, srst={ }
  132 cells in clk=\clk_i, en=$abc$19058$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$18454$auto$opt_dff.cc:194:make_patterns_logic$10717, arst=!\rst_ni, srst={ }
  85 cells in clk=\clk_i, en=$abc$19287$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  106 cells in clk=\clk_i, en=$abc$18049$auto$opt_dff.cc:194:make_patterns_logic$10735, arst=!\rst_ni, srst={ }
  42 cells in clk=\clk_i, en=$abc$17977$auto$opt_dff.cc:194:make_patterns_logic$10651, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$18173$auto$opt_dff.cc:194:make_patterns_logic$10729, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$18305$auto$opt_dff.cc:194:make_patterns_logic$10723, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$20025$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$16556$auto$opt_dff.cc:219:make_patterns_logic$16393, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$16569$auto$opt_dff.cc:219:make_patterns_logic$16313, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_i, en=$abc$16589$auto$opt_dff.cc:194:make_patterns_logic$16168, arst=!\rst_ni, srst={ }
  43 cells in clk=\clk_i, en=$abc$16611$auto$opt_dff.cc:219:make_patterns_logic$16185, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$16650$auto$opt_dff.cc:194:make_patterns_logic$10681, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$16713$auto$opt_dff.cc:194:make_patterns_logic$10647, arst=!\rst_ni, srst={ }
  641 cells in clk=\clk_i, en=$abc$16720$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$17332$auto$opt_dff.cc:194:make_patterns_logic$10738, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$17350$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$17457$auto$opt_dff.cc:194:make_patterns_logic$10690, arst=!\rst_ni, srst={ }
  110 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  20 cells in clk=\clk_i, en=$abc$17468$auto$opt_dff.cc:194:make_patterns_logic$10693, arst=!\rst_ni, srst={ }
  242 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$20035$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }

3.34.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17673$auto$opt_dff.cc:194:make_patterns_logic$10678, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17968$auto$opt_dff.cc:194:make_patterns_logic$10654, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17751$auto$opt_dff.cc:194:make_patterns_logic$10672, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17891$auto$opt_dff.cc:194:make_patterns_logic$10660, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17819$auto$opt_dff.cc:194:make_patterns_logic$10666, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18441$auto$opt_dff.cc:194:make_patterns_logic$10714, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18811$auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18701$auto$opt_dff.cc:194:make_patterns_logic$10702, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18292$auto$opt_dff.cc:194:make_patterns_logic$10720, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19048$auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18162$auto$opt_dff.cc:194:make_patterns_logic$10726, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19277$auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18036$auto$opt_dff.cc:194:make_patterns_logic$10732, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18821$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18555$auto$opt_dff.cc:194:make_patterns_logic$10708, asynchronously reset by !\rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19388$auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17683$auto$opt_dff.cc:194:make_patterns_logic$10675, asynchronously reset by !\rst_ni
Extracted 57 gates and 97 wires to a netlist network with 40 inputs and 19 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17650$auto$opt_dff.cc:194:make_patterns_logic$10687, asynchronously reset by !\rst_ni
Extracted 22 gates and 39 wires to a netlist network with 17 inputs and 11 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17902$auto$opt_dff.cc:194:make_patterns_logic$10657, asynchronously reset by !\rst_ni
Extracted 59 gates and 101 wires to a netlist network with 42 inputs and 22 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17830$auto$opt_dff.cc:194:make_patterns_logic$10663, asynchronously reset by !\rst_ni
Extracted 61 gates and 104 wires to a netlist network with 43 inputs and 21 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17760$auto$opt_dff.cc:194:make_patterns_logic$10669, asynchronously reset by !\rst_ni
Extracted 44 gates and 71 wires to a netlist network with 27 inputs and 22 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17496$auto$opt_dff.cc:194:make_patterns_logic$10696, asynchronously reset by !\rst_ni
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19161$auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17641$auto$opt_dff.cc:194:make_patterns_logic$10684, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.25.1. Executing ABC.

3.34.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19398$auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 103 gates and 174 wires to a netlist network with 71 inputs and 35 outputs.

3.34.26.1. Executing ABC.

3.34.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17505$auto$opt_dff.cc:194:make_patterns_logic$10699, asynchronously reset by !\rst_ni
Extracted 103 gates and 145 wires to a netlist network with 42 inputs and 36 outputs.

3.34.27.1. Executing ABC.

3.34.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19171$auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 86 gates and 141 wires to a netlist network with 55 inputs and 36 outputs.

3.34.28.1. Executing ABC.

3.34.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18568$auto$opt_dff.cc:194:make_patterns_logic$10711, asynchronously reset by !\rst_ni
Extracted 103 gates and 144 wires to a netlist network with 41 inputs and 35 outputs.

3.34.29.1. Executing ABC.

3.34.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18710$auto$opt_dff.cc:194:make_patterns_logic$10705, asynchronously reset by !\rst_ni
Extracted 98 gates and 134 wires to a netlist network with 36 inputs and 33 outputs.

3.34.30.1. Executing ABC.

3.34.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19058$auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 132 gates and 234 wires to a netlist network with 102 inputs and 35 outputs.

3.34.31.1. Executing ABC.

3.34.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18454$auto$opt_dff.cc:194:make_patterns_logic$10717, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.34.32.1. Executing ABC.

3.34.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$19287$auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 85 gates and 139 wires to a netlist network with 54 inputs and 33 outputs.

3.34.33.1. Executing ABC.

3.34.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18049$auto$opt_dff.cc:194:make_patterns_logic$10735, asynchronously reset by !\rst_ni
Extracted 106 gates and 147 wires to a netlist network with 41 inputs and 37 outputs.

3.34.34.1. Executing ABC.

3.34.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17977$auto$opt_dff.cc:194:make_patterns_logic$10651, asynchronously reset by !\rst_ni
Extracted 42 gates and 67 wires to a netlist network with 25 inputs and 19 outputs.

3.34.35.1. Executing ABC.

3.34.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18173$auto$opt_dff.cc:194:make_patterns_logic$10729, asynchronously reset by !\rst_ni
Extracted 103 gates and 144 wires to a netlist network with 41 inputs and 35 outputs.

3.34.36.1. Executing ABC.

3.34.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$18305$auto$opt_dff.cc:194:make_patterns_logic$10723, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.34.37.1. Executing ABC.

3.34.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20025$auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.38.1. Executing ABC.

3.34.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16556$auto$opt_dff.cc:219:make_patterns_logic$16393, asynchronously reset by !\rst_ni
Extracted 12 gates and 18 wires to a netlist network with 6 inputs and 3 outputs.

3.34.39.1. Executing ABC.

3.34.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16569$auto$opt_dff.cc:219:make_patterns_logic$16313, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 6 outputs.

3.34.40.1. Executing ABC.

3.34.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16589$auto$opt_dff.cc:194:make_patterns_logic$16168, asynchronously reset by !\rst_ni
Extracted 19 gates and 34 wires to a netlist network with 14 inputs and 12 outputs.

3.34.41.1. Executing ABC.

3.34.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16611$auto$opt_dff.cc:219:make_patterns_logic$16185, asynchronously reset by !\rst_ni
Extracted 43 gates and 57 wires to a netlist network with 14 inputs and 14 outputs.

3.34.42.1. Executing ABC.

3.34.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16650$auto$opt_dff.cc:194:make_patterns_logic$10681, asynchronously reset by !\rst_ni
Extracted 60 gates and 91 wires to a netlist network with 31 inputs and 21 outputs.

3.34.43.1. Executing ABC.

3.34.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16713$auto$opt_dff.cc:194:make_patterns_logic$10647, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.34.44.1. Executing ABC.

3.34.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$16720$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 641 gates and 1018 wires to a netlist network with 377 inputs and 59 outputs.

3.34.45.1. Executing ABC.

3.34.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17332$auto$opt_dff.cc:194:make_patterns_logic$10738, asynchronously reset by !\rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 10 outputs.

3.34.46.1. Executing ABC.

3.34.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17350$auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 103 gates and 175 wires to a netlist network with 72 inputs and 36 outputs.

3.34.47.1. Executing ABC.

3.34.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17457$auto$opt_dff.cc:194:make_patterns_logic$10690, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.34.48.1. Executing ABC.

3.34.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 110 gates and 132 wires to a netlist network with 22 inputs and 22 outputs.

3.34.49.1. Executing ABC.

3.34.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$17468$auto$opt_dff.cc:194:make_patterns_logic$10693, asynchronously reset by !\rst_ni
Extracted 20 gates and 35 wires to a netlist network with 15 inputs and 7 outputs.

3.34.50.1. Executing ABC.

3.34.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 242 gates and 302 wires to a netlist network with 60 inputs and 61 outputs.

3.34.51.1. Executing ABC.

3.34.52. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20035$auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 68 gates and 104 wires to a netlist network with 36 inputs and 33 outputs.

3.34.52.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$20136$abc$17673$auto$opt_dff.cc:194:make_patterns_logic$10678, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$20148$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$10654, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20159$abc$17751$auto$opt_dff.cc:194:make_patterns_logic$10672, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20170$abc$17891$auto$opt_dff.cc:194:make_patterns_logic$10660, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20182$abc$17819$auto$opt_dff.cc:194:make_patterns_logic$10666, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20193$abc$18441$auto$opt_dff.cc:194:make_patterns_logic$10714, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20205$abc$18811$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20217$abc$18701$auto$opt_dff.cc:194:make_patterns_logic$10702, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20228$abc$18292$auto$opt_dff.cc:194:make_patterns_logic$10720, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20240$abc$19048$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20251$abc$18162$auto$opt_dff.cc:194:make_patterns_logic$10726, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$23086$abc$17332$auto$opt_dff.cc:194:make_patterns_logic$10738, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20263$abc$19277$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23206$abc$17457$auto$opt_dff.cc:194:make_patterns_logic$10690, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_i, en=$abc$23415$abc$17468$auto$opt_dff.cc:194:make_patterns_logic$10693, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20275$abc$18036$auto$opt_dff.cc:194:make_patterns_logic$10732, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$20286$abc$18821$u_reg.intg_err, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$20512$abc$18555$auto$opt_dff.cc:194:make_patterns_logic$10708, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$20524$abc$19388$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_i, en=$abc$20595$abc$17650$auto$opt_dff.cc:194:make_patterns_logic$10687, arst=!\rst_ni, srst={ }
  53 cells in clk=\clk_i, en=$abc$20624$abc$17902$auto$opt_dff.cc:194:make_patterns_logic$10657, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$20686$abc$17830$auto$opt_dff.cc:194:make_patterns_logic$10663, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$22231$abc$16713$auto$opt_dff.cc:194:make_patterns_logic$10647, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_i, en=$abc$20536$abc$17683$auto$opt_dff.cc:194:make_patterns_logic$10675, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$20809$abc$17496$auto$opt_dff.cc:194:make_patterns_logic$10696, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$20818$abc$19161$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$20830$abc$17641$auto$opt_dff.cc:194:make_patterns_logic$10684, arst=!\rst_ni, srst={ }
  42 cells in clk=\clk_i, en=$abc$20747$abc$17760$auto$opt_dff.cc:194:make_patterns_logic$10669, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$20840$abc$19398$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$20943$abc$17505$auto$opt_dff.cc:194:make_patterns_logic$10699, arst=!\rst_ni, srst={ }
  93 cells in clk=\clk_i, en=$abc$21047$abc$19171$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$21151$abc$18568$auto$opt_dff.cc:194:make_patterns_logic$10711, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$21254$abc$18710$auto$opt_dff.cc:194:make_patterns_logic$10705, arst=!\rst_ni, srst={ }
  794 cells in clk=\clk_i, en=$abc$22238$abc$16720$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  133 cells in clk=\clk_i, en=$abc$21355$abc$19058$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  110 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$21490$abc$18454$auto$opt_dff.cc:194:make_patterns_logic$10717, arst=!\rst_ni, srst={ }
  78 cells in clk=\clk_i, en=$abc$21591$abc$19287$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$abc$21692$abc$18049$auto$opt_dff.cc:194:make_patterns_logic$10735, arst=!\rst_ni, srst={ }
  48 cells in clk=\clk_i, en=$abc$21799$abc$17977$auto$opt_dff.cc:194:make_patterns_logic$10651, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$21858$abc$18173$auto$opt_dff.cc:194:make_patterns_logic$10729, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$22065$abc$20025$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$22075$abc$16556$auto$opt_dff.cc:219:make_patterns_logic$16393, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$22089$abc$16569$auto$opt_dff.cc:219:make_patterns_logic$16313, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$21961$abc$18305$auto$opt_dff.cc:194:make_patterns_logic$10723, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_i, en=$abc$22107$abc$16589$auto$opt_dff.cc:194:make_patterns_logic$16168, arst=!\rst_ni, srst={ }
  37 cells in clk=\clk_i, en=$abc$22126$abc$16611$auto$opt_dff.cc:219:make_patterns_logic$16185, arst=!\rst_ni, srst={ }
  61 cells in clk=\clk_i, en=$abc$22170$abc$16650$auto$opt_dff.cc:194:make_patterns_logic$10681, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$23102$abc$17350$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  246 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$23760$abc$20035$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }

3.35.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20136$abc$17673$auto$opt_dff.cc:194:make_patterns_logic$10678, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20148$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$10654, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20159$abc$17751$auto$opt_dff.cc:194:make_patterns_logic$10672, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20170$abc$17891$auto$opt_dff.cc:194:make_patterns_logic$10660, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20182$abc$17819$auto$opt_dff.cc:194:make_patterns_logic$10666, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20193$abc$18441$auto$opt_dff.cc:194:make_patterns_logic$10714, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20205$abc$18811$auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20217$abc$18701$auto$opt_dff.cc:194:make_patterns_logic$10702, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20228$abc$18292$auto$opt_dff.cc:194:make_patterns_logic$10720, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20240$abc$19048$auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 8 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20251$abc$18162$auto$opt_dff.cc:194:make_patterns_logic$10726, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23086$abc$17332$auto$opt_dff.cc:194:make_patterns_logic$10738, asynchronously reset by !\rst_ni
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 11 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20263$abc$19277$auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23206$abc$17457$auto$opt_dff.cc:194:make_patterns_logic$10690, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23415$abc$17468$auto$opt_dff.cc:194:make_patterns_logic$10693, asynchronously reset by !\rst_ni
Extracted 23 gates and 40 wires to a netlist network with 17 inputs and 11 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20275$abc$18036$auto$opt_dff.cc:194:make_patterns_logic$10732, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20286$abc$18821$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20512$abc$18555$auto$opt_dff.cc:194:make_patterns_logic$10708, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20524$abc$19388$auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20595$abc$17650$auto$opt_dff.cc:194:make_patterns_logic$10687, asynchronously reset by !\rst_ni
Extracted 19 gates and 34 wires to a netlist network with 15 inputs and 7 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20624$abc$17902$auto$opt_dff.cc:194:make_patterns_logic$10657, asynchronously reset by !\rst_ni
Extracted 53 gates and 89 wires to a netlist network with 36 inputs and 22 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20686$abc$17830$auto$opt_dff.cc:194:make_patterns_logic$10663, asynchronously reset by !\rst_ni
Extracted 60 gates and 103 wires to a netlist network with 43 inputs and 21 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22231$abc$16713$auto$opt_dff.cc:194:make_patterns_logic$10647, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20536$abc$17683$auto$opt_dff.cc:194:make_patterns_logic$10675, asynchronously reset by !\rst_ni
Extracted 59 gates and 101 wires to a netlist network with 42 inputs and 22 outputs.

3.35.25.1. Executing ABC.

3.35.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20809$abc$17496$auto$opt_dff.cc:194:make_patterns_logic$10696, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.26.1. Executing ABC.

3.35.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20818$abc$19161$auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.27.1. Executing ABC.

3.35.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20830$abc$17641$auto$opt_dff.cc:194:make_patterns_logic$10684, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.28.1. Executing ABC.

3.35.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20747$abc$17760$auto$opt_dff.cc:194:make_patterns_logic$10669, asynchronously reset by !\rst_ni
Extracted 42 gates and 67 wires to a netlist network with 25 inputs and 19 outputs.

3.35.29.1. Executing ABC.

3.35.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20840$abc$19398$auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 102 gates and 173 wires to a netlist network with 71 inputs and 35 outputs.

3.35.30.1. Executing ABC.

3.35.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$20943$abc$17505$auto$opt_dff.cc:194:make_patterns_logic$10699, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.35.31.1. Executing ABC.

3.35.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21047$abc$19171$auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 93 gates and 155 wires to a netlist network with 62 inputs and 36 outputs.

3.35.32.1. Executing ABC.

3.35.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21151$abc$18568$auto$opt_dff.cc:194:make_patterns_logic$10711, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.35.33.1. Executing ABC.

3.35.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21254$abc$18710$auto$opt_dff.cc:194:make_patterns_logic$10705, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.35.34.1. Executing ABC.

3.35.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22238$abc$16720$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 794 gates and 1171 wires to a netlist network with 377 inputs and 59 outputs.

3.35.35.1. Executing ABC.

3.35.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21355$abc$19058$auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 133 gates and 235 wires to a netlist network with 102 inputs and 35 outputs.

3.35.36.1. Executing ABC.

3.35.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 110 gates and 132 wires to a netlist network with 22 inputs and 22 outputs.

3.35.37.1. Executing ABC.

3.35.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21490$abc$18454$auto$opt_dff.cc:194:make_patterns_logic$10717, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.35.38.1. Executing ABC.

3.35.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21591$abc$19287$auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 78 gates and 125 wires to a netlist network with 47 inputs and 33 outputs.

3.35.39.1. Executing ABC.

3.35.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21692$abc$18049$auto$opt_dff.cc:194:make_patterns_logic$10735, asynchronously reset by !\rst_ni
Extracted 105 gates and 146 wires to a netlist network with 41 inputs and 36 outputs.

3.35.40.1. Executing ABC.

3.35.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21799$abc$17977$auto$opt_dff.cc:194:make_patterns_logic$10651, asynchronously reset by !\rst_ni
Extracted 48 gates and 79 wires to a netlist network with 31 inputs and 19 outputs.

3.35.41.1. Executing ABC.

3.35.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21858$abc$18173$auto$opt_dff.cc:194:make_patterns_logic$10729, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.35.42.1. Executing ABC.

3.35.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22065$abc$20025$auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.35.43.1. Executing ABC.

3.35.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22075$abc$16556$auto$opt_dff.cc:219:make_patterns_logic$16393, asynchronously reset by !\rst_ni
Extracted 12 gates and 16 wires to a netlist network with 4 inputs and 4 outputs.

3.35.44.1. Executing ABC.

3.35.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22089$abc$16569$auto$opt_dff.cc:219:make_patterns_logic$16313, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 5 outputs.

3.35.45.1. Executing ABC.

3.35.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21961$abc$18305$auto$opt_dff.cc:194:make_patterns_logic$10723, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.35.46.1. Executing ABC.

3.35.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22107$abc$16589$auto$opt_dff.cc:194:make_patterns_logic$16168, asynchronously reset by !\rst_ni
Extracted 19 gates and 33 wires to a netlist network with 14 inputs and 12 outputs.

3.35.47.1. Executing ABC.

3.35.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22126$abc$16611$auto$opt_dff.cc:219:make_patterns_logic$16185, asynchronously reset by !\rst_ni
Extracted 37 gates and 49 wires to a netlist network with 12 inputs and 12 outputs.

3.35.48.1. Executing ABC.

3.35.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$22170$abc$16650$auto$opt_dff.cc:194:make_patterns_logic$10681, asynchronously reset by !\rst_ni
Extracted 61 gates and 92 wires to a netlist network with 31 inputs and 21 outputs.

3.35.49.1. Executing ABC.

3.35.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23102$abc$17350$auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 103 gates and 175 wires to a netlist network with 72 inputs and 36 outputs.

3.35.50.1. Executing ABC.

3.35.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 246 gates and 306 wires to a netlist network with 60 inputs and 58 outputs.

3.35.51.1. Executing ABC.

3.35.52. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23760$abc$20035$auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 68 gates and 104 wires to a netlist network with 36 inputs and 33 outputs.

3.35.52.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  10 cells in clk=\clk_i, en=$abc$23861$abc$20136$abc$17673$auto$opt_dff.cc:194:make_patterns_logic$10678, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23872$abc$20148$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$10654, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$23885$abc$20159$abc$17751$auto$opt_dff.cc:194:make_patterns_logic$10672, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23897$abc$20170$abc$17891$auto$opt_dff.cc:194:make_patterns_logic$10660, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23909$abc$20182$abc$17819$auto$opt_dff.cc:194:make_patterns_logic$10666, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23921$abc$20193$abc$18441$auto$opt_dff.cc:194:make_patterns_logic$10714, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23932$abc$20205$abc$18811$auto$opt_dff.cc:194:make_patterns_logic$10774, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23943$abc$20217$abc$18701$auto$opt_dff.cc:194:make_patterns_logic$10702, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$23954$abc$20228$abc$18292$auto$opt_dff.cc:194:make_patterns_logic$10720, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23966$abc$20240$abc$19048$auto$opt_dff.cc:194:make_patterns_logic$10768, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$23978$abc$20251$abc$18162$auto$opt_dff.cc:194:make_patterns_logic$10726, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$23990$abc$23086$abc$17332$auto$opt_dff.cc:194:make_patterns_logic$10738, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24007$abc$20263$abc$19277$auto$opt_dff.cc:194:make_patterns_logic$10756, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24018$abc$23206$abc$17457$auto$opt_dff.cc:194:make_patterns_logic$10690, arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_i, en=$abc$24030$abc$23415$abc$17468$auto$opt_dff.cc:194:make_patterns_logic$10693, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24057$abc$20275$abc$18036$auto$opt_dff.cc:194:make_patterns_logic$10732, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$24068$abc$20286$abc$18821$u_reg.intg_err, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24298$abc$20512$abc$18555$auto$opt_dff.cc:194:make_patterns_logic$10708, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=$abc$24309$abc$20524$abc$19388$auto$opt_dff.cc:194:make_patterns_logic$10750, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$24321$abc$20595$abc$17650$auto$opt_dff.cc:194:make_patterns_logic$10687, arst=!\rst_ni, srst={ }
  52 cells in clk=\clk_i, en=$abc$24344$abc$20624$abc$17902$auto$opt_dff.cc:194:make_patterns_logic$10657, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$24406$abc$20686$abc$17830$auto$opt_dff.cc:194:make_patterns_logic$10663, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$24467$abc$22231$abc$16713$auto$opt_dff.cc:194:make_patterns_logic$10647, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24536$abc$20809$abc$17496$auto$opt_dff.cc:194:make_patterns_logic$10696, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24546$abc$20818$abc$19161$auto$opt_dff.cc:194:make_patterns_logic$10762, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$24556$abc$20830$abc$17641$auto$opt_dff.cc:194:make_patterns_logic$10684, arst=!\rst_ni, srst={ }
  51 cells in clk=\clk_i, en=$abc$24566$abc$20747$abc$17760$auto$opt_dff.cc:194:make_patterns_logic$10669, arst=!\rst_ni, srst={ }
  50 cells in clk=\clk_i, en=$abc$24474$abc$20536$abc$17683$auto$opt_dff.cc:194:make_patterns_logic$10675, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$24625$abc$20840$abc$19398$auto$opt_dff.cc:194:make_patterns_logic$10753, arst=!\rst_ni, srst={ }
  99 cells in clk=\clk_i, en=$abc$24728$abc$20943$abc$17505$auto$opt_dff.cc:194:make_patterns_logic$10699, arst=!\rst_ni, srst={ }
  69 cells in clk=\clk_i, en=$abc$24829$abc$21047$abc$19171$auto$opt_dff.cc:194:make_patterns_logic$10765, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$24933$abc$21151$abc$18568$auto$opt_dff.cc:194:make_patterns_logic$10711, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$25036$abc$21254$abc$18710$auto$opt_dff.cc:194:make_patterns_logic$10705, arst=!\rst_ni, srst={ }
  805 cells in clk=\clk_i, en=$abc$25141$abc$22238$abc$16720$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  134 cells in clk=\clk_i, en=$abc$26001$abc$21355$abc$19058$auto$opt_dff.cc:194:make_patterns_logic$10771, arst=!\rst_ni, srst={ }
  110 cells in clk=\clk_core_i, en={ }, arst=!\rst_core_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$26334$abc$21490$abc$18454$auto$opt_dff.cc:194:make_patterns_logic$10717, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$26435$abc$21591$abc$19287$auto$opt_dff.cc:194:make_patterns_logic$10759, arst=!\rst_ni, srst={ }
  105 cells in clk=\clk_i, en=$abc$26536$abc$21692$abc$18049$auto$opt_dff.cc:194:make_patterns_logic$10735, arst=!\rst_ni, srst={ }
  49 cells in clk=\clk_i, en=$abc$26642$abc$21799$abc$17977$auto$opt_dff.cc:194:make_patterns_logic$10651, arst=!\rst_ni, srst={ }
  102 cells in clk=\clk_i, en=$abc$26701$abc$21858$abc$18173$auto$opt_dff.cc:194:make_patterns_logic$10729, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$26804$abc$22065$abc$20025$auto$opt_dff.cc:194:make_patterns_logic$10744, arst=!\rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$26814$abc$22075$abc$16556$auto$opt_dff.cc:219:make_patterns_logic$16393, arst=!\rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$26829$abc$22089$abc$16569$auto$opt_dff.cc:219:make_patterns_logic$16313, arst=!\rst_ni, srst={ }
  98 cells in clk=\clk_i, en=$abc$26846$abc$21961$abc$18305$auto$opt_dff.cc:194:make_patterns_logic$10723, arst=!\rst_ni, srst={ }
  15 cells in clk=\clk_i, en=$abc$26950$abc$22107$abc$16589$auto$opt_dff.cc:194:make_patterns_logic$16168, arst=!\rst_ni, srst={ }
  39 cells in clk=\clk_i, en=$abc$26969$abc$22126$abc$16611$auto$opt_dff.cc:219:make_patterns_logic$16185, arst=!\rst_ni, srst={ }
  103 cells in clk=\clk_i, en=$abc$27065$abc$23102$abc$17350$auto$opt_dff.cc:194:make_patterns_logic$10741, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_i, en=$abc$27004$abc$22170$abc$16650$auto$opt_dff.cc:194:make_patterns_logic$10681, arst=!\rst_ni, srst={ }
  243 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  68 cells in clk=\clk_i, en=$abc$27495$abc$23760$abc$20035$auto$opt_dff.cc:194:make_patterns_logic$10747, arst=!\rst_ni, srst={ }

3.36.2. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23861$abc$20136$abc$17673$auto$opt_dff.cc:194:make_patterns_logic$10678, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23872$abc$20148$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$10654, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23885$abc$20159$abc$17751$auto$opt_dff.cc:194:make_patterns_logic$10672, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23897$abc$20170$abc$17891$auto$opt_dff.cc:194:make_patterns_logic$10660, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23909$abc$20182$abc$17819$auto$opt_dff.cc:194:make_patterns_logic$10666, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23921$abc$20193$abc$18441$auto$opt_dff.cc:194:make_patterns_logic$10714, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23932$abc$20205$abc$18811$auto$opt_dff.cc:194:make_patterns_logic$10774, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23943$abc$20217$abc$18701$auto$opt_dff.cc:194:make_patterns_logic$10702, asynchronously reset by !\rst_ni
Extracted 11 gates and 17 wires to a netlist network with 6 inputs and 7 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23954$abc$20228$abc$18292$auto$opt_dff.cc:194:make_patterns_logic$10720, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23966$abc$20240$abc$19048$auto$opt_dff.cc:194:make_patterns_logic$10768, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23978$abc$20251$abc$18162$auto$opt_dff.cc:194:make_patterns_logic$10726, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$23990$abc$23086$abc$17332$auto$opt_dff.cc:194:make_patterns_logic$10738, asynchronously reset by !\rst_ni
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 11 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24007$abc$20263$abc$19277$auto$opt_dff.cc:194:make_patterns_logic$10756, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 7 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24018$abc$23206$abc$17457$auto$opt_dff.cc:194:make_patterns_logic$10690, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24030$abc$23415$abc$17468$auto$opt_dff.cc:194:make_patterns_logic$10693, asynchronously reset by !\rst_ni
Extracted 26 gates and 46 wires to a netlist network with 20 inputs and 10 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24057$abc$20275$abc$18036$auto$opt_dff.cc:194:make_patterns_logic$10732, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24068$abc$20286$abc$18821$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24298$abc$20512$abc$18555$auto$opt_dff.cc:194:make_patterns_logic$10708, asynchronously reset by !\rst_ni
Extracted 10 gates and 16 wires to a netlist network with 6 inputs and 6 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24309$abc$20524$abc$19388$auto$opt_dff.cc:194:make_patterns_logic$10750, asynchronously reset by !\rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24321$abc$20595$abc$17650$auto$opt_dff.cc:194:make_patterns_logic$10687, asynchronously reset by !\rst_ni
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 7 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24344$abc$20624$abc$17902$auto$opt_dff.cc:194:make_patterns_logic$10657, asynchronously reset by !\rst_ni
Extracted 52 gates and 87 wires to a netlist network with 35 inputs and 22 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24406$abc$20686$abc$17830$auto$opt_dff.cc:194:make_patterns_logic$10663, asynchronously reset by !\rst_ni
Extracted 60 gates and 103 wires to a netlist network with 43 inputs and 21 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24467$abc$22231$abc$16713$auto$opt_dff.cc:194:make_patterns_logic$10647, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24536$abc$20809$abc$17496$auto$opt_dff.cc:194:make_patterns_logic$10696, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.25.1. Executing ABC.

3.36.26. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24546$abc$20818$abc$19161$auto$opt_dff.cc:194:make_patterns_logic$10762, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.26.1. Executing ABC.

3.36.27. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24556$abc$20830$abc$17641$auto$opt_dff.cc:194:make_patterns_logic$10684, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.27.1. Executing ABC.

3.36.28. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24566$abc$20747$abc$17760$auto$opt_dff.cc:194:make_patterns_logic$10669, asynchronously reset by !\rst_ni
Extracted 51 gates and 85 wires to a netlist network with 34 inputs and 22 outputs.

3.36.28.1. Executing ABC.

3.36.29. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24474$abc$20536$abc$17683$auto$opt_dff.cc:194:make_patterns_logic$10675, asynchronously reset by !\rst_ni
Extracted 50 gates and 83 wires to a netlist network with 33 inputs and 19 outputs.

3.36.29.1. Executing ABC.

3.36.30. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24625$abc$20840$abc$19398$auto$opt_dff.cc:194:make_patterns_logic$10753, asynchronously reset by !\rst_ni
Extracted 102 gates and 173 wires to a netlist network with 71 inputs and 35 outputs.

3.36.30.1. Executing ABC.

3.36.31. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24728$abc$20943$abc$17505$auto$opt_dff.cc:194:make_patterns_logic$10699, asynchronously reset by !\rst_ni
Extracted 99 gates and 137 wires to a netlist network with 38 inputs and 33 outputs.

3.36.31.1. Executing ABC.

3.36.32. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24829$abc$21047$abc$19171$auto$opt_dff.cc:194:make_patterns_logic$10765, asynchronously reset by !\rst_ni
Extracted 69 gates and 107 wires to a netlist network with 38 inputs and 33 outputs.

3.36.32.1. Executing ABC.

3.36.33. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24933$abc$21151$abc$18568$auto$opt_dff.cc:194:make_patterns_logic$10711, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.36.33.1. Executing ABC.

3.36.34. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25036$abc$21254$abc$18710$auto$opt_dff.cc:194:make_patterns_logic$10705, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 36 outputs.

3.36.34.1. Executing ABC.

3.36.35. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$25141$abc$22238$abc$16720$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 805 gates and 1182 wires to a netlist network with 377 inputs and 59 outputs.

3.36.35.1. Executing ABC.

3.36.36. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26001$abc$21355$abc$19058$auto$opt_dff.cc:194:make_patterns_logic$10771, asynchronously reset by !\rst_ni
Extracted 134 gates and 236 wires to a netlist network with 102 inputs and 35 outputs.

3.36.36.1. Executing ABC.

3.36.37. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_core_i, asynchronously reset by !\rst_core_ni
Extracted 110 gates and 132 wires to a netlist network with 22 inputs and 22 outputs.

3.36.37.1. Executing ABC.

3.36.38. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26334$abc$21490$abc$18454$auto$opt_dff.cc:194:make_patterns_logic$10717, asynchronously reset by !\rst_ni
Extracted 103 gates and 145 wires to a netlist network with 42 inputs and 36 outputs.

3.36.38.1. Executing ABC.

3.36.39. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26435$abc$21591$abc$19287$auto$opt_dff.cc:194:make_patterns_logic$10759, asynchronously reset by !\rst_ni
Extracted 102 gates and 173 wires to a netlist network with 71 inputs and 36 outputs.

3.36.39.1. Executing ABC.

3.36.40. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26536$abc$21692$abc$18049$auto$opt_dff.cc:194:make_patterns_logic$10735, asynchronously reset by !\rst_ni
Extracted 105 gates and 146 wires to a netlist network with 41 inputs and 36 outputs.

3.36.40.1. Executing ABC.

3.36.41. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26642$abc$21799$abc$17977$auto$opt_dff.cc:194:make_patterns_logic$10651, asynchronously reset by !\rst_ni
Extracted 49 gates and 81 wires to a netlist network with 32 inputs and 19 outputs.

3.36.41.1. Executing ABC.

3.36.42. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26701$abc$21858$abc$18173$auto$opt_dff.cc:194:make_patterns_logic$10729, asynchronously reset by !\rst_ni
Extracted 102 gates and 143 wires to a netlist network with 41 inputs and 35 outputs.

3.36.42.1. Executing ABC.

3.36.43. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26804$abc$22065$abc$20025$auto$opt_dff.cc:194:make_patterns_logic$10744, asynchronously reset by !\rst_ni
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 6 outputs.

3.36.43.1. Executing ABC.

3.36.44. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26814$abc$22075$abc$16556$auto$opt_dff.cc:219:make_patterns_logic$16393, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 6 outputs.

3.36.44.1. Executing ABC.

3.36.45. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26829$abc$22089$abc$16569$auto$opt_dff.cc:219:make_patterns_logic$16313, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 5 outputs.

3.36.45.1. Executing ABC.

3.36.46. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26846$abc$21961$abc$18305$auto$opt_dff.cc:194:make_patterns_logic$10723, asynchronously reset by !\rst_ni
Extracted 98 gates and 134 wires to a netlist network with 36 inputs and 33 outputs.

3.36.46.1. Executing ABC.

3.36.47. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26950$abc$22107$abc$16589$auto$opt_dff.cc:194:make_patterns_logic$16168, asynchronously reset by !\rst_ni
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 11 outputs.

3.36.47.1. Executing ABC.

3.36.48. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26969$abc$22126$abc$16611$auto$opt_dff.cc:219:make_patterns_logic$16185, asynchronously reset by !\rst_ni
Extracted 39 gates and 56 wires to a netlist network with 17 inputs and 14 outputs.

3.36.48.1. Executing ABC.

3.36.49. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27065$abc$23102$abc$17350$auto$opt_dff.cc:194:make_patterns_logic$10741, asynchronously reset by !\rst_ni
Extracted 103 gates and 175 wires to a netlist network with 72 inputs and 36 outputs.

3.36.49.1. Executing ABC.

3.36.50. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27004$abc$22170$abc$16650$auto$opt_dff.cc:194:make_patterns_logic$10681, asynchronously reset by !\rst_ni
Extracted 60 gates and 91 wires to a netlist network with 31 inputs and 21 outputs.

3.36.50.1. Executing ABC.

3.36.51. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 243 gates and 304 wires to a netlist network with 61 inputs and 58 outputs.

3.36.51.1. Executing ABC.

3.36.52. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27495$abc$23760$abc$20035$auto$opt_dff.cc:194:make_patterns_logic$10747, asynchronously reset by !\rst_ni
Extracted 68 gates and 104 wires to a netlist network with 36 inputs and 33 outputs.

3.36.52.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~43 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 19553 unused wires.
<suppressed ~729 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_HkyIIV/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 2500 gates and 3298 wires to a netlist network with 798 inputs and 732 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 798  #Luts =  1111  Max Lvl =  11  Avg Lvl =   9.88  [   0.66 sec. at Pass 0]
DE:   #PIs = 798  #Luts =  1072  Max Lvl =  12  Avg Lvl =  10.75  [  22.29 sec. at Pass 1]
DE:   #PIs = 798  #Luts =  1066  Max Lvl =  12  Avg Lvl =  10.75  [   6.06 sec. at Pass 2]
DE:   #PIs = 798  #Luts =  1066  Max Lvl =  12  Avg Lvl =  10.75  [  15.13 sec. at Pass 3]
DE:   #PIs = 798  #Luts =  1063  Max Lvl =  10  Avg Lvl =   9.00  [   8.97 sec. at Pass 4]
DE:   #PIs = 798  #Luts =  1057  Max Lvl =  10  Avg Lvl =   8.99  [  10.69 sec. at Pass 5]
DE:   #PIs = 798  #Luts =  1057  Max Lvl =  10  Avg Lvl =   8.99  [   6.56 sec. at Pass 6]
DE:   #PIs = 798  #Luts =  1057  Max Lvl =  10  Avg Lvl =   8.99  [  11.42 sec. at Pass 7]
DE:   #PIs = 798  #Luts =  1057  Max Lvl =  10  Avg Lvl =   8.99  [   6.57 sec. at Pass 8]
DE:   #PIs = 798  #Luts =  1056  Max Lvl =  11  Avg Lvl =   9.69  [   2.34 sec. at Pass 9]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 3270 unused wires.
<suppressed ~131 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.42. Printing statistics.

=== pwm ===

   Number of wires:               4053
   Number of wire bits:          14735
   Number of public wires:        2376
   Number of public wire bits:   13058
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1858
     $_DFFE_PN0P_                  610
     $_DFF_PN0_                    192
     $_DFF_PN1_                      1
     $lut                         1055


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== pwm ===

   Number of wires:               4053
   Number of wire bits:          14735
   Number of public wires:        2376
   Number of public wire bits:   13058
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1858
     $_DFFE_PN0P_                  610
     $_DFF_PN0_                    192
     $_DFF_PN1_                      1
     $lut                         1055


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
No more expansions possible.
<suppressed ~1994 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~15754 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
<suppressed ~9687 debug messages>
Removed a total of 3229 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 5809 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.
<suppressed ~485 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 54 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_HkyIIV/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\pwm' to `<abc-temp-dir>/input.blif'..
Extracted 3105 gates and 3904 wires to a netlist network with 797 inputs and 731 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 797  #Luts =  1057  Max Lvl =  12  Avg Lvl =  10.56  [   0.49 sec. at Pass 0]
DE:   #PIs = 797  #Luts =  1057  Max Lvl =  12  Avg Lvl =  10.56  [  22.24 sec. at Pass 1]
DE:   #PIs = 797  #Luts =  1057  Max Lvl =  12  Avg Lvl =  10.56  [   3.85 sec. at Pass 2]
DE:   #PIs = 797  #Luts =  1056  Max Lvl =  12  Avg Lvl =  10.53  [   7.91 sec. at Pass 3]
DE:   #PIs = 797  #Luts =  1056  Max Lvl =  12  Avg Lvl =  10.53  [   7.34 sec. at Pass 4]
DE:   #PIs = 797  #Luts =  1054  Max Lvl =  10  Avg Lvl =   9.00  [   5.87 sec. at Pass 5]
DE:   #PIs = 797  #Luts =  1054  Max Lvl =  10  Avg Lvl =   9.00  [   3.45 sec. at Pass 6]
DE:   #PIs = 797  #Luts =  1054  Max Lvl =  10  Avg Lvl =   9.00  [   8.66 sec. at Pass 7]
DE:   #PIs = 797  #Luts =  1054  Max Lvl =  10  Avg Lvl =   9.00  [   5.15 sec. at Pass 8]
DE:   #PIs = 797  #Luts =  1054  Max Lvl =  10  Avg Lvl =   9.00  [   1.51 sec. at Pass 9]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 3470 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \pwm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \pwm.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\pwm'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module pwm.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \pwm

3.56.2. Analyzing design hierarchy..
Top module:  \pwm
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== pwm ===

   Number of wires:               4051
   Number of wire bits:          14733
   Number of public wires:        2376
   Number of public wire bits:   13058
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1857
     $lut                         1054
     dffsre                        803


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \pwm..
Removed 0 unused cells and 2264 unused wires.
<suppressed ~2264 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\pwm'.

Warnings: 85 unique messages, 85 total
End of script. Logfile hash: 33c2673f98, CPU: user 38.90s system 1.87s, MEM: 81.97 MB peak
Yosys 0.17+76 (git sha1 ba67c2ec9, gcc 9.1.0 -fPIC -Os)
Time spent: 93% 6x abc (470 sec), 1% 42x opt_expr (8 sec), ...
real 286.37
user 473.25
sys 30.75
