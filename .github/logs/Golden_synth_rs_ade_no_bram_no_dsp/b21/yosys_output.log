
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.40
 Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b21 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.55

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b21

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:1026: processing 'b21(BEHAV)'
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b21.vhd:515: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:992: 'others' clause is never selected
Importing module b21.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b21.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~13 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 14 unused cells and 347 unused wires.
<suppressed ~113 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b21...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b21.vhd:505$524.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b21.vhd:505$515.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b21.vhd:505$526.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b21.vhd:1015$1030.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b21.vhd:1015$1021.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b21.vhd:1015$1032.
Removed 6 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b21.vhd:490$477: { $flatten\P1.$verific$n2255$108 $auto$opt_reduce.cc:134:opt_pmux$1074 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b21.vhd:490$418: { $flatten\P1.$verific$n2256$109 $auto$opt_reduce.cc:134:opt_pmux$1076 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b21.vhd:490$495: { $flatten\P1.$verific$n2257$110 $auto$opt_reduce.cc:134:opt_pmux$1078 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b21.vhd:490$496: { $flatten\P1.$verific$n2258$111 $auto$opt_reduce.cc:134:opt_pmux$1080 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b21.vhd:1000$981: { $flatten\P2.$verific$n2255$611 $auto$opt_reduce.cc:134:opt_pmux$1082 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b21.vhd:1000$922: { $flatten\P2.$verific$n2256$612 $auto$opt_reduce.cc:134:opt_pmux$1084 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b21.vhd:1000$999: { $flatten\P2.$verific$n2257$613 $auto$opt_reduce.cc:134:opt_pmux$1086 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b21.vhd:1000$1000: { $flatten\P2.$verific$n2258$614 $auto$opt_reduce.cc:134:opt_pmux$1088 }
  Optimizing cells in module \b21.
Performed a total of 8 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b21.vhd:1019$1067 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b21.vhd:1019$1069 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b21.vhd:1019$1066 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1065 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b21.vhd:1019$1058 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b21.vhd:509$561 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b21.vhd:509$563 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b21.vhd:509$560 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b21.vhd:509$552 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b21.vhd:509$559 ($aldff) from module b21.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b21.P1.d.
Found FSM state register b21.P2.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b21'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b21.vhd:509$553
  root of input selection tree: $flatten\P1.$verific$n11472$358
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$204 [0]
  found ctrl input: $flatten\P1.$verific$n10346$175
  found ctrl input: $flatten\P1.$verific$n1405$102
  found ctrl input: $flatten\P1.$verific$n1440$103
  found ctrl input: $flatten\P1.$verific$n1474$104
  found ctrl input: $flatten\P1.$verific$n1475$105
  found ctrl input: $flatten\P1.$verific$n1476$106
  found ctrl input: $flatten\P1.$verific$n1477$107
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$102 $flatten\P1.$verific$n1440$103 $flatten\P1.$verific$n1474$104 $flatten\P1.$verific$n1475$105 $flatten\P1.$verific$n1476$106 $flatten\P1.$verific$n1477$107 $flatten\P1.$verific$n10346$175 $flatten\P1.$verific$n341$204 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$358
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b21'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b21.vhd:1019$1059
  root of input selection tree: $flatten\P2.$verific$n11479$862
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$707 [0]
  found ctrl input: $flatten\P2.$verific$n10346$678
  found ctrl input: $flatten\P2.$verific$n1405$605
  found ctrl input: $flatten\P2.$verific$n1440$606
  found ctrl input: $flatten\P2.$verific$n1474$607
  found ctrl input: $flatten\P2.$verific$n1475$608
  found ctrl input: $flatten\P2.$verific$n1476$609
  found ctrl input: $flatten\P2.$verific$n1477$610
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$605 $flatten\P2.$verific$n1440$606 $flatten\P2.$verific$n1474$607 $flatten\P2.$verific$n1475$608 $flatten\P2.$verific$n1476$609 $flatten\P2.$verific$n1477$610 $flatten\P2.$verific$n10346$678 $flatten\P2.$verific$n341$707 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$862
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1091' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1089' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1089' from module `\b21'.
Optimizing FSM `$fsm$\P2.d$1091' from module `\b21'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1089' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1091' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1089' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P1.d$1089 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n341$204 [0]
    1: $flatten\P1.$verific$n10346$175
    2: $flatten\P1.$verific$n1477$107
    3: $flatten\P1.$verific$n1476$106
    4: $flatten\P1.$verific$n1475$105
    5: $flatten\P1.$verific$n1474$104
    6: $flatten\P1.$verific$n1440$103
    7: $flatten\P1.$verific$n1405$102
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$358 [0]
    1: $flatten\P1.$verific$n11472$358 [1]
    2: $flatten\P1.$verific$n11472$358 [2]
    3: $flatten\P1.$verific$n11472$358 [3]
    4: $flatten\P1.$verific$n11472$358 [4]
    5: $flatten\P1.$verific$n11472$358 [5]
    6: $flatten\P1.$verific$n11472$358 [6]
    7: $flatten\P1.$verific$n11472$358 [7]
    8: $flatten\P1.$verific$n11472$358 [8]
    9: $flatten\P1.$verific$n11472$358 [9]
   10: $flatten\P1.$verific$n11472$358 [10]
   11: $flatten\P1.$verific$n11472$358 [11]
   12: $flatten\P1.$verific$n11472$358 [12]
   13: $flatten\P1.$verific$n11472$358 [13]
   14: $flatten\P1.$verific$n11472$358 [14]
   15: $flatten\P1.$verific$n11472$358 [15]
   16: $flatten\P1.$verific$n11472$358 [16]
   17: $flatten\P1.$verific$n11472$358 [17]
   18: $flatten\P1.$verific$n11472$358 [18]
   19: $flatten\P1.$verific$n11472$358 [19]
   20: $flatten\P1.$verific$n11472$358 [20]
   21: $flatten\P1.$verific$n11472$358 [21]
   22: $flatten\P1.$verific$n11472$358 [22]
   23: $flatten\P1.$verific$n11472$358 [23]
   24: $flatten\P1.$verific$n11472$358 [24]
   25: $flatten\P1.$verific$n11472$358 [25]
   26: $flatten\P1.$verific$n11472$358 [26]
   27: $flatten\P1.$verific$n11472$358 [27]
   28: $flatten\P1.$verific$n11472$358 [28]
   29: $flatten\P1.$verific$n11472$358 [29]
   30: $flatten\P1.$verific$n11472$358 [30]
   31: $flatten\P1.$verific$n11472$358 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1091' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P2.d$1091 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n341$707 [0]
    1: $flatten\P2.$verific$n10346$678
    2: $flatten\P2.$verific$n1477$610
    3: $flatten\P2.$verific$n1476$609
    4: $flatten\P2.$verific$n1475$608
    5: $flatten\P2.$verific$n1474$607
    6: $flatten\P2.$verific$n1440$606
    7: $flatten\P2.$verific$n1405$605
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$862 [0]
    1: $flatten\P2.$verific$n11479$862 [1]
    2: $flatten\P2.$verific$n11479$862 [2]
    3: $flatten\P2.$verific$n11479$862 [3]
    4: $flatten\P2.$verific$n11479$862 [4]
    5: $flatten\P2.$verific$n11479$862 [5]
    6: $flatten\P2.$verific$n11479$862 [6]
    7: $flatten\P2.$verific$n11479$862 [7]
    8: $flatten\P2.$verific$n11479$862 [8]
    9: $flatten\P2.$verific$n11479$862 [9]
   10: $flatten\P2.$verific$n11479$862 [10]
   11: $flatten\P2.$verific$n11479$862 [11]
   12: $flatten\P2.$verific$n11479$862 [12]
   13: $flatten\P2.$verific$n11479$862 [13]
   14: $flatten\P2.$verific$n11479$862 [14]
   15: $flatten\P2.$verific$n11479$862 [15]
   16: $flatten\P2.$verific$n11479$862 [16]
   17: $flatten\P2.$verific$n11479$862 [17]
   18: $flatten\P2.$verific$n11479$862 [18]
   19: $flatten\P2.$verific$n11479$862 [19]
   20: $flatten\P2.$verific$n11479$862 [20]
   21: $flatten\P2.$verific$n11479$862 [21]
   22: $flatten\P2.$verific$n11479$862 [22]
   23: $flatten\P2.$verific$n11479$862 [23]
   24: $flatten\P2.$verific$n11479$862 [24]
   25: $flatten\P2.$verific$n11479$862 [25]
   26: $flatten\P2.$verific$n11479$862 [26]
   27: $flatten\P2.$verific$n11479$862 [27]
   28: $flatten\P2.$verific$n11479$862 [28]
   29: $flatten\P2.$verific$n11479$862 [29]
   30: $flatten\P2.$verific$n11479$862 [30]
   31: $flatten\P2.$verific$n11479$862 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1089' from module `\b21'.
Mapping FSM `$fsm$\P2.d$1091' from module `\b21'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n10312$831 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n11185$857 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($adff) from module b21 (D = $flatten\P2.$verific$n10279$830, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($adff) from module b21 (D = $flatten\P2.$verific$n10246$829, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($adff) from module b21 (D = $flatten\P2.$verific$n10213$828, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($adff) from module b21 (D = { $flatten\P2.$verific$add_570$b21.vhd:980$990 $flatten\P2.$verific$n10521$840 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($adff) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n10312$328 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n11178$353 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($adff) from module b21 (D = $flatten\P1.$verific$n10279$327, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($adff) from module b21 (D = $flatten\P1.$verific$n10246$326, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($adff) from module b21 (D = $flatten\P1.$verific$n10213$325, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($adff) from module b21 (D = { $flatten\P1.$verific$add_570$b21.vhd:470$486 $flatten\P1.$verific$n10514$336 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($adff) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 48 unused cells and 152 unused wires.
<suppressed ~49 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_16$b21.vhd:1080$53 ($lt).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_17$b21.vhd:1080$54 ($lt).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1538 ($adffe).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1097 ($eq).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1316 ($eq).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1284 ($eq).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1274 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_179$b21.vhd:250$472 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_178$b21.vhd:249$471 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_177$b21.vhd:248$470 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_145$b21.vhd:230$461 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_143$b21.vhd:228$459 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_142$b21.vhd:227$458 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_141$b21.vhd:225$457 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_140$b21.vhd:224$456 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_138$b21.vhd:220$454 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1493 ($eq).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1577 ($adffe).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_697$b21.vhd:1016$1042 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_678$b21.vhd:1015$1028 ($mux).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1503 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_179$b21.vhd:760$976 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_178$b21.vhd:759$975 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_177$b21.vhd:758$974 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_145$b21.vhd:740$965 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_143$b21.vhd:738$963 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_142$b21.vhd:737$962 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_141$b21.vhd:735$961 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_140$b21.vhd:734$960 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_138$b21.vhd:730$958 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_698$b21.vhd:506$536 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_679$b21.vhd:505$522 ($mux).
Removed top 20 bits (of 21) from wire b21.$flatten\P1.$verific$n10477$333.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n10755$344.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n11178$353.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n11472$358.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1407$226.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1441$227.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1478$228.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n184$195.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n1987$239.
Removed top 3 bits (of 5) from wire b21.$flatten\P1.$verific$n288$198.
Removed top 5 bits (of 8) from wire b21.$flatten\P1.$verific$n301$200.
Removed top 9 bits (of 13) from wire b21.$flatten\P1.$verific$n318$202.
Removed top 8 bits (of 9) from wire b21.$flatten\P1.$verific$n341$204.
Removed top 2 bits (of 32) from wire b21.$flatten\P1.$verific$n4241$272.
Removed top 1 bits (of 3) from wire b21.$flatten\P1.$verific$n436$208.
Removed top 3 bits (of 33) from wire b21.$flatten\P1.$verific$n5666$286.
Removed top 1 bits (of 32) from wire b21.$flatten\P1.$verific$n862$221.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n933$223.
Removed top 1 bits (of 21) from wire b21.$flatten\P2.$verific$n10477$838.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n10762$848.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n11185$857.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n11479$862.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1407$729.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1441$730.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1478$731.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n184$698.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n1987$742.
Removed top 8 bits (of 32) from wire b21.$flatten\P2.$verific$n2260$744.
Removed top 8 bits (of 32) from wire b21.$flatten\P2.$verific$n2293$745.
Removed top 2 bits (of 32) from wire b21.$flatten\P2.$verific$n4241$775.
Removed top 1 bits (of 3) from wire b21.$flatten\P2.$verific$n436$711.
Removed top 13 bits (of 32) from wire b21.$flatten\P2.$verific$n4511$777.
Removed top 3 bits (of 33) from wire b21.$flatten\P2.$verific$n5666$789.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n862$724.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n933$726.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 20 unused cells and 121 unused wires.
<suppressed ~21 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b21:
  creating $macc model for $flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b21.vhd:470$485 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b21.vhd:497$505 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b21.vhd:501$511 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b21.vhd:980$989 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b21.vhd:1007$1010 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b21.vhd:1008$1013 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
  creating $macc model for $verific$add_24$b21.vhd:1081$58 ($add).
  creating $macc model for $verific$add_3$b21.vhd:1071$40 ($add).
  creating $macc model for $verific$add_30$b21.vhd:1085$60 ($add).
  creating $alu model for $macc $verific$add_30$b21.vhd:1085$60.
  creating $alu model for $macc $verific$add_3$b21.vhd:1071$40.
  creating $alu model for $macc $verific$add_24$b21.vhd:1081$58.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b21.vhd:663$940.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b21.vhd:872$984.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b21.vhd:757$971.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b21.vhd:1008$1013.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b21.vhd:1007$1010.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b21.vhd:627$927.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b21.vhd:980$989.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b21.vhd:624$925.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b21.vhd:610$917.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b21.vhd:609$913.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b21.vhd:606$907.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b21.vhd:604$900.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b21.vhd:832$982.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b21.vhd:602$893.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b21.vhd:600$886.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b21.vhd:153$436.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b21.vhd:362$480.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b21.vhd:247$467.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b21.vhd:498$507.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b21.vhd:497$505.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b21.vhd:117$423.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b21.vhd:470$485.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b21.vhd:114$421.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b21.vhd:100$413.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b21.vhd:99$409.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b21.vhd:96$403.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b21.vhd:94$396.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b21.vhd:322$478.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b21.vhd:92$389.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b21.vhd:90$382.
  creating $macc cell for $flatten\P1.$verific$mult_667$b21.vhd:501$511: $auto$alumacc.cc:365:replace_macc$1734
  creating $alu model for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b21.vhd:142$433 ($lt): merged with $flatten\P1.$verific$LessThan_68$b21.vhd:122$429.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b21.vhd:652$937 ($lt): merged with $flatten\P2.$verific$LessThan_68$b21.vhd:632$933.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b21.vhd:1079$48 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b21.vhd:1079$49 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b21.vhd:1080$53 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b21.vhd:1080$54 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b21.vhd:1080$54: $auto$alumacc.cc:485:replace_alu$1747
  creating $alu cell for $verific$LessThan_16$b21.vhd:1080$53: $auto$alumacc.cc:485:replace_alu$1752
  creating $alu cell for $verific$LessThan_12$b21.vhd:1079$49: $auto$alumacc.cc:485:replace_alu$1757
  creating $alu cell for $verific$LessThan_11$b21.vhd:1079$48: $auto$alumacc.cc:485:replace_alu$1762
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944: $auto$alumacc.cc:485:replace_alu$1767
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939: $auto$alumacc.cc:485:replace_alu$1772
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933, $flatten\P2.$verific$LessThan_78$b21.vhd:652$937: $auto$alumacc.cc:485:replace_alu$1783
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879: $auto$alumacc.cc:485:replace_alu$1794
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440: $auto$alumacc.cc:485:replace_alu$1799
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435: $auto$alumacc.cc:485:replace_alu$1804
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429, $flatten\P1.$verific$LessThan_78$b21.vhd:142$433: $auto$alumacc.cc:485:replace_alu$1815
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375: $auto$alumacc.cc:485:replace_alu$1826
  creating $alu cell for $flatten\P1.$verific$add_21$b21.vhd:90$382: $auto$alumacc.cc:485:replace_alu$1831
  creating $alu cell for $flatten\P1.$verific$add_26$b21.vhd:92$389: $auto$alumacc.cc:485:replace_alu$1834
  creating $alu cell for $flatten\P1.$verific$add_283$b21.vhd:322$478: $auto$alumacc.cc:485:replace_alu$1837
  creating $alu cell for $flatten\P1.$verific$add_31$b21.vhd:94$396: $auto$alumacc.cc:485:replace_alu$1840
  creating $alu cell for $flatten\P1.$verific$add_36$b21.vhd:96$403: $auto$alumacc.cc:485:replace_alu$1843
  creating $alu cell for $flatten\P1.$verific$add_39$b21.vhd:99$409: $auto$alumacc.cc:485:replace_alu$1846
  creating $alu cell for $flatten\P1.$verific$add_44$b21.vhd:100$413: $auto$alumacc.cc:485:replace_alu$1849
  creating $alu cell for $flatten\P1.$verific$add_570$b21.vhd:470$485: $auto$alumacc.cc:485:replace_alu$1852
  creating $alu cell for $flatten\P1.$verific$add_56$b21.vhd:114$421: $auto$alumacc.cc:485:replace_alu$1855
  creating $alu cell for $flatten\P1.$verific$add_662$b21.vhd:497$505: $auto$alumacc.cc:485:replace_alu$1858
  creating $alu cell for $flatten\P1.$verific$add_61$b21.vhd:117$423: $auto$alumacc.cc:485:replace_alu$1861
  creating $alu cell for $flatten\P1.$verific$add_664$b21.vhd:498$507: $auto$alumacc.cc:485:replace_alu$1864
  creating $alu cell for $flatten\P1.$verific$sub_168$b21.vhd:247$467: $auto$alumacc.cc:485:replace_alu$1867
  creating $alu cell for $flatten\P1.$verific$sub_365$b21.vhd:362$480: $auto$alumacc.cc:485:replace_alu$1870
  creating $alu cell for $flatten\P1.$verific$sub_84$b21.vhd:153$436: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376: $auto$alumacc.cc:485:replace_alu$1876
  creating $alu cell for $flatten\P2.$verific$add_21$b21.vhd:600$886: $auto$alumacc.cc:485:replace_alu$1879
  creating $alu cell for $flatten\P2.$verific$add_26$b21.vhd:602$893: $auto$alumacc.cc:485:replace_alu$1882
  creating $alu cell for $flatten\P2.$verific$add_283$b21.vhd:832$982: $auto$alumacc.cc:485:replace_alu$1885
  creating $alu cell for $flatten\P2.$verific$add_31$b21.vhd:604$900: $auto$alumacc.cc:485:replace_alu$1888
  creating $alu cell for $flatten\P2.$verific$add_36$b21.vhd:606$907: $auto$alumacc.cc:485:replace_alu$1891
  creating $alu cell for $flatten\P2.$verific$add_39$b21.vhd:609$913: $auto$alumacc.cc:485:replace_alu$1894
  creating $alu cell for $flatten\P2.$verific$add_44$b21.vhd:610$917: $auto$alumacc.cc:485:replace_alu$1897
  creating $alu cell for $flatten\P2.$verific$add_570$b21.vhd:980$989: $auto$alumacc.cc:485:replace_alu$1900
  creating $alu cell for $flatten\P2.$verific$add_56$b21.vhd:624$925: $auto$alumacc.cc:485:replace_alu$1903
  creating $alu cell for $flatten\P2.$verific$add_662$b21.vhd:1007$1010: $auto$alumacc.cc:485:replace_alu$1906
  creating $alu cell for $flatten\P2.$verific$add_61$b21.vhd:627$927: $auto$alumacc.cc:485:replace_alu$1909
  creating $alu cell for $flatten\P2.$verific$add_664$b21.vhd:1008$1013: $auto$alumacc.cc:485:replace_alu$1912
  creating $alu cell for $flatten\P2.$verific$sub_168$b21.vhd:757$971: $auto$alumacc.cc:485:replace_alu$1915
  creating $alu cell for $flatten\P2.$verific$sub_365$b21.vhd:872$984: $auto$alumacc.cc:485:replace_alu$1918
  creating $alu cell for $flatten\P2.$verific$sub_84$b21.vhd:663$940: $auto$alumacc.cc:485:replace_alu$1921
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880: $auto$alumacc.cc:485:replace_alu$1924
  creating $alu cell for $verific$add_24$b21.vhd:1081$58: $auto$alumacc.cc:485:replace_alu$1927
  creating $alu cell for $verific$add_3$b21.vhd:1071$40: $auto$alumacc.cc:485:replace_alu$1930
  creating $alu cell for $verific$add_30$b21.vhd:1085$60: $auto$alumacc.cc:485:replace_alu$1933
  created 47 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 4 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b21 ===

   Number of wires:                539
   Number of wire bits:           9123
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                400
     $adff                          14
     $adffe                         14
     $alu                           47
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           74
     $ne                             2
     $not                           25
     $or                            23
     $reduce_and                    10
     $reduce_or                     34
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b21 ===

   Number of wires:                539
   Number of wire bits:           9123
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                400
     $adff                          14
     $adffe                         14
     $alu                           47
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           74
     $ne                             2
     $not                           25
     $or                            23
     $reduce_and                    10
     $reduce_or                     34
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> stat

3.24. Printing statistics.

=== b21 ===

   Number of wires:                539
   Number of wire bits:           9123
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                400
     $adff                          14
     $adffe                         14
     $alu                           47
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           74
     $ne                             2
     $not                           25
     $or                            23
     $reduce_and                    10
     $reduce_or                     34
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:454:run$1611 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$9285_Y
    new assignment: { } = { }.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~4751 debug messages>

yosys> stat

3.26. Printing statistics.

=== b21 ===

   Number of wires:               3460
   Number of wire bits:          61528
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18848
     $_AND_                       1642
     $_DFFE_PP0P_                  316
     $_DFF_PP0_                    118
     $_MUX_                      11526
     $_NOT_                       1115
     $_OR_                        1547
     $_XOR_                       1962
     adder_carry                   622


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~7174 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~9408 debug messages>
Removed a total of 3136 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10396 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4776 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4754 ($_DFFE_PP0P_) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$10374 ($_DFFE_PP0P_) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$4757 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$4758 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$4759 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$4760 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$4761 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$4762 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$4763 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$4764 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$4765 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$4766 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$4767 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$4768 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$4769 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$4770 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$4771 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$4772 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$4773 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$4774 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$4775 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$10377 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$10378 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$10379 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$10380 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$10381 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$10382 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$10383 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$10384 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$10385 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$10386 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$10387 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$10388 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$10389 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$10390 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$10391 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$10392 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$10393 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$10394 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$10395 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [18], Q = \P2.addr [18]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 867 unused cells and 2484 unused wires.
<suppressed ~868 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~660 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~1059 debug messages>
Removed a total of 353 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10431 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10430 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10429 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10428 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10427 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10426 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10425 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10424 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10423 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10422 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10421 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10420 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10419 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10418 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10417 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10416 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10415 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10414 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10413 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10412 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10411 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10410 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10409 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10408 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10407 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10406 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10405 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10404 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10403 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10402 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10401 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10400 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10399 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10398 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10397 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12530 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14952 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12046 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14951 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12046 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14950 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12046 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10527 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5810 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10526 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5810 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10525 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5810 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10492 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10491 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10490 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10489 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10488 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10487 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10486 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10485 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10484 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10483 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10482 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10481 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10480 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10479 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10478 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10477 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10476 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10475 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10474 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10473 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10472 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10471 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10470 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10469 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10468 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10467 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10466 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10465 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10464 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10463 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10462 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10461 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10460 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10459 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10458 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10457 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10456 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10455 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10454 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10453 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10452 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10451 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10450 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10449 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10448 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10447 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10446 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10445 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10444 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10443 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10442 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10441 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10440 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10439 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10438 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10437 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10436 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10435 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10434 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10433 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10432 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4872 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4871 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4870 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4869 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4868 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4867 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4866 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4865 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4864 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4863 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4862 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4861 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4860 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4859 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4858 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4857 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4856 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4855 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4854 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4853 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4852 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4851 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4850 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4849 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4848 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4847 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4846 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4845 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4844 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4843 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4842 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4841 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4840 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4839 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4838 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4837 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4836 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4835 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4834 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4833 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4832 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4831 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4830 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4829 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4828 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4827 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4826 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4825 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4824 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4823 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4822 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4821 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4820 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4819 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4818 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4817 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4816 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4815 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4814 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4813 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4812 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4811 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4810 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4809 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4808 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4807 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4806 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4805 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4804 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4803 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4802 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4801 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4800 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4799 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4798 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4797 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4796 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4795 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4794 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4793 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4792 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4791 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4790 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4789 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4788 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4787 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4786 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4785 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4784 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4783 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4782 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4781 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4780 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4779 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4778 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4777 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6294 [0], Q = \P1.reg2 [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 1655 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4598 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~20883 debug messages>
Removed a total of 6961 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6647 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1262 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$36088 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7262 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$30021 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13498 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$23726 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13014 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$39255 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6778 [0], Q = \P1.reg1 [0]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~18 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14640 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14660
        $auto$simplemap.cc:86:simplemap_bitop$14661

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14641 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14658
        $auto$simplemap.cc:86:simplemap_bitop$14659

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14642 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14656
        $auto$simplemap.cc:86:simplemap_bitop$14657

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14643 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14654
        $auto$simplemap.cc:86:simplemap_bitop$14655

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8718 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8738
        $auto$simplemap.cc:86:simplemap_bitop$8739

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8719 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8736
        $auto$simplemap.cc:86:simplemap_bitop$8737

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8720 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8734
        $auto$simplemap.cc:86:simplemap_bitop$8735

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8721 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8732
        $auto$simplemap.cc:86:simplemap_bitop$8733


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~8 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14647 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14658
        $auto$simplemap.cc:86:simplemap_bitop$14660

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14648 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14654
        $auto$simplemap.cc:86:simplemap_bitop$14656

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8725 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8736
        $auto$simplemap.cc:86:simplemap_bitop$8738

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8726 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8732
        $auto$simplemap.cc:86:simplemap_bitop$8734


yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14651 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14654
        $auto$simplemap.cc:86:simplemap_bitop$14658

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8729 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8732
        $auto$simplemap.cc:86:simplemap_bitop$8736


yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~85 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  167 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$47032, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$47015, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46998, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$46981, arst=\reset, srst={ }
  41 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$42001, arst=\reset, srst={ }
  743 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$39397, arst=\reset, srst={ }
  602 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$36244, arst=\reset, srst={ }
  497 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33077, arst=\reset, srst={ }
  773 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  457 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$27010, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26914, arst=\reset, srst={ }
  73 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26775, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26693, arst=\reset, srst={ }
  88 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26554, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26472, arst=\reset, srst={ }
  619 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$23868, arst=\reset, srst={ }
  811 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$23615, arst=\reset, srst={ }
  515 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22439, arst=\reset, srst={ }
  493 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22321, arst=\reset, srst={ }
  146 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22197, arst=\reset, srst={ }
  129 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22179, arst=\reset, srst={ }
  300 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  651 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  971 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.33.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 135 gates and 268 wires to a netlist network with 133 inputs and 96 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47032, asynchronously reset by \reset
Extracted 26 gates and 49 wires to a netlist network with 22 inputs and 10 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47015, asynchronously reset by \reset
Extracted 25 gates and 47 wires to a netlist network with 21 inputs and 9 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46998, asynchronously reset by \reset
Extracted 26 gates and 51 wires to a netlist network with 23 inputs and 6 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$46981, asynchronously reset by \reset
Extracted 26 gates and 51 wires to a netlist network with 23 inputs and 6 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$42001, asynchronously reset by \reset
Extracted 37 gates and 70 wires to a netlist network with 31 inputs and 16 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39397, asynchronously reset by \reset
Extracted 669 gates and 916 wires to a netlist network with 246 inputs and 193 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$36244, asynchronously reset by \reset
Extracted 584 gates and 814 wires to a netlist network with 229 inputs and 105 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33077, asynchronously reset by \reset
Extracted 472 gates and 670 wires to a netlist network with 197 inputs and 66 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 771 gates and 1021 wires to a netlist network with 249 inputs and 50 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$27010, asynchronously reset by \reset
Extracted 453 gates and 632 wires to a netlist network with 178 inputs and 45 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26914, asynchronously reset by \reset
Extracted 27 gates and 48 wires to a netlist network with 20 inputs and 11 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26775, asynchronously reset by \reset
Extracted 71 gates and 107 wires to a netlist network with 35 inputs and 27 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26693, asynchronously reset by \reset
Extracted 38 gates and 68 wires to a netlist network with 29 inputs and 13 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26554, asynchronously reset by \reset
Extracted 88 gates and 152 wires to a netlist network with 62 inputs and 27 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26472, asynchronously reset by \reset
Extracted 23 gates and 44 wires to a netlist network with 20 inputs and 9 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23868, asynchronously reset by \reset
Extracted 558 gates and 816 wires to a netlist network with 257 inputs and 104 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23615, asynchronously reset by \reset
Extracted 721 gates and 940 wires to a netlist network with 218 inputs and 220 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22439, asynchronously reset by \reset
Extracted 449 gates and 616 wires to a netlist network with 166 inputs and 110 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22321, asynchronously reset by \reset
Extracted 427 gates and 575 wires to a netlist network with 146 inputs and 99 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22197, asynchronously reset by \reset
Extracted 126 gates and 185 wires to a netlist network with 59 inputs and 105 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22179, asynchronously reset by \reset
Extracted 129 gates and 205 wires to a netlist network with 76 inputs and 94 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 268 gates and 493 wires to a netlist network with 225 inputs and 98 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 651 gates and 800 wires to a netlist network with 148 inputs and 49 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 907 gates and 1157 wires to a netlist network with 248 inputs and 183 outputs.

3.33.26.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  171 cells in clk=\clock, en=$abc$47177$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$47349$auto$opt_dff.cc:219:make_patterns_logic$47032, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$47386$auto$opt_dff.cc:219:make_patterns_logic$47015, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$47422$auto$opt_dff.cc:219:make_patterns_logic$46998, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$47461$auto$opt_dff.cc:219:make_patterns_logic$46981, arst=\reset, srst={ }
  44 cells in clk=\clock, en=$abc$47500$auto$opt_dff.cc:219:make_patterns_logic$42001, arst=\reset, srst={ }
  812 cells in clk=\clock, en=$abc$47559$auto$opt_dff.cc:219:make_patterns_logic$39397, arst=\reset, srst={ }
  953 cells in clk=\clock, en=$abc$48444$auto$opt_dff.cc:219:make_patterns_logic$36244, arst=\reset, srst={ }
  632 cells in clk=\clock, en=$abc$49227$auto$opt_dff.cc:219:make_patterns_logic$33077, arst=\reset, srst={ }
  857 cells in clk=\clock, en=$abc$50726$auto$opt_dff.cc:219:make_patterns_logic$27010, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$abc$51358$auto$opt_dff.cc:219:make_patterns_logic$26914, arst=\reset, srst={ }
  90 cells in clk=\clock, en=$abc$51398$auto$opt_dff.cc:219:make_patterns_logic$26775, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$abc$51492$auto$opt_dff.cc:219:make_patterns_logic$26693, arst=\reset, srst={ }
  107 cells in clk=\clock, en=$abc$51546$auto$opt_dff.cc:219:make_patterns_logic$26554, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$abc$51654$auto$opt_dff.cc:219:make_patterns_logic$26472, arst=\reset, srst={ }
  794 cells in clk=\clock, en=$abc$51683$auto$opt_dff.cc:219:make_patterns_logic$23868, arst=\reset, srst={ }
  835 cells in clk=\clock, en=$abc$52477$auto$opt_dff.cc:219:make_patterns_logic$23615, arst=\reset, srst={ }
  259 cells in clk=\clock, en=$abc$53399$auto$opt_dff.cc:219:make_patterns_logic$22439, arst=\reset, srst={ }
  258 cells in clk=\clock, en=$abc$53633$auto$opt_dff.cc:219:make_patterns_logic$22321, arst=\reset, srst={ }
  247 cells in clk=\clock, en=$abc$53843$auto$opt_dff.cc:194:make_patterns_logic$22197, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$abc$54005$auto$opt_dff.cc:194:make_patterns_logic$22179, arst=\reset, srst={ }
  279 cells in clk=\clock, en=$abc$54149$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  1652 cells in clk=\clock, en=$abc$55235$lo02, arst=\reset, srst={ }
  572 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.34.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47177$auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 139 gates and 272 wires to a netlist network with 133 inputs and 64 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47349$auto$opt_dff.cc:219:make_patterns_logic$47032, asynchronously reset by \reset
Extracted 32 gates and 54 wires to a netlist network with 22 inputs and 9 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47386$auto$opt_dff.cc:219:make_patterns_logic$47015, asynchronously reset by \reset
Extracted 31 gates and 52 wires to a netlist network with 21 inputs and 7 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47422$auto$opt_dff.cc:219:make_patterns_logic$46998, asynchronously reset by \reset
Extracted 30 gates and 47 wires to a netlist network with 17 inputs and 6 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47461$auto$opt_dff.cc:219:make_patterns_logic$46981, asynchronously reset by \reset
Extracted 30 gates and 47 wires to a netlist network with 17 inputs and 6 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47500$auto$opt_dff.cc:219:make_patterns_logic$42001, asynchronously reset by \reset
Extracted 40 gates and 57 wires to a netlist network with 17 inputs and 11 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47559$auto$opt_dff.cc:219:make_patterns_logic$39397, asynchronously reset by \reset
Extracted 771 gates and 1014 wires to a netlist network with 243 inputs and 99 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48444$auto$opt_dff.cc:219:make_patterns_logic$36244, asynchronously reset by \reset
Extracted 890 gates and 1111 wires to a netlist network with 221 inputs and 226 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$49227$auto$opt_dff.cc:219:make_patterns_logic$33077, asynchronously reset by \reset
Extracted 613 gates and 805 wires to a netlist network with 192 inputs and 67 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$50726$auto$opt_dff.cc:219:make_patterns_logic$27010, asynchronously reset by \reset
Extracted 785 gates and 1039 wires to a netlist network with 254 inputs and 189 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51358$auto$opt_dff.cc:219:make_patterns_logic$26914, asynchronously reset by \reset
Extracted 40 gates and 64 wires to a netlist network with 24 inputs and 12 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51398$auto$opt_dff.cc:219:make_patterns_logic$26775, asynchronously reset by \reset
Extracted 90 gates and 132 wires to a netlist network with 42 inputs and 29 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51492$auto$opt_dff.cc:219:make_patterns_logic$26693, asynchronously reset by \reset
Extracted 42 gates and 63 wires to a netlist network with 21 inputs and 14 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51546$auto$opt_dff.cc:219:make_patterns_logic$26554, asynchronously reset by \reset
Extracted 100 gates and 160 wires to a netlist network with 60 inputs and 31 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51654$auto$opt_dff.cc:219:make_patterns_logic$26472, asynchronously reset by \reset
Extracted 28 gates and 50 wires to a netlist network with 22 inputs and 13 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51683$auto$opt_dff.cc:219:make_patterns_logic$23868, asynchronously reset by \reset
Extracted 759 gates and 987 wires to a netlist network with 228 inputs and 89 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$52477$auto$opt_dff.cc:219:make_patterns_logic$23615, asynchronously reset by \reset
Extracted 790 gates and 988 wires to a netlist network with 198 inputs and 125 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53399$auto$opt_dff.cc:219:make_patterns_logic$22439, asynchronously reset by \reset
Extracted 195 gates and 351 wires to a netlist network with 156 inputs and 71 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53633$auto$opt_dff.cc:219:make_patterns_logic$22321, asynchronously reset by \reset
Extracted 194 gates and 349 wires to a netlist network with 155 inputs and 73 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53843$auto$opt_dff.cc:194:make_patterns_logic$22197, asynchronously reset by \reset
Extracted 225 gates and 351 wires to a netlist network with 126 inputs and 97 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54005$auto$opt_dff.cc:194:make_patterns_logic$22179, asynchronously reset by \reset
Extracted 123 gates and 196 wires to a netlist network with 73 inputs and 93 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54149$auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 247 gates and 471 wires to a netlist network with 224 inputs and 65 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55235$lo02, asynchronously reset by \reset
Extracted 1650 gates and 2038 wires to a netlist network with 388 inputs and 102 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 508 gates and 662 wires to a netlist network with 154 inputs and 172 outputs.

3.34.25.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  57 cells in clk=\clock, en=$abc$56071$abc$47461$auto$opt_dff.cc:219:make_patterns_logic$46981, arst=\reset, srst={ }
  51 cells in clk=\clock, en=$abc$59379$abc$51358$auto$opt_dff.cc:219:make_patterns_logic$26914, arst=\reset, srst={ }
  52 cells in clk=\clock, en=$abc$59508$abc$51492$auto$opt_dff.cc:219:make_patterns_logic$26693, arst=\reset, srst={ }
  93 cells in clk=\clock, en=$abc$59421$abc$51398$auto$opt_dff.cc:219:make_patterns_logic$26775, arst=\reset, srst={ }
  240 cells in clk=\clock, en=$abc$61379$abc$53633$auto$opt_dff.cc:219:make_patterns_logic$22321, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$56001$abc$47386$auto$opt_dff.cc:219:make_patterns_logic$47015, arst=\reset, srst={ }
  251 cells in clk=\clock, en=$abc$61188$abc$53399$auto$opt_dff.cc:219:make_patterns_logic$22439, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$abc$56035$abc$47422$auto$opt_dff.cc:219:make_patterns_logic$46998, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$55966$abc$47349$auto$opt_dff.cc:219:make_patterns_logic$47032, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$56107$abc$47500$auto$opt_dff.cc:219:make_patterns_logic$42001, arst=\reset, srst={ }
  674 cells in clk=\clock, en=$abc$58576$abc$50726$auto$opt_dff.cc:219:make_patterns_logic$27010, arst=\reset, srst={ }
  822 cells in clk=\clock, en=$abc$56929$abc$48444$auto$opt_dff.cc:219:make_patterns_logic$36244, arst=\reset, srst={ }
  910 cells in clk=\clock, en=$abc$56144$abc$47559$auto$opt_dff.cc:219:make_patterns_logic$39397, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$abc$59647$abc$51654$auto$opt_dff.cc:219:make_patterns_logic$26472, arst=\reset, srst={ }
  271 cells in clk=\clock, en=$abc$61561$abc$53843$auto$opt_dff.cc:194:make_patterns_logic$22197, arst=\reset, srst={ }
  92 cells in clk=\clock, en=$abc$59549$abc$51546$auto$opt_dff.cc:219:make_patterns_logic$26554, arst=\reset, srst={ }
  169 cells in clk=\clock, en=$abc$62009$abc$54149$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  281 cells in clk=\clock, en=$abc$55827$abc$47177$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  197 cells in clk=\clock, en=$abc$61843$abc$54005$auto$opt_dff.cc:194:make_patterns_logic$22179, arst=\reset, srst={ }
  792 cells in clk=\clock, en=$abc$60398$abc$52477$auto$opt_dff.cc:219:make_patterns_logic$23615, arst=\reset, srst={ }
  938 cells in clk=\clock, en=$abc$59677$abc$51683$auto$opt_dff.cc:219:make_patterns_logic$23868, arst=\reset, srst={ }
  744 cells in clk=\clock, en=$abc$57877$abc$49227$auto$opt_dff.cc:219:make_patterns_logic$33077, arst=\reset, srst={ }
  1695 cells in clk=\clock, en=$abc$64016$lo02, arst=\reset, srst={ }
  555 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.35.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56071$abc$47461$auto$opt_dff.cc:219:make_patterns_logic$46981, asynchronously reset by \reset
Extracted 57 gates and 86 wires to a netlist network with 29 inputs and 12 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59379$abc$51358$auto$opt_dff.cc:219:make_patterns_logic$26914, asynchronously reset by \reset
Extracted 49 gates and 77 wires to a netlist network with 28 inputs and 18 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59508$abc$51492$auto$opt_dff.cc:219:make_patterns_logic$26693, asynchronously reset by \reset
Extracted 50 gates and 82 wires to a netlist network with 32 inputs and 21 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59421$abc$51398$auto$opt_dff.cc:219:make_patterns_logic$26775, asynchronously reset by \reset
Extracted 85 gates and 134 wires to a netlist network with 49 inputs and 32 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61379$abc$53633$auto$opt_dff.cc:219:make_patterns_logic$22321, asynchronously reset by \reset
Extracted 176 gates and 328 wires to a netlist network with 152 inputs and 68 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56001$abc$47386$auto$opt_dff.cc:219:make_patterns_logic$47015, asynchronously reset by \reset
Extracted 31 gates and 51 wires to a netlist network with 20 inputs and 6 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61188$abc$53399$auto$opt_dff.cc:219:make_patterns_logic$22439, asynchronously reset by \reset
Extracted 187 gates and 340 wires to a netlist network with 153 inputs and 67 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56035$abc$47422$auto$opt_dff.cc:219:make_patterns_logic$46998, asynchronously reset by \reset
Extracted 37 gates and 54 wires to a netlist network with 17 inputs and 7 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55966$abc$47349$auto$opt_dff.cc:219:make_patterns_logic$47032, asynchronously reset by \reset
Extracted 31 gates and 50 wires to a netlist network with 19 inputs and 7 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56107$abc$47500$auto$opt_dff.cc:219:make_patterns_logic$42001, asynchronously reset by \reset
Extracted 31 gates and 46 wires to a netlist network with 15 inputs and 8 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$58576$abc$50726$auto$opt_dff.cc:219:make_patterns_logic$27010, asynchronously reset by \reset
Extracted 658 gates and 868 wires to a netlist network with 210 inputs and 71 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56929$abc$48444$auto$opt_dff.cc:219:make_patterns_logic$36244, asynchronously reset by \reset
Extracted 795 gates and 1001 wires to a netlist network with 206 inputs and 120 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56144$abc$47559$auto$opt_dff.cc:219:make_patterns_logic$39397, asynchronously reset by \reset
Extracted 846 gates and 1115 wires to a netlist network with 269 inputs and 144 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59647$abc$51654$auto$opt_dff.cc:219:make_patterns_logic$26472, asynchronously reset by \reset
Extracted 25 gates and 41 wires to a netlist network with 16 inputs and 10 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61561$abc$53843$auto$opt_dff.cc:194:make_patterns_logic$22197, asynchronously reset by \reset
Extracted 249 gates and 362 wires to a netlist network with 113 inputs and 87 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59549$abc$51546$auto$opt_dff.cc:219:make_patterns_logic$26554, asynchronously reset by \reset
Extracted 84 gates and 130 wires to a netlist network with 46 inputs and 24 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$62009$abc$54149$auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 137 gates and 270 wires to a netlist network with 133 inputs and 64 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55827$abc$47177$auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 249 gates and 473 wires to a netlist network with 224 inputs and 65 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61843$abc$54005$auto$opt_dff.cc:194:make_patterns_logic$22179, asynchronously reset by \reset
Extracted 195 gates and 315 wires to a netlist network with 120 inputs and 87 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60398$abc$52477$auto$opt_dff.cc:219:make_patterns_logic$23615, asynchronously reset by \reset
Extracted 749 gates and 932 wires to a netlist network with 183 inputs and 125 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59677$abc$51683$auto$opt_dff.cc:219:make_patterns_logic$23868, asynchronously reset by \reset
Extracted 846 gates and 1112 wires to a netlist network with 266 inputs and 223 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$57877$abc$49227$auto$opt_dff.cc:219:make_patterns_logic$33077, asynchronously reset by \reset
Extracted 720 gates and 930 wires to a netlist network with 210 inputs and 117 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64016$lo02, asynchronously reset by \reset
Extracted 1693 gates and 2059 wires to a netlist network with 366 inputs and 102 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 491 gates and 639 wires to a netlist network with 148 inputs and 168 outputs.

3.35.25.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  38 cells in clk=\clock, en=$abc$64509$abc$56071$abc$47461$auto$opt_dff.cc:219:make_patterns_logic$46981, arst=\reset, srst={ }
  45 cells in clk=\clock, en=$abc$64568$abc$59379$abc$51358$auto$opt_dff.cc:219:make_patterns_logic$26914, arst=\reset, srst={ }
  41 cells in clk=\clock, en=$abc$64620$abc$59508$abc$51492$auto$opt_dff.cc:219:make_patterns_logic$26693, arst=\reset, srst={ }
  94 cells in clk=\clock, en=$abc$64674$abc$59421$abc$51398$auto$opt_dff.cc:219:make_patterns_logic$26775, arst=\reset, srst={ }
  242 cells in clk=\clock, en=$abc$64757$abc$61379$abc$53633$auto$opt_dff.cc:219:make_patterns_logic$22321, arst=\reset, srst={ }
  39 cells in clk=\clock, en=$abc$64937$abc$56001$abc$47386$auto$opt_dff.cc:219:make_patterns_logic$47015, arst=\reset, srst={ }
  244 cells in clk=\clock, en=$abc$64969$abc$61188$abc$53399$auto$opt_dff.cc:219:make_patterns_logic$22439, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$65155$abc$56035$abc$47422$auto$opt_dff.cc:219:make_patterns_logic$46998, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$65193$abc$55966$abc$47349$auto$opt_dff.cc:219:make_patterns_logic$47032, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$65227$abc$56107$abc$47500$auto$opt_dff.cc:219:make_patterns_logic$42001, arst=\reset, srst={ }
  747 cells in clk=\clock, en=$abc$65257$abc$58576$abc$50726$auto$opt_dff.cc:219:make_patterns_logic$27010, arst=\reset, srst={ }
  890 cells in clk=\clock, en=$abc$65957$abc$56929$abc$48444$auto$opt_dff.cc:219:make_patterns_logic$36244, arst=\reset, srst={ }
  887 cells in clk=\clock, en=$abc$66747$abc$56144$abc$47559$auto$opt_dff.cc:219:make_patterns_logic$39397, arst=\reset, srst={ }
  1707 cells in clk=\clock, en=$abc$72843$lo02, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$abc$67621$abc$59647$abc$51654$auto$opt_dff.cc:219:make_patterns_logic$26472, arst=\reset, srst={ }
  278 cells in clk=\clock, en=$abc$67652$abc$61561$abc$53843$auto$opt_dff.cc:194:make_patterns_logic$22197, arst=\reset, srst={ }
  102 cells in clk=\clock, en=$abc$67921$abc$59549$abc$51546$auto$opt_dff.cc:219:make_patterns_logic$26554, arst=\reset, srst={ }
  171 cells in clk=\clock, en=$abc$68010$abc$62009$abc$54149$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  279 cells in clk=\clock, en=$abc$68149$abc$55827$abc$47177$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  174 cells in clk=\clock, en=$abc$68398$abc$61843$abc$54005$auto$opt_dff.cc:194:make_patterns_logic$22179, arst=\reset, srst={ }
  863 cells in clk=\clock, en=$abc$68622$abc$60398$abc$52477$auto$opt_dff.cc:219:make_patterns_logic$23615, arst=\reset, srst={ }
  913 cells in clk=\clock, en=$abc$69422$abc$59677$abc$51683$auto$opt_dff.cc:219:make_patterns_logic$23868, arst=\reset, srst={ }
  775 cells in clk=\clock, en=$abc$70365$abc$57877$abc$49227$auto$opt_dff.cc:219:make_patterns_logic$33077, arst=\reset, srst={ }
  554 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.36.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64509$abc$56071$abc$47461$auto$opt_dff.cc:219:make_patterns_logic$46981, asynchronously reset by \reset
Extracted 38 gates and 55 wires to a netlist network with 17 inputs and 6 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64568$abc$59379$abc$51358$auto$opt_dff.cc:219:make_patterns_logic$26914, asynchronously reset by \reset
Extracted 45 gates and 71 wires to a netlist network with 26 inputs and 14 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64620$abc$59508$abc$51492$auto$opt_dff.cc:219:make_patterns_logic$26693, asynchronously reset by \reset
Extracted 41 gates and 61 wires to a netlist network with 20 inputs and 11 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64674$abc$59421$abc$51398$auto$opt_dff.cc:219:make_patterns_logic$26775, asynchronously reset by \reset
Extracted 86 gates and 134 wires to a netlist network with 48 inputs and 34 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64757$abc$61379$abc$53633$auto$opt_dff.cc:219:make_patterns_logic$22321, asynchronously reset by \reset
Extracted 178 gates and 328 wires to a netlist network with 150 inputs and 68 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64937$abc$56001$abc$47386$auto$opt_dff.cc:219:make_patterns_logic$47015, asynchronously reset by \reset
Extracted 33 gates and 57 wires to a netlist network with 24 inputs and 9 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64969$abc$61188$abc$53399$auto$opt_dff.cc:219:make_patterns_logic$22439, asynchronously reset by \reset
Extracted 180 gates and 316 wires to a netlist network with 136 inputs and 66 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65155$abc$56035$abc$47422$auto$opt_dff.cc:219:make_patterns_logic$46998, asynchronously reset by \reset
Extracted 35 gates and 52 wires to a netlist network with 17 inputs and 5 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65193$abc$55966$abc$47349$auto$opt_dff.cc:219:make_patterns_logic$47032, asynchronously reset by \reset
Extracted 32 gates and 51 wires to a netlist network with 19 inputs and 7 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65227$abc$56107$abc$47500$auto$opt_dff.cc:219:make_patterns_logic$42001, asynchronously reset by \reset
Extracted 30 gates and 50 wires to a netlist network with 20 inputs and 10 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65257$abc$58576$abc$50726$auto$opt_dff.cc:219:make_patterns_logic$27010, asynchronously reset by \reset
Extracted 720 gates and 926 wires to a netlist network with 206 inputs and 102 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65957$abc$56929$abc$48444$auto$opt_dff.cc:219:make_patterns_logic$36244, asynchronously reset by \reset
Extracted 840 gates and 1078 wires to a netlist network with 238 inputs and 163 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$66747$abc$56144$abc$47559$auto$opt_dff.cc:219:make_patterns_logic$39397, asynchronously reset by \reset
Extracted 841 gates and 1094 wires to a netlist network with 253 inputs and 138 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72843$lo02, asynchronously reset by \reset
Extracted 1704 gates and 2116 wires to a netlist network with 412 inputs and 128 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67621$abc$59647$abc$51654$auto$opt_dff.cc:219:make_patterns_logic$26472, asynchronously reset by \reset
Extracted 28 gates and 46 wires to a netlist network with 18 inputs and 9 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67652$abc$61561$abc$53843$auto$opt_dff.cc:194:make_patterns_logic$22197, asynchronously reset by \reset
Extracted 257 gates and 381 wires to a netlist network with 124 inputs and 97 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67921$abc$59549$abc$51546$auto$opt_dff.cc:219:make_patterns_logic$26554, asynchronously reset by \reset
Extracted 94 gates and 149 wires to a netlist network with 55 inputs and 30 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68010$abc$62009$abc$54149$auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 139 gates and 272 wires to a netlist network with 133 inputs and 64 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68149$abc$55827$abc$47177$auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 247 gates and 471 wires to a netlist network with 224 inputs and 65 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68398$abc$61843$abc$54005$auto$opt_dff.cc:194:make_patterns_logic$22179, asynchronously reset by \reset
Extracted 171 gates and 265 wires to a netlist network with 94 inputs and 97 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68622$abc$60398$abc$52477$auto$opt_dff.cc:219:make_patterns_logic$23615, asynchronously reset by \reset
Extracted 804 gates and 1017 wires to a netlist network with 213 inputs and 156 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69422$abc$59677$abc$51683$auto$opt_dff.cc:219:make_patterns_logic$23868, asynchronously reset by \reset
Extracted 849 gates and 1105 wires to a netlist network with 256 inputs and 151 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$70365$abc$57877$abc$49227$auto$opt_dff.cc:219:make_patterns_logic$33077, asynchronously reset by \reset
Extracted 756 gates and 946 wires to a netlist network with 190 inputs and 88 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 490 gates and 642 wires to a netlist network with 152 inputs and 167 outputs.

3.36.25.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~407 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~420 debug messages>
Removed a total of 140 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 2 unused cells and 40932 unused wires.
<suppressed ~23 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78967 ($_DFFE_PP0P_) from module b21 (D = $abc$68398$li17_li17, Q = $abc$68398$lo17).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78966 ($_DFFE_PP0P_) from module b21 (D = $abc$68398$li16_li16, Q = $abc$68398$lo16).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78965 ($_DFFE_PP0P_) from module b21 (D = $abc$68398$li15_li15, Q = $abc$68398$lo15).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78964 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[5], Q = $abc$68398$lo14).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78963 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[7], Q = $abc$68398$lo13).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78961 ($_DFFE_PP0P_) from module b21 (D = $abc$68398$li11_li11, Q = $abc$78949$lo11).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78959 ($_DFFE_PP0P_) from module b21 (D = $abc$68398$li09_li09, Q = $abc$68398$lo09).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78958 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[3], Q = $abc$54005$lo04).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78957 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[11], Q = $abc$54005$lo12).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78956 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[6], Q = $abc$54005$lo07).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78954 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[4], Q = $abc$54005$lo05).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78953 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[17], Q = $abc$54005$lo18).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78952 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[8], Q = $abc$54005$lo09).
Adding EN signal on $abc$78949$auto$blifparse.cc:362:parse_blif$78950 ($_DFFE_PP0P_) from module b21 (D = $abc$49854$flatten\P2.$verific$n11253$859[18], Q = $abc$54005$lo19).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~51 debug messages>

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~285 debug messages>
Removed a total of 95 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 100 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.38.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.38.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.38.30. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_Fo61Xl/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 8066 gates and 8954 wires to a netlist network with 887 inputs and 948 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 887  #Luts =  2582  Max Lvl =  37  Avg Lvl =  10.23  [   0.24 sec. at Pass 0]
DE:   #PIs = 887  #Luts =  1999  Max Lvl =  33  Avg Lvl =   9.80  [   9.85 sec. at Pass 1]
DE:   #PIs = 887  #Luts =  1955  Max Lvl =  30  Avg Lvl =   9.68  [   1.69 sec. at Pass 2]
DE:   #PIs = 887  #Luts =  1905  Max Lvl =  31  Avg Lvl =  10.06  [   3.42 sec. at Pass 3]
DE:   #PIs = 887  #Luts =  1834  Max Lvl =  26  Avg Lvl =   8.79  [   2.16 sec. at Pass 4]
DE:   #PIs = 887  #Luts =  1770  Max Lvl =  25  Avg Lvl =   8.76  [   3.77 sec. at Pass 5]
DE:   #PIs = 887  #Luts =  1751  Max Lvl =  24  Avg Lvl =   8.19  [   2.08 sec. at Pass 6]
DE:   #PIs = 887  #Luts =  1720  Max Lvl =  27  Avg Lvl =   8.50  [   2.96 sec. at Pass 7]
DE:   #PIs = 887  #Luts =  1709  Max Lvl =  26  Avg Lvl =   8.70  [   1.61 sec. at Pass 8]
DE:   #PIs = 887  #Luts =  1680  Max Lvl =  27  Avg Lvl =   8.79  [   2.64 sec. at Pass 9]
DE:   #PIs = 887  #Luts =  1671  Max Lvl =  24  Avg Lvl =   9.02  [   1.66 sec. at Pass 10]
DE:   #PIs = 887  #Luts =  1643  Max Lvl =  25  Avg Lvl =   8.90  [   2.22 sec. at Pass 11]
DE:   #PIs = 887  #Luts =  1641  Max Lvl =  23  Avg Lvl =   8.51  [   1.54 sec. at Pass 12]
DE:   #PIs = 887  #Luts =  1625  Max Lvl =  25  Avg Lvl =   8.96  [   2.23 sec. at Pass 13]
DE:   #PIs = 887  #Luts =  1617  Max Lvl =  23  Avg Lvl =   8.50  [   1.46 sec. at Pass 14]
DE:   #PIs = 887  #Luts =  1604  Max Lvl =  24  Avg Lvl =   8.57  [   2.10 sec. at Pass 15]
DE:   #PIs = 887  #Luts =  1599  Max Lvl =  23  Avg Lvl =   8.48  [   1.47 sec. at Pass 16]
DE:   #PIs = 887  #Luts =  1593  Max Lvl =  25  Avg Lvl =   8.83  [   2.08 sec. at Pass 17]
DE:   #PIs = 887  #Luts =  1582  Max Lvl =  24  Avg Lvl =   8.61  [   1.27 sec. at Pass 18]
DE:   #PIs = 887  #Luts =  1574  Max Lvl =  24  Avg Lvl =   8.95  [   1.81 sec. at Pass 19]
DE:   #PIs = 887  #Luts =  1567  Max Lvl =  23  Avg Lvl =   8.76  [   1.26 sec. at Pass 20]
DE:   #PIs = 887  #Luts =  1558  Max Lvl =  23  Avg Lvl =   9.23  [   1.80 sec. at Pass 21]
DE:   #PIs = 887  #Luts =  1556  Max Lvl =  22  Avg Lvl =   9.14  [   0.33 sec. at Pass 22]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8669 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.42. Printing statistics.

=== b21 ===

   Number of wires:               1420
   Number of wire bits:           3634
   Number of public wires:          22
   Number of public wire bits:     358
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2462
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1450
     adder_carry                   584


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b21 ===

   Number of wires:               1420
   Number of wire bits:           3634
   Number of public wires:          22
   Number of public wire bits:     358
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2462
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1450
     adder_carry                   584


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2442 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~28120 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~14634 debug messages>
Removed a total of 4878 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5375 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1161 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 348 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_Fo61Xl/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 4919 gates and 5804 wires to a netlist network with 883 inputs and 843 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 883  #Luts =  1459  Max Lvl =  22  Avg Lvl =   9.00  [   0.19 sec. at Pass 0]
DE:   #PIs = 883  #Luts =  1459  Max Lvl =  22  Avg Lvl =   9.00  [   6.56 sec. at Pass 1]
DE:   #PIs = 883  #Luts =  1453  Max Lvl =  22  Avg Lvl =   9.00  [   1.52 sec. at Pass 2]
DE:   #PIs = 883  #Luts =  1436  Max Lvl =  25  Avg Lvl =   8.87  [   1.92 sec. at Pass 3]
DE:   #PIs = 883  #Luts =  1436  Max Lvl =  25  Avg Lvl =   8.87  [   1.55 sec. at Pass 4]
DE:   #PIs = 883  #Luts =  1435  Max Lvl =  23  Avg Lvl =   8.49  [   2.20 sec. at Pass 5]
DE:   #PIs = 883  #Luts =  1432  Max Lvl =  24  Avg Lvl =   9.09  [   1.55 sec. at Pass 6]
DE:   #PIs = 883  #Luts =  1425  Max Lvl =  23  Avg Lvl =   9.09  [   1.89 sec. at Pass 7]
DE:   #PIs = 883  #Luts =  1425  Max Lvl =  23  Avg Lvl =   9.09  [   1.27 sec. at Pass 8]
DE:   #PIs = 883  #Luts =  1417  Max Lvl =  25  Avg Lvl =   8.96  [   1.98 sec. at Pass 9]
DE:   #PIs = 883  #Luts =  1414  Max Lvl =  25  Avg Lvl =   9.02  [   1.40 sec. at Pass 10]
DE:   #PIs = 883  #Luts =  1412  Max Lvl =  26  Avg Lvl =   9.30  [   1.77 sec. at Pass 11]
DE:   #PIs = 883  #Luts =  1409  Max Lvl =  26  Avg Lvl =   9.40  [   1.39 sec. at Pass 12]
DE:   #PIs = 883  #Luts =  1405  Max Lvl =  25  Avg Lvl =   8.53  [   1.92 sec. at Pass 13]
DE:   #PIs = 883  #Luts =  1403  Max Lvl =  26  Avg Lvl =   9.43  [   1.37 sec. at Pass 14]
DE:   #PIs = 883  #Luts =  1398  Max Lvl =  26  Avg Lvl =   9.31  [   1.93 sec. at Pass 15]
DE:   #PIs = 883  #Luts =  1398  Max Lvl =  25  Avg Lvl =   9.12  [   1.60 sec. at Pass 16]
DE:   #PIs = 883  #Luts =  1392  Max Lvl =  27  Avg Lvl =   9.42  [   2.19 sec. at Pass 17]
DE:   #PIs = 883  #Luts =  1392  Max Lvl =  26  Avg Lvl =   9.31  [   1.48 sec. at Pass 18]
DE:   #PIs = 883  #Luts =  1390  Max Lvl =  27  Avg Lvl =   9.57  [   2.14 sec. at Pass 19]
DE:   #PIs = 883  #Luts =  1390  Max Lvl =  25  Avg Lvl =   9.32  [   1.60 sec. at Pass 20]
DE:   #PIs = 883  #Luts =  1387  Max Lvl =  27  Avg Lvl =   9.54  [   2.01 sec. at Pass 21]
DE:   #PIs = 883  #Luts =  1380  Max Lvl =  26  Avg Lvl =   9.52  [   1.22 sec. at Pass 22]
DE:   #PIs = 883  #Luts =  1379  Max Lvl =  26  Avg Lvl =   9.55  [   1.89 sec. at Pass 23]
DE:   #PIs = 883  #Luts =  1375  Max Lvl =  25  Avg Lvl =   9.40  [   1.28 sec. at Pass 24]
DE:   #PIs = 883  #Luts =  1375  Max Lvl =  25  Avg Lvl =   9.40  [   2.11 sec. at Pass 25]
DE:   #PIs = 883  #Luts =  1375  Max Lvl =  25  Avg Lvl =   9.40  [   1.47 sec. at Pass 26]
DE:   #PIs = 883  #Luts =  1375  Max Lvl =  24  Avg Lvl =   9.23  [   2.08 sec. at Pass 27]
DE:   #PIs = 883  #Luts =  1372  Max Lvl =  25  Avg Lvl =   9.52  [   1.14 sec. at Pass 28]
DE:   #PIs = 883  #Luts =  1371  Max Lvl =  27  Avg Lvl =   9.68  [   1.70 sec. at Pass 29]
DE:   #PIs = 883  #Luts =  1368  Max Lvl =  27  Avg Lvl =   9.64  [   1.15 sec. at Pass 30]
DE:   #PIs = 883  #Luts =  1368  Max Lvl =  27  Avg Lvl =   9.64  [   1.69 sec. at Pass 31]
DE:   #PIs = 883  #Luts =  1364  Max Lvl =  26  Avg Lvl =   9.53  [   1.15 sec. at Pass 32]
DE:   #PIs = 883  #Luts =  1364  Max Lvl =  25  Avg Lvl =   9.18  [   1.86 sec. at Pass 33]
DE:   #PIs = 883  #Luts =  1364  Max Lvl =  25  Avg Lvl =   9.18  [   1.22 sec. at Pass 34]
DE:   #PIs = 883  #Luts =  1360  Max Lvl =  25  Avg Lvl =   9.51  [   1.92 sec. at Pass 35]
DE:   #PIs = 883  #Luts =  1360  Max Lvl =  25  Avg Lvl =   9.51  [   1.27 sec. at Pass 36]
DE:   #PIs = 883  #Luts =  1360  Max Lvl =  25  Avg Lvl =   9.51  [   1.92 sec. at Pass 37]
DE:   #PIs = 883  #Luts =  1357  Max Lvl =  25  Avg Lvl =   9.32  [   1.46 sec. at Pass 38]
DE:   #PIs = 883  #Luts =  1357  Max Lvl =  25  Avg Lvl =   9.32  [   2.03 sec. at Pass 39]
DE:   #PIs = 883  #Luts =  1357  Max Lvl =  25  Avg Lvl =   9.32  [   1.56 sec. at Pass 40]
DE:   #PIs = 883  #Luts =  1357  Max Lvl =  25  Avg Lvl =   9.32  [   2.16 sec. at Pass 41]
DE:   #PIs = 883  #Luts =  1357  Max Lvl =  25  Avg Lvl =   9.32  [   0.43 sec. at Pass 42]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4900 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \b21

3.56.2. Analyzing design hierarchy..
Top module:  \b21
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== b21 ===

   Number of wires:               1326
   Number of wire bits:           3540
   Number of public wires:          22
   Number of public wire bits:     358
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2369
     $lut                         1357
     adder_carry                   584
     dffsre                        428


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~8 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\b21'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 37bb34bc83, CPU: user 41.13s system 0.85s, MEM: 118.90 MB peak
Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (1533 sec), 0% 37x opt_dff (14 sec), ...
real 183.97
user 1429.92
sys 140.94
