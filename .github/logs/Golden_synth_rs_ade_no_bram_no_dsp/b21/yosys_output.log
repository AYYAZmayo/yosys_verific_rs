
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.47
 Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b21 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.57

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b21

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:1026: processing 'b21(BEHAV)'
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b21.vhd:515: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:992: 'others' clause is never selected
Importing module b21.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b21.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module b14_1(BEHAV).
Deleting now unused module b14(BEHAV).
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~13 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 14 unused cells and 347 unused wires.
<suppressed ~113 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b21...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b21.vhd:505$524.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b21.vhd:505$515.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b21.vhd:505$526.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b21.vhd:1015$1030.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b21.vhd:1015$1021.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b21.vhd:1015$1032.
Removed 6 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b21.vhd:490$477: { $flatten\P1.$verific$n2255$108 $auto$opt_reduce.cc:134:opt_pmux$1074 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b21.vhd:490$418: { $flatten\P1.$verific$n2256$109 $auto$opt_reduce.cc:134:opt_pmux$1076 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b21.vhd:490$495: { $flatten\P1.$verific$n2257$110 $auto$opt_reduce.cc:134:opt_pmux$1078 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b21.vhd:490$496: { $flatten\P1.$verific$n2258$111 $auto$opt_reduce.cc:134:opt_pmux$1080 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b21.vhd:1000$981: { $flatten\P2.$verific$n2255$611 $auto$opt_reduce.cc:134:opt_pmux$1082 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b21.vhd:1000$922: { $flatten\P2.$verific$n2256$612 $auto$opt_reduce.cc:134:opt_pmux$1084 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b21.vhd:1000$999: { $flatten\P2.$verific$n2257$613 $auto$opt_reduce.cc:134:opt_pmux$1086 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b21.vhd:1000$1000: { $flatten\P2.$verific$n2258$614 $auto$opt_reduce.cc:134:opt_pmux$1088 }
  Optimizing cells in module \b21.
Performed a total of 8 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b21.vhd:1019$1067 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b21.vhd:1019$1069 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b21.vhd:1019$1066 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1065 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b21.vhd:1019$1058 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b21.vhd:509$561 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b21.vhd:509$563 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b21.vhd:509$560 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b21.vhd:509$552 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b21.vhd:509$559 ($aldff) from module b21.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b21.P1.d.
Found FSM state register b21.P2.d.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b21'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b21.vhd:509$553
  root of input selection tree: $flatten\P1.$verific$n11472$358
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$204 [0]
  found ctrl input: $flatten\P1.$verific$n10346$175
  found ctrl input: $flatten\P1.$verific$n1405$102
  found ctrl input: $flatten\P1.$verific$n1440$103
  found ctrl input: $flatten\P1.$verific$n1474$104
  found ctrl input: $flatten\P1.$verific$n1475$105
  found ctrl input: $flatten\P1.$verific$n1476$106
  found ctrl input: $flatten\P1.$verific$n1477$107
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.B \P1.state $flatten\P1.$verific$n1405$102 $flatten\P1.$verific$n1440$103 $flatten\P1.$verific$n1474$104 $flatten\P1.$verific$n1475$105 $flatten\P1.$verific$n1476$106 $flatten\P1.$verific$n1477$107 $flatten\P1.$verific$n10346$175 $flatten\P1.$verific$n341$204 [0] }
  ctrl outputs: $flatten\P1.$verific$n11472$358
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3
Extracting FSM `\P2.d' from module `\b21'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b21.vhd:1019$1059
  root of input selection tree: $flatten\P2.$verific$n11479$862
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$707 [0]
  found ctrl input: $flatten\P2.$verific$n10346$678
  found ctrl input: $flatten\P2.$verific$n1405$605
  found ctrl input: $flatten\P2.$verific$n1440$606
  found ctrl input: $flatten\P2.$verific$n1474$607
  found ctrl input: $flatten\P2.$verific$n1475$608
  found ctrl input: $flatten\P2.$verific$n1476$609
  found ctrl input: $flatten\P2.$verific$n1477$610
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.B \P2.state $flatten\P2.$verific$n1405$605 $flatten\P2.$verific$n1440$606 $flatten\P2.$verific$n1474$607 $flatten\P2.$verific$n1475$608 $flatten\P2.$verific$n1476$609 $flatten\P2.$verific$n1477$610 $flatten\P2.$verific$n10346$678 $flatten\P2.$verific$n341$707 [0] }
  ctrl outputs: $flatten\P2.$verific$n11479$862
  transition:          0 10'-0-------- ->          0 0
  transition:          0 10'-100000000 ->          0 0
  transition:          0 10'-100000100 ->          0 0
  transition:          0 10'-100001-00 ->          1 1
  transition:          0 10'-10001--00 ->          2 2
  transition:          0 10'-1001---00 ->          3 3
  transition:          0 10'0101----00 ->          0 0
  transition:          0 10'1101----00 ->          3 3
  transition:          0 10'011-----00 ->          3 3
  transition:          0 10'111-----00 ->          0 0
  transition:          0 10'-1------10 ->          0 0
  transition:          0 10'-1-------1 ->          0 0
  transition:          2 10'-0-------- ->          2 2
  transition:          2 10'-100000000 ->          2 2
  transition:          2 10'-100000100 ->          0 0
  transition:          2 10'-100001-00 ->          1 1
  transition:          2 10'-10001--00 ->          2 2
  transition:          2 10'-1001---00 ->          3 3
  transition:          2 10'0101----00 ->          2 2
  transition:          2 10'1101----00 ->          3 3
  transition:          2 10'011-----00 ->          3 3
  transition:          2 10'111-----00 ->          2 2
  transition:          2 10'-1------10 ->          2 2
  transition:          2 10'-1-------1 ->          2 2
  transition:          1 10'-0-------- ->          1 1
  transition:          1 10'-100000000 ->          1 1
  transition:          1 10'-100000100 ->          0 0
  transition:          1 10'-100001-00 ->          1 1
  transition:          1 10'-10001--00 ->          2 2
  transition:          1 10'-1001---00 ->          3 3
  transition:          1 10'0101----00 ->          1 1
  transition:          1 10'1101----00 ->          3 3
  transition:          1 10'011-----00 ->          3 3
  transition:          1 10'111-----00 ->          1 1
  transition:          1 10'-1------10 ->          1 1
  transition:          1 10'-1-------1 ->          1 1
  transition:          3 10'-0-------- ->          3 3
  transition:          3 10'-100000000 ->          3 3
  transition:          3 10'-100000100 ->          0 0
  transition:          3 10'-100001-00 ->          1 1
  transition:          3 10'-10001--00 ->          2 2
  transition:          3 10'-1001---00 ->          3 3
  transition:          3 10'0101----00 ->          3 3
  transition:          3 10'1101----00 ->          3 3
  transition:          3 10'011-----00 ->          3 3
  transition:          3 10'111-----00 ->          3 3
  transition:          3 10'-1------10 ->          3 3
  transition:          3 10'-1-------1 ->          3 3

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1091' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1089' from module `\b21'.
  Merging pattern 10'-100000000 and 10'-100000100 from group (0 0 0).
  Merging pattern 10'-100000100 and 10'-100000000 from group (0 0 0).
  Merging pattern 10'0101----00 and 10'1101----00 from group (3 3 3).
  Merging pattern 10'1101----00 and 10'0101----00 from group (3 3 3).
  Merging pattern 10'011-----00 and 10'111-----00 from group (3 3 3).
  Merging pattern 10'111-----00 and 10'011-----00 from group (3 3 3).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1089' from module `\b21'.
Optimizing FSM `$fsm$\P2.d$1091' from module `\b21'.

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1089' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1091' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1089' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P1.d$1089 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n341$204 [0]
    1: $flatten\P1.$verific$n10346$175
    2: $flatten\P1.$verific$n1477$107
    3: $flatten\P1.$verific$n1476$106
    4: $flatten\P1.$verific$n1475$105
    5: $flatten\P1.$verific$n1474$104
    6: $flatten\P1.$verific$n1440$103
    7: $flatten\P1.$verific$n1405$102
    8: \P1.state
    9: \P1.B

  Output signals:
    0: $flatten\P1.$verific$n11472$358 [0]
    1: $flatten\P1.$verific$n11472$358 [1]
    2: $flatten\P1.$verific$n11472$358 [2]
    3: $flatten\P1.$verific$n11472$358 [3]
    4: $flatten\P1.$verific$n11472$358 [4]
    5: $flatten\P1.$verific$n11472$358 [5]
    6: $flatten\P1.$verific$n11472$358 [6]
    7: $flatten\P1.$verific$n11472$358 [7]
    8: $flatten\P1.$verific$n11472$358 [8]
    9: $flatten\P1.$verific$n11472$358 [9]
   10: $flatten\P1.$verific$n11472$358 [10]
   11: $flatten\P1.$verific$n11472$358 [11]
   12: $flatten\P1.$verific$n11472$358 [12]
   13: $flatten\P1.$verific$n11472$358 [13]
   14: $flatten\P1.$verific$n11472$358 [14]
   15: $flatten\P1.$verific$n11472$358 [15]
   16: $flatten\P1.$verific$n11472$358 [16]
   17: $flatten\P1.$verific$n11472$358 [17]
   18: $flatten\P1.$verific$n11472$358 [18]
   19: $flatten\P1.$verific$n11472$358 [19]
   20: $flatten\P1.$verific$n11472$358 [20]
   21: $flatten\P1.$verific$n11472$358 [21]
   22: $flatten\P1.$verific$n11472$358 [22]
   23: $flatten\P1.$verific$n11472$358 [23]
   24: $flatten\P1.$verific$n11472$358 [24]
   25: $flatten\P1.$verific$n11472$358 [25]
   26: $flatten\P1.$verific$n11472$358 [26]
   27: $flatten\P1.$verific$n11472$358 [27]
   28: $flatten\P1.$verific$n11472$358 [28]
   29: $flatten\P1.$verific$n11472$358 [29]
   30: $flatten\P1.$verific$n11472$358 [30]
   31: $flatten\P1.$verific$n11472$358 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1091' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P2.d$1091 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n341$707 [0]
    1: $flatten\P2.$verific$n10346$678
    2: $flatten\P2.$verific$n1477$610
    3: $flatten\P2.$verific$n1476$609
    4: $flatten\P2.$verific$n1475$608
    5: $flatten\P2.$verific$n1474$607
    6: $flatten\P2.$verific$n1440$606
    7: $flatten\P2.$verific$n1405$605
    8: \P2.state
    9: \P2.B

  Output signals:
    0: $flatten\P2.$verific$n11479$862 [0]
    1: $flatten\P2.$verific$n11479$862 [1]
    2: $flatten\P2.$verific$n11479$862 [2]
    3: $flatten\P2.$verific$n11479$862 [3]
    4: $flatten\P2.$verific$n11479$862 [4]
    5: $flatten\P2.$verific$n11479$862 [5]
    6: $flatten\P2.$verific$n11479$862 [6]
    7: $flatten\P2.$verific$n11479$862 [7]
    8: $flatten\P2.$verific$n11479$862 [8]
    9: $flatten\P2.$verific$n11479$862 [9]
   10: $flatten\P2.$verific$n11479$862 [10]
   11: $flatten\P2.$verific$n11479$862 [11]
   12: $flatten\P2.$verific$n11479$862 [12]
   13: $flatten\P2.$verific$n11479$862 [13]
   14: $flatten\P2.$verific$n11479$862 [14]
   15: $flatten\P2.$verific$n11479$862 [15]
   16: $flatten\P2.$verific$n11479$862 [16]
   17: $flatten\P2.$verific$n11479$862 [17]
   18: $flatten\P2.$verific$n11479$862 [18]
   19: $flatten\P2.$verific$n11479$862 [19]
   20: $flatten\P2.$verific$n11479$862 [20]
   21: $flatten\P2.$verific$n11479$862 [21]
   22: $flatten\P2.$verific$n11479$862 [22]
   23: $flatten\P2.$verific$n11479$862 [23]
   24: $flatten\P2.$verific$n11479$862 [24]
   25: $flatten\P2.$verific$n11479$862 [25]
   26: $flatten\P2.$verific$n11479$862 [26]
   27: $flatten\P2.$verific$n11479$862 [27]
   28: $flatten\P2.$verific$n11479$862 [28]
   29: $flatten\P2.$verific$n11479$862 [29]
   30: $flatten\P2.$verific$n11479$862 [30]
   31: $flatten\P2.$verific$n11479$862 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'-100000-00   ->     0 0
      1:     0 10'0101----00   ->     0 0
      2:     0 10'111-----00   ->     0 0
      3:     0 10'-1------10   ->     0 0
      4:     0 10'-1-------1   ->     0 0
      5:     0 10'-0--------   ->     0 0
      6:     0 10'-10001--00   ->     1 2
      7:     0 10'-100001-00   ->     2 1
      8:     0 10'-1001---00   ->     3 3
      9:     0 10'1101----00   ->     3 3
     10:     0 10'011-----00   ->     3 3
     11:     1 10'-100000100   ->     0 0
     12:     1 10'-100000000   ->     1 2
     13:     1 10'-10001--00   ->     1 2
     14:     1 10'0101----00   ->     1 2
     15:     1 10'111-----00   ->     1 2
     16:     1 10'-1------10   ->     1 2
     17:     1 10'-1-------1   ->     1 2
     18:     1 10'-0--------   ->     1 2
     19:     1 10'-100001-00   ->     2 1
     20:     1 10'-1001---00   ->     3 3
     21:     1 10'1101----00   ->     3 3
     22:     1 10'011-----00   ->     3 3
     23:     2 10'-100000100   ->     0 0
     24:     2 10'-10001--00   ->     1 2
     25:     2 10'-100000000   ->     2 1
     26:     2 10'-100001-00   ->     2 1
     27:     2 10'0101----00   ->     2 1
     28:     2 10'111-----00   ->     2 1
     29:     2 10'-1------10   ->     2 1
     30:     2 10'-1-------1   ->     2 1
     31:     2 10'-0--------   ->     2 1
     32:     2 10'-1001---00   ->     3 3
     33:     2 10'1101----00   ->     3 3
     34:     2 10'011-----00   ->     3 3
     35:     3 10'-100000100   ->     0 0
     36:     3 10'-10001--00   ->     1 2
     37:     3 10'-100001-00   ->     2 1
     38:     3 10'-100000000   ->     3 3
     39:     3 10'-1001---00   ->     3 3
     40:     3 10'-101----00   ->     3 3
     41:     3 10'-11-----00   ->     3 3
     42:     3 10'-1------10   ->     3 3
     43:     3 10'-1-------1   ->     3 3
     44:     3 10'-0--------   ->     3 3

-------------------------------------

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1089' from module `\b21'.
Mapping FSM `$fsm$\P2.d$1091' from module `\b21'.

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n10312$831 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n11185$857 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($adff) from module b21 (D = $flatten\P2.$verific$n10279$830, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($adff) from module b21 (D = $flatten\P2.$verific$n10246$829, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($adff) from module b21 (D = $flatten\P2.$verific$n10213$828, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($adff) from module b21 (D = { $flatten\P2.$verific$add_570$b21.vhd:980$990 $flatten\P2.$verific$n10521$840 [0] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($adff) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n10312$328 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n11178$353 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($adff) from module b21 (D = $flatten\P1.$verific$n10279$327, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($adff) from module b21 (D = $flatten\P1.$verific$n10246$326, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($adff) from module b21 (D = $flatten\P1.$verific$n10213$325, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($adff) from module b21 (D = { $flatten\P1.$verific$add_570$b21.vhd:470$486 $flatten\P1.$verific$n10514$336 [0] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($adff) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 48 unused cells and 152 unused wires.
<suppressed ~49 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_16$b21.vhd:1080$53 ($lt).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_17$b21.vhd:1080$54 ($lt).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1538 ($adffe).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1097 ($eq).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1316 ($eq).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1284 ($eq).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1274 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_179$b21.vhd:250$472 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_178$b21.vhd:249$471 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_177$b21.vhd:248$470 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_145$b21.vhd:230$461 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_143$b21.vhd:228$459 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_142$b21.vhd:227$458 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_141$b21.vhd:225$457 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_140$b21.vhd:224$456 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_138$b21.vhd:220$454 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt).
Removed top 1 bits (of 6) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1493 ($eq).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1577 ($adffe).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_697$b21.vhd:1016$1042 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_678$b21.vhd:1015$1028 ($mux).
Removed top 1 bits (of 5) from port B of cell b21.$auto$fsm_map.cc:77:implement_pattern_cache$1503 ($eq).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_179$b21.vhd:760$976 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_178$b21.vhd:759$975 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_177$b21.vhd:758$974 ($eq).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_145$b21.vhd:740$965 ($mux).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_143$b21.vhd:738$963 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_142$b21.vhd:737$962 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_141$b21.vhd:735$961 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_140$b21.vhd:734$960 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_138$b21.vhd:730$958 ($mux).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_698$b21.vhd:506$536 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_679$b21.vhd:505$522 ($mux).
Removed top 20 bits (of 21) from wire b21.$flatten\P1.$verific$n10477$333.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n10755$344.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n11178$353.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n11472$358.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1407$226.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1441$227.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1478$228.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n184$195.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n1987$239.
Removed top 3 bits (of 5) from wire b21.$flatten\P1.$verific$n288$198.
Removed top 5 bits (of 8) from wire b21.$flatten\P1.$verific$n301$200.
Removed top 9 bits (of 13) from wire b21.$flatten\P1.$verific$n318$202.
Removed top 8 bits (of 9) from wire b21.$flatten\P1.$verific$n341$204.
Removed top 2 bits (of 32) from wire b21.$flatten\P1.$verific$n4241$272.
Removed top 1 bits (of 3) from wire b21.$flatten\P1.$verific$n436$208.
Removed top 3 bits (of 33) from wire b21.$flatten\P1.$verific$n5666$286.
Removed top 1 bits (of 32) from wire b21.$flatten\P1.$verific$n862$221.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n933$223.
Removed top 1 bits (of 21) from wire b21.$flatten\P2.$verific$n10477$838.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n10762$848.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n11185$857.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n11479$862.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1407$729.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1441$730.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1478$731.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n184$698.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n1987$742.
Removed top 8 bits (of 32) from wire b21.$flatten\P2.$verific$n2260$744.
Removed top 8 bits (of 32) from wire b21.$flatten\P2.$verific$n2293$745.
Removed top 2 bits (of 32) from wire b21.$flatten\P2.$verific$n4241$775.
Removed top 1 bits (of 3) from wire b21.$flatten\P2.$verific$n436$711.
Removed top 13 bits (of 32) from wire b21.$flatten\P2.$verific$n4511$777.
Removed top 3 bits (of 33) from wire b21.$flatten\P2.$verific$n5666$789.
Removed top 1 bits (of 32) from wire b21.$flatten\P2.$verific$n862$724.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n933$726.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 20 unused cells and 121 unused wires.
<suppressed ~21 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b21:
  creating $macc model for $flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b21.vhd:470$485 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b21.vhd:497$505 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b21.vhd:501$511 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b21.vhd:980$989 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b21.vhd:1007$1010 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b21.vhd:1008$1013 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
  creating $macc model for $verific$add_24$b21.vhd:1081$58 ($add).
  creating $macc model for $verific$add_3$b21.vhd:1071$40 ($add).
  creating $macc model for $verific$add_30$b21.vhd:1085$60 ($add).
  creating $alu model for $macc $verific$add_30$b21.vhd:1085$60.
  creating $alu model for $macc $verific$add_3$b21.vhd:1071$40.
  creating $alu model for $macc $verific$add_24$b21.vhd:1081$58.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b21.vhd:663$940.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b21.vhd:872$984.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b21.vhd:757$971.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b21.vhd:1008$1013.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b21.vhd:1007$1010.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b21.vhd:627$927.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b21.vhd:980$989.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b21.vhd:624$925.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b21.vhd:610$917.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b21.vhd:609$913.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b21.vhd:606$907.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b21.vhd:604$900.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b21.vhd:832$982.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b21.vhd:602$893.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b21.vhd:600$886.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b21.vhd:153$436.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b21.vhd:362$480.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b21.vhd:247$467.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b21.vhd:498$507.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b21.vhd:497$505.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b21.vhd:117$423.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b21.vhd:470$485.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b21.vhd:114$421.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b21.vhd:100$413.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b21.vhd:99$409.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b21.vhd:96$403.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b21.vhd:94$396.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b21.vhd:322$478.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b21.vhd:92$389.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b21.vhd:90$382.
  creating $macc cell for $flatten\P1.$verific$mult_667$b21.vhd:501$511: $auto$alumacc.cc:365:replace_macc$1734
  creating $alu model for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b21.vhd:142$433 ($lt): merged with $flatten\P1.$verific$LessThan_68$b21.vhd:122$429.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b21.vhd:652$937 ($lt): merged with $flatten\P2.$verific$LessThan_68$b21.vhd:632$933.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b21.vhd:1079$48 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b21.vhd:1079$49 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b21.vhd:1080$53 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b21.vhd:1080$54 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b21.vhd:1080$54: $auto$alumacc.cc:485:replace_alu$1747
  creating $alu cell for $verific$LessThan_16$b21.vhd:1080$53: $auto$alumacc.cc:485:replace_alu$1752
  creating $alu cell for $verific$LessThan_12$b21.vhd:1079$49: $auto$alumacc.cc:485:replace_alu$1757
  creating $alu cell for $verific$LessThan_11$b21.vhd:1079$48: $auto$alumacc.cc:485:replace_alu$1762
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944: $auto$alumacc.cc:485:replace_alu$1767
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939: $auto$alumacc.cc:485:replace_alu$1772
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933, $flatten\P2.$verific$LessThan_78$b21.vhd:652$937: $auto$alumacc.cc:485:replace_alu$1783
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879: $auto$alumacc.cc:485:replace_alu$1794
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440: $auto$alumacc.cc:485:replace_alu$1799
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435: $auto$alumacc.cc:485:replace_alu$1810
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429, $flatten\P1.$verific$LessThan_78$b21.vhd:142$433: $auto$alumacc.cc:485:replace_alu$1821
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375: $auto$alumacc.cc:485:replace_alu$1832
  creating $alu cell for $flatten\P1.$verific$add_21$b21.vhd:90$382: $auto$alumacc.cc:485:replace_alu$1837
  creating $alu cell for $flatten\P1.$verific$add_26$b21.vhd:92$389: $auto$alumacc.cc:485:replace_alu$1840
  creating $alu cell for $flatten\P1.$verific$add_283$b21.vhd:322$478: $auto$alumacc.cc:485:replace_alu$1843
  creating $alu cell for $flatten\P1.$verific$add_31$b21.vhd:94$396: $auto$alumacc.cc:485:replace_alu$1846
  creating $alu cell for $flatten\P1.$verific$add_36$b21.vhd:96$403: $auto$alumacc.cc:485:replace_alu$1849
  creating $alu cell for $flatten\P1.$verific$add_39$b21.vhd:99$409: $auto$alumacc.cc:485:replace_alu$1852
  creating $alu cell for $flatten\P1.$verific$add_44$b21.vhd:100$413: $auto$alumacc.cc:485:replace_alu$1855
  creating $alu cell for $flatten\P1.$verific$add_570$b21.vhd:470$485: $auto$alumacc.cc:485:replace_alu$1858
  creating $alu cell for $flatten\P1.$verific$add_56$b21.vhd:114$421: $auto$alumacc.cc:485:replace_alu$1861
  creating $alu cell for $flatten\P1.$verific$add_662$b21.vhd:497$505: $auto$alumacc.cc:485:replace_alu$1864
  creating $alu cell for $flatten\P1.$verific$add_61$b21.vhd:117$423: $auto$alumacc.cc:485:replace_alu$1867
  creating $alu cell for $flatten\P1.$verific$add_664$b21.vhd:498$507: $auto$alumacc.cc:485:replace_alu$1870
  creating $alu cell for $flatten\P1.$verific$sub_168$b21.vhd:247$467: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $flatten\P1.$verific$sub_365$b21.vhd:362$480: $auto$alumacc.cc:485:replace_alu$1876
  creating $alu cell for $flatten\P1.$verific$sub_84$b21.vhd:153$436: $auto$alumacc.cc:485:replace_alu$1879
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376: $auto$alumacc.cc:485:replace_alu$1882
  creating $alu cell for $flatten\P2.$verific$add_21$b21.vhd:600$886: $auto$alumacc.cc:485:replace_alu$1885
  creating $alu cell for $flatten\P2.$verific$add_26$b21.vhd:602$893: $auto$alumacc.cc:485:replace_alu$1888
  creating $alu cell for $flatten\P2.$verific$add_283$b21.vhd:832$982: $auto$alumacc.cc:485:replace_alu$1891
  creating $alu cell for $flatten\P2.$verific$add_31$b21.vhd:604$900: $auto$alumacc.cc:485:replace_alu$1894
  creating $alu cell for $flatten\P2.$verific$add_36$b21.vhd:606$907: $auto$alumacc.cc:485:replace_alu$1897
  creating $alu cell for $flatten\P2.$verific$add_39$b21.vhd:609$913: $auto$alumacc.cc:485:replace_alu$1900
  creating $alu cell for $flatten\P2.$verific$add_44$b21.vhd:610$917: $auto$alumacc.cc:485:replace_alu$1903
  creating $alu cell for $flatten\P2.$verific$add_570$b21.vhd:980$989: $auto$alumacc.cc:485:replace_alu$1906
  creating $alu cell for $flatten\P2.$verific$add_56$b21.vhd:624$925: $auto$alumacc.cc:485:replace_alu$1909
  creating $alu cell for $flatten\P2.$verific$add_662$b21.vhd:1007$1010: $auto$alumacc.cc:485:replace_alu$1912
  creating $alu cell for $flatten\P2.$verific$add_61$b21.vhd:627$927: $auto$alumacc.cc:485:replace_alu$1915
  creating $alu cell for $flatten\P2.$verific$add_664$b21.vhd:1008$1013: $auto$alumacc.cc:485:replace_alu$1918
  creating $alu cell for $flatten\P2.$verific$sub_168$b21.vhd:757$971: $auto$alumacc.cc:485:replace_alu$1921
  creating $alu cell for $flatten\P2.$verific$sub_365$b21.vhd:872$984: $auto$alumacc.cc:485:replace_alu$1924
  creating $alu cell for $flatten\P2.$verific$sub_84$b21.vhd:663$940: $auto$alumacc.cc:485:replace_alu$1927
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880: $auto$alumacc.cc:485:replace_alu$1930
  creating $alu cell for $verific$add_24$b21.vhd:1081$58: $auto$alumacc.cc:485:replace_alu$1933
  creating $alu cell for $verific$add_3$b21.vhd:1071$40: $auto$alumacc.cc:485:replace_alu$1936
  creating $alu cell for $verific$add_30$b21.vhd:1085$60: $auto$alumacc.cc:485:replace_alu$1939
  created 47 $alu and 1 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 4 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~32 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b21 ===

   Number of wires:                542
   Number of wire bits:           9126
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                403
     $adff                          14
     $adffe                         14
     $alu                           47
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           74
     $ne                             2
     $not                           26
     $or                            24
     $reduce_and                    11
     $reduce_or                     34
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b21 ===

   Number of wires:                542
   Number of wire bits:           9126
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                403
     $adff                          14
     $adffe                         14
     $alu                           47
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           74
     $ne                             2
     $not                           26
     $or                            24
     $reduce_and                    11
     $reduce_or                     34
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> stat

3.24. Printing statistics.

=== b21 ===

   Number of wires:                542
   Number of wire bits:           9126
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                403
     $adff                          14
     $adffe                         14
     $alu                           47
     $and                           68
     $bmux                          32
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                           74
     $ne                             2
     $not                           26
     $or                            24
     $reduce_and                    11
     $reduce_or                     34
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:455:run$1611 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod$8027eda61d95ddd4d4dd7b5cb21f3830552ebe4e\_80_rs_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$9292_Y
    new assignment: { } = { }.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~4754 debug messages>

yosys> stat

3.26. Printing statistics.

=== b21 ===

   Number of wires:               3468
   Number of wire bits:          61562
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              18881
     $_AND_                       1673
     $_DFFE_PP0P_                  316
     $_DFF_PP0_                    118
     $_MUX_                      11526
     $_NOT_                       1116
     $_OR_                        1548
     $_XOR_                       1962
     adder_carry                   622


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~7174 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~9339 debug messages>
Removed a total of 3113 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10440 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [19], Q = \P2.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4783 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [19], Q = \P1.addr [19]).
Adding EN signal on $auto$ff.cc:262:slice$4761 ($_DFFE_PP0P_) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).
Adding EN signal on $auto$ff.cc:262:slice$10418 ($_DFFE_PP0P_) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $auto$ff.cc:262:slice$4764 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [0], Q = \P1.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$4765 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [1], Q = \P1.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$4766 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [2], Q = \P1.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$4767 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [3], Q = \P1.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$4768 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [4], Q = \P1.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$4769 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [5], Q = \P1.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$4770 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [6], Q = \P1.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$4771 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [7], Q = \P1.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$4772 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [8], Q = \P1.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$4773 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [9], Q = \P1.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$4774 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [10], Q = \P1.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$4775 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [11], Q = \P1.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$4776 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [12], Q = \P1.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$4777 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [13], Q = \P1.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$4778 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [14], Q = \P1.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$4779 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [15], Q = \P1.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$4780 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [16], Q = \P1.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$4781 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [17], Q = \P1.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$4782 ($_DFF_PP0_) from module b21 (D = $flatten\P1.$verific$n11246$355 [18], Q = \P1.addr [18]).
Adding EN signal on $auto$ff.cc:262:slice$10421 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [0], Q = \P2.addr [0]).
Adding EN signal on $auto$ff.cc:262:slice$10422 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [1], Q = \P2.addr [1]).
Adding EN signal on $auto$ff.cc:262:slice$10423 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [2], Q = \P2.addr [2]).
Adding EN signal on $auto$ff.cc:262:slice$10424 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [3], Q = \P2.addr [3]).
Adding EN signal on $auto$ff.cc:262:slice$10425 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [4], Q = \P2.addr [4]).
Adding EN signal on $auto$ff.cc:262:slice$10426 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [5], Q = \P2.addr [5]).
Adding EN signal on $auto$ff.cc:262:slice$10427 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [6], Q = \P2.addr [6]).
Adding EN signal on $auto$ff.cc:262:slice$10428 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [7], Q = \P2.addr [7]).
Adding EN signal on $auto$ff.cc:262:slice$10429 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [8], Q = \P2.addr [8]).
Adding EN signal on $auto$ff.cc:262:slice$10430 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [9], Q = \P2.addr [9]).
Adding EN signal on $auto$ff.cc:262:slice$10431 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [10], Q = \P2.addr [10]).
Adding EN signal on $auto$ff.cc:262:slice$10432 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [11], Q = \P2.addr [11]).
Adding EN signal on $auto$ff.cc:262:slice$10433 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [12], Q = \P2.addr [12]).
Adding EN signal on $auto$ff.cc:262:slice$10434 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [13], Q = \P2.addr [13]).
Adding EN signal on $auto$ff.cc:262:slice$10435 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [14], Q = \P2.addr [14]).
Adding EN signal on $auto$ff.cc:262:slice$10436 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [15], Q = \P2.addr [15]).
Adding EN signal on $auto$ff.cc:262:slice$10437 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [16], Q = \P2.addr [16]).
Adding EN signal on $auto$ff.cc:262:slice$10438 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [17], Q = \P2.addr [17]).
Adding EN signal on $auto$ff.cc:262:slice$10439 ($_DFF_PP0_) from module b21 (D = $flatten\P2.$verific$n11253$859 [18], Q = \P2.addr [18]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 867 unused cells and 2485 unused wires.
<suppressed ~868 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~660 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~1059 debug messages>
Removed a total of 353 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$10475 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [2], Q = \P2.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10474 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [1], Q = \P2.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10473 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10472 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [31], Q = \P2.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10471 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [30], Q = \P2.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10470 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [29], Q = \P2.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10469 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [28], Q = \P2.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10468 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [27], Q = \P2.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10467 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [26], Q = \P2.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10466 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [25], Q = \P2.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10465 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [24], Q = \P2.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10464 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [23], Q = \P2.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10463 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [22], Q = \P2.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10462 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [21], Q = \P2.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10461 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [20], Q = \P2.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10460 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [19], Q = \P2.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10459 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [18], Q = \P2.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10458 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [17], Q = \P2.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10457 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [16], Q = \P2.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10456 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [15], Q = \P2.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10455 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [14], Q = \P2.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10454 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [13], Q = \P2.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10453 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [12], Q = \P2.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10452 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [11], Q = \P2.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10451 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [10], Q = \P2.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10450 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [9], Q = \P2.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10449 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [8], Q = \P2.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10448 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [7], Q = \P2.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10447 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [6], Q = \P2.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10446 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [5], Q = \P2.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10445 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [4], Q = \P2.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10444 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [3], Q = \P2.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10443 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [2], Q = \P2.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10442 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [1], Q = \P2.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10441 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12574 [0], Q = \P2.reg2 [0]).
Adding EN signal on $auto$ff.cc:262:slice$14996 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12090 [2], Q = \P2.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$14995 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12090 [1], Q = \P2.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$14994 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$12090 [0], Q = \P2.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10571 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5817 [2], Q = \P1.reg3 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10570 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5817 [1], Q = \P1.reg3 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10569 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$5817 [0], Q = \P1.reg3 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10536 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [31], Q = \P2.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10535 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [30], Q = \P2.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10534 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [29], Q = \P2.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10533 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [28], Q = \P2.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10532 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [27], Q = \P2.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10531 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [26], Q = \P2.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10530 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [25], Q = \P2.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10529 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [24], Q = \P2.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10528 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [23], Q = \P2.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10527 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [22], Q = \P2.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10526 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [21], Q = \P2.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10525 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [20], Q = \P2.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10524 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [19], Q = \P2.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10523 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [18], Q = \P2.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10522 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [17], Q = \P2.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10521 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [16], Q = \P2.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10520 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [15], Q = \P2.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10519 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [14], Q = \P2.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10518 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [13], Q = \P2.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10517 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [12], Q = \P2.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10516 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [11], Q = \P2.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10515 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [10], Q = \P2.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10514 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [9], Q = \P2.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10513 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [8], Q = \P2.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10512 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [7], Q = \P2.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10511 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [6], Q = \P2.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10510 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [5], Q = \P2.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10509 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [4], Q = \P2.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10508 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [3], Q = \P2.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$10507 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [2], Q = \P2.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$10506 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [1], Q = \P2.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$10505 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$10504 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [31], Q = \P2.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$10503 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [30], Q = \P2.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$10502 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [29], Q = \P2.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$10501 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [28], Q = \P2.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$10500 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [27], Q = \P2.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$10499 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [26], Q = \P2.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$10498 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [25], Q = \P2.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$10497 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [24], Q = \P2.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$10496 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [23], Q = \P2.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$10495 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [22], Q = \P2.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$10494 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [21], Q = \P2.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$10493 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [20], Q = \P2.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$10492 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [19], Q = \P2.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$10491 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [18], Q = \P2.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$10490 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [17], Q = \P2.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$10489 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [16], Q = \P2.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$10488 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [15], Q = \P2.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$10487 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [14], Q = \P2.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$10486 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [13], Q = \P2.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$10485 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [12], Q = \P2.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$10484 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [11], Q = \P2.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$10483 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [10], Q = \P2.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$10482 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [9], Q = \P2.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$10481 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [8], Q = \P2.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$10480 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [7], Q = \P2.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$10479 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [6], Q = \P2.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$10478 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [5], Q = \P2.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$10477 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [4], Q = \P2.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$10476 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [3], Q = \P2.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4879 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [31], Q = \P1.reg0 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4878 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [30], Q = \P1.reg0 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4877 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [29], Q = \P1.reg0 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4876 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [28], Q = \P1.reg0 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4875 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [27], Q = \P1.reg0 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4874 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [26], Q = \P1.reg0 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4873 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [25], Q = \P1.reg0 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4872 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [24], Q = \P1.reg0 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4871 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [23], Q = \P1.reg0 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4870 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [22], Q = \P1.reg0 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4869 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [21], Q = \P1.reg0 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4868 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [20], Q = \P1.reg0 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4867 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [19], Q = \P1.reg0 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4866 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [18], Q = \P1.reg0 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4865 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [17], Q = \P1.reg0 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4864 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [16], Q = \P1.reg0 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4863 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [15], Q = \P1.reg0 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4862 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [14], Q = \P1.reg0 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4861 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [13], Q = \P1.reg0 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4860 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [12], Q = \P1.reg0 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4859 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [11], Q = \P1.reg0 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4858 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [10], Q = \P1.reg0 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4857 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [9], Q = \P1.reg0 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4856 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [8], Q = \P1.reg0 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4855 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [7], Q = \P1.reg0 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4854 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [6], Q = \P1.reg0 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4853 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [5], Q = \P1.reg0 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4852 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [4], Q = \P1.reg0 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4851 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [3], Q = \P1.reg0 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4850 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [2], Q = \P1.reg0 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4849 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [1], Q = \P1.reg0 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4848 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4847 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [31], Q = \P1.reg1 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4846 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [30], Q = \P1.reg1 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4845 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [29], Q = \P1.reg1 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4844 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [28], Q = \P1.reg1 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4843 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [27], Q = \P1.reg1 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4842 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [26], Q = \P1.reg1 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4841 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [25], Q = \P1.reg1 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4840 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [24], Q = \P1.reg1 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4839 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [23], Q = \P1.reg1 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4838 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [22], Q = \P1.reg1 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4837 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [21], Q = \P1.reg1 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4836 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [20], Q = \P1.reg1 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4835 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [19], Q = \P1.reg1 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4834 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [18], Q = \P1.reg1 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4833 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [17], Q = \P1.reg1 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4832 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [16], Q = \P1.reg1 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4831 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [15], Q = \P1.reg1 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4830 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [14], Q = \P1.reg1 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4829 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [13], Q = \P1.reg1 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4828 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [12], Q = \P1.reg1 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4827 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [11], Q = \P1.reg1 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4826 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [10], Q = \P1.reg1 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4825 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [9], Q = \P1.reg1 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4824 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [8], Q = \P1.reg1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4823 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [7], Q = \P1.reg1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4822 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [6], Q = \P1.reg1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4821 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [5], Q = \P1.reg1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4820 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [4], Q = \P1.reg1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4819 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [3], Q = \P1.reg1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4818 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [2], Q = \P1.reg1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4817 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [1], Q = \P1.reg1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4816 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [0], Q = \P1.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$4815 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [31], Q = \P1.reg2 [31]).
Adding EN signal on $auto$ff.cc:262:slice$4814 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [30], Q = \P1.reg2 [30]).
Adding EN signal on $auto$ff.cc:262:slice$4813 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [29], Q = \P1.reg2 [29]).
Adding EN signal on $auto$ff.cc:262:slice$4812 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [28], Q = \P1.reg2 [28]).
Adding EN signal on $auto$ff.cc:262:slice$4811 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [27], Q = \P1.reg2 [27]).
Adding EN signal on $auto$ff.cc:262:slice$4810 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [26], Q = \P1.reg2 [26]).
Adding EN signal on $auto$ff.cc:262:slice$4809 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [25], Q = \P1.reg2 [25]).
Adding EN signal on $auto$ff.cc:262:slice$4808 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [24], Q = \P1.reg2 [24]).
Adding EN signal on $auto$ff.cc:262:slice$4807 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [23], Q = \P1.reg2 [23]).
Adding EN signal on $auto$ff.cc:262:slice$4806 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [22], Q = \P1.reg2 [22]).
Adding EN signal on $auto$ff.cc:262:slice$4805 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [21], Q = \P1.reg2 [21]).
Adding EN signal on $auto$ff.cc:262:slice$4804 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [20], Q = \P1.reg2 [20]).
Adding EN signal on $auto$ff.cc:262:slice$4803 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [19], Q = \P1.reg2 [19]).
Adding EN signal on $auto$ff.cc:262:slice$4802 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [18], Q = \P1.reg2 [18]).
Adding EN signal on $auto$ff.cc:262:slice$4801 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [17], Q = \P1.reg2 [17]).
Adding EN signal on $auto$ff.cc:262:slice$4800 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [16], Q = \P1.reg2 [16]).
Adding EN signal on $auto$ff.cc:262:slice$4799 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [15], Q = \P1.reg2 [15]).
Adding EN signal on $auto$ff.cc:262:slice$4798 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [14], Q = \P1.reg2 [14]).
Adding EN signal on $auto$ff.cc:262:slice$4797 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [13], Q = \P1.reg2 [13]).
Adding EN signal on $auto$ff.cc:262:slice$4796 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [12], Q = \P1.reg2 [12]).
Adding EN signal on $auto$ff.cc:262:slice$4795 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [11], Q = \P1.reg2 [11]).
Adding EN signal on $auto$ff.cc:262:slice$4794 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [10], Q = \P1.reg2 [10]).
Adding EN signal on $auto$ff.cc:262:slice$4793 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [9], Q = \P1.reg2 [9]).
Adding EN signal on $auto$ff.cc:262:slice$4792 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [8], Q = \P1.reg2 [8]).
Adding EN signal on $auto$ff.cc:262:slice$4791 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [7], Q = \P1.reg2 [7]).
Adding EN signal on $auto$ff.cc:262:slice$4790 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [6], Q = \P1.reg2 [6]).
Adding EN signal on $auto$ff.cc:262:slice$4789 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [5], Q = \P1.reg2 [5]).
Adding EN signal on $auto$ff.cc:262:slice$4788 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [4], Q = \P1.reg2 [4]).
Adding EN signal on $auto$ff.cc:262:slice$4787 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [3], Q = \P1.reg2 [3]).
Adding EN signal on $auto$ff.cc:262:slice$4786 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [2], Q = \P1.reg2 [2]).
Adding EN signal on $auto$ff.cc:262:slice$4785 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [1], Q = \P1.reg2 [1]).
Adding EN signal on $auto$ff.cc:262:slice$4784 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6301 [0], Q = \P1.reg2 [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 1655 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4598 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~20883 debug messages>
Removed a total of 6961 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6647 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1262 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$36132 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$7269 [0], Q = \P1.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$30065 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13542 [0], Q = \P2.reg0 [0]).
Adding EN signal on $auto$ff.cc:262:slice$23770 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$13058 [0], Q = \P2.reg1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$39299 ($_DFFE_PP0P_) from module b21 (D = $auto$simplemap.cc:309:simplemap_bmux$6785 [0], Q = \P1.reg1 [0]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~18 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14684 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14704
        $auto$simplemap.cc:86:simplemap_bitop$14705

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14685 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14702
        $auto$simplemap.cc:86:simplemap_bitop$14703

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14686 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14700
        $auto$simplemap.cc:86:simplemap_bitop$14701

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14687 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14698
        $auto$simplemap.cc:86:simplemap_bitop$14699

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8725 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8745
        $auto$simplemap.cc:86:simplemap_bitop$8746

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8726 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8743
        $auto$simplemap.cc:86:simplemap_bitop$8744

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8727 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8741
        $auto$simplemap.cc:86:simplemap_bitop$8742

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8728 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8739
        $auto$simplemap.cc:86:simplemap_bitop$8740


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~8 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14691 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14702
        $auto$simplemap.cc:86:simplemap_bitop$14704

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14692 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14698
        $auto$simplemap.cc:86:simplemap_bitop$14700

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8732 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8743
        $auto$simplemap.cc:86:simplemap_bitop$8745

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8733 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8739
        $auto$simplemap.cc:86:simplemap_bitop$8741


yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14695 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$14698
        $auto$simplemap.cc:86:simplemap_bitop$14702

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$8736 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$8739
        $auto$simplemap.cc:86:simplemap_bitop$8743


yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~85 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  167 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$47076, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$47059, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$47042, arst=\reset, srst={ }
  26 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$47025, arst=\reset, srst={ }
  41 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$42045, arst=\reset, srst={ }
  743 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$39441, arst=\reset, srst={ }
  602 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$36288, arst=\reset, srst={ }
  497 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$33121, arst=\reset, srst={ }
  773 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  457 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$27054, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26958, arst=\reset, srst={ }
  73 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26819, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26737, arst=\reset, srst={ }
  88 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26598, arst=\reset, srst={ }
  29 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$26516, arst=\reset, srst={ }
  619 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$23912, arst=\reset, srst={ }
  811 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$23659, arst=\reset, srst={ }
  515 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22483, arst=\reset, srst={ }
  549 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$22365, arst=\reset, srst={ }
  146 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22241, arst=\reset, srst={ }
  129 cells in clk=\clock, en=$auto$opt_dff.cc:194:make_patterns_logic$22223, arst=\reset, srst={ }
  300 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  651 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  971 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.33.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 135 gates and 268 wires to a netlist network with 133 inputs and 96 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47076, asynchronously reset by \reset
Extracted 26 gates and 49 wires to a netlist network with 22 inputs and 10 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47059, asynchronously reset by \reset
Extracted 25 gates and 47 wires to a netlist network with 21 inputs and 9 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47042, asynchronously reset by \reset
Extracted 26 gates and 51 wires to a netlist network with 23 inputs and 6 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$47025, asynchronously reset by \reset
Extracted 26 gates and 51 wires to a netlist network with 23 inputs and 6 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$42045, asynchronously reset by \reset
Extracted 37 gates and 70 wires to a netlist network with 31 inputs and 16 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$39441, asynchronously reset by \reset
Extracted 669 gates and 916 wires to a netlist network with 246 inputs and 193 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$36288, asynchronously reset by \reset
Extracted 584 gates and 814 wires to a netlist network with 229 inputs and 104 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$33121, asynchronously reset by \reset
Extracted 472 gates and 670 wires to a netlist network with 197 inputs and 66 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 771 gates and 1021 wires to a netlist network with 249 inputs and 50 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$27054, asynchronously reset by \reset
Extracted 453 gates and 632 wires to a netlist network with 178 inputs and 45 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26958, asynchronously reset by \reset
Extracted 27 gates and 48 wires to a netlist network with 20 inputs and 11 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26819, asynchronously reset by \reset
Extracted 71 gates and 107 wires to a netlist network with 35 inputs and 27 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26737, asynchronously reset by \reset
Extracted 38 gates and 68 wires to a netlist network with 29 inputs and 13 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26598, asynchronously reset by \reset
Extracted 88 gates and 152 wires to a netlist network with 62 inputs and 27 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$26516, asynchronously reset by \reset
Extracted 23 gates and 44 wires to a netlist network with 20 inputs and 9 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23912, asynchronously reset by \reset
Extracted 558 gates and 816 wires to a netlist network with 257 inputs and 104 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$23659, asynchronously reset by \reset
Extracted 721 gates and 940 wires to a netlist network with 218 inputs and 220 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22483, asynchronously reset by \reset
Extracted 449 gates and 616 wires to a netlist network with 166 inputs and 110 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$22365, asynchronously reset by \reset
Extracted 483 gates and 604 wires to a netlist network with 119 inputs and 73 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22241, asynchronously reset by \reset
Extracted 126 gates and 185 wires to a netlist network with 59 inputs and 105 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:194:make_patterns_logic$22223, asynchronously reset by \reset
Extracted 129 gates and 205 wires to a netlist network with 76 inputs and 94 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 268 gates and 493 wires to a netlist network with 225 inputs and 98 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 651 gates and 800 wires to a netlist network with 148 inputs and 49 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 907 gates and 1157 wires to a netlist network with 248 inputs and 183 outputs.

3.33.26.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  171 cells in clk=\clock, en=$abc$47221$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$47393$auto$opt_dff.cc:219:make_patterns_logic$47076, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$47430$auto$opt_dff.cc:219:make_patterns_logic$47059, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$47466$auto$opt_dff.cc:219:make_patterns_logic$47042, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$47505$auto$opt_dff.cc:219:make_patterns_logic$47025, arst=\reset, srst={ }
  44 cells in clk=\clock, en=$abc$47544$auto$opt_dff.cc:219:make_patterns_logic$42045, arst=\reset, srst={ }
  812 cells in clk=\clock, en=$abc$47603$auto$opt_dff.cc:219:make_patterns_logic$39441, arst=\reset, srst={ }
  958 cells in clk=\clock, en=$abc$48488$auto$opt_dff.cc:219:make_patterns_logic$36288, arst=\reset, srst={ }
  632 cells in clk=\clock, en=$abc$49276$auto$opt_dff.cc:219:make_patterns_logic$33121, arst=\reset, srst={ }
  857 cells in clk=\clock, en=$abc$50775$auto$opt_dff.cc:219:make_patterns_logic$27054, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$abc$51407$auto$opt_dff.cc:219:make_patterns_logic$26958, arst=\reset, srst={ }
  90 cells in clk=\clock, en=$abc$51447$auto$opt_dff.cc:219:make_patterns_logic$26819, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$abc$51541$auto$opt_dff.cc:219:make_patterns_logic$26737, arst=\reset, srst={ }
  107 cells in clk=\clock, en=$abc$51595$auto$opt_dff.cc:219:make_patterns_logic$26598, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$abc$51703$auto$opt_dff.cc:219:make_patterns_logic$26516, arst=\reset, srst={ }
  794 cells in clk=\clock, en=$abc$51732$auto$opt_dff.cc:219:make_patterns_logic$23912, arst=\reset, srst={ }
  835 cells in clk=\clock, en=$abc$52526$auto$opt_dff.cc:219:make_patterns_logic$23659, arst=\reset, srst={ }
  259 cells in clk=\clock, en=$abc$53448$auto$opt_dff.cc:219:make_patterns_logic$22483, arst=\reset, srst={ }
  257 cells in clk=\clock, en=$abc$53682$auto$opt_dff.cc:219:make_patterns_logic$22365, arst=\reset, srst={ }
  247 cells in clk=\clock, en=$abc$53865$auto$opt_dff.cc:194:make_patterns_logic$22241, arst=\reset, srst={ }
  125 cells in clk=\clock, en=$abc$54027$auto$opt_dff.cc:194:make_patterns_logic$22223, arst=\reset, srst={ }
  279 cells in clk=\clock, en=$abc$54171$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  1652 cells in clk=\clock, en=$abc$55257$lo02, arst=\reset, srst={ }
  572 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.34.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47221$auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 139 gates and 272 wires to a netlist network with 133 inputs and 64 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47393$auto$opt_dff.cc:219:make_patterns_logic$47076, asynchronously reset by \reset
Extracted 32 gates and 54 wires to a netlist network with 22 inputs and 9 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47430$auto$opt_dff.cc:219:make_patterns_logic$47059, asynchronously reset by \reset
Extracted 31 gates and 52 wires to a netlist network with 21 inputs and 7 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47466$auto$opt_dff.cc:219:make_patterns_logic$47042, asynchronously reset by \reset
Extracted 30 gates and 47 wires to a netlist network with 17 inputs and 6 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47505$auto$opt_dff.cc:219:make_patterns_logic$47025, asynchronously reset by \reset
Extracted 30 gates and 47 wires to a netlist network with 17 inputs and 6 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47544$auto$opt_dff.cc:219:make_patterns_logic$42045, asynchronously reset by \reset
Extracted 40 gates and 57 wires to a netlist network with 17 inputs and 11 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$47603$auto$opt_dff.cc:219:make_patterns_logic$39441, asynchronously reset by \reset
Extracted 771 gates and 1014 wires to a netlist network with 243 inputs and 99 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$48488$auto$opt_dff.cc:219:make_patterns_logic$36288, asynchronously reset by \reset
Extracted 895 gates and 1116 wires to a netlist network with 221 inputs and 199 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$49276$auto$opt_dff.cc:219:make_patterns_logic$33121, asynchronously reset by \reset
Extracted 613 gates and 805 wires to a netlist network with 192 inputs and 67 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$50775$auto$opt_dff.cc:219:make_patterns_logic$27054, asynchronously reset by \reset
Extracted 785 gates and 1039 wires to a netlist network with 254 inputs and 189 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51407$auto$opt_dff.cc:219:make_patterns_logic$26958, asynchronously reset by \reset
Extracted 40 gates and 64 wires to a netlist network with 24 inputs and 12 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51447$auto$opt_dff.cc:219:make_patterns_logic$26819, asynchronously reset by \reset
Extracted 90 gates and 132 wires to a netlist network with 42 inputs and 29 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51541$auto$opt_dff.cc:219:make_patterns_logic$26737, asynchronously reset by \reset
Extracted 42 gates and 63 wires to a netlist network with 21 inputs and 14 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51595$auto$opt_dff.cc:219:make_patterns_logic$26598, asynchronously reset by \reset
Extracted 100 gates and 160 wires to a netlist network with 60 inputs and 31 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51703$auto$opt_dff.cc:219:make_patterns_logic$26516, asynchronously reset by \reset
Extracted 28 gates and 50 wires to a netlist network with 22 inputs and 13 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$51732$auto$opt_dff.cc:219:make_patterns_logic$23912, asynchronously reset by \reset
Extracted 759 gates and 987 wires to a netlist network with 228 inputs and 89 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$52526$auto$opt_dff.cc:219:make_patterns_logic$23659, asynchronously reset by \reset
Extracted 790 gates and 988 wires to a netlist network with 198 inputs and 125 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53448$auto$opt_dff.cc:219:make_patterns_logic$22483, asynchronously reset by \reset
Extracted 195 gates and 351 wires to a netlist network with 156 inputs and 71 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53682$auto$opt_dff.cc:219:make_patterns_logic$22365, asynchronously reset by \reset
Extracted 193 gates and 321 wires to a netlist network with 128 inputs and 73 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$53865$auto$opt_dff.cc:194:make_patterns_logic$22241, asynchronously reset by \reset
Extracted 225 gates and 351 wires to a netlist network with 126 inputs and 97 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54027$auto$opt_dff.cc:194:make_patterns_logic$22223, asynchronously reset by \reset
Extracted 123 gates and 196 wires to a netlist network with 73 inputs and 93 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$54171$auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 247 gates and 471 wires to a netlist network with 224 inputs and 65 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55257$lo02, asynchronously reset by \reset
Extracted 1650 gates and 2038 wires to a netlist network with 388 inputs and 102 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 508 gates and 662 wires to a netlist network with 154 inputs and 172 outputs.

3.34.25.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  244 cells in clk=\clock, en=$abc$61381$abc$53682$auto$opt_dff.cc:219:make_patterns_logic$22365, arst=\reset, srst={ }
  50 cells in clk=\clock, en=$abc$59381$abc$51407$auto$opt_dff.cc:219:make_patterns_logic$26958, arst=\reset, srst={ }
  32 cells in clk=\clock, en=$abc$59649$abc$51703$auto$opt_dff.cc:219:make_patterns_logic$26516, arst=\reset, srst={ }
  57 cells in clk=\clock, en=$abc$56093$abc$47505$auto$opt_dff.cc:219:make_patterns_logic$47025, arst=\reset, srst={ }
  47 cells in clk=\clock, en=$abc$59510$abc$51541$auto$opt_dff.cc:219:make_patterns_logic$26737, arst=\reset, srst={ }
  92 cells in clk=\clock, en=$abc$59423$abc$51447$auto$opt_dff.cc:219:make_patterns_logic$26819, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$56129$abc$47544$auto$opt_dff.cc:219:make_patterns_logic$42045, arst=\reset, srst={ }
  251 cells in clk=\clock, en=$abc$61190$abc$53448$auto$opt_dff.cc:219:make_patterns_logic$22483, arst=\reset, srst={ }
  182 cells in clk=\clock, en=$abc$61848$abc$54027$auto$opt_dff.cc:194:make_patterns_logic$22223, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$55988$abc$47393$auto$opt_dff.cc:219:make_patterns_logic$47076, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$abc$56057$abc$47466$auto$opt_dff.cc:219:make_patterns_logic$47042, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$56023$abc$47430$auto$opt_dff.cc:219:make_patterns_logic$47059, arst=\reset, srst={ }
  280 cells in clk=\clock, en=$abc$61566$abc$53865$auto$opt_dff.cc:194:make_patterns_logic$22241, arst=\reset, srst={ }
  834 cells in clk=\clock, en=$abc$56166$abc$47603$auto$opt_dff.cc:219:make_patterns_logic$39441, arst=\reset, srst={ }
  675 cells in clk=\clock, en=$abc$58578$abc$50775$auto$opt_dff.cc:219:make_patterns_logic$27054, arst=\reset, srst={ }
  795 cells in clk=\clock, en=$abc$60400$abc$52526$auto$opt_dff.cc:219:make_patterns_logic$23659, arst=\reset, srst={ }
  104 cells in clk=\clock, en=$abc$59551$abc$51595$auto$opt_dff.cc:219:make_patterns_logic$26598, arst=\reset, srst={ }
  773 cells in clk=\clock, en=$abc$57879$abc$49276$auto$opt_dff.cc:219:make_patterns_logic$33121, arst=\reset, srst={ }
  849 cells in clk=\clock, en=$abc$56951$abc$48488$auto$opt_dff.cc:219:make_patterns_logic$36288, arst=\reset, srst={ }
  169 cells in clk=\clock, en=$abc$62014$abc$54171$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  282 cells in clk=\clock, en=$abc$55849$abc$47221$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  1693 cells in clk=\clock, en=$abc$64021$lo02, arst=\reset, srst={ }
  931 cells in clk=\clock, en=$abc$59679$abc$51732$auto$opt_dff.cc:219:make_patterns_logic$23912, arst=\reset, srst={ }
  555 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.35.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61381$abc$53682$auto$opt_dff.cc:219:make_patterns_logic$22365, asynchronously reset by \reset
Extracted 180 gates and 306 wires to a netlist network with 126 inputs and 70 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59381$abc$51407$auto$opt_dff.cc:219:make_patterns_logic$26958, asynchronously reset by \reset
Extracted 48 gates and 76 wires to a netlist network with 28 inputs and 17 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59649$abc$51703$auto$opt_dff.cc:219:make_patterns_logic$26516, asynchronously reset by \reset
Extracted 26 gates and 48 wires to a netlist network with 22 inputs and 11 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56093$abc$47505$auto$opt_dff.cc:219:make_patterns_logic$47025, asynchronously reset by \reset
Extracted 57 gates and 86 wires to a netlist network with 29 inputs and 12 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59510$abc$51541$auto$opt_dff.cc:219:make_patterns_logic$26737, asynchronously reset by \reset
Extracted 47 gates and 73 wires to a netlist network with 26 inputs and 19 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59423$abc$51447$auto$opt_dff.cc:219:make_patterns_logic$26819, asynchronously reset by \reset
Extracted 84 gates and 132 wires to a netlist network with 48 inputs and 31 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56129$abc$47544$auto$opt_dff.cc:219:make_patterns_logic$42045, asynchronously reset by \reset
Extracted 31 gates and 46 wires to a netlist network with 15 inputs and 8 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61190$abc$53448$auto$opt_dff.cc:219:make_patterns_logic$22483, asynchronously reset by \reset
Extracted 187 gates and 339 wires to a netlist network with 152 inputs and 67 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61848$abc$54027$auto$opt_dff.cc:194:make_patterns_logic$22223, asynchronously reset by \reset
Extracted 178 gates and 281 wires to a netlist network with 103 inputs and 91 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55988$abc$47393$auto$opt_dff.cc:219:make_patterns_logic$47076, asynchronously reset by \reset
Extracted 31 gates and 50 wires to a netlist network with 19 inputs and 7 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56057$abc$47466$auto$opt_dff.cc:219:make_patterns_logic$47042, asynchronously reset by \reset
Extracted 37 gates and 55 wires to a netlist network with 18 inputs and 6 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56023$abc$47430$auto$opt_dff.cc:219:make_patterns_logic$47059, asynchronously reset by \reset
Extracted 32 gates and 52 wires to a netlist network with 20 inputs and 7 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$61566$abc$53865$auto$opt_dff.cc:194:make_patterns_logic$22241, asynchronously reset by \reset
Extracted 258 gates and 379 wires to a netlist network with 121 inputs and 93 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56166$abc$47603$auto$opt_dff.cc:219:make_patterns_logic$39441, asynchronously reset by \reset
Extracted 793 gates and 1032 wires to a netlist network with 239 inputs and 107 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$58578$abc$50775$auto$opt_dff.cc:219:make_patterns_logic$27054, asynchronously reset by \reset
Extracted 659 gates and 866 wires to a netlist network with 207 inputs and 74 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$60400$abc$52526$auto$opt_dff.cc:219:make_patterns_logic$23659, asynchronously reset by \reset
Extracted 753 gates and 947 wires to a netlist network with 194 inputs and 124 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59551$abc$51595$auto$opt_dff.cc:219:make_patterns_logic$26598, asynchronously reset by \reset
Extracted 95 gates and 154 wires to a netlist network with 59 inputs and 28 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$57879$abc$49276$auto$opt_dff.cc:219:make_patterns_logic$33121, asynchronously reset by \reset
Extracted 745 gates and 972 wires to a netlist network with 227 inputs and 125 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$56951$abc$48488$auto$opt_dff.cc:219:make_patterns_logic$36288, asynchronously reset by \reset
Extracted 803 gates and 1020 wires to a netlist network with 217 inputs and 134 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$62014$abc$54171$auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 137 gates and 270 wires to a netlist network with 133 inputs and 64 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$55849$abc$47221$auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 250 gates and 474 wires to a netlist network with 224 inputs and 66 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64021$lo02, asynchronously reset by \reset
Extracted 1693 gates and 2063 wires to a netlist network with 370 inputs and 102 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$59679$abc$51732$auto$opt_dff.cc:219:make_patterns_logic$23912, asynchronously reset by \reset
Extracted 839 gates and 1098 wires to a netlist network with 259 inputs and 220 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 491 gates and 639 wires to a netlist network with 148 inputs and 168 outputs.

3.35.25.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  233 cells in clk=\clock, en=$abc$64514$abc$61381$abc$53682$auto$opt_dff.cc:219:make_patterns_logic$22365, arst=\reset, srst={ }
  44 cells in clk=\clock, en=$abc$64696$abc$59381$abc$51407$auto$opt_dff.cc:219:make_patterns_logic$26958, arst=\reset, srst={ }
  30 cells in clk=\clock, en=$abc$64747$abc$59649$abc$51703$auto$opt_dff.cc:219:make_patterns_logic$26516, arst=\reset, srst={ }
  38 cells in clk=\clock, en=$abc$64775$abc$56093$abc$47505$auto$opt_dff.cc:219:make_patterns_logic$47025, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$abc$64834$abc$59510$abc$51541$auto$opt_dff.cc:219:make_patterns_logic$26737, arst=\reset, srst={ }
  93 cells in clk=\clock, en=$abc$64888$abc$59423$abc$51447$auto$opt_dff.cc:219:make_patterns_logic$26819, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$64970$abc$56129$abc$47544$auto$opt_dff.cc:219:make_patterns_logic$42045, arst=\reset, srst={ }
  244 cells in clk=\clock, en=$abc$65000$abc$61190$abc$53448$auto$opt_dff.cc:219:make_patterns_logic$22483, arst=\reset, srst={ }
  34 cells in clk=\clock, en=$abc$65413$abc$55988$abc$47393$auto$opt_dff.cc:219:make_patterns_logic$47076, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$65447$abc$56057$abc$47466$auto$opt_dff.cc:219:make_patterns_logic$47042, arst=\reset, srst={ }
  36 cells in clk=\clock, en=$abc$65484$abc$56023$abc$47430$auto$opt_dff.cc:219:make_patterns_logic$47059, arst=\reset, srst={ }
  275 cells in clk=\clock, en=$abc$65517$abc$61566$abc$53865$auto$opt_dff.cc:194:make_patterns_logic$22241, arst=\reset, srst={ }
  869 cells in clk=\clock, en=$abc$65794$abc$56166$abc$47603$auto$opt_dff.cc:219:make_patterns_logic$39441, arst=\reset, srst={ }
  680 cells in clk=\clock, en=$abc$66605$abc$58578$abc$50775$auto$opt_dff.cc:219:make_patterns_logic$27054, arst=\reset, srst={ }
  878 cells in clk=\clock, en=$abc$67285$abc$60400$abc$52526$auto$opt_dff.cc:219:make_patterns_logic$23659, arst=\reset, srst={ }
  108 cells in clk=\clock, en=$abc$68091$abc$59551$abc$51595$auto$opt_dff.cc:219:make_patterns_logic$26598, arst=\reset, srst={ }
  810 cells in clk=\clock, en=$abc$68186$abc$57879$abc$49276$auto$opt_dff.cc:219:make_patterns_logic$33121, arst=\reset, srst={ }
  837 cells in clk=\clock, en=$abc$69006$abc$56951$abc$48488$auto$opt_dff.cc:219:make_patterns_logic$36288, arst=\reset, srst={ }
  171 cells in clk=\clock, en=$abc$69808$abc$62014$abc$54171$auto$opt_dff.cc:219:make_patterns_logic$1563, arst=\reset, srst={ }
  936 cells in clk=\clock, en=$abc$71868$abc$59679$abc$51732$auto$opt_dff.cc:219:make_patterns_logic$23912, arst=\reset, srst={ }
  203 cells in clk=\clock, en=$abc$65185$abc$61848$abc$54027$auto$opt_dff.cc:194:make_patterns_logic$22223, arst=\reset, srst={ }
  292 cells in clk=\clock, en=$abc$69947$abc$55849$abc$47221$auto$opt_dff.cc:219:make_patterns_logic$1602, arst=\reset, srst={ }
  1683 cells in clk=\clock, en=$abc$72810$lo02, arst=\reset, srst={ }
  570 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.36.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64514$abc$61381$abc$53682$auto$opt_dff.cc:219:make_patterns_logic$22365, asynchronously reset by \reset
Extracted 169 gates and 281 wires to a netlist network with 112 inputs and 66 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64696$abc$59381$abc$51407$auto$opt_dff.cc:219:make_patterns_logic$26958, asynchronously reset by \reset
Extracted 44 gates and 67 wires to a netlist network with 23 inputs and 12 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64747$abc$59649$abc$51703$auto$opt_dff.cc:219:make_patterns_logic$26516, asynchronously reset by \reset
Extracted 26 gates and 45 wires to a netlist network with 19 inputs and 11 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64775$abc$56093$abc$47505$auto$opt_dff.cc:219:make_patterns_logic$47025, asynchronously reset by \reset
Extracted 38 gates and 55 wires to a netlist network with 17 inputs and 6 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64834$abc$59510$abc$51541$auto$opt_dff.cc:219:make_patterns_logic$26737, asynchronously reset by \reset
Extracted 42 gates and 60 wires to a netlist network with 18 inputs and 11 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64888$abc$59423$abc$51447$auto$opt_dff.cc:219:make_patterns_logic$26819, asynchronously reset by \reset
Extracted 85 gates and 130 wires to a netlist network with 45 inputs and 35 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$64970$abc$56129$abc$47544$auto$opt_dff.cc:219:make_patterns_logic$42045, asynchronously reset by \reset
Extracted 30 gates and 50 wires to a netlist network with 20 inputs and 10 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65000$abc$61190$abc$53448$auto$opt_dff.cc:219:make_patterns_logic$22483, asynchronously reset by \reset
Extracted 180 gates and 315 wires to a netlist network with 135 inputs and 67 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65413$abc$55988$abc$47393$auto$opt_dff.cc:219:make_patterns_logic$47076, asynchronously reset by \reset
Extracted 30 gates and 50 wires to a netlist network with 20 inputs and 6 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65447$abc$56057$abc$47466$auto$opt_dff.cc:219:make_patterns_logic$47042, asynchronously reset by \reset
Extracted 35 gates and 53 wires to a netlist network with 18 inputs and 4 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65484$abc$56023$abc$47430$auto$opt_dff.cc:219:make_patterns_logic$47059, asynchronously reset by \reset
Extracted 32 gates and 53 wires to a netlist network with 21 inputs and 8 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65517$abc$61566$abc$53865$auto$opt_dff.cc:194:make_patterns_logic$22241, asynchronously reset by \reset
Extracted 253 gates and 368 wires to a netlist network with 115 inputs and 88 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65794$abc$56166$abc$47603$auto$opt_dff.cc:219:make_patterns_logic$39441, asynchronously reset by \reset
Extracted 825 gates and 1079 wires to a netlist network with 254 inputs and 125 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$66605$abc$58578$abc$50775$auto$opt_dff.cc:219:make_patterns_logic$27054, asynchronously reset by \reset
Extracted 669 gates and 860 wires to a netlist network with 191 inputs and 84 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$67285$abc$60400$abc$52526$auto$opt_dff.cc:219:make_patterns_logic$23659, asynchronously reset by \reset
Extracted 812 gates and 1042 wires to a netlist network with 230 inputs and 163 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68091$abc$59551$abc$51595$auto$opt_dff.cc:219:make_patterns_logic$26598, asynchronously reset by \reset
Extracted 100 gates and 162 wires to a netlist network with 62 inputs and 34 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$68186$abc$57879$abc$49276$auto$opt_dff.cc:219:make_patterns_logic$33121, asynchronously reset by \reset
Extracted 785 gates and 1008 wires to a netlist network with 223 inputs and 104 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69006$abc$56951$abc$48488$auto$opt_dff.cc:219:make_patterns_logic$36288, asynchronously reset by \reset
Extracted 791 gates and 1010 wires to a netlist network with 219 inputs and 143 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69808$abc$62014$abc$54171$auto$opt_dff.cc:219:make_patterns_logic$1563, asynchronously reset by \reset
Extracted 139 gates and 272 wires to a netlist network with 133 inputs and 64 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$71868$abc$59679$abc$51732$auto$opt_dff.cc:219:make_patterns_logic$23912, asynchronously reset by \reset
Extracted 866 gates and 1128 wires to a netlist network with 262 inputs and 156 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$65185$abc$61848$abc$54027$auto$opt_dff.cc:194:make_patterns_logic$22223, asynchronously reset by \reset
Extracted 201 gates and 310 wires to a netlist network with 109 inputs and 94 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$69947$abc$55849$abc$47221$auto$opt_dff.cc:219:make_patterns_logic$1602, asynchronously reset by \reset
Extracted 260 gates and 497 wires to a netlist network with 237 inputs and 72 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$72810$lo02, asynchronously reset by \reset
Extracted 1677 gates and 2060 wires to a netlist network with 383 inputs and 128 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 504 gates and 670 wires to a netlist network with 166 inputs and 169 outputs.

3.36.25.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~325 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~534 debug messages>
Removed a total of 178 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 2 unused cells and 40741 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79503 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[3], Q = $abc$79483$lo19).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79498 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[17], Q = $abc$79483$lo14).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79496 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[5], Q = $abc$79483$lo12).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79494 ($_DFFE_PP0P_) from module b21 (D = $abc$65185$li09_li09, Q = $abc$79483$lo10).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79492 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[4], Q = $abc$54027$lo05).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79488 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[6], Q = $abc$54027$lo07).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79487 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[7], Q = $abc$54027$lo08).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79486 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[8], Q = $abc$65185$lo18).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79485 ($_DFFE_PP0P_) from module b21 (D = $abc$49903$flatten\P2.$verific$n11253$859[13], Q = $abc$54027$lo14).
Adding EN signal on $abc$79483$auto$blifparse.cc:362:parse_blif$79484 ($_DFFE_PP0P_) from module b21 (D = $abc$51595$flatten\P2.$verific$n11253$859[2], Q = $abc$54027$lo03).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~39 debug messages>

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~198 debug messages>
Removed a total of 66 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 68 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.38.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.38.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.38.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.38.30. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_RS8kTY/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 7981 gates and 8869 wires to a netlist network with 887 inputs and 924 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 887  #Luts =  2579  Max Lvl =  37  Avg Lvl =  10.23  [   0.43 sec. at Pass 0]
DE:   #PIs = 887  #Luts =  1914  Max Lvl =  35  Avg Lvl =   9.90  [  18.20 sec. at Pass 1]
DE:   #PIs = 887  #Luts =  1881  Max Lvl =  36  Avg Lvl =  10.77  [   3.30 sec. at Pass 2]
DE:   #PIs = 887  #Luts =  1805  Max Lvl =  35  Avg Lvl =  10.18  [   5.68 sec. at Pass 3]
DE:   #PIs = 887  #Luts =  1756  Max Lvl =  26  Avg Lvl =   9.42  [   3.74 sec. at Pass 4]
DE:   #PIs = 887  #Luts =  1712  Max Lvl =  26  Avg Lvl =   9.00  [   5.29 sec. at Pass 5]
DE:   #PIs = 887  #Luts =  1689  Max Lvl =  24  Avg Lvl =   8.27  [   3.17 sec. at Pass 6]
DE:   #PIs = 887  #Luts =  1662  Max Lvl =  24  Avg Lvl =   8.63  [   3.89 sec. at Pass 7]
DE:   #PIs = 887  #Luts =  1649  Max Lvl =  25  Avg Lvl =   8.81  [   2.58 sec. at Pass 8]
DE:   #PIs = 887  #Luts =  1625  Max Lvl =  24  Avg Lvl =   8.93  [   3.54 sec. at Pass 9]
DE:   #PIs = 887  #Luts =  1611  Max Lvl =  24  Avg Lvl =   8.15  [   2.63 sec. at Pass 10]
DE:   #PIs = 887  #Luts =  1599  Max Lvl =  24  Avg Lvl =   8.73  [   3.39 sec. at Pass 11]
DE:   #PIs = 887  #Luts =  1598  Max Lvl =  24  Avg Lvl =   8.76  [   2.11 sec. at Pass 12]
DE:   #PIs = 887  #Luts =  1588  Max Lvl =  23  Avg Lvl =   9.05  [   3.00 sec. at Pass 13]
DE:   #PIs = 887  #Luts =  1583  Max Lvl =  22  Avg Lvl =   8.73  [   2.27 sec. at Pass 14]
DE:   #PIs = 887  #Luts =  1577  Max Lvl =  24  Avg Lvl =   8.93  [   2.99 sec. at Pass 15]
DE:   #PIs = 887  #Luts =  1572  Max Lvl =  23  Avg Lvl =   8.44  [   2.32 sec. at Pass 16]
DE:   #PIs = 887  #Luts =  1564  Max Lvl =  23  Avg Lvl =   8.51  [   3.94 sec. at Pass 17]
DE:   #PIs = 887  #Luts =  1559  Max Lvl =  22  Avg Lvl =   8.38  [   2.62 sec. at Pass 18]
DE:   #PIs = 887  #Luts =  1556  Max Lvl =  23  Avg Lvl =   8.49  [   3.83 sec. at Pass 19]
DE:   #PIs = 887  #Luts =  1555  Max Lvl =  24  Avg Lvl =   8.33  [   2.61 sec. at Pass 20]
DE:   #PIs = 887  #Luts =  1551  Max Lvl =  21  Avg Lvl =   7.96  [   3.92 sec. at Pass 21]
DE:   #PIs = 887  #Luts =  1551  Max Lvl =  21  Avg Lvl =   7.96  [   0.68 sec. at Pass 22]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8611 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.42. Printing statistics.

=== b21 ===

   Number of wires:               1443
   Number of wire bits:           3695
   Number of public wires:          24
   Number of public wire bits:     398
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2481
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1469
     adder_carry                   584


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b21 ===

   Number of wires:               1443
   Number of wire bits:           3695
   Number of public wires:          24
   Number of public wire bits:     398
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2481
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1469
     adder_carry                   584


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2461 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~27867 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~16119 debug messages>
Removed a total of 5373 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5397 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1235 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 350 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_RS8kTY/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 5019 gates and 5904 wires to a netlist network with 883 inputs and 843 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 883  #Luts =  1474  Max Lvl =  23  Avg Lvl =   8.16  [   0.39 sec. at Pass 0]
DE:   #PIs = 883  #Luts =  1465  Max Lvl =  23  Avg Lvl =   7.96  [  10.13 sec. at Pass 1]
DE:   #PIs = 883  #Luts =  1458  Max Lvl =  21  Avg Lvl =   7.91  [   1.82 sec. at Pass 2]
DE:   #PIs = 883  #Luts =  1452  Max Lvl =  21  Avg Lvl =   8.05  [   3.53 sec. at Pass 3]
DE:   #PIs = 883  #Luts =  1449  Max Lvl =  22  Avg Lvl =   8.19  [   2.60 sec. at Pass 4]
DE:   #PIs = 883  #Luts =  1448  Max Lvl =  23  Avg Lvl =   8.36  [   3.59 sec. at Pass 5]
DE:   #PIs = 883  #Luts =  1444  Max Lvl =  23  Avg Lvl =   8.60  [   2.75 sec. at Pass 6]
DE:   #PIs = 883  #Luts =  1439  Max Lvl =  25  Avg Lvl =   8.63  [   3.75 sec. at Pass 7]
DE:   #PIs = 883  #Luts =  1436  Max Lvl =  25  Avg Lvl =   8.29  [   3.34 sec. at Pass 8]
DE:   #PIs = 883  #Luts =  1436  Max Lvl =  25  Avg Lvl =   8.29  [   4.74 sec. at Pass 9]
DE:   #PIs = 883  #Luts =  1434  Max Lvl =  23  Avg Lvl =   9.18  [   3.27 sec. at Pass 10]
DE:   #PIs = 883  #Luts =  1434  Max Lvl =  23  Avg Lvl =   9.18  [   4.13 sec. at Pass 11]
DE:   #PIs = 883  #Luts =  1428  Max Lvl =  25  Avg Lvl =   9.18  [   2.82 sec. at Pass 12]
DE:   #PIs = 883  #Luts =  1426  Max Lvl =  24  Avg Lvl =   9.03  [   3.75 sec. at Pass 13]
DE:   #PIs = 883  #Luts =  1423  Max Lvl =  24  Avg Lvl =   8.76  [   2.43 sec. at Pass 14]
DE:   #PIs = 883  #Luts =  1421  Max Lvl =  24  Avg Lvl =   9.03  [   2.91 sec. at Pass 15]
DE:   #PIs = 883  #Luts =  1421  Max Lvl =  24  Avg Lvl =   9.03  [   2.30 sec. at Pass 16]
DE:   #PIs = 883  #Luts =  1416  Max Lvl =  27  Avg Lvl =   9.53  [   3.10 sec. at Pass 17]
DE:   #PIs = 883  #Luts =  1416  Max Lvl =  26  Avg Lvl =   9.54  [   2.39 sec. at Pass 18]
DE:   #PIs = 883  #Luts =  1416  Max Lvl =  26  Avg Lvl =   9.54  [   3.17 sec. at Pass 19]
DE:   #PIs = 883  #Luts =  1412  Max Lvl =  23  Avg Lvl =   8.90  [   2.01 sec. at Pass 20]
DE:   #PIs = 883  #Luts =  1410  Max Lvl =  26  Avg Lvl =   9.56  [   2.70 sec. at Pass 21]
DE:   #PIs = 883  #Luts =  1410  Max Lvl =  26  Avg Lvl =   9.56  [   1.87 sec. at Pass 22]
DE:   #PIs = 883  #Luts =  1407  Max Lvl =  25  Avg Lvl =   9.62  [   2.89 sec. at Pass 23]
DE:   #PIs = 883  #Luts =  1401  Max Lvl =  26  Avg Lvl =   9.51  [   1.93 sec. at Pass 24]
DE:   #PIs = 883  #Luts =  1401  Max Lvl =  26  Avg Lvl =   9.51  [   2.53 sec. at Pass 25]
DE:   #PIs = 883  #Luts =  1393  Max Lvl =  26  Avg Lvl =   9.39  [   1.86 sec. at Pass 26]
DE:   #PIs = 883  #Luts =  1393  Max Lvl =  26  Avg Lvl =   9.39  [   2.68 sec. at Pass 27]
DE:   #PIs = 883  #Luts =  1393  Max Lvl =  26  Avg Lvl =   9.39  [   2.00 sec. at Pass 28]
DE:   #PIs = 883  #Luts =  1393  Max Lvl =  26  Avg Lvl =   9.39  [   2.87 sec. at Pass 29]
DE:   #PIs = 883  #Luts =  1392  Max Lvl =  27  Avg Lvl =   9.56  [   0.58 sec. at Pass 30]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4975 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \b21

3.56.2. Analyzing design hierarchy..
Top module:  \b21
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== b21 ===

   Number of wires:               1365
   Number of wire bits:           3617
   Number of public wires:          24
   Number of public wire bits:     398
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2404
     $lut                         1392
     adder_carry                   584
     dffsre                        428


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 9 unused wires.
<suppressed ~9 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.
Dumping module `\b21'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: ccdb2c43cd, CPU: user 66.06s system 1.53s, MEM: 115.45 MB peak
Yosys 0.18+10 (git sha1 8217e4c48, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (1972 sec), 1% 37x opt_dff (25 sec), ...
real 269.69
user 1862.05
sys 170.70
