
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.53
 Yosys 0.18+10 (git sha1 a3cbfccc4, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 00:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b21 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.61

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b21

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:1026: processing 'b21(BEHAV)'
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b21.vhd:515: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:992: 'others' clause is never selected
Importing module b21.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b21.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module b14(BEHAV).
Deleting now unused module b14_1(BEHAV).
<suppressed ~2 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~122 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 26 unused cells and 448 unused wires.
<suppressed ~125 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module b21...
Found and reported 0 problems.

yosys> opt_expr

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.16. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b21.vhd:505$524.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b21.vhd:505$515.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b21.vhd:505$526.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b21.vhd:1015$1030.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b21.vhd:1015$1021.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b21.vhd:1015$1032.
Removed 6 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b21.vhd:490$477: { $flatten\P1.$verific$n2255$108 $auto$opt_reduce.cc:134:opt_pmux$1496 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b21.vhd:490$418: { $flatten\P1.$verific$n2256$109 $auto$opt_reduce.cc:134:opt_pmux$1498 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b21.vhd:490$495: { $flatten\P1.$verific$n2257$110 $auto$opt_reduce.cc:134:opt_pmux$1500 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b21.vhd:490$496: { $flatten\P1.$verific$n2258$111 $auto$opt_reduce.cc:134:opt_pmux$1502 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b21.vhd:1000$981: { $flatten\P2.$verific$n2255$611 $auto$opt_reduce.cc:134:opt_pmux$1504 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b21.vhd:1000$922: { $flatten\P2.$verific$n2256$612 $auto$opt_reduce.cc:134:opt_pmux$1506 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b21.vhd:1000$999: { $flatten\P2.$verific$n2257$613 $auto$opt_reduce.cc:134:opt_pmux$1508 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b21.vhd:1000$1000: { $flatten\P2.$verific$n2258$614 $auto$opt_reduce.cc:134:opt_pmux$1510 }
  Optimizing cells in module \b21.
Performed a total of 8 changes.

yosys> opt_merge

3.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_share

3.20. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1456 in front of them:
        $flatten\P1.$verific$i102$b21.vhd:173$443
        $flatten\P1.$verific$i98$b21.vhd:168$442

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1457 in front of them:
        $flatten\P1.$verific$i109$b21.vhd:183$445
        $flatten\P1.$verific$i105$b21.vhd:178$444

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1458 in front of them:
        $flatten\P1.$verific$i116$b21.vhd:193$447
        $flatten\P1.$verific$i113$b21.vhd:188$446

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1459 in front of them:
        $flatten\P1.$verific$i131$b21.vhd:209$449
        $flatten\P1.$verific$i123$b21.vhd:201$448

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1286 in front of them:
        $flatten\P1.$verific$add_664$b21.vhd:498$507
        $flatten\P1.$verific$add_662$b21.vhd:497$505

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1075 in front of them:
        $flatten\P2.$verific$add_664$b21.vhd:1008$1013
        $flatten\P2.$verific$add_662$b21.vhd:1007$1010

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1250 in front of them:
        $flatten\P2.$verific$i102$b21.vhd:683$947
        $flatten\P2.$verific$i98$b21.vhd:678$946

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1251 in front of them:
        $flatten\P2.$verific$i109$b21.vhd:693$949
        $flatten\P2.$verific$i105$b21.vhd:688$948

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1252 in front of them:
        $flatten\P2.$verific$i116$b21.vhd:703$951
        $flatten\P2.$verific$i113$b21.vhd:698$950

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1253 in front of them:
        $flatten\P2.$verific$i131$b21.vhd:719$953
        $flatten\P2.$verific$i123$b21.vhd:711$952


yosys> opt_dff -nosdff -nodffe

3.21. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b21.vhd:1019$1067 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b21.vhd:1019$1069 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b21.vhd:1019$1066 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1065 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b21.vhd:1019$1058 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b21.vhd:509$561 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b21.vhd:509$563 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b21.vhd:509$560 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b21.vhd:509$559 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b21.vhd:509$552 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($aldff) from module b21.

yosys> opt_clean

3.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 31 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.23. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~18 debug messages>

yosys> opt_muxtree

3.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

yosys> opt_reduce

3.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_share

3.27. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1463 in front of them:
        $flatten\P1.$verific$i109$b21.vhd:183$445
        $flatten\P1.$verific$i102$b21.vhd:173$443

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1464 in front of them:
        $flatten\P1.$verific$i131$b21.vhd:209$449
        $flatten\P1.$verific$i116$b21.vhd:193$447

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1257 in front of them:
        $flatten\P2.$verific$i109$b21.vhd:693$949
        $flatten\P2.$verific$i102$b21.vhd:683$947

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1258 in front of them:
        $flatten\P2.$verific$i131$b21.vhd:719$953
        $flatten\P2.$verific$i116$b21.vhd:703$951


yosys> opt_dff -nosdff -nodffe

3.28. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

yosys> opt_reduce

3.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.34. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1467 in front of them:
        $flatten\P1.$verific$i131$b21.vhd:209$449
        $flatten\P1.$verific$i109$b21.vhd:183$445

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1261 in front of them:
        $flatten\P2.$verific$i131$b21.vhd:719$953
        $flatten\P2.$verific$i109$b21.vhd:693$949


yosys> opt_dff -nosdff -nodffe

3.35. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.41. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.42. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 4

yosys> fsm -encoding binary

3.45. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.45.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b21.P1.d.
Found FSM state register b21.P2.d.

yosys> fsm_extract

3.45.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b21'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b21.vhd:509$553
  root of input selection tree: $flatten\P1.$verific$n11472$358
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$204 [0]
  found ctrl input: $flatten\P1.$verific$n10346$175
  found ctrl input: $flatten\P1.$verific$n1405$102
  found ctrl input: $flatten\P1.$verific$n1440$103
  found ctrl input: $flatten\P1.$verific$n1474$104
  found ctrl input: $flatten\P1.$verific$n1475$105
  found ctrl input: $flatten\P1.$verific$n1476$106
  found ctrl input: $flatten\P1.$verific$n1477$107
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.state \P1.B $flatten\P1.$verific$n341$204 [0] $flatten\P1.$verific$n1477$107 $flatten\P1.$verific$n1476$106 $flatten\P1.$verific$n1475$105 $flatten\P1.$verific$n1474$104 $flatten\P1.$verific$n1440$103 $flatten\P1.$verific$n1405$102 $flatten\P1.$verific$n10346$175 }
  ctrl outputs: $flatten\P1.$verific$n11472$358
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3
Extracting FSM `\P2.d' from module `\b21'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b21.vhd:1019$1059
  root of input selection tree: $flatten\P2.$verific$n11479$862
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$707 [0]
  found ctrl input: $flatten\P2.$verific$n10346$678
  found ctrl input: $flatten\P2.$verific$n1405$605
  found ctrl input: $flatten\P2.$verific$n1440$606
  found ctrl input: $flatten\P2.$verific$n1474$607
  found ctrl input: $flatten\P2.$verific$n1475$608
  found ctrl input: $flatten\P2.$verific$n1476$609
  found ctrl input: $flatten\P2.$verific$n1477$610
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.state \P2.B $flatten\P2.$verific$n341$707 [0] $flatten\P2.$verific$n1477$610 $flatten\P2.$verific$n1476$609 $flatten\P2.$verific$n1475$608 $flatten\P2.$verific$n1474$607 $flatten\P2.$verific$n1440$606 $flatten\P2.$verific$n1405$605 $flatten\P2.$verific$n10346$678 }
  ctrl outputs: $flatten\P2.$verific$n11479$862
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3

yosys> fsm_opt

3.45.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1561' from module `\b21'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1559' from module `\b21'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).

yosys> opt_clean

3.45.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.45.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1559' from module `\b21'.
Optimizing FSM `$fsm$\P2.d$1561' from module `\b21'.

yosys> fsm_recode -encoding binary

3.45.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1559' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1561' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.45.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1559' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P1.d$1559 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n10346$175
    1: $flatten\P1.$verific$n1405$102
    2: $flatten\P1.$verific$n1440$103
    3: $flatten\P1.$verific$n1474$104
    4: $flatten\P1.$verific$n1475$105
    5: $flatten\P1.$verific$n1476$106
    6: $flatten\P1.$verific$n1477$107
    7: $flatten\P1.$verific$n341$204 [0]
    8: \P1.B
    9: \P1.state

  Output signals:
    0: $flatten\P1.$verific$n11472$358 [0]
    1: $flatten\P1.$verific$n11472$358 [1]
    2: $flatten\P1.$verific$n11472$358 [2]
    3: $flatten\P1.$verific$n11472$358 [3]
    4: $flatten\P1.$verific$n11472$358 [4]
    5: $flatten\P1.$verific$n11472$358 [5]
    6: $flatten\P1.$verific$n11472$358 [6]
    7: $flatten\P1.$verific$n11472$358 [7]
    8: $flatten\P1.$verific$n11472$358 [8]
    9: $flatten\P1.$verific$n11472$358 [9]
   10: $flatten\P1.$verific$n11472$358 [10]
   11: $flatten\P1.$verific$n11472$358 [11]
   12: $flatten\P1.$verific$n11472$358 [12]
   13: $flatten\P1.$verific$n11472$358 [13]
   14: $flatten\P1.$verific$n11472$358 [14]
   15: $flatten\P1.$verific$n11472$358 [15]
   16: $flatten\P1.$verific$n11472$358 [16]
   17: $flatten\P1.$verific$n11472$358 [17]
   18: $flatten\P1.$verific$n11472$358 [18]
   19: $flatten\P1.$verific$n11472$358 [19]
   20: $flatten\P1.$verific$n11472$358 [20]
   21: $flatten\P1.$verific$n11472$358 [21]
   22: $flatten\P1.$verific$n11472$358 [22]
   23: $flatten\P1.$verific$n11472$358 [23]
   24: $flatten\P1.$verific$n11472$358 [24]
   25: $flatten\P1.$verific$n11472$358 [25]
   26: $flatten\P1.$verific$n11472$358 [26]
   27: $flatten\P1.$verific$n11472$358 [27]
   28: $flatten\P1.$verific$n11472$358 [28]
   29: $flatten\P1.$verific$n11472$358 [29]
   30: $flatten\P1.$verific$n11472$358 [30]
   31: $flatten\P1.$verific$n11472$358 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1561' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P2.d$1561 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n10346$678
    1: $flatten\P2.$verific$n1405$605
    2: $flatten\P2.$verific$n1440$606
    3: $flatten\P2.$verific$n1474$607
    4: $flatten\P2.$verific$n1475$608
    5: $flatten\P2.$verific$n1476$609
    6: $flatten\P2.$verific$n1477$610
    7: $flatten\P2.$verific$n341$707 [0]
    8: \P2.B
    9: \P2.state

  Output signals:
    0: $flatten\P2.$verific$n11479$862 [0]
    1: $flatten\P2.$verific$n11479$862 [1]
    2: $flatten\P2.$verific$n11479$862 [2]
    3: $flatten\P2.$verific$n11479$862 [3]
    4: $flatten\P2.$verific$n11479$862 [4]
    5: $flatten\P2.$verific$n11479$862 [5]
    6: $flatten\P2.$verific$n11479$862 [6]
    7: $flatten\P2.$verific$n11479$862 [7]
    8: $flatten\P2.$verific$n11479$862 [8]
    9: $flatten\P2.$verific$n11479$862 [9]
   10: $flatten\P2.$verific$n11479$862 [10]
   11: $flatten\P2.$verific$n11479$862 [11]
   12: $flatten\P2.$verific$n11479$862 [12]
   13: $flatten\P2.$verific$n11479$862 [13]
   14: $flatten\P2.$verific$n11479$862 [14]
   15: $flatten\P2.$verific$n11479$862 [15]
   16: $flatten\P2.$verific$n11479$862 [16]
   17: $flatten\P2.$verific$n11479$862 [17]
   18: $flatten\P2.$verific$n11479$862 [18]
   19: $flatten\P2.$verific$n11479$862 [19]
   20: $flatten\P2.$verific$n11479$862 [20]
   21: $flatten\P2.$verific$n11479$862 [21]
   22: $flatten\P2.$verific$n11479$862 [22]
   23: $flatten\P2.$verific$n11479$862 [23]
   24: $flatten\P2.$verific$n11479$862 [24]
   25: $flatten\P2.$verific$n11479$862 [25]
   26: $flatten\P2.$verific$n11479$862 [26]
   27: $flatten\P2.$verific$n11479$862 [27]
   28: $flatten\P2.$verific$n11479$862 [28]
   29: $flatten\P2.$verific$n11479$862 [29]
   30: $flatten\P2.$verific$n11479$862 [30]
   31: $flatten\P2.$verific$n11479$862 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

yosys> fsm_map

3.45.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1559' from module `\b21'.
Mapping FSM `$fsm$\P2.d$1561' from module `\b21'.

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

3.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.51. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.52. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n11185$857 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1119 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1138, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1157, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1176, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($adff) from module b21 (D = { $flatten\P2.$auto$bmuxmap.cc:58:execute$1282 [31:29] $flatten\P2.$auto$bmuxmap.cc:58:execute$1235 [124:96] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1065 ($adff) from module b21 (D = $flatten\P2.$verific$n11253$859, Q = \P2.addr).
Adding EN signal on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($adff) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n11178$353 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1325 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1344, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1363, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1382, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($adff) from module b21 (D = { $flatten\P1.$auto$bmuxmap.cc:58:execute$1488 [31:29] $flatten\P1.$auto$bmuxmap.cc:58:execute$1441 [124:96] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$addr_reg$b21.vhd:509$559 ($adff) from module b21 (D = $flatten\P1.$verific$n11246$355, Q = \P1.addr).
Adding EN signal on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($adff) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 48 unused cells and 152 unused wires.
<suppressed ~49 debug messages>

yosys> opt_expr

3.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.55. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

3.56. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

yosys> opt_share

3.58. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.59. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.

yosys> opt_clean

3.60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_muxtree

3.62. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

3.63. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.64. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.65. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.66. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.67. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 3

yosys> wreduce -keepdc

3.69. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_16$b21.vhd:1080$53 ($lt).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_17$b21.vhd:1080$54 ($lt).
Removed top 1 bits (of 8) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2112 ($ne).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$2001 ($adffe).
Removed top 1 bits (of 7) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2114 ($ne).
Removed top 1 bits (of 6) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2116 ($ne).
Removed top 1 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2118 ($ne).
Removed top 1 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2120 ($ne).
Removed top 1 bits (of 2) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2124 ($ne).
Removed top 4 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2130 ($ne).
Removed top 2 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2134 ($ne).
Removed top 4 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2183 ($ne).
Removed top 2 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2187 ($ne).
Removed top 1 bits (of 21) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1077 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1107 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1113 ($mux).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$2127 ($adffe).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 1 bits (of 21) from port Y of cell b21.$flatten\P2.$verific$add_664$b21.vhd:1008$1013 ($add).
Removed top 1 bits (of 2) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2250 ($ne).
Removed top 1 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2246 ($ne).
Removed top 1 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2244 ($ne).
Removed top 1 bits (of 6) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2242 ($ne).
Removed top 1 bits (of 7) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2240 ($ne).
Removed top 1 bits (of 8) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2238 ($ne).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_141$b21.vhd:735$961 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_142$b21.vhd:737$962 ($eq).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_143$b21.vhd:738$963 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_177$b21.vhd:758$974 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_178$b21.vhd:759$975 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_179$b21.vhd:760$976 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_138$b21.vhd:730$958 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_140$b21.vhd:734$960 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_145$b21.vhd:740$965 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_146$b21.vhd:740$966 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_147$b21.vhd:740$967 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_148$b21.vhd:740$968 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_149$b21.vhd:740$969 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_150$b21.vhd:740$970 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_697$b21.vhd:1016$1042 ($mux).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 3 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2042 ($ne).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1786 ($eq).
Removed top 3 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2168 ($ne).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1567 ($eq).
Removed top 20 bits (of 21) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1288 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1313 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1319 ($mux).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 20 bits (of 21) from port Y of cell b21.$flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
Removed top 19 bits (of 20) from port A of cell b21.$flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
Removed top 19 bits (of 20) from port B of cell b21.$flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_141$b21.vhd:225$457 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_142$b21.vhd:227$458 ($eq).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_143$b21.vhd:228$459 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_177$b21.vhd:248$470 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_178$b21.vhd:249$471 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_179$b21.vhd:250$472 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_138$b21.vhd:220$454 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_140$b21.vhd:224$456 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_145$b21.vhd:230$461 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_146$b21.vhd:230$462 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_147$b21.vhd:230$463 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_148$b21.vhd:230$464 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_149$b21.vhd:230$465 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_150$b21.vhd:230$466 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_698$b21.vhd:506$536 ($mux).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_678$b21.vhd:1015$1028 ($mux).
Removed top 19 bits (of 20) from mux cell b21.$auto$opt_share.cc:241:merge_operators$1524 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_679$b21.vhd:505$522 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1120 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1326 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1117 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1118 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1323 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1324 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1107 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1112 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1113 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1115 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1313 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1318 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1319 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1321 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1103 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1109 ($mux).
Removed top 2 bits (of 155) from mux cell b21.$flatten\P2.$verific$select_752$b21.vhd:1000$1000 ($pmux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1309 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1315 ($mux).
Removed top 2 bits (of 155) from mux cell b21.$flatten\P1.$verific$select_752$b21.vhd:490$496 ($pmux).
Removed top 20 bits (of 21) from wire b21.$auto$opt_share.cc:219:merge_operators$1523.
Removed top 1 bits (of 21) from wire b21.$auto$opt_share.cc:219:merge_operators$1526.
Removed top 19 bits (of 20) from wire b21.$auto$rtlil.cc:2466:Mux$1525.
Removed top 22 bits (of 42) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1284.
Removed top 20 bits (of 21) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1287.
Removed top 2 bits (of 256) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1308.
Removed top 3 bits (of 128) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1317.
Removed top 3 bits (of 64) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1322.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1325.
Removed top 2 bits (of 8) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1403.
Removed top 1 bits (of 126) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1441.
Removed top 1 bits (of 2) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1470.
Removed top 2 bits (of 31) from wire b21.$flatten\P1.$verific$n10126$322.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n10755$344.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n11178$353.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n11472$358.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1407$226.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1441$227.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1478$228.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1511$229.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1544$230.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1577$231.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1610$232.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1643$233.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n184$195.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n1987$239.
Removed top 3 bits (of 5) from wire b21.$flatten\P1.$verific$n288$198.
Removed top 5 bits (of 8) from wire b21.$flatten\P1.$verific$n301$200.
Removed top 9 bits (of 13) from wire b21.$flatten\P1.$verific$n318$202.
Removed top 8 bits (of 9) from wire b21.$flatten\P1.$verific$n341$204.
Removed top 2 bits (of 32) from wire b21.$flatten\P1.$verific$n4241$272.
Removed top 1 bits (of 3) from wire b21.$flatten\P1.$verific$n436$208.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n933$223.
Removed top 22 bits (of 42) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1073.
Removed top 1 bits (of 21) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1076.
Removed top 2 bits (of 256) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1102.
Removed top 3 bits (of 128) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1111.
Removed top 31 bits (of 126) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1235.

yosys> peepopt

3.70. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 62 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.72. Executing BMUXMAP pass.

yosys> demuxmap

3.73. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.74. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b21:
  creating $macc model for $flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b21.vhd:470$485 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b21.vhd:501$511 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b21.vhd:980$989 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b21.vhd:1008$1013 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
  creating $macc model for $verific$add_24$b21.vhd:1081$58 ($add).
  creating $macc model for $verific$add_3$b21.vhd:1071$40 ($add).
  creating $macc model for $verific$add_30$b21.vhd:1085$60 ($add).
  creating $alu model for $macc $verific$add_30$b21.vhd:1085$60.
  creating $alu model for $macc $verific$add_3$b21.vhd:1071$40.
  creating $alu model for $macc $verific$add_24$b21.vhd:1081$58.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b21.vhd:663$940.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b21.vhd:872$984.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b21.vhd:757$971.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b21.vhd:1008$1013.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b21.vhd:627$927.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b21.vhd:980$989.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b21.vhd:624$925.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b21.vhd:610$917.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b21.vhd:609$913.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b21.vhd:606$907.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b21.vhd:604$900.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b21.vhd:832$982.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b21.vhd:602$893.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b21.vhd:600$886.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b21.vhd:153$436.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b21.vhd:362$480.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b21.vhd:247$467.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b21.vhd:498$507.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b21.vhd:117$423.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b21.vhd:470$485.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b21.vhd:114$421.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b21.vhd:100$413.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b21.vhd:99$409.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b21.vhd:96$403.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b21.vhd:94$396.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b21.vhd:322$478.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b21.vhd:92$389.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b21.vhd:90$382.
  creating $macc cell for $flatten\P1.$verific$mult_667$b21.vhd:501$511: $auto$alumacc.cc:365:replace_macc$2293
  creating $alu model for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b21.vhd:142$433 ($lt): merged with $flatten\P1.$verific$LessThan_68$b21.vhd:122$429.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b21.vhd:652$937 ($lt): merged with $flatten\P2.$verific$LessThan_68$b21.vhd:632$933.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b21.vhd:1079$48 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b21.vhd:1079$49 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b21.vhd:1080$53 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b21.vhd:1080$54 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b21.vhd:1080$54: $auto$alumacc.cc:485:replace_alu$2306
  creating $alu cell for $verific$LessThan_16$b21.vhd:1080$53: $auto$alumacc.cc:485:replace_alu$2311
  creating $alu cell for $verific$LessThan_12$b21.vhd:1079$49: $auto$alumacc.cc:485:replace_alu$2316
  creating $alu cell for $verific$LessThan_11$b21.vhd:1079$48: $auto$alumacc.cc:485:replace_alu$2321
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944: $auto$alumacc.cc:485:replace_alu$2326
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939: $auto$alumacc.cc:485:replace_alu$2337
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933, $flatten\P2.$verific$LessThan_78$b21.vhd:652$937: $auto$alumacc.cc:485:replace_alu$2348
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879: $auto$alumacc.cc:485:replace_alu$2359
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440: $auto$alumacc.cc:485:replace_alu$2364
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435: $auto$alumacc.cc:485:replace_alu$2375
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429, $flatten\P1.$verific$LessThan_78$b21.vhd:142$433: $auto$alumacc.cc:485:replace_alu$2386
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375: $auto$alumacc.cc:485:replace_alu$2397
  creating $alu cell for $flatten\P1.$verific$add_21$b21.vhd:90$382: $auto$alumacc.cc:485:replace_alu$2402
  creating $alu cell for $flatten\P1.$verific$add_26$b21.vhd:92$389: $auto$alumacc.cc:485:replace_alu$2405
  creating $alu cell for $flatten\P1.$verific$add_283$b21.vhd:322$478: $auto$alumacc.cc:485:replace_alu$2408
  creating $alu cell for $flatten\P1.$verific$add_31$b21.vhd:94$396: $auto$alumacc.cc:485:replace_alu$2411
  creating $alu cell for $flatten\P1.$verific$add_36$b21.vhd:96$403: $auto$alumacc.cc:485:replace_alu$2414
  creating $alu cell for $flatten\P1.$verific$add_39$b21.vhd:99$409: $auto$alumacc.cc:485:replace_alu$2417
  creating $alu cell for $flatten\P1.$verific$add_44$b21.vhd:100$413: $auto$alumacc.cc:485:replace_alu$2420
  creating $alu cell for $flatten\P1.$verific$add_56$b21.vhd:114$421: $auto$alumacc.cc:485:replace_alu$2423
  creating $alu cell for $flatten\P1.$verific$add_570$b21.vhd:470$485: $auto$alumacc.cc:485:replace_alu$2426
  creating $alu cell for $flatten\P1.$verific$add_61$b21.vhd:117$423: $auto$alumacc.cc:485:replace_alu$2429
  creating $alu cell for $flatten\P1.$verific$add_664$b21.vhd:498$507: $auto$alumacc.cc:485:replace_alu$2432
  creating $alu cell for $flatten\P1.$verific$sub_168$b21.vhd:247$467: $auto$alumacc.cc:485:replace_alu$2435
  creating $alu cell for $flatten\P1.$verific$sub_365$b21.vhd:362$480: $auto$alumacc.cc:485:replace_alu$2438
  creating $alu cell for $flatten\P1.$verific$sub_84$b21.vhd:153$436: $auto$alumacc.cc:485:replace_alu$2441
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376: $auto$alumacc.cc:485:replace_alu$2444
  creating $alu cell for $flatten\P2.$verific$add_21$b21.vhd:600$886: $auto$alumacc.cc:485:replace_alu$2447
  creating $alu cell for $flatten\P2.$verific$add_26$b21.vhd:602$893: $auto$alumacc.cc:485:replace_alu$2450
  creating $alu cell for $flatten\P2.$verific$add_283$b21.vhd:832$982: $auto$alumacc.cc:485:replace_alu$2453
  creating $alu cell for $flatten\P2.$verific$add_31$b21.vhd:604$900: $auto$alumacc.cc:485:replace_alu$2456
  creating $alu cell for $flatten\P2.$verific$add_36$b21.vhd:606$907: $auto$alumacc.cc:485:replace_alu$2459
  creating $alu cell for $flatten\P2.$verific$add_39$b21.vhd:609$913: $auto$alumacc.cc:485:replace_alu$2462
  creating $alu cell for $flatten\P2.$verific$add_44$b21.vhd:610$917: $auto$alumacc.cc:485:replace_alu$2465
  creating $alu cell for $flatten\P2.$verific$add_56$b21.vhd:624$925: $auto$alumacc.cc:485:replace_alu$2468
  creating $alu cell for $flatten\P2.$verific$add_570$b21.vhd:980$989: $auto$alumacc.cc:485:replace_alu$2471
  creating $alu cell for $flatten\P2.$verific$add_61$b21.vhd:627$927: $auto$alumacc.cc:485:replace_alu$2474
  creating $alu cell for $flatten\P2.$verific$add_664$b21.vhd:1008$1013: $auto$alumacc.cc:485:replace_alu$2477
  creating $alu cell for $flatten\P2.$verific$sub_168$b21.vhd:757$971: $auto$alumacc.cc:485:replace_alu$2480
  creating $alu cell for $flatten\P2.$verific$sub_365$b21.vhd:872$984: $auto$alumacc.cc:485:replace_alu$2483
  creating $alu cell for $flatten\P2.$verific$sub_84$b21.vhd:663$940: $auto$alumacc.cc:485:replace_alu$2486
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880: $auto$alumacc.cc:485:replace_alu$2489
  creating $alu cell for $verific$add_24$b21.vhd:1081$58: $auto$alumacc.cc:485:replace_alu$2492
  creating $alu cell for $verific$add_3$b21.vhd:1071$40: $auto$alumacc.cc:485:replace_alu$2495
  creating $alu cell for $verific$add_30$b21.vhd:1085$60: $auto$alumacc.cc:485:replace_alu$2498
  created 45 $alu and 1 $macc cells.

yosys> opt_expr

3.75. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.77. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

3.78. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.79. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.80. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.81. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.82. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 4 unused cells and 24 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.83. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_muxtree

3.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

3.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.87. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.88. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.90. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 2

yosys> stat

3.91. Printing statistics.

=== b21 ===

   Number of wires:                629
   Number of wire bits:          12582
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                584
     $adff                          12
     $adffe                         16
     $alu                           45
     $and                           68
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                          214
     $ne                            70
     $not                           27
     $or                             9
     $pmux                          10
     $reduce_and                    20
     $reduce_bool                    2
     $reduce_or                     34
     $xor                            2


yosys> memory -nomap

3.92. Executing MEMORY pass.

yosys> opt_mem

3.92.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.92.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.92.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.92.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.92.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.92.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_share

3.92.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.92.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.92.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_collect

3.92.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.93. Printing statistics.

=== b21 ===

   Number of wires:                629
   Number of wire bits:          12582
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                584
     $adff                          12
     $adffe                         16
     $alu                           45
     $and                           68
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                          214
     $ne                            70
     $not                           27
     $or                             9
     $pmux                          10
     $reduce_and                    20
     $reduce_bool                    2
     $reduce_or                     34
     $xor                            2


yosys> muxpack

3.94. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~199 debug messages>

yosys> opt_clean

3.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> pmuxtree

3.96. Executing PMUXTREE pass.

yosys> muxpack

3.97. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~212 debug messages>

yosys> memory_map

3.98. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.99. Printing statistics.

=== b21 ===

   Number of wires:                673
   Number of wire bits:          15148
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                618
     $adff                          12
     $adffe                         16
     $alu                           45
     $and                           68
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                          236
     $ne                            70
     $not                           37
     $or                            11
     $reduce_and                    20
     $reduce_bool                    2
     $reduce_or                     44
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.100. Executing TECHMAP pass (map to technology primitives).

3.100.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.100.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.100.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:455:run$2259 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$7193_Y
    new assignment: { } = { }.
/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~4921 debug messages>

yosys> stat

3.101. Printing statistics.

=== b21 ===

   Number of wires:               3773
   Number of wire bits:          61328
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16830
     $_AND_                       1800
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     78
     $_MUX_                       9099
     $_NOT_                       1064
     $_OR_                        1732
     $_XOR_                       2143
     adder_carry                   558


yosys> opt_expr

3.102. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~5119 debug messages>

yosys> opt_merge -nomux

3.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~9033 debug messages>
Removed a total of 3011 cells.

yosys> opt_muxtree

3.104. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.105. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.106. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.107. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.108. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.109. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 795 unused cells and 2673 unused wires.
<suppressed ~796 debug messages>

yosys> opt_expr

3.110. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~144 debug messages>

yosys> opt_muxtree

3.111. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.112. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.113. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.114. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.115. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.116. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 2

yosys> opt_expr -full

3.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1310 debug messages>

yosys> techmap -map +/techmap.v

3.119. Executing TECHMAP pass (map to technology primitives).

3.119.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.119.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt_expr

3.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nosdff -nodffe -sat

3.125. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 1

yosys> abc -dff

3.128. Executing ABC pass (technology mapping using ABC).

3.128.1. Summary of detected clock domains:
  794 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2034, arst=\reset, srst={ }
  603 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2053, arst=\reset, srst={ }
  522 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2072, arst=\reset, srst={ }
  165 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  147 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2108, arst=\reset, srst={ }
  547 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2125, arst=\reset, srst={ }
  735 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  138 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2143, arst=\reset, srst={ }
  649 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  98 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2017, arst=\reset, srst={ }
  771 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2160, arst=\reset, srst={ }
  622 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2179, arst=\reset, srst={ }
  523 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2198, arst=\reset, srst={ }
  296 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  148 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2234, arst=\reset, srst={ }
  560 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2251, arst=\reset, srst={ }
  1097 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.128.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2034, asynchronously reset by \reset
Extracted 734 gates and 1023 wires to a netlist network with 288 inputs and 207 outputs.

3.128.2.1. Executing ABC.

3.128.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2053, asynchronously reset by \reset
Extracted 603 gates and 841 wires to a netlist network with 237 inputs and 116 outputs.

3.128.3.1. Executing ABC.

3.128.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2072, asynchronously reset by \reset
Extracted 497 gates and 710 wires to a netlist network with 211 inputs and 71 outputs.

3.128.4.1. Executing ABC.

3.128.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 133 gates and 264 wires to a netlist network with 131 inputs and 94 outputs.

3.128.5.1. Executing ABC.

3.128.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2108, asynchronously reset by \reset
Extracted 147 gates and 204 wires to a netlist network with 57 inputs and 67 outputs.

3.128.6.1. Executing ABC.

3.128.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2125, asynchronously reset by \reset
Extracted 481 gates and 598 wires to a netlist network with 115 inputs and 71 outputs.

3.128.7.1. Executing ABC.

3.128.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 735 gates and 935 wires to a netlist network with 199 inputs and 50 outputs.

3.128.8.1. Executing ABC.

3.128.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2143, asynchronously reset by \reset
Extracted 130 gates and 198 wires to a netlist network with 67 inputs and 40 outputs.

3.128.9.1. Executing ABC.

3.128.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 649 gates and 796 wires to a netlist network with 146 inputs and 48 outputs.

3.128.10.1. Executing ABC.

3.128.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2017, asynchronously reset by \reset
Extracted 94 gates and 136 wires to a netlist network with 41 inputs and 32 outputs.

3.128.11.1. Executing ABC.

3.128.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2160, asynchronously reset by \reset
Extracted 699 gates and 960 wires to a netlist network with 260 inputs and 200 outputs.

3.128.12.1. Executing ABC.

3.128.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2179, asynchronously reset by \reset
Extracted 602 gates and 833 wires to a netlist network with 230 inputs and 117 outputs.

3.128.13.1. Executing ABC.

3.128.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2198, asynchronously reset by \reset
Extracted 494 gates and 708 wires to a netlist network with 212 inputs and 78 outputs.

3.128.14.1. Executing ABC.

3.128.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 264 gates and 486 wires to a netlist network with 222 inputs and 95 outputs.

3.128.15.1. Executing ABC.

3.128.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2234, asynchronously reset by \reset
Extracted 128 gates and 167 wires to a netlist network with 39 inputs and 68 outputs.

3.128.16.1. Executing ABC.

3.128.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2251, asynchronously reset by \reset
Extracted 494 gates and 626 wires to a netlist network with 130 inputs and 78 outputs.

3.128.17.1. Executing ABC.

3.128.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 973 gates and 1258 wires to a netlist network with 283 inputs and 216 outputs.

3.128.18.1. Executing ABC.

yosys> abc -dff

3.129. Executing ABC pass (technology mapping using ABC).

3.129.1. Summary of detected clock domains:
  235 cells in clk=\clock, en=$abc$29240$auto$opt_dff.cc:219:make_patterns_logic$2251, arst=\reset, srst={ }
  973 cells in clk=\clock, en=$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2179, arst=\reset, srst={ }
  803 cells in clk=\clock, en=$abc$26384$auto$opt_dff.cc:219:make_patterns_logic$2160, arst=\reset, srst={ }
  133 cells in clk=\clock, en=$abc$26254$auto$opt_dff.cc:219:make_patterns_logic$2017, arst=\reset, srst={ }
  170 cells in clk=\clock, en=$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  218 cells in clk=\clock, en=$abc$29114$auto$opt_dff.cc:219:make_patterns_logic$2234, arst=\reset, srst={ }
  769 cells in clk=\clock, en=$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2198, arst=\reset, srst={ }
  868 cells in clk=\clock, en=$abc$21623$auto$opt_dff.cc:219:make_patterns_logic$2034, arst=\reset, srst={ }
  980 cells in clk=\clock, en=$abc$22536$auto$opt_dff.cc:219:make_patterns_logic$2053, arst=\reset, srst={ }
  540 cells in clk=\clock, en=$abc$23350$auto$opt_dff.cc:219:make_patterns_logic$2072, arst=\reset, srst={ }
  282 cells in clk=\clock, en=$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  342 cells in clk=\clock, en=$abc$24124$auto$opt_dff.cc:219:make_patterns_logic$2108, arst=\reset, srst={ }
  248 cells in clk=\clock, en=$abc$24249$auto$opt_dff.cc:219:make_patterns_logic$2125, arst=\reset, srst={ }
  140 cells in clk=\clock, en=$abc$25290$auto$opt_dff.cc:219:make_patterns_logic$2143, arst=\reset, srst={ }
  1591 cells in clk=\clock, en=$abc$29434$lo39, arst=\reset, srst={ }
  587 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.129.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29240$auto$opt_dff.cc:219:make_patterns_logic$2251, asynchronously reset by \reset
Extracted 171 gates and 286 wires to a netlist network with 115 inputs and 64 outputs.

3.129.2.1. Executing ABC.

3.129.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2179, asynchronously reset by \reset
Extracted 894 gates and 1158 wires to a netlist network with 264 inputs and 226 outputs.

3.129.3.1. Executing ABC.

3.129.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26384$auto$opt_dff.cc:219:make_patterns_logic$2160, asynchronously reset by \reset
Extracted 784 gates and 1027 wires to a netlist network with 243 inputs and 95 outputs.

3.129.4.1. Executing ABC.

3.129.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26254$auto$opt_dff.cc:219:make_patterns_logic$2017, asynchronously reset by \reset
Extracted 125 gates and 178 wires to a netlist network with 53 inputs and 41 outputs.

3.129.5.1. Executing ABC.

3.129.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 138 gates and 271 wires to a netlist network with 133 inputs and 66 outputs.

3.129.6.1. Executing ABC.

3.129.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29114$auto$opt_dff.cc:219:make_patterns_logic$2234, asynchronously reset by \reset
Extracted 196 gates and 311 wires to a netlist network with 115 inputs and 78 outputs.

3.129.7.1. Executing ABC.

3.129.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2198, asynchronously reset by \reset
Extracted 740 gates and 955 wires to a netlist network with 215 inputs and 107 outputs.

3.129.8.1. Executing ABC.

3.129.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$21623$auto$opt_dff.cc:219:make_patterns_logic$2034, asynchronously reset by \reset
Extracted 837 gates and 1130 wires to a netlist network with 293 inputs and 130 outputs.

3.129.9.1. Executing ABC.

3.129.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$22536$auto$opt_dff.cc:219:make_patterns_logic$2053, asynchronously reset by \reset
Extracted 928 gates and 1165 wires to a netlist network with 237 inputs and 221 outputs.

3.129.10.1. Executing ABC.

3.129.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23350$auto$opt_dff.cc:219:make_patterns_logic$2072, asynchronously reset by \reset
Extracted 540 gates and 722 wires to a netlist network with 182 inputs and 44 outputs.

3.129.11.1. Executing ABC.

3.129.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 250 gates and 475 wires to a netlist network with 225 inputs and 66 outputs.

3.129.12.1. Executing ABC.

3.129.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$24124$auto$opt_dff.cc:219:make_patterns_logic$2108, asynchronously reset by \reset
Extracted 282 gates and 452 wires to a netlist network with 170 inputs and 86 outputs.

3.129.13.1. Executing ABC.

3.129.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$24249$auto$opt_dff.cc:219:make_patterns_logic$2125, asynchronously reset by \reset
Extracted 184 gates and 300 wires to a netlist network with 116 inputs and 69 outputs.

3.129.14.1. Executing ABC.

3.129.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$25290$auto$opt_dff.cc:219:make_patterns_logic$2143, asynchronously reset by \reset
Extracted 138 gates and 208 wires to a netlist network with 70 inputs and 41 outputs.

3.129.15.1. Executing ABC.

3.129.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29434$lo39, asynchronously reset by \reset
Extracted 1591 gates and 1881 wires to a netlist network with 290 inputs and 102 outputs.

3.129.16.1. Executing ABC.

3.129.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 523 gates and 699 wires to a netlist network with 176 inputs and 207 outputs.

3.129.17.1. Executing ABC.

yosys> abc -dff

3.130. Executing ABC pass (technology mapping using ABC).

3.130.1. Summary of detected clock domains:
  243 cells in clk=\clock, en=$abc$36295$abc$24249$auto$opt_dff.cc:219:make_patterns_logic$2125, arst=\reset, srst={ }
  237 cells in clk=\clock, en=$abc$30167$abc$29240$auto$opt_dff.cc:219:make_patterns_logic$2251, arst=\reset, srst={ }
  957 cells in clk=\clock, en=$abc$33395$abc$21623$auto$opt_dff.cc:219:make_patterns_logic$2034, arst=\reset, srst={ }
  349 cells in clk=\clock, en=$abc$36008$abc$24124$auto$opt_dff.cc:219:make_patterns_logic$2108, arst=\reset, srst={ }
  139 cells in clk=\clock, en=$abc$36472$abc$25290$auto$opt_dff.cc:219:make_patterns_logic$2143, arst=\reset, srst={ }
  825 cells in clk=\clock, en=$abc$30336$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2179, arst=\reset, srst={ }
  939 cells in clk=\clock, en=$abc$31223$abc$26384$auto$opt_dff.cc:219:make_patterns_logic$2160, arst=\reset, srst={ }
  138 cells in clk=\clock, en=$abc$32124$abc$26254$auto$opt_dff.cc:219:make_patterns_logic$2017, arst=\reset, srst={ }
  283 cells in clk=\clock, en=$abc$35758$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  208 cells in clk=\clock, en=$abc$32390$abc$29114$auto$opt_dff.cc:219:make_patterns_logic$2234, arst=\reset, srst={ }
  564 cells in clk=\clock, en=$abc$35183$abc$23350$auto$opt_dff.cc:219:make_patterns_logic$2072, arst=\reset, srst={ }
  837 cells in clk=\clock, en=$abc$34235$abc$22536$auto$opt_dff.cc:219:make_patterns_logic$2053, arst=\reset, srst={ }
  890 cells in clk=\clock, en=$abc$32605$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2198, arst=\reset, srst={ }
  175 cells in clk=\clock, en=$abc$32249$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  1642 cells in clk=\clock, en=$abc$38264$lo39, arst=\reset, srst={ }
  581 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.130.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36295$abc$24249$auto$opt_dff.cc:219:make_patterns_logic$2125, asynchronously reset by \reset
Extracted 179 gates and 295 wires to a netlist network with 116 inputs and 70 outputs.

3.130.2.1. Executing ABC.

3.130.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$30167$abc$29240$auto$opt_dff.cc:219:make_patterns_logic$2251, asynchronously reset by \reset
Extracted 173 gates and 287 wires to a netlist network with 114 inputs and 67 outputs.

3.130.3.1. Executing ABC.

3.130.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$33395$abc$21623$auto$opt_dff.cc:219:make_patterns_logic$2034, asynchronously reset by \reset
Extracted 906 gates and 1196 wires to a netlist network with 290 inputs and 178 outputs.

3.130.4.1. Executing ABC.

3.130.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36008$abc$24124$auto$opt_dff.cc:219:make_patterns_logic$2108, asynchronously reset by \reset
Extracted 289 gates and 457 wires to a netlist network with 168 inputs and 85 outputs.

3.130.5.1. Executing ABC.

3.130.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36472$abc$25290$auto$opt_dff.cc:219:make_patterns_logic$2143, asynchronously reset by \reset
Extracted 136 gates and 201 wires to a netlist network with 65 inputs and 44 outputs.

3.130.6.1. Executing ABC.

3.130.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$30336$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2179, asynchronously reset by \reset
Extracted 792 gates and 1042 wires to a netlist network with 250 inputs and 141 outputs.

3.130.7.1. Executing ABC.

3.130.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31223$abc$26384$auto$opt_dff.cc:219:make_patterns_logic$2160, asynchronously reset by \reset
Extracted 915 gates and 1158 wires to a netlist network with 243 inputs and 99 outputs.

3.130.8.1. Executing ABC.

3.130.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32124$abc$26254$auto$opt_dff.cc:219:make_patterns_logic$2017, asynchronously reset by \reset
Extracted 130 gates and 189 wires to a netlist network with 59 inputs and 35 outputs.

3.130.9.1. Executing ABC.

3.130.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$35758$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 251 gates and 478 wires to a netlist network with 227 inputs and 69 outputs.

3.130.10.1. Executing ABC.

3.130.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32390$abc$29114$auto$opt_dff.cc:219:make_patterns_logic$2234, asynchronously reset by \reset
Extracted 186 gates and 298 wires to a netlist network with 112 inputs and 79 outputs.

3.130.11.1. Executing ABC.

3.130.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$35183$abc$23350$auto$opt_dff.cc:219:make_patterns_logic$2072, asynchronously reset by \reset
Extracted 564 gates and 767 wires to a netlist network with 203 inputs and 48 outputs.

3.130.12.1. Executing ABC.

3.130.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$34235$abc$22536$auto$opt_dff.cc:219:make_patterns_logic$2053, asynchronously reset by \reset
Extracted 815 gates and 1022 wires to a netlist network with 207 inputs and 146 outputs.

3.130.13.1. Executing ABC.

3.130.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32605$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2198, asynchronously reset by \reset
Extracted 821 gates and 1042 wires to a netlist network with 221 inputs and 145 outputs.

3.130.14.1. Executing ABC.

3.130.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32249$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 143 gates and 278 wires to a netlist network with 135 inputs and 68 outputs.

3.130.15.1. Executing ABC.

3.130.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38264$lo39, asynchronously reset by \reset
Extracted 1632 gates and 1943 wires to a netlist network with 311 inputs and 126 outputs.

3.130.16.1. Executing ABC.

3.130.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 517 gates and 686 wires to a netlist network with 169 inputs and 208 outputs.

3.130.17.1. Executing ABC.

yosys> abc -dff

3.131. Executing ABC pass (technology mapping using ABC).

3.131.1. Summary of detected clock domains:
  233 cells in clk=\clock, en=$abc$38786$abc$36295$abc$24249$auto$opt_dff.cc:219:make_patterns_logic$2125, arst=\reset, srst={ }
  1594 cells in clk=\clock, en=$abc$46788$lo39, arst=\reset, srst={ }
  232 cells in clk=\clock, en=$abc$38962$abc$30167$abc$29240$auto$opt_dff.cc:219:make_patterns_logic$2251, arst=\reset, srst={ }
  909 cells in clk=\clock, en=$abc$39134$abc$33395$abc$21623$auto$opt_dff.cc:219:make_patterns_logic$2034, arst=\reset, srst={ }
  137 cells in clk=\clock, en=$abc$40329$abc$36472$abc$25290$auto$opt_dff.cc:219:make_patterns_logic$2143, arst=\reset, srst={ }
  784 cells in clk=\clock, en=$abc$40464$abc$30336$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2179, arst=\reset, srst={ }
  130 cells in clk=\clock, en=$abc$42177$abc$32124$abc$26254$auto$opt_dff.cc:219:make_patterns_logic$2017, arst=\reset, srst={ }
  171 cells in clk=\clock, en=$abc$42302$abc$35758$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  957 cells in clk=\clock, en=$abc$41309$abc$31223$abc$26384$auto$opt_dff.cc:219:make_patterns_logic$2160, arst=\reset, srst={ }
  914 cells in clk=\clock, en=$abc$43352$abc$34235$abc$22536$auto$opt_dff.cc:219:make_patterns_logic$2053, arst=\reset, srst={ }
  284 cells in clk=\clock, en=$abc$45048$abc$32249$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  341 cells in clk=\clock, en=$abc$40038$abc$36008$abc$24124$auto$opt_dff.cc:219:make_patterns_logic$2108, arst=\reset, srst={ }
  219 cells in clk=\clock, en=$abc$42554$abc$32390$abc$29114$auto$opt_dff.cc:219:make_patterns_logic$2234, arst=\reset, srst={ }
  549 cells in clk=\clock, en=$abc$42774$abc$35183$abc$23350$auto$opt_dff.cc:219:make_patterns_logic$2072, arst=\reset, srst={ }
  894 cells in clk=\clock, en=$abc$44188$abc$32605$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2198, arst=\reset, srst={ }
  565 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.131.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38786$abc$36295$abc$24249$auto$opt_dff.cc:219:make_patterns_logic$2125, asynchronously reset by \reset
Extracted 169 gates and 281 wires to a netlist network with 112 inputs and 65 outputs.

3.131.2.1. Executing ABC.

3.131.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46788$lo39, asynchronously reset by \reset
Extracted 1594 gates and 1899 wires to a netlist network with 305 inputs and 123 outputs.

3.131.3.1. Executing ABC.

3.131.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38962$abc$30167$abc$29240$auto$opt_dff.cc:219:make_patterns_logic$2251, asynchronously reset by \reset
Extracted 168 gates and 283 wires to a netlist network with 115 inputs and 64 outputs.

3.131.4.1. Executing ABC.

3.131.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$39134$abc$33395$abc$21623$auto$opt_dff.cc:219:make_patterns_logic$2034, asynchronously reset by \reset
Extracted 875 gates and 1133 wires to a netlist network with 258 inputs and 174 outputs.

3.131.5.1. Executing ABC.

3.131.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$40329$abc$36472$abc$25290$auto$opt_dff.cc:219:make_patterns_logic$2143, asynchronously reset by \reset
Extracted 129 gates and 193 wires to a netlist network with 64 inputs and 42 outputs.

3.131.6.1. Executing ABC.

3.131.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$40464$abc$30336$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2179, asynchronously reset by \reset
Extracted 758 gates and 999 wires to a netlist network with 241 inputs and 100 outputs.

3.131.7.1. Executing ABC.

3.131.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42177$abc$32124$abc$26254$auto$opt_dff.cc:219:make_patterns_logic$2017, asynchronously reset by \reset
Extracted 122 gates and 179 wires to a netlist network with 57 inputs and 35 outputs.

3.131.8.1. Executing ABC.

3.131.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42302$abc$35758$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 139 gates and 275 wires to a netlist network with 136 inputs and 67 outputs.

3.131.9.1. Executing ABC.

3.131.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$41309$abc$31223$abc$26384$auto$opt_dff.cc:219:make_patterns_logic$2160, asynchronously reset by \reset
Extracted 917 gates and 1176 wires to a netlist network with 259 inputs and 159 outputs.

3.131.10.1. Executing ABC.

3.131.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$43352$abc$34235$abc$22536$auto$opt_dff.cc:219:make_patterns_logic$2053, asynchronously reset by \reset
Extracted 865 gates and 1117 wires to a netlist network with 252 inputs and 176 outputs.

3.131.11.1. Executing ABC.

3.131.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$45048$abc$32249$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 252 gates and 478 wires to a netlist network with 226 inputs and 68 outputs.

3.131.12.1. Executing ABC.

3.131.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$40038$abc$36008$abc$24124$auto$opt_dff.cc:219:make_patterns_logic$2108, asynchronously reset by \reset
Extracted 281 gates and 450 wires to a netlist network with 169 inputs and 85 outputs.

3.131.13.1. Executing ABC.

3.131.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42554$abc$32390$abc$29114$auto$opt_dff.cc:219:make_patterns_logic$2234, asynchronously reset by \reset
Extracted 197 gates and 307 wires to a netlist network with 110 inputs and 77 outputs.

3.131.14.1. Executing ABC.

3.131.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42774$abc$35183$abc$23350$auto$opt_dff.cc:219:make_patterns_logic$2072, asynchronously reset by \reset
Extracted 549 gates and 736 wires to a netlist network with 187 inputs and 47 outputs.

3.131.15.1. Executing ABC.

3.131.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$44188$abc$32605$abc$29434$auto$opt_dff.cc:219:make_patterns_logic$2198, asynchronously reset by \reset
Extracted 839 gates and 1068 wires to a netlist network with 229 inputs and 138 outputs.

3.131.16.1. Executing ABC.

3.131.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 501 gates and 668 wires to a netlist network with 167 inputs and 206 outputs.

3.131.17.1. Executing ABC.

yosys> opt_ffinv

3.132. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt_expr

3.133. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~442 debug messages>

yosys> opt_merge -nomux

3.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~681 debug messages>
Removed a total of 227 cells.

yosys> opt_muxtree

3.135. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.136. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.137. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.138. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $abc$47466$auto$blifparse.cc:381:parse_blif$48437 in front of them:
        $abc$47466$auto$blifparse.cc:381:parse_blif$48435
        $abc$47466$auto$blifparse.cc:381:parse_blif$48436


yosys> opt_dff -nosdff -sat

3.139. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 1 unused cells and 39882 unused wires.
<suppressed ~23 debug messages>

yosys> opt_expr

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1 debug messages>

yosys> opt_muxtree

3.142. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.143. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.144. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.145. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -sat

3.146. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 2

yosys> bmuxmap

3.149. Executing BMUXMAP pass.

yosys> demuxmap

3.150. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /tmp/yosys_dvI7ec/abc_tmp_1.scr

3.151. Executing ABC pass (technology mapping using ABC).

3.151.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 7745 gates and 8610 wires to a netlist network with 865 inputs and 911 outputs.

3.151.1.1. Executing ABC.
DE:   #PIs = 865  #Luts =  2516  Max Lvl =  37  Avg Lvl =  10.16  [   0.37 sec. at Pass 0]
DE:   #PIs = 865  #Luts =  1938  Max Lvl =  34  Avg Lvl =   9.98  [  19.64 sec. at Pass 1]
DE:   #PIs = 865  #Luts =  1886  Max Lvl =  29  Avg Lvl =   9.37  [   3.24 sec. at Pass 2]
DE:   #PIs = 865  #Luts =  1832  Max Lvl =  25  Avg Lvl =   8.77  [   5.59 sec. at Pass 3]
DE:   #PIs = 865  #Luts =  1791  Max Lvl =  25  Avg Lvl =   8.81  [   4.05 sec. at Pass 4]
DE:   #PIs = 865  #Luts =  1738  Max Lvl =  26  Avg Lvl =   8.94  [   7.97 sec. at Pass 5]
DE:   #PIs = 865  #Luts =  1731  Max Lvl =  24  Avg Lvl =   8.99  [   4.73 sec. at Pass 6]
DE:   #PIs = 865  #Luts =  1707  Max Lvl =  24  Avg Lvl =   9.14  [   5.92 sec. at Pass 7]
DE:   #PIs = 865  #Luts =  1693  Max Lvl =  25  Avg Lvl =   9.13  [   4.51 sec. at Pass 8]
DE:   #PIs = 865  #Luts =  1678  Max Lvl =  23  Avg Lvl =   9.02  [   5.88 sec. at Pass 9]
DE:   #PIs = 865  #Luts =  1674  Max Lvl =  24  Avg Lvl =   9.03  [   6.10 sec. at Pass 10]
DE:   #PIs = 865  #Luts =  1663  Max Lvl =  27  Avg Lvl =   9.59  [   4.98 sec. at Pass 11]
DE:   #PIs = 865  #Luts =  1656  Max Lvl =  24  Avg Lvl =   8.98  [   3.44 sec. at Pass 12]
DE:   #PIs = 865  #Luts =  1638  Max Lvl =  24  Avg Lvl =   8.92  [   7.69 sec. at Pass 13]
DE:   #PIs = 865  #Luts =  1627  Max Lvl =  25  Avg Lvl =   9.36  [   4.68 sec. at Pass 14]
DE:   #PIs = 865  #Luts =  1622  Max Lvl =  25  Avg Lvl =   9.52  [   4.70 sec. at Pass 15]
DE:   #PIs = 865  #Luts =  1614  Max Lvl =  24  Avg Lvl =   9.44  [   3.21 sec. at Pass 16]
DE:   #PIs = 865  #Luts =  1609  Max Lvl =  27  Avg Lvl =   9.71  [   4.17 sec. at Pass 17]
DE:   #PIs = 865  #Luts =  1607  Max Lvl =  26  Avg Lvl =   9.54  [   2.49 sec. at Pass 18]
DE:   #PIs = 865  #Luts =  1602  Max Lvl =  24  Avg Lvl =   9.28  [   4.36 sec. at Pass 19]
DE:   #PIs = 865  #Luts =  1597  Max Lvl =  25  Avg Lvl =   9.71  [   2.37 sec. at Pass 20]
DE:   #PIs = 865  #Luts =  1594  Max Lvl =  24  Avg Lvl =   9.65  [   3.31 sec. at Pass 21]
DE:   #PIs = 865  #Luts =  1594  Max Lvl =  24  Avg Lvl =   9.65  [   0.72 sec. at Pass 22]

yosys> opt_expr

3.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce

3.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.157. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.158. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8373 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.161. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.162. Printing statistics.

=== b21 ===

   Number of wires:               1513
   Number of wire bits:           3640
   Number of public wires:          21
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2542
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1555
     $mux                            1
     adder_carry                   558


yosys> shregmap -minlen 8 -maxlen 20

3.163. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.164. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.165. Printing statistics.

=== b21 ===

   Number of wires:               1513
   Number of wire bits:           3640
   Number of public wires:          21
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2542
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1555
     $mux                            1
     adder_carry                   558


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.166. Executing TECHMAP pass (map to technology primitives).

3.166.1. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.166.2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/nfs_scratch/scratch/Vorak/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.166.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $mux.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2548 debug messages>

yosys> opt_expr -mux_undef

3.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~30687 debug messages>

yosys> simplemap

3.168. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge

3.170. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~13656 debug messages>
Removed a total of 4552 cells.

yosys> opt_dff -nodffe -nosdff

3.171. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.172. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5581 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.173. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1222 debug messages>

yosys> opt_merge -nomux

3.174. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

yosys> opt_muxtree

3.175. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.176. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.177. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.178. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.179. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.180. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 439 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.181. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 1

yosys> abc -script /tmp/yosys_dvI7ec/abc_tmp_2.scr

3.182. Executing ABC pass (technology mapping using ABC).

3.182.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 5258 gates and 6120 wires to a netlist network with 860 inputs and 872 outputs.

3.182.1.1. Executing ABC.
DE:   #PIs = 860  #Luts =  1560  Max Lvl =  24  Avg Lvl =   9.59  [   0.18 sec. at Pass 0]
DE:   #PIs = 860  #Luts =  1559  Max Lvl =  26  Avg Lvl =   8.71  [   7.93 sec. at Pass 1]
DE:   #PIs = 860  #Luts =  1544  Max Lvl =  26  Avg Lvl =   8.96  [   1.36 sec. at Pass 2]
DE:   #PIs = 860  #Luts =  1537  Max Lvl =  27  Avg Lvl =   9.12  [   2.03 sec. at Pass 3]
DE:   #PIs = 860  #Luts =  1531  Max Lvl =  26  Avg Lvl =   9.05  [   1.53 sec. at Pass 4]
DE:   #PIs = 860  #Luts =  1525  Max Lvl =  26  Avg Lvl =   9.04  [   2.21 sec. at Pass 5]
DE:   #PIs = 860  #Luts =  1524  Max Lvl =  25  Avg Lvl =   9.36  [   1.54 sec. at Pass 6]
DE:   #PIs = 860  #Luts =  1512  Max Lvl =  27  Avg Lvl =   9.21  [   2.59 sec. at Pass 7]
DE:   #PIs = 860  #Luts =  1512  Max Lvl =  27  Avg Lvl =   9.21  [   2.07 sec. at Pass 8]
DE:   #PIs = 860  #Luts =  1507  Max Lvl =  26  Avg Lvl =   9.30  [   3.10 sec. at Pass 9]
DE:   #PIs = 860  #Luts =  1507  Max Lvl =  26  Avg Lvl =   9.30  [   2.86 sec. at Pass 10]
DE:   #PIs = 860  #Luts =  1502  Max Lvl =  24  Avg Lvl =   8.75  [   3.58 sec. at Pass 11]
DE:   #PIs = 860  #Luts =  1496  Max Lvl =  24  Avg Lvl =   8.78  [   2.50 sec. at Pass 12]
DE:   #PIs = 860  #Luts =  1492  Max Lvl =  26  Avg Lvl =   9.21  [   3.82 sec. at Pass 13]
DE:   #PIs = 860  #Luts =  1489  Max Lvl =  24  Avg Lvl =   8.89  [   2.38 sec. at Pass 14]
DE:   #PIs = 860  #Luts =  1486  Max Lvl =  25  Avg Lvl =   8.27  [   2.73 sec. at Pass 15]
DE:   #PIs = 860  #Luts =  1486  Max Lvl =  25  Avg Lvl =   8.27  [   3.87 sec. at Pass 16]
DE:   #PIs = 860  #Luts =  1482  Max Lvl =  26  Avg Lvl =   8.98  [   5.34 sec. at Pass 17]
DE:   #PIs = 860  #Luts =  1480  Max Lvl =  26  Avg Lvl =   9.11  [   3.74 sec. at Pass 18]
DE:   #PIs = 860  #Luts =  1475  Max Lvl =  28  Avg Lvl =   9.34  [   3.89 sec. at Pass 19]
DE:   #PIs = 860  #Luts =  1475  Max Lvl =  28  Avg Lvl =   9.34  [   2.63 sec. at Pass 20]
DE:   #PIs = 860  #Luts =  1474  Max Lvl =  26  Avg Lvl =   9.24  [   2.75 sec. at Pass 21]
DE:   #PIs = 860  #Luts =  1470  Max Lvl =  29  Avg Lvl =   9.45  [   1.99 sec. at Pass 22]
DE:   #PIs = 860  #Luts =  1467  Max Lvl =  27  Avg Lvl =   9.49  [   2.38 sec. at Pass 23]
DE:   #PIs = 860  #Luts =  1467  Max Lvl =  27  Avg Lvl =   9.49  [   1.94 sec. at Pass 24]
DE:   #PIs = 860  #Luts =  1463  Max Lvl =  28  Avg Lvl =   9.79  [   2.34 sec. at Pass 25]
DE:   #PIs = 860  #Luts =  1462  Max Lvl =  26  Avg Lvl =   9.21  [   1.97 sec. at Pass 26]
DE:   #PIs = 860  #Luts =  1457  Max Lvl =  27  Avg Lvl =   9.71  [   2.60 sec. at Pass 27]
DE:   #PIs = 860  #Luts =  1457  Max Lvl =  25  Avg Lvl =   9.48  [   2.74 sec. at Pass 28]
DE:   #PIs = 860  #Luts =  1453  Max Lvl =  27  Avg Lvl =   9.26  [   3.18 sec. at Pass 29]
DE:   #PIs = 860  #Luts =  1453  Max Lvl =  27  Avg Lvl =   9.26  [   3.13 sec. at Pass 30]
DE:   #PIs = 860  #Luts =  1452  Max Lvl =  25  Avg Lvl =   8.96  [   3.58 sec. at Pass 31]
DE:   #PIs = 860  #Luts =  1448  Max Lvl =  27  Avg Lvl =   9.43  [   2.75 sec. at Pass 32]
DE:   #PIs = 860  #Luts =  1447  Max Lvl =  28  Avg Lvl =   9.50  [   2.76 sec. at Pass 33]
DE:   #PIs = 860  #Luts =  1447  Max Lvl =  27  Avg Lvl =   9.52  [   1.68 sec. at Pass 34]
DE:   #PIs = 860  #Luts =  1447  Max Lvl =  26  Avg Lvl =   9.47  [   1.94 sec. at Pass 35]
DE:   #PIs = 860  #Luts =  1446  Max Lvl =  25  Avg Lvl =   9.45  [   1.65 sec. at Pass 36]
DE:   #PIs = 860  #Luts =  1446  Max Lvl =  25  Avg Lvl =   9.45  [   1.98 sec. at Pass 37]
DE:   #PIs = 860  #Luts =  1446  Max Lvl =  25  Avg Lvl =   9.45  [   2.04 sec. at Pass 38]
DE:   #PIs = 860  #Luts =  1446  Max Lvl =  25  Avg Lvl =   9.45  [   2.56 sec. at Pass 39]
DE:   #PIs = 860  #Luts =  1446  Max Lvl =  25  Avg Lvl =   9.45  [   0.48 sec. at Pass 40]

yosys> opt_expr

3.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.185. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.186. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.187. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.188. Executing OPT_SHARE pass.

yosys> opt_dff -nosdff -nodffe

3.189. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.190. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5135 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.192. Executing HIERARCHY pass (managing design hierarchy).

3.192.1. Analyzing design hierarchy..
Top module:  \b21

3.192.2. Analyzing design hierarchy..
Top module:  \b21
Removed 0 unused modules.

yosys> stat

3.193. Printing statistics.

=== b21 ===

   Number of wires:               1402
   Number of wire bits:           3529
   Number of public wires:          21
   Number of public wire bits:     326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2432
     $lut                         1446
     adder_carry                   558
     dffsre                        428


yosys> opt_clean -purge

3.194. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8 unused wires.
<suppressed ~8 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.195. Executing Verilog backend.
Dumping module `\b21'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 893c22b792, CPU: user 33.87s system 0.19s, MEM: 125.64 MB peak
Yosys 0.18+10 (git sha1 a3cbfccc4, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os)
Time spent: 98% 6x abc (1615 sec), 0% 25x opt_dff (10 sec), ...
real 298.98
user 1511.86
sys 133.66
