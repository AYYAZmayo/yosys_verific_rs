
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.50
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b21.vhd

yosys> verific -vhdl b21.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b21.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] b21.vhd:5: analyzing entity 'b14'
VERIFIC-INFO [VHDL-1010] b21.vhd:15: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:515: analyzing entity 'b14_1'
VERIFIC-INFO [VHDL-1010] b21.vhd:525: analyzing architecture 'behav'
VERIFIC-INFO [VHDL-1012] b21.vhd:1026: analyzing entity 'b21'
VERIFIC-INFO [VHDL-1010] b21.vhd:1034: analyzing architecture 'behav'

yosys> synth_rs -top b21 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.59

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b21

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b21.vhd:1026: processing 'b21(BEHAV)'
VERIFIC-INFO [VHDL-1067] b21.vhd:5: processing 'b14(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:482: 'others' clause is never selected
VERIFIC-INFO [VHDL-1067] b21.vhd:515: processing 'b14_1(BEHAV)'
VERIFIC-INFO [VHDL-1172] b21.vhd:992: 'others' clause is never selected
Importing module b21.
Importing module b14(BEHAV).
Importing module b14_1(BEHAV).

3.3.1. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)

3.3.2. Analyzing design hierarchy..
Top module:  \b21
Used module:     \b14_1(BEHAV)
Used module:     \b14(BEHAV)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b14_1(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b14(BEHAV).
<suppressed ~26 debug messages>
Optimizing module b21.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module b14(BEHAV).
Deleting now unused module b14_1(BEHAV).
<suppressed ~2 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~122 debug messages>

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 26 unused cells and 448 unused wires.
<suppressed ~125 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module b21...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\P1.$verific$i684$b21.vhd:505$524.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_672$b21.vhd:505$515.
    dead port 2/2 on $mux $flatten\P1.$verific$mux_685$b21.vhd:505$526.
    dead port 2/2 on $mux $flatten\P2.$verific$i683$b21.vhd:1015$1030.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_671$b21.vhd:1015$1021.
    dead port 2/2 on $mux $flatten\P2.$verific$mux_684$b21.vhd:1015$1032.
Removed 6 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_746$b21.vhd:490$477: { $flatten\P1.$verific$n2255$108 $auto$opt_reduce.cc:134:opt_pmux$1496 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_750$b21.vhd:490$418: { $flatten\P1.$verific$n2256$109 $auto$opt_reduce.cc:134:opt_pmux$1498 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_751$b21.vhd:490$495: { $flatten\P1.$verific$n2257$110 $auto$opt_reduce.cc:134:opt_pmux$1500 }
    New ctrl vector for $pmux cell $flatten\P1.$verific$select_752$b21.vhd:490$496: { $flatten\P1.$verific$n2258$111 $auto$opt_reduce.cc:134:opt_pmux$1502 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_746$b21.vhd:1000$981: { $flatten\P2.$verific$n2255$611 $auto$opt_reduce.cc:134:opt_pmux$1504 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_750$b21.vhd:1000$922: { $flatten\P2.$verific$n2256$612 $auto$opt_reduce.cc:134:opt_pmux$1506 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_751$b21.vhd:1000$999: { $flatten\P2.$verific$n2257$613 $auto$opt_reduce.cc:134:opt_pmux$1508 }
    New ctrl vector for $pmux cell $flatten\P2.$verific$select_752$b21.vhd:1000$1000: { $flatten\P2.$verific$n2258$614 $auto$opt_reduce.cc:134:opt_pmux$1510 }
  Optimizing cells in module \b21.
Performed a total of 8 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\P2.$verific$wr_reg$b21.vhd:1019$1067 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$state_reg$b21.vhd:1019$1069 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$rd_reg$b21.vhd:1019$1066 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1065 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$IR_reg$b21.vhd:1019$1058 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$wr_reg$b21.vhd:509$561 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$state_reg$b21.vhd:509$563 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$rd_reg$b21.vhd:509$560 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$addr_reg$b21.vhd:509$559 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$IR_reg$b21.vhd:509$552 ($aldff) from module b21.
Changing const-value async load to async reset on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($aldff) from module b21.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~8 debug messages>

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register b21.P1.d.
Found FSM state register b21.P2.d.

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\P1.d' from module `\b21'.
  found $adff cell for state register: $flatten\P1.$verific$d_reg$b21.vhd:509$553
  root of input selection tree: $flatten\P1.$verific$n11472$358
  found reset state: 0 (from async reset)
  found ctrl input: \P1.state
  found ctrl input: $flatten\P1.$verific$n341$204 [0]
  found ctrl input: $flatten\P1.$verific$n10346$175
  found ctrl input: $flatten\P1.$verific$n1405$102
  found ctrl input: $flatten\P1.$verific$n1440$103
  found ctrl input: $flatten\P1.$verific$n1474$104
  found ctrl input: $flatten\P1.$verific$n1475$105
  found ctrl input: $flatten\P1.$verific$n1476$106
  found ctrl input: $flatten\P1.$verific$n1477$107
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P1.B
  ctrl inputs: { \P1.state \P1.B $flatten\P1.$verific$n341$204 [0] $flatten\P1.$verific$n1477$107 $flatten\P1.$verific$n1476$106 $flatten\P1.$verific$n1475$105 $flatten\P1.$verific$n1474$104 $flatten\P1.$verific$n1440$103 $flatten\P1.$verific$n1405$102 $flatten\P1.$verific$n10346$175 }
  ctrl outputs: $flatten\P1.$verific$n11472$358
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3
Extracting FSM `\P2.d' from module `\b21'.
  found $adff cell for state register: $flatten\P2.$verific$d_reg$b21.vhd:1019$1059
  root of input selection tree: $flatten\P2.$verific$n11479$862
  found reset state: 0 (from async reset)
  found ctrl input: \P2.state
  found ctrl input: $flatten\P2.$verific$n341$707 [0]
  found ctrl input: $flatten\P2.$verific$n10346$678
  found ctrl input: $flatten\P2.$verific$n1405$605
  found ctrl input: $flatten\P2.$verific$n1440$606
  found ctrl input: $flatten\P2.$verific$n1474$607
  found ctrl input: $flatten\P2.$verific$n1475$608
  found ctrl input: $flatten\P2.$verific$n1476$609
  found ctrl input: $flatten\P2.$verific$n1477$610
  found state code: 1
  found state code: 2
  found state code: 3
  found ctrl input: \P2.B
  ctrl inputs: { \P2.state \P2.B $flatten\P2.$verific$n341$707 [0] $flatten\P2.$verific$n1477$610 $flatten\P2.$verific$n1476$609 $flatten\P2.$verific$n1475$608 $flatten\P2.$verific$n1474$607 $flatten\P2.$verific$n1440$606 $flatten\P2.$verific$n1405$605 $flatten\P2.$verific$n10346$678 }
  ctrl outputs: $flatten\P2.$verific$n11479$862
  transition:          0 10'0--------- ->          0 0
  transition:          0 10'1-00000000 ->          0 0
  transition:          0 10'1-01000000 ->          0 0
  transition:          0 10'1-0-100000 ->          1 1
  transition:          0 10'1-0--10000 ->          2 2
  transition:          0 10'1-0---1000 ->          3 3
  transition:          0 10'100----100 ->          0 0
  transition:          0 10'110----100 ->          3 3
  transition:          0 10'100-----10 ->          3 3
  transition:          0 10'110-----10 ->          0 0
  transition:          0 10'1-0------1 ->          0 0
  transition:          0 10'1-1------- ->          0 0
  transition:          2 10'0--------- ->          2 2
  transition:          2 10'1-00000000 ->          2 2
  transition:          2 10'1-01000000 ->          0 0
  transition:          2 10'1-0-100000 ->          1 1
  transition:          2 10'1-0--10000 ->          2 2
  transition:          2 10'1-0---1000 ->          3 3
  transition:          2 10'100----100 ->          2 2
  transition:          2 10'110----100 ->          3 3
  transition:          2 10'100-----10 ->          3 3
  transition:          2 10'110-----10 ->          2 2
  transition:          2 10'1-0------1 ->          2 2
  transition:          2 10'1-1------- ->          2 2
  transition:          1 10'0--------- ->          1 1
  transition:          1 10'1-00000000 ->          1 1
  transition:          1 10'1-01000000 ->          0 0
  transition:          1 10'1-0-100000 ->          1 1
  transition:          1 10'1-0--10000 ->          2 2
  transition:          1 10'1-0---1000 ->          3 3
  transition:          1 10'100----100 ->          1 1
  transition:          1 10'110----100 ->          3 3
  transition:          1 10'100-----10 ->          3 3
  transition:          1 10'110-----10 ->          1 1
  transition:          1 10'1-0------1 ->          1 1
  transition:          1 10'1-1------- ->          1 1
  transition:          3 10'0--------- ->          3 3
  transition:          3 10'1-00000000 ->          3 3
  transition:          3 10'1-01000000 ->          0 0
  transition:          3 10'1-0-100000 ->          1 1
  transition:          3 10'1-0--10000 ->          2 2
  transition:          3 10'1-0---1000 ->          3 3
  transition:          3 10'100----100 ->          3 3
  transition:          3 10'110----100 ->          3 3
  transition:          3 10'100-----10 ->          3 3
  transition:          3 10'110-----10 ->          3 3
  transition:          3 10'1-0------1 ->          3 3
  transition:          3 10'1-1------- ->          3 3

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P2.d$1513' from module `\b21'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).
Optimizing FSM `$fsm$\P1.d$1511' from module `\b21'.
  Merging pattern 10'1-00000000 and 10'1-01000000 from group (0 0 0).
  Merging pattern 10'1-01000000 and 10'1-00000000 from group (0 0 0).
  Merging pattern 10'100----100 and 10'110----100 from group (3 3 3).
  Merging pattern 10'110----100 and 10'100----100 from group (3 3 3).
  Merging pattern 10'100-----10 and 10'110-----10 from group (3 3 3).
  Merging pattern 10'110-----10 and 10'100-----10 from group (3 3 3).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\P1.d$1511' from module `\b21'.
Optimizing FSM `$fsm$\P2.d$1513' from module `\b21'.

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\P1.d$1511' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11
Recoding FSM `$fsm$\P2.d$1513' from module `\b21' using `auto' encoding:
  mapping auto encoding to `binary` for this FSM.
  00000000000000000000000000000000 -> 00
  00000000000000000000000000000010 -> 01
  00000000000000000000000000000001 -> 10
  00000000000000000000000000000011 -> 11

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\P1.d$1511' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P1.d$1511 (\P1.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P1.$verific$n10346$175
    1: $flatten\P1.$verific$n1405$102
    2: $flatten\P1.$verific$n1440$103
    3: $flatten\P1.$verific$n1474$104
    4: $flatten\P1.$verific$n1475$105
    5: $flatten\P1.$verific$n1476$106
    6: $flatten\P1.$verific$n1477$107
    7: $flatten\P1.$verific$n341$204 [0]
    8: \P1.B
    9: \P1.state

  Output signals:
    0: $flatten\P1.$verific$n11472$358 [0]
    1: $flatten\P1.$verific$n11472$358 [1]
    2: $flatten\P1.$verific$n11472$358 [2]
    3: $flatten\P1.$verific$n11472$358 [3]
    4: $flatten\P1.$verific$n11472$358 [4]
    5: $flatten\P1.$verific$n11472$358 [5]
    6: $flatten\P1.$verific$n11472$358 [6]
    7: $flatten\P1.$verific$n11472$358 [7]
    8: $flatten\P1.$verific$n11472$358 [8]
    9: $flatten\P1.$verific$n11472$358 [9]
   10: $flatten\P1.$verific$n11472$358 [10]
   11: $flatten\P1.$verific$n11472$358 [11]
   12: $flatten\P1.$verific$n11472$358 [12]
   13: $flatten\P1.$verific$n11472$358 [13]
   14: $flatten\P1.$verific$n11472$358 [14]
   15: $flatten\P1.$verific$n11472$358 [15]
   16: $flatten\P1.$verific$n11472$358 [16]
   17: $flatten\P1.$verific$n11472$358 [17]
   18: $flatten\P1.$verific$n11472$358 [18]
   19: $flatten\P1.$verific$n11472$358 [19]
   20: $flatten\P1.$verific$n11472$358 [20]
   21: $flatten\P1.$verific$n11472$358 [21]
   22: $flatten\P1.$verific$n11472$358 [22]
   23: $flatten\P1.$verific$n11472$358 [23]
   24: $flatten\P1.$verific$n11472$358 [24]
   25: $flatten\P1.$verific$n11472$358 [25]
   26: $flatten\P1.$verific$n11472$358 [26]
   27: $flatten\P1.$verific$n11472$358 [27]
   28: $flatten\P1.$verific$n11472$358 [28]
   29: $flatten\P1.$verific$n11472$358 [29]
   30: $flatten\P1.$verific$n11472$358 [30]
   31: $flatten\P1.$verific$n11472$358 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

FSM `$fsm$\P2.d$1513' from module `b21':
-------------------------------------

  Information on FSM $fsm$\P2.d$1513 (\P2.d):

  Number of input signals:   10
  Number of output signals:  32
  Number of state bits:       2

  Input signals:
    0: $flatten\P2.$verific$n10346$678
    1: $flatten\P2.$verific$n1405$605
    2: $flatten\P2.$verific$n1440$606
    3: $flatten\P2.$verific$n1474$607
    4: $flatten\P2.$verific$n1475$608
    5: $flatten\P2.$verific$n1476$609
    6: $flatten\P2.$verific$n1477$610
    7: $flatten\P2.$verific$n341$707 [0]
    8: \P2.B
    9: \P2.state

  Output signals:
    0: $flatten\P2.$verific$n11479$862 [0]
    1: $flatten\P2.$verific$n11479$862 [1]
    2: $flatten\P2.$verific$n11479$862 [2]
    3: $flatten\P2.$verific$n11479$862 [3]
    4: $flatten\P2.$verific$n11479$862 [4]
    5: $flatten\P2.$verific$n11479$862 [5]
    6: $flatten\P2.$verific$n11479$862 [6]
    7: $flatten\P2.$verific$n11479$862 [7]
    8: $flatten\P2.$verific$n11479$862 [8]
    9: $flatten\P2.$verific$n11479$862 [9]
   10: $flatten\P2.$verific$n11479$862 [10]
   11: $flatten\P2.$verific$n11479$862 [11]
   12: $flatten\P2.$verific$n11479$862 [12]
   13: $flatten\P2.$verific$n11479$862 [13]
   14: $flatten\P2.$verific$n11479$862 [14]
   15: $flatten\P2.$verific$n11479$862 [15]
   16: $flatten\P2.$verific$n11479$862 [16]
   17: $flatten\P2.$verific$n11479$862 [17]
   18: $flatten\P2.$verific$n11479$862 [18]
   19: $flatten\P2.$verific$n11479$862 [19]
   20: $flatten\P2.$verific$n11479$862 [20]
   21: $flatten\P2.$verific$n11479$862 [21]
   22: $flatten\P2.$verific$n11479$862 [22]
   23: $flatten\P2.$verific$n11479$862 [23]
   24: $flatten\P2.$verific$n11479$862 [24]
   25: $flatten\P2.$verific$n11479$862 [25]
   26: $flatten\P2.$verific$n11479$862 [26]
   27: $flatten\P2.$verific$n11479$862 [27]
   28: $flatten\P2.$verific$n11479$862 [28]
   29: $flatten\P2.$verific$n11479$862 [29]
   30: $flatten\P2.$verific$n11479$862 [30]
   31: $flatten\P2.$verific$n11479$862 [31]

  State encoding:
    0:       2'00  <RESET STATE>
    1:       2'01
    2:       2'10
    3:       2'11

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 10'1-0-000000   ->     0 0
      1:     0 10'100----100   ->     0 0
      2:     0 10'110-----10   ->     0 0
      3:     0 10'1-0------1   ->     0 0
      4:     0 10'1-1-------   ->     0 0
      5:     0 10'0---------   ->     0 0
      6:     0 10'1-0--10000   ->     1 2
      7:     0 10'1-0-100000   ->     2 1
      8:     0 10'1-0---1000   ->     3 3
      9:     0 10'110----100   ->     3 3
     10:     0 10'100-----10   ->     3 3
     11:     1 10'1-01000000   ->     0 0
     12:     1 10'1-00000000   ->     1 2
     13:     1 10'1-0--10000   ->     1 2
     14:     1 10'100----100   ->     1 2
     15:     1 10'110-----10   ->     1 2
     16:     1 10'1-0------1   ->     1 2
     17:     1 10'1-1-------   ->     1 2
     18:     1 10'0---------   ->     1 2
     19:     1 10'1-0-100000   ->     2 1
     20:     1 10'1-0---1000   ->     3 3
     21:     1 10'110----100   ->     3 3
     22:     1 10'100-----10   ->     3 3
     23:     2 10'1-01000000   ->     0 0
     24:     2 10'1-0--10000   ->     1 2
     25:     2 10'1-00000000   ->     2 1
     26:     2 10'1-0-100000   ->     2 1
     27:     2 10'100----100   ->     2 1
     28:     2 10'110-----10   ->     2 1
     29:     2 10'1-0------1   ->     2 1
     30:     2 10'1-1-------   ->     2 1
     31:     2 10'0---------   ->     2 1
     32:     2 10'1-0---1000   ->     3 3
     33:     2 10'110----100   ->     3 3
     34:     2 10'100-----10   ->     3 3
     35:     3 10'1-01000000   ->     0 0
     36:     3 10'1-0--10000   ->     1 2
     37:     3 10'1-0-100000   ->     2 1
     38:     3 10'1-00000000   ->     3 3
     39:     3 10'1-0---1000   ->     3 3
     40:     3 10'1-0----100   ->     3 3
     41:     3 10'1-0-----10   ->     3 3
     42:     3 10'1-0------1   ->     3 3
     43:     3 10'1-1-------   ->     3 3
     44:     3 10'0---------   ->     3 3

-------------------------------------

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\P1.d$1511' from module `\b21'.
Mapping FSM `$fsm$\P2.d$1513' from module `\b21'.

yosys> opt -sat -nosdff

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~14 debug messages>

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~324 debug messages>
Removed a total of 108 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$verific$n11185$857 [31:3], Q = \P2.reg3 [31:3]).
Adding EN signal on $flatten\P2.$verific$reg3_reg$b21.vhd:1019$1064 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1119 [2:0], Q = \P2.reg3 [2:0]).
Adding EN signal on $flatten\P2.$verific$reg2_reg$b21.vhd:1019$1063 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1138, Q = \P2.reg2).
Adding EN signal on $flatten\P2.$verific$reg1_reg$b21.vhd:1019$1062 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1157, Q = \P2.reg1).
Adding EN signal on $flatten\P2.$verific$reg0_reg$b21.vhd:1019$1061 ($adff) from module b21 (D = $flatten\P2.$auto$bmuxmap.cc:58:execute$1176, Q = \P2.reg0).
Adding EN signal on $flatten\P2.$verific$datao_reg$b21.vhd:1019$1068 ($adff) from module b21 (D = { $flatten\P2.$auto$bmuxmap.cc:58:execute$1282 [31:29] $flatten\P2.$auto$bmuxmap.cc:58:execute$1235 [124:96] }, Q = \P2.datao).
Adding EN signal on $flatten\P2.$verific$addr_reg$b21.vhd:1019$1065 ($adff) from module b21 (D = $flatten\P2.$verific$n11253$859, Q = \P2.addr).
Adding EN signal on $flatten\P2.$verific$B_reg$b21.vhd:1019$1060 ($adff) from module b21 (D = $flatten\P2.$verific$n10986$686, Q = \P2.B).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$verific$n11178$353 [31:3], Q = \P1.reg3 [31:3]).
Adding EN signal on $flatten\P1.$verific$reg3_reg$b21.vhd:509$558 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1325 [2:0], Q = \P1.reg3 [2:0]).
Adding EN signal on $flatten\P1.$verific$reg2_reg$b21.vhd:509$557 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1344, Q = \P1.reg2).
Adding EN signal on $flatten\P1.$verific$reg1_reg$b21.vhd:509$556 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1363, Q = \P1.reg1).
Adding EN signal on $flatten\P1.$verific$reg0_reg$b21.vhd:509$555 ($adff) from module b21 (D = $flatten\P1.$auto$bmuxmap.cc:58:execute$1382, Q = \P1.reg0).
Adding EN signal on $flatten\P1.$verific$datao_reg$b21.vhd:509$562 ($adff) from module b21 (D = { $flatten\P1.$auto$bmuxmap.cc:58:execute$1488 [31:29] $flatten\P1.$auto$bmuxmap.cc:58:execute$1441 [124:96] }, Q = \P1.datao).
Adding EN signal on $flatten\P1.$verific$addr_reg$b21.vhd:509$559 ($adff) from module b21 (D = $flatten\P1.$verific$n11246$355, Q = \P1.addr).
Adding EN signal on $flatten\P1.$verific$B_reg$b21.vhd:509$554 ($adff) from module b21 (D = $flatten\P1.$verific$n10979$183, Q = \P1.B).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 48 unused cells and 152 unused wires.
<suppressed ~49 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

yosys> opt_dff -sat -nosdff

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P1.$verific$d_reg$b21.vhd:509$553 ($adff) from module b21.
Setting constant 0-bit at position 2 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 3 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 4 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 5 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 6 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 7 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 8 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 9 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 10 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 11 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 12 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 13 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 14 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 15 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 16 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 17 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 18 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 19 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 20 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 21 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 22 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 23 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 24 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 25 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 26 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 27 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 28 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 29 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 30 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.
Setting constant 0-bit at position 31 on $flatten\P2.$verific$d_reg$b21.vhd:1019$1059 ($adff) from module b21.

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2068 ($ne).
Removed top 1 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2070 ($ne).
Removed top 1 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2072 ($ne).
Removed top 1 bits (of 2) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2076 ($ne).
Removed top 1 bits (of 7) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2066 ($ne).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_16$b21.vhd:1080$53 ($lt).
Removed top 1 bits (of 20) from port A of cell b21.$verific$LessThan_17$b21.vhd:1080$54 ($lt).
Removed top 4 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2135 ($ne).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1738 ($eq).
Removed top 1 bits (of 8) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2064 ($ne).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$1953 ($adffe).
Removed top 1 bits (of 21) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1077 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1107 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1113 ($mux).
Removed top 3 bits (of 29) from FF cell b21.$auto$ff.cc:262:slice$2079 ($adffe).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
Removed top 2 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2139 ($ne).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_141$b21.vhd:735$961 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_142$b21.vhd:737$962 ($eq).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P2.$verific$equal_143$b21.vhd:738$963 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_177$b21.vhd:758$974 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_178$b21.vhd:759$975 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P2.$verific$equal_179$b21.vhd:760$976 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_138$b21.vhd:730$958 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_140$b21.vhd:734$960 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_145$b21.vhd:740$965 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_146$b21.vhd:740$966 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_147$b21.vhd:740$967 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_148$b21.vhd:740$968 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_149$b21.vhd:740$969 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_150$b21.vhd:740$970 ($mux).
Removed top 3 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2120 ($ne).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_697$b21.vhd:1016$1042 ($mux).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
Removed top 3 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$1994 ($ne).
Removed top 1 bits (of 2) from port B of cell b21.$auto$fsm_map.cc:215:map_fsm$1519 ($eq).
Removed top 4 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2082 ($ne).
Removed top 2 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2086 ($ne).
Removed top 20 bits (of 21) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1288 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1313 ($mux).
Removed top 2 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1319 ($mux).
Removed top 1 bits (of 32) from port A of cell b21.$flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt).
Removed top 1 bits (of 32) from port B of cell b21.$flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt).
Removed top 3 bits (of 5) from port Y of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 3 bits (of 5) from port A of cell b21.$flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
Removed top 5 bits (of 8) from port Y of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 5 bits (of 8) from port A of cell b21.$flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
Removed top 2 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 2 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
Removed top 9 bits (of 13) from port Y of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 9 bits (of 13) from port A of cell b21.$flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
Removed top 8 bits (of 9) from port Y of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 8 bits (of 9) from port A of cell b21.$flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
Removed top 25 bits (of 26) from port B of cell b21.$flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
Removed top 1 bits (of 3) from port Y of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
Removed top 1 bits (of 2) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2202 ($ne).
Removed top 12 bits (of 32) from port A of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port Y of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 12 bits (of 32) from port B of cell b21.$flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
Removed top 1 bits (of 4) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2198 ($ne).
Removed top 1 bits (of 5) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2196 ($ne).
Removed top 1 bits (of 6) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2194 ($ne).
Removed top 1 bits (of 7) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2192 ($ne).
Removed top 1 bits (of 8) from port B of cell b21.$auto$opt_dff.cc:195:make_patterns_logic$2190 ($ne).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_141$b21.vhd:225$457 ($eq).
Removed top 1 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_142$b21.vhd:227$458 ($eq).
Removed top 2 bits (of 3) from port A of cell b21.$flatten\P1.$verific$equal_143$b21.vhd:228$459 ($eq).
Removed top 31 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_177$b21.vhd:248$470 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_178$b21.vhd:249$471 ($eq).
Removed top 30 bits (of 32) from port A of cell b21.$flatten\P1.$verific$equal_179$b21.vhd:250$472 ($eq).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_138$b21.vhd:220$454 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_140$b21.vhd:224$456 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_145$b21.vhd:230$461 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_146$b21.vhd:230$462 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_147$b21.vhd:230$463 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_148$b21.vhd:230$464 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_149$b21.vhd:230$465 ($mux).
Removed top 30 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_150$b21.vhd:230$466 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_698$b21.vhd:506$536 ($mux).
Removed top 32 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 1 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
Removed top 3 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 3 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
Removed top 2 bits (of 33) from port B of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
Removed top 1 bits (of 33) from port Y of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 33) from port A of cell b21.$flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
Removed top 1 bits (of 21) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1075 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$verific$mux_678$b21.vhd:1015$1028 ($mux).
Removed top 20 bits (of 21) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1286 ($mux).
Removed top 20 bits (of 21) from port Y of cell b21.$flatten\P1.$verific$add_662$b21.vhd:497$505 ($add).
Removed top 19 bits (of 20) from port A of cell b21.$flatten\P1.$verific$add_662$b21.vhd:497$505 ($add).
Removed top 19 bits (of 20) from port B of cell b21.$flatten\P1.$verific$add_662$b21.vhd:497$505 ($add).
Removed top 20 bits (of 21) from port Y of cell b21.$flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
Removed top 19 bits (of 20) from port A of cell b21.$flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
Removed top 19 bits (of 20) from port B of cell b21.$flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$verific$mux_679$b21.vhd:505$522 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1120 ($mux).
Removed top 1 bits (of 21) from port Y of cell b21.$flatten\P2.$verific$add_662$b21.vhd:1007$1010 ($add).
Removed top 1 bits (of 21) from port Y of cell b21.$flatten\P2.$verific$add_664$b21.vhd:1008$1013 ($add).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1326 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1117 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1118 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1323 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1324 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1107 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1112 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1113 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1115 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1313 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1318 ($mux).
Removed top 1 bits (of 30) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1319 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1321 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1103 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P2.$auto$bmuxmap.cc:60:execute$1109 ($mux).
Removed top 2 bits (of 155) from mux cell b21.$flatten\P2.$verific$select_752$b21.vhd:1000$1000 ($pmux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1309 ($mux).
Removed top 3 bits (of 32) from mux cell b21.$flatten\P1.$auto$bmuxmap.cc:60:execute$1315 ($mux).
Removed top 2 bits (of 155) from mux cell b21.$flatten\P1.$verific$select_752$b21.vhd:490$496 ($pmux).
Removed top 20 bits (of 42) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1284.
Removed top 20 bits (of 21) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1287.
Removed top 2 bits (of 256) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1308.
Removed top 3 bits (of 128) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1317.
Removed top 3 bits (of 64) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1322.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1325.
Removed top 2 bits (of 8) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1403.
Removed top 1 bits (of 126) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1441.
Removed top 1 bits (of 2) from wire b21.$flatten\P1.$auto$bmuxmap.cc:58:execute$1470.
Removed top 2 bits (of 31) from wire b21.$flatten\P1.$verific$n10126$322.
Removed top 19 bits (of 20) from wire b21.$flatten\P1.$verific$n10390$329.
Removed top 19 bits (of 20) from wire b21.$flatten\P1.$verific$n10434$331.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n10755$344.
Removed top 3 bits (of 32) from wire b21.$flatten\P1.$verific$n11178$353.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n11472$358.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1407$226.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1441$227.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1478$228.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1511$229.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1544$230.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1577$231.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1610$232.
Removed top 30 bits (of 32) from wire b21.$flatten\P1.$verific$n1643$233.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n184$195.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n1987$239.
Removed top 3 bits (of 5) from wire b21.$flatten\P1.$verific$n288$198.
Removed top 5 bits (of 8) from wire b21.$flatten\P1.$verific$n301$200.
Removed top 9 bits (of 13) from wire b21.$flatten\P1.$verific$n318$202.
Removed top 8 bits (of 9) from wire b21.$flatten\P1.$verific$n341$204.
Removed top 2 bits (of 32) from wire b21.$flatten\P1.$verific$n4241$272.
Removed top 1 bits (of 3) from wire b21.$flatten\P1.$verific$n436$208.
Removed top 3 bits (of 33) from wire b21.$flatten\P1.$verific$n5666$286.
Removed top 1 bits (of 33) from wire b21.$flatten\P1.$verific$n933$223.
Removed top 1 bits (of 42) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1073.
Removed top 1 bits (of 21) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1076.
Removed top 2 bits (of 256) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1102.
Removed top 3 bits (of 128) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1111.
Removed top 2 bits (of 8) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1197.
Removed top 1 bits (of 126) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1235.
Removed top 1 bits (of 2) from wire b21.$flatten\P2.$auto$bmuxmap.cc:58:execute$1264.
Removed top 2 bits (of 31) from wire b21.$flatten\P2.$verific$n10126$825.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n10762$848.
Removed top 3 bits (of 32) from wire b21.$flatten\P2.$verific$n11185$857.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n11479$862.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1407$729.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1441$730.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1478$731.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1511$732.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1544$733.
Removed top 30 bits (of 32) from wire b21.$flatten\P2.$verific$n1643$736.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n184$698.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n1987$742.
Removed top 3 bits (of 5) from wire b21.$flatten\P2.$verific$n288$701.
Removed top 5 bits (of 8) from wire b21.$flatten\P2.$verific$n301$703.
Removed top 9 bits (of 13) from wire b21.$flatten\P2.$verific$n318$705.
Removed top 8 bits (of 9) from wire b21.$flatten\P2.$verific$n341$707.
Removed top 2 bits (of 32) from wire b21.$flatten\P2.$verific$n4241$775.
Removed top 1 bits (of 3) from wire b21.$flatten\P2.$verific$n436$711.
Removed top 3 bits (of 33) from wire b21.$flatten\P2.$verific$n5666$789.
Removed top 1 bits (of 33) from wire b21.$flatten\P2.$verific$n933$726.

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 88 unused wires.
<suppressed ~1 debug messages>

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b21:
  creating $macc model for $flatten\P1.$verific$add_21$b21.vhd:90$382 ($add).
  creating $macc model for $flatten\P1.$verific$add_26$b21.vhd:92$389 ($add).
  creating $macc model for $flatten\P1.$verific$add_283$b21.vhd:322$478 ($add).
  creating $macc model for $flatten\P1.$verific$add_31$b21.vhd:94$396 ($add).
  creating $macc model for $flatten\P1.$verific$add_36$b21.vhd:96$403 ($add).
  creating $macc model for $flatten\P1.$verific$add_39$b21.vhd:99$409 ($add).
  creating $macc model for $flatten\P1.$verific$add_44$b21.vhd:100$413 ($add).
  creating $macc model for $flatten\P1.$verific$add_56$b21.vhd:114$421 ($add).
  creating $macc model for $flatten\P1.$verific$add_570$b21.vhd:470$485 ($add).
  creating $macc model for $flatten\P1.$verific$add_61$b21.vhd:117$423 ($add).
  creating $macc model for $flatten\P1.$verific$add_662$b21.vhd:497$505 ($add).
  creating $macc model for $flatten\P1.$verific$add_664$b21.vhd:498$507 ($add).
  creating $macc model for $flatten\P1.$verific$mult_667$b21.vhd:501$511 ($mul).
  creating $macc model for $flatten\P1.$verific$sub_168$b21.vhd:247$467 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_365$b21.vhd:362$480 ($sub).
  creating $macc model for $flatten\P1.$verific$sub_84$b21.vhd:153$436 ($sub).
  creating $macc model for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376 ($neg).
  creating $macc model for $flatten\P2.$verific$add_21$b21.vhd:600$886 ($add).
  creating $macc model for $flatten\P2.$verific$add_26$b21.vhd:602$893 ($add).
  creating $macc model for $flatten\P2.$verific$add_283$b21.vhd:832$982 ($add).
  creating $macc model for $flatten\P2.$verific$add_31$b21.vhd:604$900 ($add).
  creating $macc model for $flatten\P2.$verific$add_36$b21.vhd:606$907 ($add).
  creating $macc model for $flatten\P2.$verific$add_39$b21.vhd:609$913 ($add).
  creating $macc model for $flatten\P2.$verific$add_44$b21.vhd:610$917 ($add).
  creating $macc model for $flatten\P2.$verific$add_56$b21.vhd:624$925 ($add).
  creating $macc model for $flatten\P2.$verific$add_570$b21.vhd:980$989 ($add).
  creating $macc model for $flatten\P2.$verific$add_61$b21.vhd:627$927 ($add).
  creating $macc model for $flatten\P2.$verific$add_662$b21.vhd:1007$1010 ($add).
  creating $macc model for $flatten\P2.$verific$add_664$b21.vhd:1008$1013 ($add).
  creating $macc model for $flatten\P2.$verific$sub_168$b21.vhd:757$971 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_365$b21.vhd:872$984 ($sub).
  creating $macc model for $flatten\P2.$verific$sub_84$b21.vhd:663$940 ($sub).
  creating $macc model for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880 ($neg).
  creating $macc model for $verific$add_24$b21.vhd:1081$58 ($add).
  creating $macc model for $verific$add_3$b21.vhd:1071$40 ($add).
  creating $macc model for $verific$add_30$b21.vhd:1085$60 ($add).
  creating $alu model for $macc $verific$add_30$b21.vhd:1085$60.
  creating $alu model for $macc $verific$add_3$b21.vhd:1071$40.
  creating $alu model for $macc $verific$add_24$b21.vhd:1081$58.
  creating $alu model for $macc $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880.
  creating $alu model for $macc $flatten\P2.$verific$sub_84$b21.vhd:663$940.
  creating $alu model for $macc $flatten\P2.$verific$sub_365$b21.vhd:872$984.
  creating $alu model for $macc $flatten\P2.$verific$sub_168$b21.vhd:757$971.
  creating $alu model for $macc $flatten\P2.$verific$add_664$b21.vhd:1008$1013.
  creating $alu model for $macc $flatten\P2.$verific$add_662$b21.vhd:1007$1010.
  creating $alu model for $macc $flatten\P2.$verific$add_61$b21.vhd:627$927.
  creating $alu model for $macc $flatten\P2.$verific$add_570$b21.vhd:980$989.
  creating $alu model for $macc $flatten\P2.$verific$add_56$b21.vhd:624$925.
  creating $alu model for $macc $flatten\P2.$verific$add_44$b21.vhd:610$917.
  creating $alu model for $macc $flatten\P2.$verific$add_39$b21.vhd:609$913.
  creating $alu model for $macc $flatten\P2.$verific$add_36$b21.vhd:606$907.
  creating $alu model for $macc $flatten\P2.$verific$add_31$b21.vhd:604$900.
  creating $alu model for $macc $flatten\P2.$verific$add_283$b21.vhd:832$982.
  creating $alu model for $macc $flatten\P2.$verific$add_26$b21.vhd:602$893.
  creating $alu model for $macc $flatten\P2.$verific$add_21$b21.vhd:600$886.
  creating $alu model for $macc $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376.
  creating $alu model for $macc $flatten\P1.$verific$sub_84$b21.vhd:153$436.
  creating $alu model for $macc $flatten\P1.$verific$sub_365$b21.vhd:362$480.
  creating $alu model for $macc $flatten\P1.$verific$sub_168$b21.vhd:247$467.
  creating $alu model for $macc $flatten\P1.$verific$add_664$b21.vhd:498$507.
  creating $alu model for $macc $flatten\P1.$verific$add_662$b21.vhd:497$505.
  creating $alu model for $macc $flatten\P1.$verific$add_61$b21.vhd:117$423.
  creating $alu model for $macc $flatten\P1.$verific$add_570$b21.vhd:470$485.
  creating $alu model for $macc $flatten\P1.$verific$add_56$b21.vhd:114$421.
  creating $alu model for $macc $flatten\P1.$verific$add_44$b21.vhd:100$413.
  creating $alu model for $macc $flatten\P1.$verific$add_39$b21.vhd:99$409.
  creating $alu model for $macc $flatten\P1.$verific$add_36$b21.vhd:96$403.
  creating $alu model for $macc $flatten\P1.$verific$add_31$b21.vhd:94$396.
  creating $alu model for $macc $flatten\P1.$verific$add_283$b21.vhd:322$478.
  creating $alu model for $macc $flatten\P1.$verific$add_26$b21.vhd:92$389.
  creating $alu model for $macc $flatten\P1.$verific$add_21$b21.vhd:90$382.
  creating $macc cell for $flatten\P1.$verific$mult_667$b21.vhd:501$511: $auto$alumacc.cc:365:replace_macc$2267
  creating $alu model for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_78$b21.vhd:142$433 ($lt): merged with $flatten\P1.$verific$LessThan_68$b21.vhd:122$429.
  creating $alu model for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435 ($lt): new $alu
  creating $alu model for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_78$b21.vhd:652$937 ($lt): merged with $flatten\P2.$verific$LessThan_68$b21.vhd:632$933.
  creating $alu model for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939 ($lt): new $alu
  creating $alu model for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944 ($lt): new $alu
  creating $alu model for $verific$LessThan_11$b21.vhd:1079$48 ($lt): new $alu
  creating $alu model for $verific$LessThan_12$b21.vhd:1079$49 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b21.vhd:1080$53 ($lt): new $alu
  creating $alu model for $verific$LessThan_17$b21.vhd:1080$54 ($lt): new $alu
  creating $alu cell for $verific$LessThan_17$b21.vhd:1080$54: $auto$alumacc.cc:485:replace_alu$2280
  creating $alu cell for $verific$LessThan_16$b21.vhd:1080$53: $auto$alumacc.cc:485:replace_alu$2285
  creating $alu cell for $verific$LessThan_12$b21.vhd:1079$49: $auto$alumacc.cc:485:replace_alu$2290
  creating $alu cell for $verific$LessThan_11$b21.vhd:1079$48: $auto$alumacc.cc:485:replace_alu$2295
  creating $alu cell for $flatten\P2.$verific$LessThan_87$b21.vhd:665$944: $auto$alumacc.cc:485:replace_alu$2300
  creating $alu cell for $flatten\P2.$verific$LessThan_83$b21.vhd:662$939: $auto$alumacc.cc:485:replace_alu$2311
  creating $alu cell for $flatten\P2.$verific$LessThan_68$b21.vhd:632$933, $flatten\P2.$verific$LessThan_78$b21.vhd:652$937: $auto$alumacc.cc:485:replace_alu$2322
  creating $alu cell for $flatten\P2.$verific$LessThan_14$b21.vhd:597$879: $auto$alumacc.cc:485:replace_alu$2333
  creating $alu cell for $flatten\P1.$verific$LessThan_87$b21.vhd:155$440: $auto$alumacc.cc:485:replace_alu$2338
  creating $alu cell for $flatten\P1.$verific$LessThan_83$b21.vhd:152$435: $auto$alumacc.cc:485:replace_alu$2349
  creating $alu cell for $flatten\P1.$verific$LessThan_68$b21.vhd:122$429, $flatten\P1.$verific$LessThan_78$b21.vhd:142$433: $auto$alumacc.cc:485:replace_alu$2360
  creating $alu cell for $flatten\P1.$verific$LessThan_14$b21.vhd:87$375: $auto$alumacc.cc:485:replace_alu$2371
  creating $alu cell for $flatten\P1.$verific$add_21$b21.vhd:90$382: $auto$alumacc.cc:485:replace_alu$2376
  creating $alu cell for $flatten\P1.$verific$add_26$b21.vhd:92$389: $auto$alumacc.cc:485:replace_alu$2379
  creating $alu cell for $flatten\P1.$verific$add_283$b21.vhd:322$478: $auto$alumacc.cc:485:replace_alu$2382
  creating $alu cell for $flatten\P1.$verific$add_31$b21.vhd:94$396: $auto$alumacc.cc:485:replace_alu$2385
  creating $alu cell for $flatten\P1.$verific$add_36$b21.vhd:96$403: $auto$alumacc.cc:485:replace_alu$2388
  creating $alu cell for $flatten\P1.$verific$add_39$b21.vhd:99$409: $auto$alumacc.cc:485:replace_alu$2391
  creating $alu cell for $flatten\P1.$verific$add_44$b21.vhd:100$413: $auto$alumacc.cc:485:replace_alu$2394
  creating $alu cell for $flatten\P1.$verific$add_56$b21.vhd:114$421: $auto$alumacc.cc:485:replace_alu$2397
  creating $alu cell for $flatten\P1.$verific$add_570$b21.vhd:470$485: $auto$alumacc.cc:485:replace_alu$2400
  creating $alu cell for $flatten\P1.$verific$add_61$b21.vhd:117$423: $auto$alumacc.cc:485:replace_alu$2403
  creating $alu cell for $flatten\P1.$verific$add_662$b21.vhd:497$505: $auto$alumacc.cc:485:replace_alu$2406
  creating $alu cell for $flatten\P1.$verific$add_664$b21.vhd:498$507: $auto$alumacc.cc:485:replace_alu$2409
  creating $alu cell for $flatten\P1.$verific$sub_168$b21.vhd:247$467: $auto$alumacc.cc:485:replace_alu$2412
  creating $alu cell for $flatten\P1.$verific$sub_365$b21.vhd:362$480: $auto$alumacc.cc:485:replace_alu$2415
  creating $alu cell for $flatten\P1.$verific$sub_84$b21.vhd:153$436: $auto$alumacc.cc:485:replace_alu$2418
  creating $alu cell for $flatten\P1.$verific$unary_minus_15$b21.vhd:88$376: $auto$alumacc.cc:485:replace_alu$2421
  creating $alu cell for $flatten\P2.$verific$add_21$b21.vhd:600$886: $auto$alumacc.cc:485:replace_alu$2424
  creating $alu cell for $flatten\P2.$verific$add_26$b21.vhd:602$893: $auto$alumacc.cc:485:replace_alu$2427
  creating $alu cell for $flatten\P2.$verific$add_283$b21.vhd:832$982: $auto$alumacc.cc:485:replace_alu$2430
  creating $alu cell for $flatten\P2.$verific$add_31$b21.vhd:604$900: $auto$alumacc.cc:485:replace_alu$2433
  creating $alu cell for $flatten\P2.$verific$add_36$b21.vhd:606$907: $auto$alumacc.cc:485:replace_alu$2436
  creating $alu cell for $flatten\P2.$verific$add_39$b21.vhd:609$913: $auto$alumacc.cc:485:replace_alu$2439
  creating $alu cell for $flatten\P2.$verific$add_44$b21.vhd:610$917: $auto$alumacc.cc:485:replace_alu$2442
  creating $alu cell for $flatten\P2.$verific$add_570$b21.vhd:980$989: $auto$alumacc.cc:485:replace_alu$2445
  creating $alu cell for $flatten\P2.$verific$add_56$b21.vhd:624$925: $auto$alumacc.cc:485:replace_alu$2448
  creating $alu cell for $flatten\P2.$verific$add_662$b21.vhd:1007$1010: $auto$alumacc.cc:485:replace_alu$2451
  creating $alu cell for $flatten\P2.$verific$add_61$b21.vhd:627$927: $auto$alumacc.cc:485:replace_alu$2454
  creating $alu cell for $flatten\P2.$verific$add_664$b21.vhd:1008$1013: $auto$alumacc.cc:485:replace_alu$2457
  creating $alu cell for $flatten\P2.$verific$sub_168$b21.vhd:757$971: $auto$alumacc.cc:485:replace_alu$2460
  creating $alu cell for $flatten\P2.$verific$sub_365$b21.vhd:872$984: $auto$alumacc.cc:485:replace_alu$2463
  creating $alu cell for $flatten\P2.$verific$sub_84$b21.vhd:663$940: $auto$alumacc.cc:485:replace_alu$2466
  creating $alu cell for $flatten\P2.$verific$unary_minus_15$b21.vhd:598$880: $auto$alumacc.cc:485:replace_alu$2469
  creating $alu cell for $verific$add_24$b21.vhd:1081$58: $auto$alumacc.cc:485:replace_alu$2472
  creating $alu cell for $verific$add_3$b21.vhd:1071$40: $auto$alumacc.cc:485:replace_alu$2475
  creating $alu cell for $verific$add_30$b21.vhd:1085$60: $auto$alumacc.cc:485:replace_alu$2478
  created 47 $alu and 1 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~10 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1286 in front of them:
        $auto$alumacc.cc:485:replace_alu$2409
        $auto$alumacc.cc:485:replace_alu$2406

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1456 in front of them:
        $flatten\P1.$verific$i102$b21.vhd:173$443
        $flatten\P1.$verific$i98$b21.vhd:168$442

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1457 in front of them:
        $flatten\P1.$verific$i109$b21.vhd:183$445
        $flatten\P1.$verific$i105$b21.vhd:178$444

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1458 in front of them:
        $flatten\P1.$verific$i116$b21.vhd:193$447
        $flatten\P1.$verific$i113$b21.vhd:188$446

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1459 in front of them:
        $flatten\P1.$verific$i131$b21.vhd:209$449
        $flatten\P1.$verific$i123$b21.vhd:201$448

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1250 in front of them:
        $flatten\P2.$verific$i102$b21.vhd:683$947
        $flatten\P2.$verific$i98$b21.vhd:678$946

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1251 in front of them:
        $flatten\P2.$verific$i109$b21.vhd:693$949
        $flatten\P2.$verific$i105$b21.vhd:688$948

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1252 in front of them:
        $flatten\P2.$verific$i116$b21.vhd:703$951
        $flatten\P2.$verific$i113$b21.vhd:698$950

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1253 in front of them:
        $flatten\P2.$verific$i131$b21.vhd:719$953
        $flatten\P2.$verific$i123$b21.vhd:711$952


yosys> opt_dff -nodffe -nosdff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 4 unused cells and 52 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~9 debug messages>

yosys> opt_muxtree

3.33. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

yosys> opt_reduce

3.34. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.35. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_share

3.36. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1463 in front of them:
        $flatten\P1.$verific$i109$b21.vhd:183$445
        $flatten\P1.$verific$i102$b21.vhd:173$443

    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1464 in front of them:
        $flatten\P1.$verific$i131$b21.vhd:209$449
        $flatten\P1.$verific$i116$b21.vhd:193$447

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1257 in front of them:
        $flatten\P2.$verific$i109$b21.vhd:693$949
        $flatten\P2.$verific$i102$b21.vhd:683$947

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1258 in front of them:
        $flatten\P2.$verific$i131$b21.vhd:719$953
        $flatten\P2.$verific$i116$b21.vhd:703$951


yosys> opt_dff -nodffe -nosdff

3.37. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~4 debug messages>

yosys> opt_muxtree

3.40. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

yosys> opt_reduce

3.41. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.42. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_share

3.43. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\P1.$auto$bmuxmap.cc:60:execute$1467 in front of them:
        $flatten\P1.$verific$i131$b21.vhd:209$449
        $flatten\P1.$verific$i109$b21.vhd:183$445

    Found cells that share an operand and can be merged by moving the $mux $flatten\P2.$auto$bmuxmap.cc:60:execute$1261 in front of them:
        $flatten\P2.$verific$i131$b21.vhd:719$953
        $flatten\P2.$verific$i109$b21.vhd:693$949


yosys> opt_dff -nodffe -nosdff

3.44. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.45. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~2 debug messages>

yosys> opt_muxtree

3.47. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~57 debug messages>

yosys> opt_reduce

3.48. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_share

3.50. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_muxtree

3.54. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

yosys> opt_reduce

3.55. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.57. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.58. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.60. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 5

yosys> stat

3.61. Printing statistics.

=== b21 ===

   Number of wires:                625
   Number of wire bits:          12502
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                582
     $adff                          12
     $adffe                         16
     $alu                           44
     $and                           68
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                          213
     $ne                            70
     $not                           27
     $or                             9
     $pmux                          10
     $reduce_and                    20
     $reduce_bool                    2
     $reduce_or                     34
     $xor                            2


yosys> memory -nomap

3.62. Executing MEMORY pass.

yosys> opt_mem

3.62.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.62.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.62.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.62.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.62.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.62.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_share

3.62.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.62.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.62.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> memory_collect

3.62.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.63. Printing statistics.

=== b21 ===

   Number of wires:                625
   Number of wire bits:          12502
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                582
     $adff                          12
     $adffe                         16
     $alu                           44
     $and                           68
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                          213
     $ne                            70
     $not                           27
     $or                             9
     $pmux                          10
     $reduce_and                    20
     $reduce_bool                    2
     $reduce_or                     34
     $xor                            2


yosys> muxpack

3.64. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~198 debug messages>

yosys> opt_clean

3.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> pmuxtree

3.66. Executing PMUXTREE pass.

yosys> muxpack

3.67. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~211 debug messages>

yosys> memory_map

3.68. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.69. Printing statistics.

=== b21 ===

   Number of wires:                669
   Number of wire bits:          15068
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                616
     $adff                          12
     $adffe                         16
     $alu                           44
     $and                           68
     $eq                            50
     $logic_not                      4
     $macc                           1
     $mux                          235
     $ne                            70
     $not                           37
     $or                            11
     $reduce_and                    20
     $reduce_bool                    2
     $reduce_or                     44
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.70. Executing TECHMAP pass (map to technology primitives).

3.70.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.70.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.70.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$79fc87901d7fd8aaad689b5406671422f5fa25b9\_80_rs_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$51c80ded93a30cabdd6a720b4f0ed1d8c51829dd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$43e6bdbb0e8a6b23dfd3962c0280737d54f8e2be\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper maccmap for cells of type $macc.
  add 3'101 * $auto$wreduce.cc:455:run$2208 [0] (3x1 bits, unsigned)
Using extmapper simplemap for cells of type $adff.
Using template $paramod$e891e6b399cf52748460a311fafe476815d24bd7\_90_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$9e7011427f22271c0942bd67000ef26931352ace\_80_rs_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:80: Warning: Range [-1:-1] select out of bounds on signal `\C': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\Y': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88: Warning: Ignoring assignment to constant bits:
    old assignment: 1'x = $xor$/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:88$7802_Y
    new assignment: { } = { }.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\S': Setting 1 LSB bits to undef.
/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v:89: Warning: Range [-1:-1] select out of bounds on signal `\AA': Setting 1 LSB bits to undef.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$83784888def4f70dbbded37c6d05d2ea1157c936\_90_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$ee932b0f27f4b110ee21c85da6e79a9925243db9\_80_rs_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$83fc07d9557d32477a9ece9e4e82efd3bbe82ab8\_80_rs_alu for cells of type $alu.
Using template $paramod$c32aaa9fd758c6ea2b382f4327253b21b576e597\_90_alu for cells of type $alu.
Using template $paramod$63a3f1ffa662be02d3403b533885c56d18ebe02a\_80_rs_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000011011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~4910 debug messages>

yosys> stat

3.71. Printing statistics.

=== b21 ===

   Number of wires:               3747
   Number of wire bits:          60959
   Number of public wires:          46
   Number of public wire bits:     732
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              16726
     $_AND_                       1800
     $_DFFE_PP0P_                  356
     $_DFF_PP0_                     78
     $_MUX_                       9057
     $_NOT_                       1044
     $_OR_                        1732
     $_XOR_                       2121
     adder_carry                   538


yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~5099 debug messages>

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~8940 debug messages>
Removed a total of 2980 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.77. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.78. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 773 unused cells and 2648 unused wires.
<suppressed ~774 debug messages>

yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~144 debug messages>

yosys> opt_muxtree

3.81. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.82. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.84. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.85. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.86. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 2

yosys> opt -nodffe -fast -full -nosdff

3.88. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.88.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~1310 debug messages>

yosys> opt_merge

3.88.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_dff -nodffe -nosdff

3.88.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.88.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 22 unused wires.
<suppressed ~1 debug messages>

3.88.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.89. Executing TECHMAP pass (map to technology primitives).

3.89.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.89.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -nodffe -sat -nosdff

3.90. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.90.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~40 debug messages>

yosys> opt_merge -nomux

3.90.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.90.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.90.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat -nosdff

3.90.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.90.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.90.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.90.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.90.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.90.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat -nosdff

3.90.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.90.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.90.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.90.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.91. Executing ABC pass (technology mapping using ABC).

3.91.1. Summary of detected clock domains:
  751 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1986, arst=\reset, srst={ }
  613 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2005, arst=\reset, srst={ }
  524 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\reset, srst={ }
  165 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2029, arst=\reset, srst={ }
  147 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2060, arst=\reset, srst={ }
  547 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  735 cells in clk=\clock, en=\P1.state, arst=\reset, srst={ }
  665 cells in clk=\clock, en=\P2.state, arst=\reset, srst={ }
  114 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$1969, arst=\reset, srst={ }
  783 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2112, arst=\reset, srst={ }
  632 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2131, arst=\reset, srst={ }
  530 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2150, arst=\reset, srst={ }
  296 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2155, arst=\reset, srst={ }
  149 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2186, arst=\reset, srst={ }
  560 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  115 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2095, arst=\reset, srst={ }
  998 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.91.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1986, asynchronously reset by \reset
Extracted 691 gates and 954 wires to a netlist network with 262 inputs and 183 outputs.

3.91.2.1. Executing ABC.

3.91.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2005, asynchronously reset by \reset
Extracted 613 gates and 859 wires to a netlist network with 245 inputs and 98 outputs.

3.91.3.1. Executing ABC.

3.91.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \reset
Extracted 499 gates and 713 wires to a netlist network with 212 inputs and 72 outputs.

3.91.4.1. Executing ABC.

3.91.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2029, asynchronously reset by \reset
Extracted 133 gates and 264 wires to a netlist network with 131 inputs and 94 outputs.

3.91.5.1. Executing ABC.

3.91.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2060, asynchronously reset by \reset
Extracted 147 gates and 204 wires to a netlist network with 57 inputs and 67 outputs.

3.91.6.1. Executing ABC.

3.91.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 481 gates and 598 wires to a netlist network with 115 inputs and 71 outputs.

3.91.7.1. Executing ABC.

3.91.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P1.state, asynchronously reset by \reset
Extracted 735 gates and 935 wires to a netlist network with 199 inputs and 50 outputs.

3.91.8.1. Executing ABC.

3.91.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by \P2.state, asynchronously reset by \reset
Extracted 665 gates and 828 wires to a netlist network with 162 inputs and 61 outputs.

3.91.9.1. Executing ABC.

3.91.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1969, asynchronously reset by \reset
Extracted 110 gates and 166 wires to a netlist network with 55 inputs and 38 outputs.

3.91.10.1. Executing ABC.

3.91.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2112, asynchronously reset by \reset
Extracted 703 gates and 978 wires to a netlist network with 274 inputs and 205 outputs.

3.91.11.1. Executing ABC.

3.91.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2131, asynchronously reset by \reset
Extracted 612 gates and 850 wires to a netlist network with 237 inputs and 120 outputs.

3.91.12.1. Executing ABC.

3.91.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2150, asynchronously reset by \reset
Extracted 505 gates and 721 wires to a netlist network with 214 inputs and 75 outputs.

3.91.13.1. Executing ABC.

3.91.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2155, asynchronously reset by \reset
Extracted 264 gates and 486 wires to a netlist network with 222 inputs and 95 outputs.

3.91.14.1. Executing ABC.

3.91.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2186, asynchronously reset by \reset
Extracted 129 gates and 168 wires to a netlist network with 39 inputs and 69 outputs.

3.91.15.1. Executing ABC.

3.91.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 494 gates and 624 wires to a netlist network with 129 inputs and 74 outputs.

3.91.16.1. Executing ABC.

3.91.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2095, asynchronously reset by \reset
Extracted 111 gates and 168 wires to a netlist network with 56 inputs and 39 outputs.

3.91.17.1. Executing ABC.

3.91.18. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 894 gates and 1155 wires to a netlist network with 259 inputs and 204 outputs.

3.91.18.1. Executing ABC.

yosys> abc -dff

3.92. Executing ABC pass (technology mapping using ABC).

3.92.1. Summary of detected clock domains:
  152 cells in clk=\clock, en=$abc$29125$auto$opt_dff.cc:219:make_patterns_logic$2095, arst=\reset, srst={ }
  242 cells in clk=\clock, en=$abc$28931$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  1020 cells in clk=\clock, en=$abc$26942$auto$opt_dff.cc:219:make_patterns_logic$2131, arst=\reset, srst={ }
  693 cells in clk=\clock, en=$abc$27770$auto$opt_dff.cc:219:make_patterns_logic$2150, arst=\reset, srst={ }
  168 cells in clk=\clock, en=$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2155, arst=\reset, srst={ }
  217 cells in clk=\clock, en=$abc$28804$auto$opt_dff.cc:219:make_patterns_logic$2186, arst=\reset, srst={ }
  765 cells in clk=\clock, en=$abc$21566$auto$opt_dff.cc:219:make_patterns_logic$1986, arst=\reset, srst={ }
  1008 cells in clk=\clock, en=$abc$22381$auto$opt_dff.cc:219:make_patterns_logic$2005, arst=\reset, srst={ }
  524 cells in clk=\clock, en=$abc$23183$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\reset, srst={ }
  281 cells in clk=\clock, en=$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2029, arst=\reset, srst={ }
  196 cells in clk=\clock, en=$abc$23961$auto$opt_dff.cc:219:make_patterns_logic$2060, arst=\reset, srst={ }
  243 cells in clk=\clock, en=$abc$24086$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  1587 cells in clk=\clock, en=$abc$29272$lo37, arst=\reset, srst={ }
  158 cells in clk=\clock, en=$abc$25953$auto$opt_dff.cc:219:make_patterns_logic$1969, arst=\reset, srst={ }
  784 cells in clk=\clock, en=$abc$26099$auto$opt_dff.cc:219:make_patterns_logic$2112, arst=\reset, srst={ }
  579 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.92.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29125$auto$opt_dff.cc:219:make_patterns_logic$2095, asynchronously reset by \reset
Extracted 144 gates and 217 wires to a netlist network with 73 inputs and 47 outputs.

3.92.2.1. Executing ABC.

3.92.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$28931$auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 178 gates and 293 wires to a netlist network with 115 inputs and 66 outputs.

3.92.3.1. Executing ABC.

3.92.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26942$auto$opt_dff.cc:219:make_patterns_logic$2131, asynchronously reset by \reset
Extracted 946 gates and 1187 wires to a netlist network with 241 inputs and 227 outputs.

3.92.4.1. Executing ABC.

3.92.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$27770$auto$opt_dff.cc:219:make_patterns_logic$2150, asynchronously reset by \reset
Extracted 691 gates and 882 wires to a netlist network with 191 inputs and 44 outputs.

3.92.5.1. Executing ABC.

3.92.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2155, asynchronously reset by \reset
Extracted 136 gates and 269 wires to a netlist network with 133 inputs and 64 outputs.

3.92.6.1. Executing ABC.

3.92.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$28804$auto$opt_dff.cc:219:make_patterns_logic$2186, asynchronously reset by \reset
Extracted 195 gates and 311 wires to a netlist network with 116 inputs and 74 outputs.

3.92.7.1. Executing ABC.

3.92.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$21566$auto$opt_dff.cc:219:make_patterns_logic$1986, asynchronously reset by \reset
Extracted 737 gates and 999 wires to a netlist network with 262 inputs and 104 outputs.

3.92.8.1. Executing ABC.

3.92.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$22381$auto$opt_dff.cc:219:make_patterns_logic$2005, asynchronously reset by \reset
Extracted 947 gates and 1197 wires to a netlist network with 250 inputs and 213 outputs.

3.92.9.1. Executing ABC.

3.92.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23183$auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \reset
Extracted 524 gates and 697 wires to a netlist network with 173 inputs and 39 outputs.

3.92.10.1. Executing ABC.

3.92.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2029, asynchronously reset by \reset
Extracted 249 gates and 472 wires to a netlist network with 223 inputs and 65 outputs.

3.92.11.1. Executing ABC.

3.92.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$23961$auto$opt_dff.cc:219:make_patterns_logic$2060, asynchronously reset by \reset
Extracted 156 gates and 260 wires to a netlist network with 104 inputs and 70 outputs.

3.92.12.1. Executing ABC.

3.92.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$24086$auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 179 gates and 292 wires to a netlist network with 113 inputs and 67 outputs.

3.92.13.1. Executing ABC.

3.92.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29272$lo37, asynchronously reset by \reset
Extracted 1587 gates and 1890 wires to a netlist network with 303 inputs and 100 outputs.

3.92.14.1. Executing ABC.

3.92.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$25953$auto$opt_dff.cc:219:make_patterns_logic$1969, asynchronously reset by \reset
Extracted 156 gates and 226 wires to a netlist network with 70 inputs and 46 outputs.

3.92.15.1. Executing ABC.

3.92.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$26099$auto$opt_dff.cc:219:make_patterns_logic$2112, asynchronously reset by \reset
Extracted 739 gates and 1013 wires to a netlist network with 274 inputs and 120 outputs.

3.92.16.1. Executing ABC.

3.92.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 515 gates and 689 wires to a netlist network with 174 inputs and 204 outputs.

3.92.17.1. Executing ABC.

yosys> abc -dff

3.93. Executing ABC pass (technology mapping using ABC).

3.93.1. Summary of detected clock domains:
  240 cells in clk=\clock, en=$abc$34988$abc$24086$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  237 cells in clk=\clock, en=$abc$29997$abc$28931$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  1046 cells in clk=\clock, en=$abc$32188$abc$21566$auto$opt_dff.cc:219:make_patterns_logic$1986, arst=\reset, srst={ }
  146 cells in clk=\clock, en=$abc$36830$abc$25953$auto$opt_dff.cc:219:make_patterns_logic$1969, arst=\reset, srst={ }
  201 cells in clk=\clock, en=$abc$34822$abc$23961$auto$opt_dff.cc:219:make_patterns_logic$2060, arst=\reset, srst={ }
  1651 cells in clk=\clock, en=$abc$37860$lo37, arst=\reset, srst={ }
  843 cells in clk=\clock, en=$abc$33049$abc$22381$auto$opt_dff.cc:219:make_patterns_logic$2005, arst=\reset, srst={ }
  124 cells in clk=\clock, en=$abc$29850$abc$29125$auto$opt_dff.cc:219:make_patterns_logic$2095, arst=\reset, srst={ }
  541 cells in clk=\clock, en=$abc$34013$abc$23183$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\reset, srst={ }
  833 cells in clk=\clock, en=$abc$30170$abc$26942$auto$opt_dff.cc:219:make_patterns_logic$2131, arst=\reset, srst={ }
  279 cells in clk=\clock, en=$abc$34573$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2029, arst=\reset, srst={ }
  951 cells in clk=\clock, en=$abc$36973$abc$26099$auto$opt_dff.cc:219:make_patterns_logic$2112, arst=\reset, srst={ }
  224 cells in clk=\clock, en=$abc$31963$abc$28804$auto$opt_dff.cc:219:make_patterns_logic$2186, arst=\reset, srst={ }
  172 cells in clk=\clock, en=$abc$31824$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2155, arst=\reset, srst={ }
  862 cells in clk=\clock, en=$abc$31143$abc$27770$auto$opt_dff.cc:219:make_patterns_logic$2150, arst=\reset, srst={ }
  570 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.93.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$34988$abc$24086$auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 176 gates and 292 wires to a netlist network with 116 inputs and 69 outputs.

3.93.2.1. Executing ABC.

3.93.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29997$abc$28931$auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 173 gates and 286 wires to a netlist network with 113 inputs and 65 outputs.

3.93.3.1. Executing ABC.

3.93.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$32188$abc$21566$auto$opt_dff.cc:219:make_patterns_logic$1986, asynchronously reset by \reset
Extracted 970 gates and 1255 wires to a netlist network with 285 inputs and 180 outputs.

3.93.4.1. Executing ABC.

3.93.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36830$abc$25953$auto$opt_dff.cc:219:make_patterns_logic$1969, asynchronously reset by \reset
Extracted 138 gates and 207 wires to a netlist network with 69 inputs and 46 outputs.

3.93.5.1. Executing ABC.

3.93.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$34822$abc$23961$auto$opt_dff.cc:219:make_patterns_logic$2060, asynchronously reset by \reset
Extracted 161 gates and 264 wires to a netlist network with 103 inputs and 69 outputs.

3.93.6.1. Executing ABC.

3.93.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$37860$lo37, asynchronously reset by \reset
Extracted 1651 gates and 1960 wires to a netlist network with 309 inputs and 110 outputs.

3.93.7.1. Executing ABC.

3.93.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$33049$abc$22381$auto$opt_dff.cc:219:make_patterns_logic$2005, asynchronously reset by \reset
Extracted 836 gates and 1051 wires to a netlist network with 215 inputs and 121 outputs.

3.93.8.1. Executing ABC.

3.93.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$29850$abc$29125$auto$opt_dff.cc:219:make_patterns_logic$2095, asynchronously reset by \reset
Extracted 122 gates and 180 wires to a netlist network with 58 inputs and 34 outputs.

3.93.9.1. Executing ABC.

3.93.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$34013$abc$23183$auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \reset
Extracted 541 gates and 723 wires to a netlist network with 182 inputs and 40 outputs.

3.93.10.1. Executing ABC.

3.93.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$30170$abc$26942$auto$opt_dff.cc:219:make_patterns_logic$2131, asynchronously reset by \reset
Extracted 806 gates and 1016 wires to a netlist network with 210 inputs and 111 outputs.

3.93.11.1. Executing ABC.

3.93.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$34573$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2029, asynchronously reset by \reset
Extracted 247 gates and 470 wires to a netlist network with 223 inputs and 65 outputs.

3.93.12.1. Executing ABC.

3.93.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$36973$abc$26099$auto$opt_dff.cc:219:make_patterns_logic$2112, asynchronously reset by \reset
Extracted 917 gates and 1178 wires to a netlist network with 261 inputs and 115 outputs.

3.93.13.1. Executing ABC.

3.93.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31963$abc$28804$auto$opt_dff.cc:219:make_patterns_logic$2186, asynchronously reset by \reset
Extracted 202 gates and 312 wires to a netlist network with 110 inputs and 79 outputs.

3.93.14.1. Executing ABC.

3.93.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31824$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2155, asynchronously reset by \reset
Extracted 140 gates and 274 wires to a netlist network with 134 inputs and 64 outputs.

3.93.15.1. Executing ABC.

3.93.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$31143$abc$27770$auto$opt_dff.cc:219:make_patterns_logic$2150, asynchronously reset by \reset
Extracted 796 gates and 1046 wires to a netlist network with 250 inputs and 172 outputs.

3.93.16.1. Executing ABC.

3.93.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 506 gates and 676 wires to a netlist network with 170 inputs and 197 outputs.

3.93.17.1. Executing ABC.

yosys> abc -dff

3.94. Executing ABC pass (technology mapping using ABC).

3.94.1. Summary of detected clock domains:
  235 cells in clk=\clock, en=$abc$38379$abc$34988$abc$24086$auto$opt_dff.cc:219:make_patterns_logic$2077, arst=\reset, srst={ }
  234 cells in clk=\clock, en=$abc$38554$abc$29997$abc$28931$auto$opt_dff.cc:219:make_patterns_logic$2203, arst=\reset, srst={ }
  145 cells in clk=\clock, en=$abc$39658$abc$36830$abc$25953$auto$opt_dff.cc:219:make_patterns_logic$1969, arst=\reset, srst={ }
  190 cells in clk=\clock, en=$abc$39795$abc$34822$abc$23961$auto$opt_dff.cc:219:make_patterns_logic$2060, arst=\reset, srst={ }
  1606 cells in clk=\clock, en=$abc$46334$lo37, arst=\reset, srst={ }
  138 cells in clk=\clock, en=$abc$42411$abc$29850$abc$29125$auto$opt_dff.cc:219:make_patterns_logic$2095, arst=\reset, srst={ }
  978 cells in clk=\clock, en=$abc$38725$abc$32188$abc$21566$auto$opt_dff.cc:219:make_patterns_logic$1986, arst=\reset, srst={ }
  541 cells in clk=\clock, en=$abc$42538$abc$34013$abc$23183$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\reset, srst={ }
  875 cells in clk=\clock, en=$abc$45454$abc$31143$abc$27770$auto$opt_dff.cc:219:make_patterns_logic$2150, arst=\reset, srst={ }
  879 cells in clk=\clock, en=$abc$41558$abc$33049$abc$22381$auto$opt_dff.cc:219:make_patterns_logic$2005, arst=\reset, srst={ }
  854 cells in clk=\clock, en=$abc$43097$abc$30170$abc$26942$auto$opt_dff.cc:219:make_patterns_logic$2131, arst=\reset, srst={ }
  168 cells in clk=\clock, en=$abc$43932$abc$34573$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2029, arst=\reset, srst={ }
  926 cells in clk=\clock, en=$abc$44180$abc$36973$abc$26099$auto$opt_dff.cc:219:make_patterns_logic$2112, arst=\reset, srst={ }
  234 cells in clk=\clock, en=$abc$45090$abc$31963$abc$28804$auto$opt_dff.cc:219:make_patterns_logic$2186, arst=\reset, srst={ }
  281 cells in clk=\clock, en=$abc$45314$abc$31824$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2155, arst=\reset, srst={ }
  561 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.94.2. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38379$abc$34988$abc$24086$auto$opt_dff.cc:219:make_patterns_logic$2077, asynchronously reset by \reset
Extracted 171 gates and 286 wires to a netlist network with 115 inputs and 66 outputs.

3.94.2.1. Executing ABC.

3.94.3. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38554$abc$29997$abc$28931$auto$opt_dff.cc:219:make_patterns_logic$2203, asynchronously reset by \reset
Extracted 170 gates and 283 wires to a netlist network with 113 inputs and 65 outputs.

3.94.3.1. Executing ABC.

3.94.4. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$39658$abc$36830$abc$25953$auto$opt_dff.cc:219:make_patterns_logic$1969, asynchronously reset by \reset
Extracted 137 gates and 207 wires to a netlist network with 70 inputs and 47 outputs.

3.94.4.1. Executing ABC.

3.94.5. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$39795$abc$34822$abc$23961$auto$opt_dff.cc:219:make_patterns_logic$2060, asynchronously reset by \reset
Extracted 150 gates and 246 wires to a netlist network with 96 inputs and 70 outputs.

3.94.5.1. Executing ABC.

3.94.6. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$46334$lo37, asynchronously reset by \reset
Extracted 1606 gates and 1931 wires to a netlist network with 325 inputs and 124 outputs.

3.94.6.1. Executing ABC.

3.94.7. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42411$abc$29850$abc$29125$auto$opt_dff.cc:219:make_patterns_logic$2095, asynchronously reset by \reset
Extracted 132 gates and 189 wires to a netlist network with 57 inputs and 40 outputs.

3.94.7.1. Executing ABC.

3.94.8. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$38725$abc$32188$abc$21566$auto$opt_dff.cc:219:make_patterns_logic$1986, asynchronously reset by \reset
Extracted 925 gates and 1207 wires to a netlist network with 282 inputs and 170 outputs.

3.94.8.1. Executing ABC.

3.94.9. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$42538$abc$34013$abc$23183$auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \reset
Extracted 541 gates and 728 wires to a netlist network with 187 inputs and 38 outputs.

3.94.9.1. Executing ABC.

3.94.10. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$45454$abc$31143$abc$27770$auto$opt_dff.cc:219:make_patterns_logic$2150, asynchronously reset by \reset
Extracted 817 gates and 1048 wires to a netlist network with 231 inputs and 121 outputs.

3.94.10.1. Executing ABC.

3.94.11. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$41558$abc$33049$abc$22381$auto$opt_dff.cc:219:make_patterns_logic$2005, asynchronously reset by \reset
Extracted 849 gates and 1070 wires to a netlist network with 221 inputs and 144 outputs.

3.94.11.1. Executing ABC.

3.94.12. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$43097$abc$30170$abc$26942$auto$opt_dff.cc:219:make_patterns_logic$2131, asynchronously reset by \reset
Extracted 824 gates and 1032 wires to a netlist network with 208 inputs and 128 outputs.

3.94.12.1. Executing ABC.

3.94.13. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$43932$abc$34573$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2029, asynchronously reset by \reset
Extracted 136 gates and 268 wires to a netlist network with 132 inputs and 64 outputs.

3.94.13.1. Executing ABC.

3.94.14. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$44180$abc$36973$abc$26099$auto$opt_dff.cc:219:make_patterns_logic$2112, asynchronously reset by \reset
Extracted 891 gates and 1159 wires to a netlist network with 268 inputs and 117 outputs.

3.94.14.1. Executing ABC.

3.94.15. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$45090$abc$31963$abc$28804$auto$opt_dff.cc:219:make_patterns_logic$2186, asynchronously reset by \reset
Extracted 212 gates and 331 wires to a netlist network with 119 inputs and 86 outputs.

3.94.15.1. Executing ABC.

3.94.16. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$45314$abc$31824$abc$29272$auto$opt_dff.cc:219:make_patterns_logic$2155, asynchronously reset by \reset
Extracted 249 gates and 473 wires to a netlist network with 224 inputs and 65 outputs.

3.94.16.1. Executing ABC.

3.94.17. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 497 gates and 665 wires to a netlist network with 168 inputs and 197 outputs.

3.94.17.1. Executing ABC.

yosys> opt_ffinv

3.95. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat -nosdff

3.96. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.96.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~378 debug messages>

yosys> opt_merge -nomux

3.96.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~615 debug messages>
Removed a total of 205 cells.

yosys> opt_muxtree

3.96.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.96.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.96.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.96.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 1 unused cells and 39170 unused wires.
<suppressed ~24 debug messages>

yosys> opt_expr

3.96.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.96.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.96.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.96.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.96.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.96.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.96.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.96.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.96.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.97. Executing BMUXMAP pass.

yosys> demuxmap

3.98. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_vmi25a/abc_tmp_1.scr

3.99. Executing ABC pass (technology mapping using ABC).

3.99.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 7668 gates and 8513 wires to a netlist network with 845 inputs and 906 outputs.

3.99.1.1. Executing ABC.
DE:   #PIs = 845  #Luts =  2468  Max Lvl =  35  Avg Lvl =  10.09  [   0.23 sec. at Pass 0]
DE:   #PIs = 845  #Luts =  1835  Max Lvl =  32  Avg Lvl =   9.30  [  10.08 sec. at Pass 1]
DE:   #PIs = 845  #Luts =  1798  Max Lvl =  35  Avg Lvl =  10.73  [   1.69 sec. at Pass 2]
DE:   #PIs = 845  #Luts =  1779  Max Lvl =  36  Avg Lvl =  10.60  [   2.67 sec. at Pass 3]
DE:   #PIs = 845  #Luts =  1713  Max Lvl =  28  Avg Lvl =   9.93  [   1.79 sec. at Pass 4]
DE:   #PIs = 845  #Luts =  1660  Max Lvl =  26  Avg Lvl =   9.84  [   3.57 sec. at Pass 5]
DE:   #PIs = 845  #Luts =  1646  Max Lvl =  23  Avg Lvl =   8.76  [   1.61 sec. at Pass 6]
DE:   #PIs = 845  #Luts =  1620  Max Lvl =  22  Avg Lvl =   8.65  [   2.29 sec. at Pass 7]
DE:   #PIs = 845  #Luts =  1616  Max Lvl =  22  Avg Lvl =   8.81  [   1.37 sec. at Pass 8]
DE:   #PIs = 845  #Luts =  1600  Max Lvl =  22  Avg Lvl =   8.82  [   2.05 sec. at Pass 9]
DE:   #PIs = 845  #Luts =  1589  Max Lvl =  22  Avg Lvl =   8.73  [   1.46 sec. at Pass 10]
DE:   #PIs = 845  #Luts =  1572  Max Lvl =  25  Avg Lvl =   9.18  [   2.00 sec. at Pass 11]
DE:   #PIs = 845  #Luts =  1572  Max Lvl =  23  Avg Lvl =   8.76  [   1.43 sec. at Pass 12]
DE:   #PIs = 845  #Luts =  1558  Max Lvl =  25  Avg Lvl =   8.87  [   1.93 sec. at Pass 13]
DE:   #PIs = 845  #Luts =  1554  Max Lvl =  22  Avg Lvl =   9.05  [   1.41 sec. at Pass 14]
DE:   #PIs = 845  #Luts =  1545  Max Lvl =  24  Avg Lvl =   9.19  [   2.15 sec. at Pass 15]
DE:   #PIs = 845  #Luts =  1544  Max Lvl =  21  Avg Lvl =   8.04  [   1.31 sec. at Pass 16]
DE:   #PIs = 845  #Luts =  1542  Max Lvl =  22  Avg Lvl =   8.49  [   2.07 sec. at Pass 17]
DE:   #PIs = 845  #Luts =  1540  Max Lvl =  21  Avg Lvl =   7.96  [   1.30 sec. at Pass 18]
DE:   #PIs = 845  #Luts =  1534  Max Lvl =  24  Avg Lvl =   8.78  [   1.88 sec. at Pass 19]
DE:   #PIs = 845  #Luts =  1533  Max Lvl =  23  Avg Lvl =   8.28  [   1.23 sec. at Pass 20]
DE:   #PIs = 845  #Luts =  1531  Max Lvl =  22  Avg Lvl =   8.31  [   1.90 sec. at Pass 21]
DE:   #PIs = 845  #Luts =  1530  Max Lvl =  22  Avg Lvl =   8.31  [   0.35 sec. at Pass 22]

yosys> opt_expr

3.100. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.102. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.103. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.104. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.105. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.106. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 8299 unused wires.
<suppressed ~5 debug messages>

yosys> opt_expr

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.109. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 1 inverters.

yosys> stat

3.110. Printing statistics.

=== b21 ===

   Number of wires:               1453
   Number of wire bits:           3460
   Number of public wires:          20
   Number of public wire bits:     294
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2443
     $_DFFE_PP0N_                   32
     $_DFFE_PP0P_                  324
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1477
     adder_carry                   538


yosys> shregmap -minlen 8 -maxlen 20

3.111. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.112. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.113. Printing statistics.

=== b21 ===

   Number of wires:               1453
   Number of wire bits:           3460
   Number of public wires:          20
   Number of public wire bits:     294
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2443
     $_DFFE_PP0N_                   32
     $_DFFE_PP0P_                  324
     $_DFF_PP0_                     71
     $_DFF_PP1_                      1
     $lut                         1477
     adder_carry                   538


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.114. Executing TECHMAP pass (map to technology primitives).

3.114.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.114.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.114.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2501 debug messages>

yosys> opt_expr -mux_undef

3.115. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~27888 debug messages>

yosys> simplemap

3.116. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge

3.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~12660 debug messages>
Removed a total of 4220 cells.

yosys> opt_dff -nodffe -nosdff

3.119. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.120. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 5553 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.121. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.121.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
<suppressed ~938 debug messages>

yosys> opt_merge -nomux

3.121.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

yosys> opt_muxtree

3.121.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.121.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.121.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 304 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.121.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.121.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.121.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.121.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.121.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.121.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.121.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..

yosys> opt_expr

3.121.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

3.121.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_vmi25a/abc_tmp_2.scr

3.122. Executing ABC pass (technology mapping using ABC).

3.122.1. Extracting gate netlist of module `\b21' to `<abc-temp-dir>/input.blif'..
Extracted 4817 gates and 5660 wires to a netlist network with 841 inputs and 854 outputs.

3.122.1.1. Executing ABC.
DE:   #PIs = 841  #Luts =  1488  Max Lvl =  23  Avg Lvl =   8.26  [   0.18 sec. at Pass 0]
DE:   #PIs = 841  #Luts =  1483  Max Lvl =  23  Avg Lvl =   8.27  [   8.01 sec. at Pass 1]
DE:   #PIs = 841  #Luts =  1468  Max Lvl =  22  Avg Lvl =   8.31  [   1.51 sec. at Pass 2]
DE:   #PIs = 841  #Luts =  1467  Max Lvl =  22  Avg Lvl =   8.31  [   2.40 sec. at Pass 3]
DE:   #PIs = 841  #Luts =  1460  Max Lvl =  21  Avg Lvl =   8.31  [   1.72 sec. at Pass 4]
DE:   #PIs = 841  #Luts =  1453  Max Lvl =  21  Avg Lvl =   8.08  [   2.71 sec. at Pass 5]
DE:   #PIs = 841  #Luts =  1450  Max Lvl =  21  Avg Lvl =   7.98  [   1.82 sec. at Pass 6]
DE:   #PIs = 841  #Luts =  1450  Max Lvl =  21  Avg Lvl =   7.98  [   2.62 sec. at Pass 7]
DE:   #PIs = 841  #Luts =  1442  Max Lvl =  24  Avg Lvl =   8.52  [   1.75 sec. at Pass 8]
DE:   #PIs = 841  #Luts =  1442  Max Lvl =  24  Avg Lvl =   8.52  [   2.45 sec. at Pass 9]
DE:   #PIs = 841  #Luts =  1437  Max Lvl =  22  Avg Lvl =   8.47  [   1.51 sec. at Pass 10]
DE:   #PIs = 841  #Luts =  1437  Max Lvl =  22  Avg Lvl =   8.47  [   2.04 sec. at Pass 11]
DE:   #PIs = 841  #Luts =  1435  Max Lvl =  23  Avg Lvl =   8.55  [   1.56 sec. at Pass 12]
DE:   #PIs = 841  #Luts =  1429  Max Lvl =  25  Avg Lvl =   8.38  [   2.11 sec. at Pass 13]
DE:   #PIs = 841  #Luts =  1426  Max Lvl =  25  Avg Lvl =   8.65  [   1.42 sec. at Pass 14]
DE:   #PIs = 841  #Luts =  1425  Max Lvl =  24  Avg Lvl =   8.76  [   2.09 sec. at Pass 15]
DE:   #PIs = 841  #Luts =  1425  Max Lvl =  24  Avg Lvl =   8.76  [   1.48 sec. at Pass 16]
DE:   #PIs = 841  #Luts =  1424  Max Lvl =  22  Avg Lvl =   8.00  [   2.15 sec. at Pass 17]
DE:   #PIs = 841  #Luts =  1422  Max Lvl =  24  Avg Lvl =   8.61  [   1.47 sec. at Pass 18]
DE:   #PIs = 841  #Luts =  1419  Max Lvl =  26  Avg Lvl =   8.90  [   2.18 sec. at Pass 19]
DE:   #PIs = 841  #Luts =  1414  Max Lvl =  23  Avg Lvl =   8.59  [   1.66 sec. at Pass 20]
DE:   #PIs = 841  #Luts =  1414  Max Lvl =  23  Avg Lvl =   8.59  [   2.36 sec. at Pass 21]
DE:   #PIs = 841  #Luts =  1412  Max Lvl =  24  Avg Lvl =   8.84  [   1.51 sec. at Pass 22]
DE:   #PIs = 841  #Luts =  1412  Max Lvl =  24  Avg Lvl =   8.84  [   2.09 sec. at Pass 23]
DE:   #PIs = 841  #Luts =  1412  Max Lvl =  23  Avg Lvl =   8.55  [   1.13 sec. at Pass 24]
DE:   #PIs = 841  #Luts =  1412  Max Lvl =  23  Avg Lvl =   8.55  [   2.30 sec. at Pass 25]
DE:   #PIs = 841  #Luts =  1412  Max Lvl =  23  Avg Lvl =   8.55  [   1.47 sec. at Pass 26]
DE:   #PIs = 841  #Luts =  1412  Max Lvl =  23  Avg Lvl =   8.55  [   2.13 sec. at Pass 27]
DE:   #PIs = 841  #Luts =  1411  Max Lvl =  24  Avg Lvl =   8.82  [   0.42 sec. at Pass 28]

yosys> opt_expr

3.123. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.

yosys> opt_merge -nomux

3.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.125. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b21..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.126. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b21.
Performed a total of 0 changes.

yosys> opt_merge

3.127. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b21'.
Removed a total of 0 cells.

yosys> opt_share

3.128. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.129. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.130. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 4816 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.131. Executing OPT_EXPR pass (perform const folding).
Optimizing module b21.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.132. Executing HIERARCHY pass (managing design hierarchy).

3.132.1. Analyzing design hierarchy..
Top module:  \b21

3.132.2. Analyzing design hierarchy..
Top module:  \b21
Removed 0 unused modules.

yosys> stat

3.133. Printing statistics.

=== b21 ===

   Number of wires:               1386
   Number of wire bits:           3393
   Number of public wires:          20
   Number of public wire bits:     294
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2377
     $lut                         1411
     adder_carry                   538
     dffsre                        428


yosys> opt_clean -purge

3.134. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b21..
Removed 0 unused cells and 6 unused wires.
<suppressed ~6 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.135. Executing Verilog backend.
Dumping module `\b21'.

Warnings: 5 unique messages, 6 total
End of script. Logfile hash: 94da3a11e8, CPU: user 31.04s system 0.76s, MEM: 112.71 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (1189 sec), 0% 29x opt_dff (11 sec), ...
real 152.14
user 1105.27
sys 111.48
