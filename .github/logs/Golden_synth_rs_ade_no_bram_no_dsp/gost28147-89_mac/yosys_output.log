
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.32
 Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_mac.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_mac -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.50

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_mac

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_mac.v:1: compiling module 'gost89_mac'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_mac.v:50: expression size 6 truncated to fit in target size 5
Importing module gost89_mac.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_mac.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
<suppressed ~9 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1413 unused wires.
<suppressed ~22 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_mac...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
    New ctrl vector for $pmux cell $verific$select_106$gost89_mac.v:80$841: { $auto$opt_reduce.cc:134:opt_pmux$1463 $auto$opt_reduce.cc:134:opt_pmux$1461 $auto$opt_reduce.cc:134:opt_pmux$1459 $auto$opt_reduce.cc:134:opt_pmux$1457 $auto$opt_reduce.cc:134:opt_pmux$1455 $auto$opt_reduce.cc:134:opt_pmux$1453 $auto$opt_reduce.cc:134:opt_pmux$1451 $auto$opt_reduce.cc:134:opt_pmux$1449 $verific$n1570$41 }
  Optimizing cells in module \gost89_mac.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_key_reg$gost89_mac.v:80$842 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$out_reg$gost89_mac.v:60$820 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n2_reg$gost89_mac.v:60$819 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n1_reg$gost89_mac.v:60$818 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$counter_reg$gost89_mac.v:60$815 ($aldff) from module gost89_mac.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_mac.v:80$842 ($dff) from module gost89_mac (D = $verific$n1571$89, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_mac.v:60$820 ($dff) from module gost89_mac (D = \n1, Q = \out).
Adding SRST signal on $verific$need_xor_reg$gost89_mac.v:60$816 ($dff) from module gost89_mac (D = $verific$n428$13, Q = \need_xor, rval = 1'1).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~2 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$add_46$gost89_mac.v:50$798 ($add).
Removed top 4 bits (of 5) from port A of cell gost89_mac.$verific$LessThan_49$gost89_mac.v:51$801 ($lt).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$equal_90$gost89_mac.v:65$823 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_91$gost89_mac.v:66$824 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_92$gost89_mac.v:67$825 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_93$gost89_mac.v:68$826 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_94$gost89_mac.v:69$827 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_95$gost89_mac.v:70$828 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_96$gost89_mac.v:71$829 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_97$gost89_mac.v:72$830 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_98$gost89_mac.v:73$831 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_99$gost89_mac.v:74$832 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_100$gost89_mac.v:75$833 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_101$gost89_mac.v:76$834 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_102$gost89_mac.v:77$835 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_103$gost89_mac.v:78$836 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_104$gost89_mac.v:79$837 ($eq).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_mac:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$849 ($add).
  creating $macc model for $verific$add_46$gost89_mac.v:50$798 ($add).
  creating $alu model for $macc $verific$add_46$gost89_mac.v:50$798.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$849.
  creating $alu model for $verific$LessThan_45$gost89_mac.v:49$797 ($lt): new $alu
  creating $alu model for $verific$LessThan_49$gost89_mac.v:51$801 ($lt): new $alu
  creating $alu cell for $verific$LessThan_49$gost89_mac.v:51$801: $auto$alumacc.cc:485:replace_alu$1501
  creating $alu cell for $verific$LessThan_45$gost89_mac.v:49$797: $auto$alumacc.cc:485:replace_alu$1506
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$849: $auto$alumacc.cc:485:replace_alu$1517
  creating $alu cell for $verific$add_46$gost89_mac.v:50$798: $auto$alumacc.cc:485:replace_alu$1520
  created 4 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1495: { $auto$rtlil.cc:2398:Or$1482 $verific$n1568$39 $verific$n1567$38 $verific$n1566$37 $verific$n1560$31 $verific$n1559$30 $verific$n1558$29 }
  Optimizing cells in module \gost89_mac.
Performed a total of 1 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== gost89_mac ===

   Number of wires:                135
   Number of wire bits:           3203
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           32
     $not                            6
     $or                             3
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== gost89_mac ===

   Number of wires:                135
   Number of wire bits:           3203
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           32
     $not                            6
     $or                             3
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> stat

3.24. Printing statistics.

=== gost89_mac ===

   Number of wires:                135
   Number of wire bits:           3203
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           32
     $not                            6
     $or                             3
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~560 debug messages>

yosys> stat

3.26. Printing statistics.

=== gost89_mac ===

   Number of wires:                389
   Number of wire bits:           7914
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1813
     $_AND_                         46
     $_DFFE_PP_                     64
     $_DFF_P_                       70
     $_MUX_                       1170
     $_NOT_                         70
     $_OR_                         117
     $_SDFF_PP1_                     1
     $_XOR_                        243
     adder_carry                    32


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~193 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~225 debug messages>
Removed a total of 75 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 43 unused cells and 223 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~69 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  399 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  69 cells in clk=\clk, en={ }, arst={ }, srst=$verific$n436$15
  1007 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 367 gates and 672 wires to a netlist network with 305 inputs and 64 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 70 wires to a netlist network with 35 inputs and 34 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $verific$n436$15
Extracted 69 gates and 203 wires to a netlist network with 132 inputs and 65 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1007 gates and 1686 wires to a netlist network with 678 inputs and 118 outputs.

3.33.5.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  69 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4413$verific$n436$15
  546 cells in clk=\clk, en=$abc$3780$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$4314$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  1045 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.34.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4413$verific$n436$15
Extracted 69 gates and 201 wires to a netlist network with 132 inputs and 66 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3780$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 515 gates and 814 wires to a netlist network with 299 inputs and 65 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4314$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1044 gates and 1725 wires to a netlist network with 681 inputs and 111 outputs.

3.34.5.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  35 cells in clk=\clk, en=$abc$6240$abc$4314$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  67 cells in clk=\clk, en={ }, arst={ }, srst=$abc$5574$abc$4413$verific$n436$15
  596 cells in clk=\clk, en=$abc$5643$abc$3780$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  1143 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.35.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6240$abc$4314$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$5574$abc$4413$verific$n436$15
Extracted 67 gates and 199 wires to a netlist network with 132 inputs and 65 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5643$abc$3780$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 565 gates and 864 wires to a netlist network with 299 inputs and 64 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1142 gates and 1821 wires to a netlist network with 679 inputs and 111 outputs.

3.35.5.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  658 cells in clk=\clk, en=$abc$7682$abc$5643$abc$3780$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$7514$abc$6240$abc$4314$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  67 cells in clk=\clk, en={ }, arst={ }, srst=$abc$7614$abc$5574$abc$4413$verific$n436$15
  1139 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7682$abc$5643$abc$3780$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 627 gates and 926 wires to a netlist network with 299 inputs and 64 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7514$abc$6240$abc$4314$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$7614$abc$5574$abc$4413$verific$n436$15
Extracted 67 gates and 199 wires to a netlist network with 132 inputs and 65 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1138 gates and 1817 wires to a netlist network with 679 inputs and 111 outputs.

3.36.5.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~71 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10406 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li69_li69, Q = $abc$10336$lo69).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10405 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li68_li68, Q = $abc$10336$lo68).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10404 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li67_li67, Q = $abc$10336$lo67).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10403 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li66_li66, Q = $abc$10336$lo66).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10402 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li65_li65, Q = $abc$10336$lo65).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10401 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li64_li64, Q = $abc$10336$lo64).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10400 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li63_li63, Q = $abc$10336$lo63).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10399 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li62_li62, Q = $abc$10336$lo62).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10398 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li61_li61, Q = $abc$10336$lo61).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10397 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li60_li60, Q = $abc$10336$lo60).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10396 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li59_li59, Q = $abc$10336$lo59).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10395 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li58_li58, Q = $abc$10336$lo58).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10394 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li57_li57, Q = $abc$10336$lo57).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10393 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li56_li56, Q = $abc$10336$lo56).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10392 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li55_li55, Q = $abc$10336$lo55).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10391 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li54_li54, Q = $abc$10336$lo54).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10390 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li53_li53, Q = $abc$10336$lo53).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10389 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li52_li52, Q = $abc$10336$lo52).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10388 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li51_li51, Q = $abc$10336$lo51).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10387 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li50_li50, Q = $abc$10336$lo50).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10386 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li49_li49, Q = $abc$10336$lo49).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10385 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li48_li48, Q = $abc$10336$lo48).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10384 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li47_li47, Q = $abc$10336$lo47).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10383 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li46_li46, Q = $abc$10336$lo46).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10382 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li45_li45, Q = $abc$10336$lo45).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10381 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li44_li44, Q = $abc$10336$lo44).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10380 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li43_li43, Q = $abc$10336$lo43).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10379 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li42_li42, Q = $abc$10336$lo42).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10378 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li41_li41, Q = $abc$10336$lo41).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10377 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li40_li40, Q = $abc$10336$lo40).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10376 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li39_li39, Q = $abc$10336$lo39).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10375 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li38_li38, Q = $abc$10336$lo38).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10374 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li37_li37, Q = $abc$10336$lo37).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10373 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li36_li36, Q = $abc$10336$lo36).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10372 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li35_li35, Q = $abc$10336$lo35).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10371 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li34_li34, Q = $abc$10336$lo34).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10370 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li33_li33, Q = $abc$10336$lo33).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10369 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li32_li32, Q = $abc$10336$lo32).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10368 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li31_li31, Q = $abc$10336$lo31).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10367 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li30_li30, Q = $abc$10336$lo30).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10366 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li29_li29, Q = $abc$10336$lo29).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10365 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li28_li28, Q = $abc$10336$lo28).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10364 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li27_li27, Q = $abc$10336$lo27).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10363 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li26_li26, Q = $abc$10336$lo26).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10362 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li25_li25, Q = $abc$10336$lo25).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10361 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li24_li24, Q = $abc$10336$lo24).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10360 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li23_li23, Q = $abc$10336$lo23).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10359 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li22_li22, Q = $abc$10336$lo22).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10358 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li21_li21, Q = $abc$10336$lo21).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10357 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li20_li20, Q = $abc$10336$lo20).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10356 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li19_li19, Q = $abc$10336$lo19).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10355 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li18_li18, Q = $abc$10336$lo18).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10354 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li17_li17, Q = $abc$10336$lo17).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10353 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li16_li16, Q = $abc$10336$lo16).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10352 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li15_li15, Q = $abc$10336$lo15).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10351 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li14_li14, Q = $abc$10336$lo14).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10350 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li13_li13, Q = $abc$10336$lo13).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10349 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li12_li12, Q = $abc$10336$lo12).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10348 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li11_li11, Q = $abc$10336$lo11).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10347 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li10_li10, Q = $abc$10336$lo10).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10345 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li08_li08, Q = $abc$10336$lo08).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10344 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li07_li07, Q = $abc$10336$lo07).
Adding EN signal on $abc$10336$auto$blifparse.cc:362:parse_blif$10343 ($_DFF_P_) from module gost89_mac (D = $abc$10336$li06_li06, Q = $abc$10336$lo06).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 10790 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~189 debug messages>

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~744 debug messages>
Removed a total of 248 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 311 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.38.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_I0zdOw/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1709 gates and 2678 wires to a netlist network with 968 inputs and 137 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   479  Max Lvl =   5  Avg Lvl =   2.63  [   0.30 sec. at Pass 0]
DE:   #PIs = 968  #Luts =   376  Max Lvl =   5  Avg Lvl =   2.34  [   3.47 sec. at Pass 1]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   5  Avg Lvl =   2.34  [   1.51 sec. at Pass 2]
DE:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.33  [   1.43 sec. at Pass 3]
DE:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.34  [   1.70 sec. at Pass 4]
DE:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.34  [   2.05 sec. at Pass 5]
DE:   #PIs = 968  #Luts =   373  Max Lvl =   4  Avg Lvl =   2.09  [   1.79 sec. at Pass 6]
DE:   #PIs = 968  #Luts =   373  Max Lvl =   4  Avg Lvl =   2.09  [   2.23 sec. at Pass 7]
DE:   #PIs = 968  #Luts =   373  Max Lvl =   4  Avg Lvl =   2.09  [   1.83 sec. at Pass 8]
DE:   #PIs = 968  #Luts =   373  Max Lvl =   4  Avg Lvl =   2.09  [   2.02 sec. at Pass 9]
DE:   #PIs = 968  #Luts =   373  Max Lvl =   4  Avg Lvl =   2.09  [   8.89 sec. at Pass 10]
DE:   #PIs = 968  #Luts =   373  Max Lvl =   4  Avg Lvl =   2.09  [   0.60 sec. at Pass 11]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2676 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== gost89_mac ===

   Number of wires:                423
   Number of wire bits:           2726
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                540
     $_DFFE_PP_                    127
     $_DFF_P_                        7
     $_SDFF_PP0_                     1
     $lut                          373
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== gost89_mac ===

   Number of wires:                424
   Number of wire bits:           2727
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                541
     $_DFFE_PP0P_                  127
     $_DFF_P_                        8
     $_MUX_                          1
     $lut                          373
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~771 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~16375 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~1794 debug messages>
Removed a total of 598 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2175 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~220 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.53.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_I0zdOw/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1342 gates and 2312 wires to a netlist network with 968 inputs and 136 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   372  Max Lvl =   5  Avg Lvl =   2.11  [   0.39 sec. at Pass 0]
DE:   #PIs = 968  #Luts =   372  Max Lvl =   4  Avg Lvl =   2.10  [   5.41 sec. at Pass 1]
DE:   #PIs = 968  #Luts =   372  Max Lvl =   4  Avg Lvl =   2.10  [   1.37 sec. at Pass 2]
DE:   #PIs = 968  #Luts =   372  Max Lvl =   4  Avg Lvl =   2.10  [   1.51 sec. at Pass 3]
DE:   #PIs = 968  #Luts =   372  Max Lvl =   4  Avg Lvl =   2.10  [   1.67 sec. at Pass 4]
DE:   #PIs = 968  #Luts =   372  Max Lvl =   4  Avg Lvl =   2.10  [   1.77 sec. at Pass 5]
DE:   #PIs = 968  #Luts =   372  Max Lvl =   4  Avg Lvl =   2.10  [   5.63 sec. at Pass 6]
DE:   #PIs = 968  #Luts =   372  Max Lvl =   4  Avg Lvl =   2.10  [   0.38 sec. at Pass 7]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1945 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \gost89_mac

3.56.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== gost89_mac ===

   Number of wires:                422
   Number of wire bits:           2725
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                539
     $lut                          372
     adder_carry                    32
     dffsre                        135


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 19 unused wires.
<suppressed ~19 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_mac'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 51c8423a0d, CPU: user 7.45s system 0.18s, MEM: 55.28 MB peak
Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)
Time spent: 97% 6x abc (224 sec), 1% 36x opt_expr (2 sec), ...
real 76.88
user 213.45
sys 17.92
