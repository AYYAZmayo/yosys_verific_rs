
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.49
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Wed Jun  1 05:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_mac.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_mac -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.58

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_mac

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_mac.v:1: compiling module 'gost89_mac'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_mac.v:50: expression size 6 truncated to fit in target size 5
Importing module gost89_mac.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_mac.
<suppressed ~3 debug messages>

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_round.
Deleting now unused module gost89_sbox.
<suppressed ~9 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1421 unused wires.
<suppressed ~22 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module gost89_mac...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
    New ctrl vector for $pmux cell $verific$select_106$gost89_mac.v:80$841: { $auto$opt_reduce.cc:134:opt_pmux$1482 $auto$opt_reduce.cc:134:opt_pmux$1480 $auto$opt_reduce.cc:134:opt_pmux$1478 $auto$opt_reduce.cc:134:opt_pmux$1476 $auto$opt_reduce.cc:134:opt_pmux$1474 $auto$opt_reduce.cc:134:opt_pmux$1472 $auto$opt_reduce.cc:134:opt_pmux$1470 $auto$opt_reduce.cc:134:opt_pmux$1468 $verific$n1570$41 }
  Optimizing cells in module \gost89_mac.
Performed a total of 1 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_key_reg$gost89_mac.v:80$842 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$out_reg$gost89_mac.v:60$820 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n2_reg$gost89_mac.v:60$819 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n1_reg$gost89_mac.v:60$818 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$counter_reg$gost89_mac.v:60$815 ($aldff) from module gost89_mac.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_mac.v:80$842 ($dff) from module gost89_mac (D = $verific$n1571$89, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_mac.v:60$820 ($dff) from module gost89_mac (D = \n1, Q = \out).
Adding SRST signal on $verific$need_xor_reg$gost89_mac.v:60$816 ($dff) from module gost89_mac (D = $verific$n428$13, Q = \need_xor, rval = 1'1).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~4 debug messages>

3.17.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.17.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.17.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.17.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.17.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.17.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.17.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.17.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.17.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.17.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.17.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$add_46$gost89_mac.v:50$798 ($add).
Removed top 4 bits (of 5) from port A of cell gost89_mac.$verific$LessThan_49$gost89_mac.v:51$801 ($lt).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$equal_90$gost89_mac.v:65$823 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_91$gost89_mac.v:66$824 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_92$gost89_mac.v:67$825 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_93$gost89_mac.v:68$826 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_94$gost89_mac.v:69$827 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_95$gost89_mac.v:70$828 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_96$gost89_mac.v:71$829 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_97$gost89_mac.v:72$830 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_98$gost89_mac.v:73$831 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_99$gost89_mac.v:74$832 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_100$gost89_mac.v:75$833 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_101$gost89_mac.v:76$834 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_102$gost89_mac.v:77$835 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_103$gost89_mac.v:78$836 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_104$gost89_mac.v:79$837 ($eq).

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_mac:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$849 ($add).
  creating $macc model for $verific$add_46$gost89_mac.v:50$798 ($add).
  creating $alu model for $macc $verific$add_46$gost89_mac.v:50$798.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$849.
  creating $alu model for $verific$LessThan_45$gost89_mac.v:49$797 ($lt): new $alu
  creating $alu model for $verific$LessThan_49$gost89_mac.v:51$801 ($lt): new $alu
  creating $alu cell for $verific$LessThan_49$gost89_mac.v:51$801: $auto$alumacc.cc:485:replace_alu$1492
  creating $alu cell for $verific$LessThan_45$gost89_mac.v:49$797: $auto$alumacc.cc:485:replace_alu$1497
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$849: $auto$alumacc.cc:485:replace_alu$1508
  creating $alu cell for $verific$add_46$gost89_mac.v:50$798: $auto$alumacc.cc:485:replace_alu$1511
  created 4 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> stat

3.33. Printing statistics.

=== gost89_mac ===

   Number of wires:                149
   Number of wire bits:           3393
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                198
     $alu                            4
     $and                            5
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                          143
     $not                            6
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> memory -nomap

3.34. Executing MEMORY pass.

yosys> opt_mem

3.34.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.34.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.34.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.34.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.34.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.34.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_share

3.34.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.34.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_collect

3.34.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.35. Printing statistics.

=== gost89_mac ===

   Number of wires:                149
   Number of wire bits:           3393
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                198
     $alu                            4
     $and                            5
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                          143
     $not                            6
     $or                             1
     $pmux                           1
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> muxpack

3.36. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~144 debug messages>

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> pmuxtree

3.38. Executing PMUXTREE pass.

yosys> muxpack

3.39. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1530 ... gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1532 to a pmux with 2 cases.
Converting gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1520 ... gost89_mac.$auto$pmuxtree.cc:65:recursive_mux_generator$1522 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~152 debug messages>

yosys> memory_map

3.40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.41. Printing statistics.

=== gost89_mac ===

   Number of wires:                163
   Number of wire bits:           3686
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                209
     $alu                            4
     $and                            5
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                          148
     $not                            7
     $or                             3
     $pmux                           2
     $reduce_and                     2
     $reduce_or                     11
     $sdff                           1
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.42.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.42.3. Continuing TECHMAP pass.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~769 debug messages>

yosys> stat

3.43. Printing statistics.

=== gost89_mac ===

   Number of wires:                603
   Number of wire bits:           8827
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1950
     $_AND_                        174
     $_DFFE_PP_                     64
     $_DFF_P_                       70
     $_MUX_                       1106
     $_NOT_                         71
     $_OR_                         189
     $_SDFF_PP1_                     1
     $_XOR_                        243
     adder_carry                    32


yosys> opt_expr

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~225 debug messages>

yosys> opt_merge -nomux

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~228 debug messages>
Removed a total of 76 cells.

yosys> opt_muxtree

3.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.49. Executing OPT_SHARE pass.

yosys> opt_dff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 50 unused cells and 435 unused wires.
<suppressed ~51 debug messages>

yosys> opt_expr

3.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 2

yosys> opt -fast -full

3.60. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.60.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~69 debug messages>

yosys> opt_merge

3.60.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.60.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.60.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.60.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.61. Executing TECHMAP pass (map to technology primitives).

3.61.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.61.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.62. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.62.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.62.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.62.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.62.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.62.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.62.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.62.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.62.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.63. Executing ABC pass (technology mapping using ABC).

3.63.1. Summary of detected clock domains:
  495 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$1484, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1487, arst={ }, srst={ }
  69 cells in clk=\clk, en={ }, arst={ }, srst=$verific$n436$15
  1040 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.63.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1484
Extracted 495 gates and 799 wires to a netlist network with 304 inputs and 33 outputs.

3.63.2.1. Executing ABC.

3.63.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1487
Extracted 35 gates and 70 wires to a netlist network with 35 inputs and 34 outputs.

3.63.3.1. Executing ABC.

3.63.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $verific$n436$15
Extracted 69 gates and 203 wires to a netlist network with 132 inputs and 65 outputs.

3.63.4.1. Executing ABC.

3.63.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1008 gates and 1686 wires to a netlist network with 677 inputs and 118 outputs.

3.63.5.1. Executing ABC.

yosys> abc -dff

3.64. Executing ABC pass (technology mapping using ABC).

3.64.1. Summary of detected clock domains:
  69 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4581$verific$n436$15
  35 cells in clk=\clk, en=$abc$4482$auto$opt_dff.cc:219:make_patterns_logic$1487, arst={ }, srst={ }
  486 cells in clk=\clk, en=$abc$4010$auto$opt_dff.cc:194:make_patterns_logic$1484, arst={ }, srst={ }
  1114 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.64.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4581$verific$n436$15
Extracted 69 gates and 201 wires to a netlist network with 132 inputs and 66 outputs.

3.64.2.1. Executing ABC.

3.64.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4482$auto$opt_dff.cc:219:make_patterns_logic$1487
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.64.3.1. Executing ABC.

3.64.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4010$auto$opt_dff.cc:194:make_patterns_logic$1484
Extracted 486 gates and 785 wires to a netlist network with 299 inputs and 34 outputs.

3.64.4.1. Executing ABC.

3.64.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1082 gates and 1762 wires to a netlist network with 680 inputs and 111 outputs.

3.64.5.1. Executing ABC.

yosys> abc -dff

3.65. Executing ABC pass (technology mapping using ABC).

3.65.1. Summary of detected clock domains:
  67 cells in clk=\clk, en={ }, arst={ }, srst=$abc$5783$abc$4581$verific$n436$15
  599 cells in clk=\clk, en=$abc$5952$abc$4010$auto$opt_dff.cc:194:make_patterns_logic$1484, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$5852$abc$4482$auto$opt_dff.cc:219:make_patterns_logic$1487, arst={ }, srst={ }
  1129 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.65.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$5783$abc$4581$verific$n436$15
Extracted 67 gates and 199 wires to a netlist network with 132 inputs and 65 outputs.

3.65.2.1. Executing ABC.

3.65.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5952$abc$4010$auto$opt_dff.cc:194:make_patterns_logic$1484
Extracted 599 gates and 898 wires to a netlist network with 299 inputs and 33 outputs.

3.65.3.1. Executing ABC.

3.65.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5852$abc$4482$auto$opt_dff.cc:219:make_patterns_logic$1487
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.65.4.1. Executing ABC.

3.65.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1097 gates and 1775 wires to a netlist network with 678 inputs and 111 outputs.

3.65.5.1. Executing ABC.

yosys> abc -dff

3.66. Executing ABC pass (technology mapping using ABC).

3.66.1. Summary of detected clock domains:
  35 cells in clk=\clk, en=$abc$8396$abc$5852$abc$4482$auto$opt_dff.cc:219:make_patterns_logic$1487, arst={ }, srst={ }
  67 cells in clk=\clk, en={ }, arst={ }, srst=$abc$7682$abc$5783$abc$4581$verific$n436$15
  645 cells in clk=\clk, en=$abc$7750$abc$5952$abc$4010$auto$opt_dff.cc:194:make_patterns_logic$1484, arst={ }, srst={ }
  1142 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.66.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8396$abc$5852$abc$4482$auto$opt_dff.cc:219:make_patterns_logic$1487
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.66.2.1. Executing ABC.

3.66.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$7682$abc$5783$abc$4581$verific$n436$15
Extracted 67 gates and 199 wires to a netlist network with 132 inputs and 65 outputs.

3.66.3.1. Executing ABC.

3.66.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7750$abc$5952$abc$4010$auto$opt_dff.cc:194:make_patterns_logic$1484
Extracted 645 gates and 944 wires to a netlist network with 299 inputs and 33 outputs.

3.66.4.1. Executing ABC.

3.66.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1110 gates and 1788 wires to a netlist network with 678 inputs and 111 outputs.

3.66.5.1. Executing ABC.

yosys> opt_ffinv

3.67. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.68. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.68.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~64 debug messages>

yosys> opt_merge -nomux

3.68.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.68.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.68.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.68.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10565 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li69_li69, Q = $abc$10495$lo69).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10564 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li68_li68, Q = $abc$10495$lo68).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10563 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li67_li67, Q = $abc$10495$lo67).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10562 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li66_li66, Q = $abc$10495$lo66).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10561 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li65_li65, Q = $abc$10495$lo65).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10560 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li64_li64, Q = $abc$10495$lo64).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10559 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li63_li63, Q = $abc$10495$lo63).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10558 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li62_li62, Q = $abc$10495$lo62).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10557 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li61_li61, Q = $abc$10495$lo61).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10556 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li60_li60, Q = $abc$10495$lo60).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10555 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li59_li59, Q = $abc$10495$lo59).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10554 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li58_li58, Q = $abc$10495$lo58).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10553 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li57_li57, Q = $abc$10495$lo57).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10552 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li56_li56, Q = $abc$10495$lo56).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10551 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li55_li55, Q = $abc$10495$lo55).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10550 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li54_li54, Q = $abc$10495$lo54).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10549 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li53_li53, Q = $abc$10495$lo53).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10548 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li52_li52, Q = $abc$10495$lo52).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10547 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li51_li51, Q = $abc$10495$lo51).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10546 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li50_li50, Q = $abc$10495$lo50).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10545 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li49_li49, Q = $abc$10495$lo49).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10544 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li48_li48, Q = $abc$10495$lo48).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10543 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li47_li47, Q = $abc$10495$lo47).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10542 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li46_li46, Q = $abc$10495$lo46).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10541 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li45_li45, Q = $abc$10495$lo45).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10540 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li44_li44, Q = $abc$10495$lo44).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10539 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li43_li43, Q = $abc$10495$lo43).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10538 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li42_li42, Q = $abc$10495$lo42).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10537 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li41_li41, Q = $abc$10495$lo41).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10536 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li40_li40, Q = $abc$10495$lo40).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10535 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li39_li39, Q = $abc$10495$lo39).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10534 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li38_li38, Q = $abc$10495$lo38).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10532 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li36_li36, Q = $abc$10495$lo36).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10531 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li35_li35, Q = $abc$10495$lo35).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10530 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li34_li34, Q = $abc$10495$lo34).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10529 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li33_li33, Q = $abc$10495$lo33).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10528 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li32_li32, Q = $abc$10495$lo32).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10527 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li31_li31, Q = $abc$10495$lo31).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10526 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li30_li30, Q = $abc$10495$lo30).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10524 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li28_li28, Q = $abc$10495$lo28).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10522 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li26_li26, Q = $abc$10495$lo26).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10521 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li25_li25, Q = $abc$10495$lo25).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10520 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li24_li24, Q = $abc$10495$lo24).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10516 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li20_li20, Q = $abc$10495$lo20).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10515 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li19_li19, Q = $abc$10495$lo19).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10514 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li18_li18, Q = $abc$10495$lo18).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10513 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li17_li17, Q = $abc$10495$lo17).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10512 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li16_li16, Q = $abc$10495$lo16).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10511 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li15_li15, Q = $abc$10495$lo15).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10510 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li14_li14, Q = $abc$10495$lo14).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10509 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li13_li13, Q = $abc$10495$lo13).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10508 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li12_li12, Q = $abc$10495$lo12).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10507 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li11_li11, Q = $abc$10495$lo11).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10504 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li08_li08, Q = $abc$10495$lo08).
Adding EN signal on $abc$10495$auto$blifparse.cc:362:parse_blif$10503 ($_DFF_P_) from module gost89_mac (D = $abc$10495$li07_li07, Q = $abc$10495$lo07).

yosys> opt_clean

3.68.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 10620 unused wires.
<suppressed ~14 debug messages>

yosys> opt_expr

3.68.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~165 debug messages>

3.68.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.68.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.68.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~648 debug messages>
Removed a total of 216 cells.

yosys> opt_dff -sat

3.68.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 271 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.68.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.68.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.68.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.68.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.68.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.68.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.68.23. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.69. Executing BMUXMAP pass.

yosys> demuxmap

3.70. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_F1Wo6s/abc_tmp_1.scr

3.71. Executing ABC pass (technology mapping using ABC).

3.71.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1792 gates and 2761 wires to a netlist network with 968 inputs and 137 outputs.

3.71.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   481  Max Lvl =   4  Avg Lvl =   2.63  [   0.38 sec. at Pass 0]
DE:   #PIs = 968  #Luts =   389  Max Lvl =   4  Avg Lvl =   2.52  [   6.77 sec. at Pass 1]
DE:   #PIs = 968  #Luts =   389  Max Lvl =   4  Avg Lvl =   2.52  [   1.53 sec. at Pass 2]
DE:   #PIs = 968  #Luts =   389  Max Lvl =   4  Avg Lvl =   2.52  [   2.20 sec. at Pass 3]
DE:   #PIs = 968  #Luts =   389  Max Lvl =   4  Avg Lvl =   2.52  [   2.12 sec. at Pass 4]
DE:   #PIs = 968  #Luts =   389  Max Lvl =   4  Avg Lvl =   2.52  [   1.96 sec. at Pass 5]
DE:   #PIs = 968  #Luts =   389  Max Lvl =   4  Avg Lvl =   2.52  [   6.96 sec. at Pass 6]
DE:   #PIs = 968  #Luts =   389  Max Lvl =   4  Avg Lvl =   2.52  [   0.69 sec. at Pass 7]

yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.77. Executing OPT_SHARE pass.

yosys> opt_dff

3.78. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2758 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.81. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.82. Printing statistics.

=== gost89_mac ===

   Number of wires:                467
   Number of wire bits:           2708
   Number of public wires:          35
   Number of public wire bits:    2213
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                556
     $_DFFE_PP_                    119
     $_DFF_P_                       15
     $_SDFF_PP0_                     1
     $lut                          389
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.83. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.84. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.85. Printing statistics.

=== gost89_mac ===

   Number of wires:                468
   Number of wire bits:           2709
   Number of public wires:          35
   Number of public wire bits:    2213
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                557
     $_DFFE_PP0P_                  119
     $_DFF_P_                       16
     $_MUX_                          1
     $lut                          389
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.86.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/clean_repo/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.86.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~779 debug messages>

yosys> opt_expr -mux_undef

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~13684 debug messages>

yosys> simplemap

3.88. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~8190 debug messages>
Removed a total of 2730 cells.

yosys> opt_dff -nodffe -nosdff

3.91. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1582 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.93. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.93.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~894 debug messages>

yosys> opt_merge -nomux

3.93.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.93.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.93.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.93.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.93.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.93.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.93.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.93.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.93.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_F1Wo6s/abc_tmp_2.scr

3.94. Executing ABC pass (technology mapping using ABC).

3.94.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 2063 gates and 3033 wires to a netlist network with 968 inputs and 136 outputs.

3.94.1.1. Executing ABC.
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   0.41 sec. at Pass 0]
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   5.23 sec. at Pass 1]
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   1.11 sec. at Pass 2]
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   2.40 sec. at Pass 3]
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   1.89 sec. at Pass 4]
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   2.52 sec. at Pass 5]
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   8.76 sec. at Pass 6]
DE:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.53  [   0.55 sec. at Pass 7]

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.97. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.98. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.100. Executing OPT_SHARE pass.

yosys> opt_dff

3.101. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2605 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.104. Executing HIERARCHY pass (managing design hierarchy).

3.104.1. Analyzing design hierarchy..
Top module:  \gost89_mac

3.104.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Removed 0 unused modules.

yosys> stat

3.105. Printing statistics.

=== gost89_mac ===

   Number of wires:                466
   Number of wire bits:           2707
   Number of public wires:          35
   Number of public wire bits:    2213
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                555
     $lut                          388
     adder_carry                    32
     dffsre                        135


yosys> opt_clean -purge

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 18 unused wires.
<suppressed ~18 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.107. Executing Verilog backend.
Dumping module `\gost89_mac'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: f2613f3ac3, CPU: user 9.19s system 0.33s, MEM: 55.76 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 95% 6x abc (184 sec), 1% 32x opt_expr (3 sec), ...
real 81.52
user 179.63
sys 13.59
