
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.24
 Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_mac.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_mac.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_mac -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.47

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_mac

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_mac.v:1: compiling module 'gost89_mac'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
VERIFIC-WARNING [VERI-1209] gost89_mac.v:50: expression size 6 truncated to fit in target size 5
Importing module gost89_mac.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_mac.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_sbox.
Deleting now unused module gost89_round.
<suppressed ~9 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1413 unused wires.
<suppressed ~22 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module gost89_mac...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
    New ctrl vector for $pmux cell $verific$select_106$gost89_mac.v:80$841: { $auto$opt_reduce.cc:134:opt_pmux$1463 $auto$opt_reduce.cc:134:opt_pmux$1461 $auto$opt_reduce.cc:134:opt_pmux$1459 $auto$opt_reduce.cc:134:opt_pmux$1457 $auto$opt_reduce.cc:134:opt_pmux$1455 $auto$opt_reduce.cc:134:opt_pmux$1453 $auto$opt_reduce.cc:134:opt_pmux$1451 $auto$opt_reduce.cc:134:opt_pmux$1449 $verific$n1570$41 }
  Optimizing cells in module \gost89_mac.
Performed a total of 1 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$round_key_reg$gost89_mac.v:80$842 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$out_reg$gost89_mac.v:60$820 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n2_reg$gost89_mac.v:60$819 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$n1_reg$gost89_mac.v:60$818 ($aldff) from module gost89_mac.
Removing never-active async load on $verific$counter_reg$gost89_mac.v:60$815 ($aldff) from module gost89_mac.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$round_key_reg$gost89_mac.v:80$842 ($dff) from module gost89_mac (D = $verific$n1571$89, Q = \round_key).
Adding EN signal on $verific$out_reg$gost89_mac.v:60$820 ($dff) from module gost89_mac (D = \n1, Q = \out).
Adding SRST signal on $verific$need_xor_reg$gost89_mac.v:60$816 ($dff) from module gost89_mac (D = $verific$n428$13, Q = \need_xor, rval = 1'1).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~2 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$add_46$gost89_mac.v:50$798 ($add).
Removed top 4 bits (of 5) from port A of cell gost89_mac.$verific$LessThan_49$gost89_mac.v:51$801 ($lt).
Removed top 4 bits (of 5) from port B of cell gost89_mac.$verific$equal_90$gost89_mac.v:65$823 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_91$gost89_mac.v:66$824 ($eq).
Removed top 3 bits (of 5) from port B of cell gost89_mac.$verific$equal_92$gost89_mac.v:67$825 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_93$gost89_mac.v:68$826 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_94$gost89_mac.v:69$827 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_95$gost89_mac.v:70$828 ($eq).
Removed top 2 bits (of 5) from port B of cell gost89_mac.$verific$equal_96$gost89_mac.v:71$829 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_97$gost89_mac.v:72$830 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_98$gost89_mac.v:73$831 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_99$gost89_mac.v:74$832 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_100$gost89_mac.v:75$833 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_101$gost89_mac.v:76$834 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_102$gost89_mac.v:77$835 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_103$gost89_mac.v:78$836 ($eq).
Removed top 1 bits (of 5) from port B of cell gost89_mac.$verific$equal_104$gost89_mac.v:79$837 ($eq).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 2 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_mac:
  creating $macc model for $flatten\rnd.$verific$add_3$gost89_round.v:12$849 ($add).
  creating $macc model for $verific$add_46$gost89_mac.v:50$798 ($add).
  creating $alu model for $macc $verific$add_46$gost89_mac.v:50$798.
  creating $alu model for $macc $flatten\rnd.$verific$add_3$gost89_round.v:12$849.
  creating $alu model for $verific$LessThan_45$gost89_mac.v:49$797 ($lt): new $alu
  creating $alu model for $verific$LessThan_49$gost89_mac.v:51$801 ($lt): new $alu
  creating $alu cell for $verific$LessThan_49$gost89_mac.v:51$801: $auto$alumacc.cc:485:replace_alu$1501
  creating $alu cell for $verific$LessThan_45$gost89_mac.v:49$797: $auto$alumacc.cc:485:replace_alu$1506
  creating $alu cell for $flatten\rnd.$verific$add_3$gost89_round.v:12$849: $auto$alumacc.cc:485:replace_alu$1517
  creating $alu cell for $verific$add_46$gost89_mac.v:50$798: $auto$alumacc.cc:485:replace_alu$1520
  created 4 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$1495: { $auto$rtlil.cc:2398:Or$1482 $verific$n1568$39 $verific$n1567$38 $verific$n1566$37 $verific$n1560$31 $verific$n1559$30 $verific$n1558$29 }
  Optimizing cells in module \gost89_mac.
Performed a total of 1 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== gost89_mac ===

   Number of wires:                135
   Number of wire bits:           3203
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           32
     $not                            6
     $or                             3
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== gost89_mac ===

   Number of wires:                135
   Number of wire bits:           3203
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           32
     $not                            6
     $or                             3
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> stat

3.24. Printing statistics.

=== gost89_mac ===

   Number of wires:                135
   Number of wire bits:           3203
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 96
     $alu                            4
     $and                            5
     $bmux                           8
     $dff                            4
     $dffe                           2
     $eq                            16
     $logic_not                      1
     $mux                           32
     $not                            6
     $or                             3
     $reduce_and                     2
     $reduce_or                      9
     $sdff                           1
     $xor                            3


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
No more expansions possible.
<suppressed ~560 debug messages>

yosys> stat

3.26. Printing statistics.

=== gost89_mac ===

   Number of wires:                389
   Number of wire bits:           7914
   Number of public wires:          48
   Number of public wire bits:    2347
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1813
     $_AND_                         46
     $_DFFE_PP_                     64
     $_DFF_P_                       70
     $_MUX_                       1170
     $_NOT_                         70
     $_OR_                         117
     $_SDFF_PP1_                     1
     $_XOR_                        243
     adder_carry                    32


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~193 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~225 debug messages>
Removed a total of 75 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 43 unused cells and 223 unused wires.
<suppressed ~44 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~69 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  399 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  69 cells in clk=\clk, en={ }, arst={ }, srst=$verific$n436$15
  1007 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.31.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 367 gates and 672 wires to a netlist network with 305 inputs and 64 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               XOR cells:       31
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               NOR cells:        2
ABC RESULTS:                OR cells:       65
ABC RESULTS:              NAND cells:      163
ABC RESULTS:               MUX cells:      129
ABC RESULTS:               AND cells:       78
ABC RESULTS:               BUF cells:       30
ABC RESULTS:        internal signals:      303
ABC RESULTS:           input signals:      305
ABC RESULTS:          output signals:       64
Removing temp directory.

3.31.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 70 wires to a netlist network with 35 inputs and 34 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       34
Removing temp directory.

3.31.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $verific$n436$15
Extracted 69 gates and 203 wires to a netlist network with 132 inputs and 65 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               MUX cells:       65
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:       65
Removing temp directory.

3.31.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1007 gates and 1686 wires to a netlist network with 678 inputs and 118 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 70 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       70
ABC RESULTS:               NOT cells:        4
ABC RESULTS:                OR cells:       23
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               NOR cells:       16
ABC RESULTS:             ORNOT cells:       40
ABC RESULTS:              NAND cells:      138
ABC RESULTS:               AND cells:       54
ABC RESULTS:               XOR cells:       89
ABC RESULTS:               MUX cells:      599
ABC RESULTS:               BUF cells:       33
ABC RESULTS:        internal signals:      890
ABC RESULTS:           input signals:      678
ABC RESULTS:          output signals:      118
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  69 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4336$verific$n436$15
  546 cells in clk=\clk, en=$abc$3703$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  35 cells in clk=\clk, en=$abc$4237$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  1045 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.32.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4336$verific$n436$15
Extracted 69 gates and 201 wires to a netlist network with 132 inputs and 66 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               MUX cells:       65
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:       66
Removing temp directory.

3.32.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3703$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 515 gates and 814 wires to a netlist network with 299 inputs and 65 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               XOR cells:       31
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:                OR cells:       37
ABC RESULTS:              NAND cells:      262
ABC RESULTS:               MUX cells:       98
ABC RESULTS:               AND cells:      102
ABC RESULTS:               BUF cells:       30
ABC RESULTS:        internal signals:      450
ABC RESULTS:           input signals:      299
ABC RESULTS:          output signals:       65
Removing temp directory.

3.32.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4237$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       35
Removing temp directory.

3.32.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1044 gates and 1725 wires to a netlist network with 681 inputs and 111 outputs.

3.32.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 70 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       70
ABC RESULTS:               NOT cells:        1
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:               NOR cells:       18
ABC RESULTS:               XOR cells:       79
ABC RESULTS:             ORNOT cells:       78
ABC RESULTS:               AND cells:      101
ABC RESULTS:                OR cells:       50
ABC RESULTS:              NAND cells:      160
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:               MUX cells:      551
ABC RESULTS:               BUF cells:       33
ABC RESULTS:        internal signals:      933
ABC RESULTS:           input signals:      681
ABC RESULTS:          output signals:      111
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  35 cells in clk=\clk, en=$abc$6163$abc$4237$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }
  67 cells in clk=\clk, en={ }, arst={ }, srst=$abc$5497$abc$4336$verific$n436$15
  596 cells in clk=\clk, en=$abc$5566$abc$3703$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  1143 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.33.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6163$abc$4237$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       35
Removing temp directory.

3.33.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$5497$abc$4336$verific$n436$15
Extracted 67 gates and 199 wires to a netlist network with 132 inputs and 65 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:               AND cells:        1
ABC RESULTS:               MUX cells:       65
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:       65
Removing temp directory.

3.33.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5566$abc$3703$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 565 gates and 864 wires to a netlist network with 299 inputs and 64 outputs.

3.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               XOR cells:       31
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:             ORNOT cells:       31
ABC RESULTS:                OR cells:       67
ABC RESULTS:              NAND cells:      262
ABC RESULTS:               MUX cells:       67
ABC RESULTS:               AND cells:      133
ABC RESULTS:               BUF cells:       30
ABC RESULTS:        internal signals:      501
ABC RESULTS:           input signals:      299
ABC RESULTS:          output signals:       64
Removing temp directory.

3.33.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1142 gates and 1821 wires to a netlist network with 679 inputs and 111 outputs.

3.33.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 70 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       70
ABC RESULTS:               NOT cells:        3
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:            ANDNOT cells:       25
ABC RESULTS:               NOR cells:       14
ABC RESULTS:             ORNOT cells:       78
ABC RESULTS:              NAND cells:      135
ABC RESULTS:                OR cells:       69
ABC RESULTS:               AND cells:       94
ABC RESULTS:               XOR cells:       82
ABC RESULTS:               MUX cells:      558
ABC RESULTS:               BUF cells:       33
ABC RESULTS:        internal signals:     1031
ABC RESULTS:           input signals:      679
ABC RESULTS:          output signals:      111
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~64 debug messages>

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8333 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li69_li69, Q = $abc$8263$lo69).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8332 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li68_li68, Q = $abc$8263$lo68).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8331 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li67_li67, Q = $abc$8263$lo67).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8330 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li66_li66, Q = $abc$8263$lo66).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8329 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li65_li65, Q = $abc$8263$lo65).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8328 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li64_li64, Q = $abc$8263$lo64).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8327 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li63_li63, Q = $abc$8263$lo63).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8326 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li62_li62, Q = $abc$8263$lo62).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8325 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li61_li61, Q = $abc$8263$lo61).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8324 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li60_li60, Q = $abc$8263$lo60).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8323 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li59_li59, Q = $abc$8263$lo59).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8322 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li58_li58, Q = $abc$8263$lo58).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8321 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li57_li57, Q = $abc$8263$lo57).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8320 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li56_li56, Q = $abc$8263$lo56).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8319 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li55_li55, Q = $abc$8263$lo55).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8318 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li54_li54, Q = $abc$8263$lo54).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8317 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li53_li53, Q = $abc$8263$lo53).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8316 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li52_li52, Q = $abc$8263$lo52).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8315 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li51_li51, Q = $abc$8263$lo51).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8314 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li50_li50, Q = $abc$8263$lo50).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8313 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li49_li49, Q = $abc$8263$lo49).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8312 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li48_li48, Q = $abc$8263$lo48).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8311 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li47_li47, Q = $abc$8263$lo47).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8310 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li46_li46, Q = $abc$8263$lo46).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8309 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li45_li45, Q = $abc$8263$lo45).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8308 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li44_li44, Q = $abc$8263$lo44).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8307 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li43_li43, Q = $abc$8263$lo43).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8306 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li42_li42, Q = $abc$8263$lo42).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8305 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li41_li41, Q = $abc$8263$lo41).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8304 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li40_li40, Q = $abc$8263$lo40).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8303 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li39_li39, Q = $abc$8263$lo39).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8302 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li38_li38, Q = $abc$8263$lo38).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8301 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li37_li37, Q = $abc$8263$lo37).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8300 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li36_li36, Q = $abc$8263$lo36).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8299 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li35_li35, Q = $abc$8263$lo35).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8298 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li34_li34, Q = $abc$8263$lo34).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8297 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li33_li33, Q = $abc$8263$lo33).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8296 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li32_li32, Q = $abc$8263$lo32).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8295 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li31_li31, Q = $abc$8263$lo31).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8294 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li30_li30, Q = $abc$8263$lo30).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8293 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li29_li29, Q = $abc$8263$lo29).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8291 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li27_li27, Q = $abc$8263$lo27).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8290 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li26_li26, Q = $abc$8263$lo26).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8289 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li25_li25, Q = $abc$8263$lo25).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8288 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li24_li24, Q = $abc$8263$lo24).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8287 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li23_li23, Q = $abc$8263$lo23).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8286 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li22_li22, Q = $abc$8263$lo22).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8285 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li21_li21, Q = $abc$8263$lo21).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8284 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li20_li20, Q = $abc$8263$lo20).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8283 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li19_li19, Q = $abc$8263$lo19).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8282 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li18_li18, Q = $abc$8263$lo18).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8281 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li17_li17, Q = $abc$8263$lo17).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8279 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li15_li15, Q = $abc$8263$lo15).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8277 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li13_li13, Q = $abc$8263$lo13).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8276 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li12_li12, Q = $abc$8263$lo12).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8275 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li11_li11, Q = $abc$8263$lo11).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8272 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li08_li08, Q = $abc$8263$lo08).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8271 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li07_li07, Q = $abc$8263$lo07).
Adding EN signal on $abc$8263$auto$blifparse.cc:362:parse_blif$8270 ($_DFF_P_) from module gost89_mac (D = $abc$8263$li06_li06, Q = $abc$8263$lo06).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 7646 unused wires.
<suppressed ~12 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~177 debug messages>

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~696 debug messages>
Removed a total of 232 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 291 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.35.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.35.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.35.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.35.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  1076 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$10008, arst={ }, srst={ }
  98 cells in clk=\clk, en={ }, arst={ }, srst={ }
  625 cells in clk=\clk, en=$abc$3703$auto$opt_dff.cc:194:make_patterns_logic$1465, arst={ }, srst={ }
  69 cells in clk=\clk, en={ }, arst={ }, srst=$abc$4336$verific$n436$15
  35 cells in clk=\clk, en=$abc$4237$auto$opt_dff.cc:219:make_patterns_logic$1468, arst={ }, srst={ }

3.36.2. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$10008
Extracted 1075 gates and 1779 wires to a netlist network with 703 inputs and 124 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 59 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       59
ABC RESULTS:               NOT cells:        5
ABC RESULTS:              XNOR cells:        8
ABC RESULTS:               XOR cells:       95
ABC RESULTS:               NOR cells:       17
ABC RESULTS:               AND cells:       81
ABC RESULTS:             ORNOT cells:       66
ABC RESULTS:               MUX cells:      417
ABC RESULTS:                OR cells:       65
ABC RESULTS:            ANDNOT cells:       21
ABC RESULTS:              NAND cells:      346
ABC RESULTS:               BUF cells:       27
ABC RESULTS:        internal signals:      952
ABC RESULTS:           input signals:      703
ABC RESULTS:          output signals:      124
Removing temp directory.

3.36.3. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 98 gates and 137 wires to a netlist network with 39 inputs and 29 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 11 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       11
ABC RESULTS:               XOR cells:       10
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               NOR cells:        3
ABC RESULTS:                OR cells:        5
ABC RESULTS:               MUX cells:       10
ABC RESULTS:             ORNOT cells:       12
ABC RESULTS:            ANDNOT cells:        9
ABC RESULTS:              NAND cells:       22
ABC RESULTS:               AND cells:       15
ABC RESULTS:               BUF cells:        6
ABC RESULTS:        internal signals:       69
ABC RESULTS:           input signals:       39
ABC RESULTS:          output signals:       29
Removing temp directory.

3.36.4. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$3703$auto$opt_dff.cc:194:make_patterns_logic$1465
Extracted 594 gates and 861 wires to a netlist network with 267 inputs and 33 outputs.

3.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        3
ABC RESULTS:             ORNOT cells:       30
ABC RESULTS:                OR cells:       66
ABC RESULTS:              NAND cells:      261
ABC RESULTS:               MUX cells:       68
ABC RESULTS:               AND cells:      131
ABC RESULTS:               BUF cells:       32
ABC RESULTS:        internal signals:      561
ABC RESULTS:           input signals:      267
ABC RESULTS:          output signals:       33
Removing temp directory.

3.36.5. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$4336$verific$n436$15
Extracted 69 gates and 199 wires to a netlist network with 130 inputs and 67 outputs.

3.36.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               MUX cells:       64
ABC RESULTS:                OR cells:        1
ABC RESULTS:               AND cells:        2
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:      130
ABC RESULTS:          output signals:       67
Removing temp directory.

3.36.6. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4237$auto$opt_dff.cc:219:make_patterns_logic$1468
Extracted 35 gates and 71 wires to a netlist network with 36 inputs and 35 outputs.

3.36.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: 32 registers in this network have don't-care init values.
ABC: The don't-care are assumed to be 0. The result may not verify.
ABC: Use command "print_latch" to see the init values of registers.
ABC: Use command "zero" to convert or "init" to change the values.
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       32
ABC RESULTS:               NOR cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:               BUF cells:       64
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       35
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_6WmiCO/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1841 gates and 2809 wires to a netlist network with 968 inputs and 137 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_6WmiCO/abc_tmp_1.scr 
ABC:   #PIs = 968  #Luts =   473  Max Lvl =   5  Avg Lvl =   2.64  [   0.17 sec. at Pass 0]
ABC:   #PIs = 968  #Luts =   407  Max Lvl =   4  Avg Lvl =   2.66  [   2.49 sec. at Pass 1]
ABC:   #PIs = 968  #Luts =   407  Max Lvl =   4  Avg Lvl =   2.66  [   0.62 sec. at Pass 2]
ABC:   #PIs = 968  #Luts =   401  Max Lvl =   4  Avg Lvl =   2.64  [   0.87 sec. at Pass 3]
ABC:   #PIs = 968  #Luts =   401  Max Lvl =   4  Avg Lvl =   2.64  [   0.67 sec. at Pass 4]
ABC:   #PIs = 968  #Luts =   397  Max Lvl =   4  Avg Lvl =   2.66  [   1.01 sec. at Pass 5]
ABC:   #PIs = 968  #Luts =   394  Max Lvl =   4  Avg Lvl =   2.64  [   0.60 sec. at Pass 6]
ABC:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.59  [   0.76 sec. at Pass 7]
ABC:   #PIs = 968  #Luts =   388  Max Lvl =   4  Avg Lvl =   2.59  [   0.65 sec. at Pass 8]
ABC:   #PIs = 968  #Luts =   381  Max Lvl =   4  Avg Lvl =   2.54  [   0.80 sec. at Pass 9]
ABC:   #PIs = 968  #Luts =   381  Max Lvl =   4  Avg Lvl =   2.54  [   0.69 sec. at Pass 10]
ABC:   #PIs = 968  #Luts =   381  Max Lvl =   4  Avg Lvl =   2.54  [   0.85 sec. at Pass 11]
ABC:   #PIs = 968  #Luts =   380  Max Lvl =   4  Avg Lvl =   2.54  [   0.66 sec. at Pass 12]
ABC:   #PIs = 968  #Luts =   380  Max Lvl =   4  Avg Lvl =   2.54  [   0.87 sec. at Pass 13]
ABC:   #PIs = 968  #Luts =   380  Max Lvl =   4  Avg Lvl =   2.54  [   0.77 sec. at Pass 14]
ABC:   #PIs = 968  #Luts =   380  Max Lvl =   4  Avg Lvl =   2.54  [   0.88 sec. at Pass 15]
ABC:   #PIs = 968  #Luts =   379  Max Lvl =   4  Avg Lvl =   2.31  [   5.38 sec. at Pass 16]
ABC:   #PIs = 968  #Luts =   376  Max Lvl =   4  Avg Lvl =   2.31  [   0.53 sec. at Pass 17]
ABC:   #PIs = 968  #Luts =   376  Max Lvl =   4  Avg Lvl =   2.31  [   0.87 sec. at Pass 18]
ABC:   #PIs = 968  #Luts =   376  Max Lvl =   4  Avg Lvl =   2.31  [   0.64 sec. at Pass 19]
ABC:   #PIs = 968  #Luts =   376  Max Lvl =   4  Avg Lvl =   2.31  [   0.89 sec. at Pass 20]
ABC:   #PIs = 968  #Luts =   376  Max Lvl =   4  Avg Lvl =   2.31  [   5.18 sec. at Pass 21]
ABC:   #PIs = 968  #Luts =   376  Max Lvl =   4  Avg Lvl =   2.31  [   0.20 sec. at Pass 22]
ABC:   [DE total time =   28.28 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      376
ABC RESULTS:        internal signals:     1704
ABC RESULTS:           input signals:      968
ABC RESULTS:          output signals:      137
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 5983 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.41. Printing statistics.

=== gost89_mac ===

   Number of wires:                426
   Number of wire bits:           2729
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                543
     $_DFFE_PP_                    123
     $_DFF_P_                       11
     $_SDFF_PP0_                     1
     $lut                          376
     adder_carry                    32


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== gost89_mac ===

   Number of wires:                427
   Number of wire bits:           2730
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                544
     $_DFFE_PP0P_                  123
     $_DFF_P_                       12
     $_MUX_                          1
     $lut                          376
     adder_carry                    32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~770 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~16482 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
<suppressed ~3456 debug messages>
Removed a total of 1152 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 1887 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.
<suppressed ~396 debug messages>

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.52.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.52.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.52.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.52.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.52.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_6WmiCO/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\gost89_mac' to `<abc-temp-dir>/input.blif'..
Extracted 1666 gates and 2636 wires to a netlist network with 968 inputs and 136 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_6WmiCO/abc_tmp_2.scr 
ABC:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.32  [   0.12 sec. at Pass 0]
ABC:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.32  [   2.18 sec. at Pass 1]
ABC:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.32  [   0.54 sec. at Pass 2]
ABC:   #PIs = 968  #Luts =   375  Max Lvl =   4  Avg Lvl =   2.32  [   0.84 sec. at Pass 3]
ABC:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.32  [   0.71 sec. at Pass 4]
ABC:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.32  [   0.88 sec. at Pass 5]
ABC:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.32  [   0.69 sec. at Pass 6]
ABC:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.32  [   0.94 sec. at Pass 7]
ABC:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.32  [   3.62 sec. at Pass 8]
ABC:   #PIs = 968  #Luts =   374  Max Lvl =   4  Avg Lvl =   2.32  [   0.20 sec. at Pass 9]
ABC:   [DE total time =   11.10 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      374
ABC RESULTS:        internal signals:     1532
ABC RESULTS:           input signals:      968
ABC RESULTS:          output signals:      136
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 2269 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_mac..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_mac.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_mac'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_mac.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \gost89_mac

3.55.2. Analyzing design hierarchy..
Top module:  \gost89_mac
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== gost89_mac ===

   Number of wires:                424
   Number of wire bits:           2727
   Number of public wires:          37
   Number of public wire bits:    2277
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                541
     $lut                          374
     adder_carry                    32
     dffsre                        135


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_mac..
Removed 0 unused cells and 19 unused wires.
<suppressed ~19 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\gost89_mac'.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: c8048c73cf, CPU: user 5.23s system 0.11s, MEM: 58.40 MB peak
Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 6x abc (339 sec), 0% 35x opt_expr (2 sec), ...
real 52.41
user 311.12
sys 33.21
