
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.40
 Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k spi_defines.vh spi_clgen.v spi_shift.v spi_top.v timescale.v

yosys> verific -vlog2k spi_defines.vh spi_clgen.v spi_shift.v spi_top.v timescale.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_defines.vh'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_clgen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_shift.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'spi_top.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'timescale.v'

yosys> synth_rs -top spi_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.55

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top spi_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] spi_top.v:43: compiling module 'spi_top'
VERIFIC-WARNING [VERI-2371] spi_top.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:152: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:164: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:166: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:168: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:175: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:184: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:186: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:213: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:217: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:219: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:222: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:237: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_top.v:242: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] spi_clgen.v:42: compiling module 'spi_clgen'
VERIFIC-WARNING [VERI-2371] spi_clgen.v:72: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:76: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:78: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:86: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:88: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:96: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:101: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_clgen.v:102: delay control is not supported for synthesis
VERIFIC-INFO [VERI-1018] spi_shift.v:42: compiling module 'spi_shift'
VERIFIC-WARNING [VERI-2371] spi_shift.v:93: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:97: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:99: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:107: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:109: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:118: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:120: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:127: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:132: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:134: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:136: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:138: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:143: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:145: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:147: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:149: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:154: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:156: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:158: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:160: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:165: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:167: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:169: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:171: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] spi_shift.v:232: delay control is not supported for synthesis
Importing module spi_top.
Importing module spi_clgen.
Importing module spi_shift.

3.3.1. Analyzing design hierarchy..
Top module:  \spi_top
Used module:     \spi_shift
Used module:     \spi_clgen

3.3.2. Analyzing design hierarchy..
Top module:  \spi_top
Used module:     \spi_shift
Used module:     \spi_clgen
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_shift.
<suppressed ~2 debug messages>
Optimizing module spi_clgen.
<suppressed ~2 debug messages>
Optimizing module spi_top.
<suppressed ~5 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module spi_shift.
Deleting now unused module spi_clgen.
<suppressed ~2 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 305 unused wires.
<suppressed ~45 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module spi_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_int_o_reg$spi_top.v:168$139 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$wb_dat_o_reg$spi_top.v:145$126 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$wb_ack_o_reg$spi_top.v:154$131 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$ss_reg$spi_top.v:268$176 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$cnt_reg$spi_clgen.v:79$443 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$divider_reg$spi_top.v:206$149 ($aldff) from module spi_top.
Changing const-value async load to async reset on $verific$ctrl_reg$spi_top.v:222$162 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$tip_reg$spi_shift.v:111$711 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$s_out_reg$spi_shift.v:120$716 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$clk_out_reg$spi_clgen.v:88$452 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\shift.$verific$cnt_reg$spi_shift.v:100$702 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$pos_edge_reg$spi_clgen.v:103$469 ($aldff) from module spi_top.
Changing const-value async load to async reset on $flatten\clgen.$verific$neg_edge_reg$spi_clgen.v:103$470 ($aldff) from module spi_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$wb_int_o_reg$spi_top.v:168$139 ($adff) from module spi_top (D = $verific$n351$62, Q = \wb_int_o).
Adding EN signal on $verific$ss_reg$spi_top.v:268$176 ($adff) from module spi_top (D = \wb_dat_i [7:0], Q = \ss).
Adding EN signal on $verific$divider_reg$spi_top.v:206$149 ($adff) from module spi_top (D = \wb_dat_i [7:0], Q = \divider [7:0]).
Adding EN signal on $verific$divider_reg$spi_top.v:206$149 ($adff) from module spi_top (D = \wb_dat_i [15:8], Q = \divider [15:8]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = $verific$n461$86, Q = \ctrl [7:0]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = \wb_dat_i [13:9], Q = \ctrl [13:9]).
Adding EN signal on $verific$ctrl_reg$spi_top.v:222$162 ($adff) from module spi_top (D = $verific$n504$89 [8], Q = \ctrl [8]).
Adding EN signal on $flatten\shift.$verific$tip_reg$spi_shift.v:111$711 ($adff) from module spi_top (D = $flatten\shift.$verific$n333$491, Q = \shift.tip).
Adding EN signal on $flatten\shift.$verific$s_out_reg$spi_shift.v:120$716 ($adff) from module spi_top (D = $flatten\shift.$verific$n339$493, Q = \shift.s_out).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [96], Q = \shift.data [96]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [97], Q = \shift.data [97]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [98], Q = \shift.data [98]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [99], Q = \shift.data [99]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [100], Q = \shift.data [100]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [101], Q = \shift.data [101]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [102], Q = \shift.data [102]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [103], Q = \shift.data [103]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [64], Q = \shift.data [64]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [65], Q = \shift.data [65]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [66], Q = \shift.data [66]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [67], Q = \shift.data [67]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [68], Q = \shift.data [68]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [69], Q = \shift.data [69]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [70], Q = \shift.data [70]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [71], Q = \shift.data [71]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [32], Q = \shift.data [32]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [33], Q = \shift.data [33]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [34], Q = \shift.data [34]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [35], Q = \shift.data [35]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [36], Q = \shift.data [36]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [37], Q = \shift.data [37]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [38], Q = \shift.data [38]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [39], Q = \shift.data [39]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [0], Q = \shift.data [0]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [1], Q = \shift.data [1]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [2], Q = \shift.data [2]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [3], Q = \shift.data [3]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [4], Q = \shift.data [4]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [5], Q = \shift.data [5]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [6], Q = \shift.data [6]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [7], Q = \shift.data [7]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [104], Q = \shift.data [104]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [105], Q = \shift.data [105]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [106], Q = \shift.data [106]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [107], Q = \shift.data [107]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [108], Q = \shift.data [108]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [109], Q = \shift.data [109]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [110], Q = \shift.data [110]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [111], Q = \shift.data [111]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [72], Q = \shift.data [72]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [73], Q = \shift.data [73]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [74], Q = \shift.data [74]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [75], Q = \shift.data [75]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [76], Q = \shift.data [76]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [77], Q = \shift.data [77]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [78], Q = \shift.data [78]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [79], Q = \shift.data [79]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [40], Q = \shift.data [40]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [41], Q = \shift.data [41]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [42], Q = \shift.data [42]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [43], Q = \shift.data [43]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [44], Q = \shift.data [44]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [45], Q = \shift.data [45]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [46], Q = \shift.data [46]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [47], Q = \shift.data [47]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [8], Q = \shift.data [8]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [9], Q = \shift.data [9]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [10], Q = \shift.data [10]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [11], Q = \shift.data [11]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [12], Q = \shift.data [12]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [13], Q = \shift.data [13]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [14], Q = \shift.data [14]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [15], Q = \shift.data [15]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [112], Q = \shift.data [112]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [113], Q = \shift.data [113]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [114], Q = \shift.data [114]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [115], Q = \shift.data [115]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [116], Q = \shift.data [116]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [117], Q = \shift.data [117]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [118], Q = \shift.data [118]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [119], Q = \shift.data [119]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [80], Q = \shift.data [80]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [81], Q = \shift.data [81]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [82], Q = \shift.data [82]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [83], Q = \shift.data [83]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [84], Q = \shift.data [84]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [85], Q = \shift.data [85]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [86], Q = \shift.data [86]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [87], Q = \shift.data [87]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [48], Q = \shift.data [48]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [49], Q = \shift.data [49]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [50], Q = \shift.data [50]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [51], Q = \shift.data [51]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [52], Q = \shift.data [52]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [53], Q = \shift.data [53]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [54], Q = \shift.data [54]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [55], Q = \shift.data [55]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [16], Q = \shift.data [16]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [17], Q = \shift.data [17]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [18], Q = \shift.data [18]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [19], Q = \shift.data [19]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [20], Q = \shift.data [20]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [21], Q = \shift.data [21]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [22], Q = \shift.data [22]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [23], Q = \shift.data [23]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [120], Q = \shift.data [120]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [121], Q = \shift.data [121]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [122], Q = \shift.data [122]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [123], Q = \shift.data [123]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [124], Q = \shift.data [124]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [125], Q = \shift.data [125]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [126], Q = \shift.data [126]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1013$651 [127], Q = \shift.data [127]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [88], Q = \shift.data [88]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [89], Q = \shift.data [89]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [90], Q = \shift.data [90]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [91], Q = \shift.data [91]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [92], Q = \shift.data [92]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [93], Q = \shift.data [93]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [94], Q = \shift.data [94]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1142$652 [95], Q = \shift.data [95]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [56], Q = \shift.data [56]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [57], Q = \shift.data [57]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [58], Q = \shift.data [58]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [59], Q = \shift.data [59]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [60], Q = \shift.data [60]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [61], Q = \shift.data [61]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [62], Q = \shift.data [62]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1271$653 [63], Q = \shift.data [63]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [24], Q = \shift.data [24]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [25], Q = \shift.data [25]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [26], Q = \shift.data [26]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [27], Q = \shift.data [27]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [28], Q = \shift.data [28]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [29], Q = \shift.data [29]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [30], Q = \shift.data [30]).
Adding EN signal on $flatten\shift.$verific$data_reg$spi_shift.v:232$877 ($adff) from module spi_top (D = $flatten\shift.$verific$n1400$654 [31], Q = \shift.data [31]).
Adding EN signal on $flatten\shift.$verific$cnt_reg$spi_shift.v:100$702 ($adff) from module spi_top (D = $flatten\shift.$verific$n306$644, Q = \shift.cnt).
Adding EN signal on $flatten\clgen.$verific$clk_out_reg$spi_clgen.v:88$452 ($adff) from module spi_top (D = $flatten\clgen.$verific$n119$408, Q = \clgen.clk_out).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~131 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~1500 debug messages>
Removed a total of 500 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 500 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell spi_top.$verific$equal_16$spi_top.v:105$115 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_top.$verific$equal_20$spi_top.v:106$116 ($eq).
Removed top 1 bits (of 3) from port B of cell spi_top.$verific$equal_24$spi_top.v:107$117 ($eq).
Removed top 7 bits (of 8) from port B of cell spi_top.$verific$or_126$spi_top.v:217$153 ($or).
Removed top 5 bits (of 14) from mux cell spi_top.$verific$mux_147$spi_top.v:222$161 ($mux).
Removed top 3 bits (of 4) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1226 ($ne).
Removed top 2 bits (of 3) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1228 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1230 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1124 ($ne).
Removed top 2 bits (of 3) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1122 ($ne).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$1018 ($ne).
Removed top 96 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_350$spi_shift.v:232$876 ($mux).
Removed top 64 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_349$spi_shift.v:232$875 ($mux).
Removed top 32 bits (of 128) from mux cell spi_top.$flatten\shift.$verific$mux_348$spi_shift.v:232$874 ($mux).
Removed top 127 bits (of 128) from port A of cell spi_top.$flatten\shift.$verific$Decoder_218$spi_shift.v:232$744 ($shl).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_17$spi_shift.v:82$684 ($mux).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_16$spi_shift.v:82$683 ($mux).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_13$spi_shift.v:81$681 ($mux).
Removed top 7 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
Removed top 1 bits (of 8) from mux cell spi_top.$flatten\shift.$verific$mux_8$spi_shift.v:80$678 ($mux).
Removed top 7 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_7$spi_shift.v:80$677 ($sub).
Removed top 1 bits (of 8) from port Y of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed top 1 bits (of 8) from port A of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed top 1 bits (of 8) from port B of cell spi_top.$flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
Removed cell spi_top.$flatten\shift.$verific$i6$spi_shift.v:80$675 ($not).
Removed top 15 bits (of 16) from port B of cell spi_top.$flatten\clgen.$verific$sub_12$spi_clgen.v:78$441 ($sub).
Removed top 15 bits (of 16) from port B of cell spi_top.$flatten\clgen.$verific$equal_5$spi_clgen.v:66$436 ($eq).
Removed top 1 bits (of 2) from port B of cell spi_top.$auto$opt_dff.cc:195:make_patterns_logic$2574 ($ne).
Removed top 5 bits (of 6) from mux cell spi_top.$verific$mux_176$spi_top.v:219$145 ($mux).
Removed top 32 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1142$652.
Removed top 64 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1271$653.
Removed top 1 bits (of 8) from wire spi_top.$flatten\shift.$verific$n135$631.
Removed top 127 bits (of 128) from wire spi_top.$flatten\shift.$verific$n1400$654.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n144$632.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n174$634.
Removed top 2 bits (of 8) from wire spi_top.$flatten\shift.$verific$n183$635.
Removed top 2 bits (of 8) from wire spi_top.$flatten\shift.$verific$n192$636.
Removed top 4 bits (of 8) from wire spi_top.$flatten\shift.$verific$n210$637.
Removed top 5 bits (of 14) from wire spi_top.$verific$n504$89.
Removed top 5 bits (of 6) from wire spi_top.$verific$n786$100.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module spi_top:
  creating $macc model for $flatten\clgen.$verific$sub_12$spi_clgen.v:78$441 ($sub).
  creating $macc model for $flatten\shift.$verific$add_12$spi_shift.v:81$680 ($add).
  creating $macc model for $flatten\shift.$verific$sub_14$spi_shift.v:81$682 ($sub).
  creating $macc model for $flatten\shift.$verific$sub_6$spi_shift.v:80$676 ($sub).
  creating $macc model for $flatten\shift.$verific$sub_7$spi_shift.v:80$677 ($sub).
  creating $alu model for $macc $flatten\shift.$verific$sub_7$spi_shift.v:80$677.
  creating $alu model for $macc $flatten\shift.$verific$sub_6$spi_shift.v:80$676.
  creating $alu model for $macc $flatten\shift.$verific$sub_14$spi_shift.v:81$682.
  creating $alu model for $macc $flatten\shift.$verific$add_12$spi_shift.v:81$680.
  creating $alu model for $macc $flatten\clgen.$verific$sub_12$spi_clgen.v:78$441.
  creating $alu cell for $flatten\clgen.$verific$sub_12$spi_clgen.v:78$441: $auto$alumacc.cc:485:replace_alu$2587
  creating $alu cell for $flatten\shift.$verific$add_12$spi_shift.v:81$680: $auto$alumacc.cc:485:replace_alu$2590
  creating $alu cell for $flatten\shift.$verific$sub_14$spi_shift.v:81$682: $auto$alumacc.cc:485:replace_alu$2593
  creating $alu cell for $flatten\shift.$verific$sub_6$spi_shift.v:80$676: $auto$alumacc.cc:485:replace_alu$2596
  creating $alu cell for $flatten\shift.$verific$sub_7$spi_shift.v:80$677: $auto$alumacc.cc:485:replace_alu$2599
  created 5 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~20 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== spi_top ===

   Number of wires:                589
   Number of wire bits:           2104
   Number of public wires:          72
   Number of public wire bits:     698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                664
     $adff                           5
     $adffe                        139
     $alu                            5
     $and                           38
     $bmux                           3
     $eq                             7
     $logic_not                      2
     $mux                          154
     $ne                            24
     $not                           10
     $or                             8
     $reduce_and                   134
     $reduce_bool                  131
     $reduce_or                      3
     $shl                            1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== spi_top ===

   Number of wires:                589
   Number of wire bits:           2104
   Number of public wires:          72
   Number of public wire bits:     698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                664
     $adff                           5
     $adffe                        139
     $alu                            5
     $and                           38
     $bmux                           3
     $eq                             7
     $logic_not                      2
     $mux                          154
     $ne                            24
     $not                           10
     $or                             8
     $reduce_and                   134
     $reduce_bool                  131
     $reduce_or                      3
     $shl                            1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> stat

3.24. Printing statistics.

=== spi_top ===

   Number of wires:                589
   Number of wire bits:           2104
   Number of public wires:          72
   Number of public wire bits:     698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                664
     $adff                           5
     $adffe                        139
     $alu                            5
     $and                           38
     $bmux                           3
     $eq                             7
     $logic_not                      2
     $mux                          154
     $ne                            24
     $not                           10
     $or                             8
     $reduce_and                   134
     $reduce_bool                  131
     $reduce_or                      3
     $shl                            1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:5090bc8fbcf3ae403956334bfa77f78b3de013ab$paramod$0b7ef1ec7ff4cd51af214180028bea8c50fdcd6a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_90_alu for cells of type $alu.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
No more expansions possible.
<suppressed ~3391 debug messages>

yosys> stat

3.26. Printing statistics.

=== spi_top ===

   Number of wires:               1596
   Number of wire bits:          12963
   Number of public wires:          72
   Number of public wire bits:     698
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3050
     $_AND_                        709
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     35
     $_DFF_PP1_                     16
     $_MUX_                       1348
     $_NOT_                         72
     $_OR_                         511
     $_XOR_                        181


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~268 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~1332 debug messages>
Removed a total of 444 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 42 unused cells and 717 unused wires.
<suppressed ~43 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~509 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 139 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2570, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2557, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2544, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2531, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2518, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2505, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2492, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2479, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2466, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2453, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2427, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2414, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2401, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2388, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2375, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2362, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2349, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2336, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2323, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2310, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2297, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2284, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2271, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2258, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2245, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2232, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2206, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2193, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2180, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2167, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2154, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2141, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2128, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2115, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2102, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2089, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2076, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2063, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2050, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2037, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$2011, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1972, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1959, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1946, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1933, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1920, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1907, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1894, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1881, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1868, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1855, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1842, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1829, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1816, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1803, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1790, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1777, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1257, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1764, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$902, arst=\wb_rst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$flatten\clgen.$verific$n118$407, arst=\wb_rst_i, srst={ }
  90 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$895, arst=\wb_rst_i, srst={ }
  66 cells in clk=\wb_clk_i, en=$flatten\shift.$verific$n338$492, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$919, arst=\wb_rst_i, srst={ }
  67 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$2573, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1244, arst=\wb_rst_i, srst={ }
  2 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$880, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$932, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1569, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1582, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1595, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1608, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1621, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1634, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1647, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1660, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1673, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1686, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1699, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1712, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1725, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1738, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1751, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1348, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1361, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1374, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1387, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1400, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1413, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1426, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1439, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1452, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1465, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1478, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1491, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1504, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1517, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1530, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1543, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1309, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1322, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1335, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1270, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1283, arst=\wb_rst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1296, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$945, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$958, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$971, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$997, arst=\wb_rst_i, srst={ }
  16 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1010, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1023, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1036, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1049, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1062, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1088, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1101, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1556, arst=\wb_rst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1114, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1127, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1153, arst=\wb_rst_i, srst={ }
  21 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$886, arst=\wb_rst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$905, arst=\wb_rst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1231, arst=\wb_rst_i, srst={ }
  62 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$892, arst=\wb_rst_i, srst={ }
  54 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$883, arst=\wb_rst_i, srst={ }
  251 cells in clk=\wb_clk_i, en={ }, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1218, arst=\wb_rst_i, srst={ }
  22 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$889, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1166, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1179, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1192, arst=\wb_rst_i, srst={ }
  80 cells in clk=\wb_clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$1205, arst=\wb_rst_i, srst={ }

3.33.2. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2570, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2557, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 3 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2544, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2531, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 3 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2518, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2505, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 3 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2492, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2479, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 14 inputs and 5 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2466, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 11 inputs and 5 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2453, asynchronously reset by \wb_rst_i
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 2 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \wb_rst_i
Extracted 8 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2427, asynchronously reset by \wb_rst_i
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 2 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2414, asynchronously reset by \wb_rst_i
Extracted 8 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2401, asynchronously reset by \wb_rst_i
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 2 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2388, asynchronously reset by \wb_rst_i
Extracted 8 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2375, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 12 inputs and 4 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2362, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2349, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2336, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2323, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2310, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2297, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2284, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2271, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 14 inputs and 6 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2258, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.33.26.1. Executing ABC.

3.33.27. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2245, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.33.27.1. Executing ABC.

3.33.28. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2232, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.33.28.1. Executing ABC.

3.33.29. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.33.29.1. Executing ABC.

3.33.30. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2206, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.33.30.1. Executing ABC.

3.33.31. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2193, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.33.31.1. Executing ABC.

3.33.32. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2180, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.33.32.1. Executing ABC.

3.33.33. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2167, asynchronously reset by \wb_rst_i
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 6 outputs.

3.33.33.1. Executing ABC.

3.33.34. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2154, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.34.1. Executing ABC.

3.33.35. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2141, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 3 outputs.

3.33.35.1. Executing ABC.

3.33.36. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2128, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.36.1. Executing ABC.

3.33.37. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2115, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 3 outputs.

3.33.37.1. Executing ABC.

3.33.38. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2102, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.38.1. Executing ABC.

3.33.39. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2089, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 3 outputs.

3.33.39.1. Executing ABC.

3.33.40. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2076, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.40.1. Executing ABC.

3.33.41. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2063, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 4 outputs.

3.33.41.1. Executing ABC.

3.33.42. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2050, asynchronously reset by \wb_rst_i
Extracted 8 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.33.42.1. Executing ABC.

3.33.43. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2037, asynchronously reset by \wb_rst_i
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 2 outputs.

3.33.43.1. Executing ABC.

3.33.44. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \wb_rst_i
Extracted 8 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.33.44.1. Executing ABC.

3.33.45. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2011, asynchronously reset by \wb_rst_i
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 2 outputs.

3.33.45.1. Executing ABC.

3.33.46. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \wb_rst_i
Extracted 8 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.33.46.1. Executing ABC.

3.33.47. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \wb_rst_i
Extracted 6 gates and 15 wires to a netlist network with 8 inputs and 2 outputs.

3.33.47.1. Executing ABC.

3.33.48. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1972, asynchronously reset by \wb_rst_i
Extracted 8 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.33.48.1. Executing ABC.

3.33.49. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1959, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 12 inputs and 4 outputs.

3.33.49.1. Executing ABC.

3.33.50. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1946, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.50.1. Executing ABC.

3.33.51. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1933, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.33.51.1. Executing ABC.

3.33.52. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1920, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.52.1. Executing ABC.

3.33.53. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1907, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.33.53.1. Executing ABC.

3.33.54. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1894, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.54.1. Executing ABC.

3.33.55. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1881, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.33.55.1. Executing ABC.

3.33.56. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1868, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.33.56.1. Executing ABC.

3.33.57. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1855, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 14 inputs and 6 outputs.

3.33.57.1. Executing ABC.

3.33.58. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1842, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 8 outputs.

3.33.58.1. Executing ABC.

3.33.59. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1829, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.33.59.1. Executing ABC.

3.33.60. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1816, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.33.60.1. Executing ABC.

3.33.61. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1803, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.33.61.1. Executing ABC.

3.33.62. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1790, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.33.62.1. Executing ABC.

3.33.63. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1777, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 4 outputs.

3.33.63.1. Executing ABC.

3.33.64. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1257, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.33.64.1. Executing ABC.

3.33.65. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1764, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 7 outputs.

3.33.65.1. Executing ABC.

3.33.66. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$902, asynchronously reset by \wb_rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 4 outputs.

3.33.66.1. Executing ABC.

3.33.67. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $flatten\clgen.$verific$n118$407, asynchronously reset by \wb_rst_i
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 8 outputs.

3.33.67.1. Executing ABC.

3.33.68. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$895, asynchronously reset by \wb_rst_i
Extracted 90 gates and 150 wires to a netlist network with 60 inputs and 32 outputs.

3.33.68.1. Executing ABC.

3.33.69. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $flatten\shift.$verific$n338$492, asynchronously reset by \wb_rst_i
Extracted 66 gates and 139 wires to a netlist network with 73 inputs and 2 outputs.

3.33.69.1. Executing ABC.

3.33.70. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$919, asynchronously reset by \wb_rst_i
Extracted 12 gates and 28 wires to a netlist network with 15 inputs and 8 outputs.

3.33.70.1. Executing ABC.

3.33.71. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$2573, asynchronously reset by \wb_rst_i
Extracted 67 gates and 76 wires to a netlist network with 9 inputs and 30 outputs.

3.33.71.1. Executing ABC.

3.33.72. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1244, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.33.72.1. Executing ABC.

3.33.73. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$880, asynchronously reset by \wb_rst_i
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.33.73.1. Executing ABC.

3.33.74. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$932, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 12 inputs and 7 outputs.

3.33.74.1. Executing ABC.

3.33.75. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1569, asynchronously reset by \wb_rst_i
Extracted 9 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.33.75.1. Executing ABC.

3.33.76. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1582, asynchronously reset by \wb_rst_i
Extracted 7 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.33.76.1. Executing ABC.

3.33.77. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1595, asynchronously reset by \wb_rst_i
Extracted 9 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.33.77.1. Executing ABC.

3.33.78. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1608, asynchronously reset by \wb_rst_i
Extracted 7 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.33.78.1. Executing ABC.

3.33.79. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1621, asynchronously reset by \wb_rst_i
Extracted 9 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.33.79.1. Executing ABC.

3.33.80. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1634, asynchronously reset by \wb_rst_i
Extracted 7 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.33.80.1. Executing ABC.

3.33.81. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1647, asynchronously reset by \wb_rst_i
Extracted 12 gates and 28 wires to a netlist network with 15 inputs and 4 outputs.

3.33.81.1. Executing ABC.

3.33.82. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1660, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 12 inputs and 3 outputs.

3.33.82.1. Executing ABC.

3.33.83. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1673, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 4 outputs.

3.33.83.1. Executing ABC.

3.33.84. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1686, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 10 inputs and 2 outputs.

3.33.84.1. Executing ABC.

3.33.85. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1699, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 4 outputs.

3.33.85.1. Executing ABC.

3.33.86. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1712, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 10 inputs and 2 outputs.

3.33.86.1. Executing ABC.

3.33.87. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1725, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 4 outputs.

3.33.87.1. Executing ABC.

3.33.88. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1738, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 11 inputs and 3 outputs.

3.33.88.1. Executing ABC.

3.33.89. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1751, asynchronously reset by \wb_rst_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 4 outputs.

3.33.89.1. Executing ABC.

3.33.90. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1348, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 7 outputs.

3.33.90.1. Executing ABC.

3.33.91. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1361, asynchronously reset by \wb_rst_i
Extracted 12 gates and 28 wires to a netlist network with 15 inputs and 8 outputs.

3.33.91.1. Executing ABC.

3.33.92. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1374, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 8 outputs.

3.33.92.1. Executing ABC.

3.33.93. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1387, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 15 inputs and 10 outputs.

3.33.93.1. Executing ABC.

3.33.94. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1400, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 8 outputs.

3.33.94.1. Executing ABC.

3.33.95. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1413, asynchronously reset by \wb_rst_i
Extracted 13 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.33.95.1. Executing ABC.

3.33.96. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1426, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 11 inputs and 6 outputs.

3.33.96.1. Executing ABC.

3.33.97. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1439, asynchronously reset by \wb_rst_i
Extracted 12 gates and 28 wires to a netlist network with 15 inputs and 5 outputs.

3.33.97.1. Executing ABC.

3.33.98. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1452, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 10 inputs and 3 outputs.

3.33.98.1. Executing ABC.

3.33.99. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1465, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 5 outputs.

3.33.99.1. Executing ABC.

3.33.100. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1478, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 10 inputs and 3 outputs.

3.33.100.1. Executing ABC.

3.33.101. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1491, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 5 outputs.

3.33.101.1. Executing ABC.

3.33.102. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1504, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 10 inputs and 3 outputs.

3.33.102.1. Executing ABC.

3.33.103. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1517, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 13 inputs and 5 outputs.

3.33.103.1. Executing ABC.

3.33.104. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1530, asynchronously reset by \wb_rst_i
Extracted 11 gates and 22 wires to a netlist network with 10 inputs and 5 outputs.

3.33.104.1. Executing ABC.

3.33.105. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1543, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.33.105.1. Executing ABC.

3.33.106. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1309, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.33.106.1. Executing ABC.

3.33.107. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1322, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 12 inputs and 5 outputs.

3.33.107.1. Executing ABC.

3.33.108. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1335, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 12 inputs and 6 outputs.

3.33.108.1. Executing ABC.

3.33.109. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1270, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.33.109.1. Executing ABC.

3.33.110. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1283, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.33.110.1. Executing ABC.

3.33.111. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1296, asynchronously reset by \wb_rst_i
Extracted 15 gates and 31 wires to a netlist network with 15 inputs and 7 outputs.

3.33.111.1. Executing ABC.

3.33.112. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$945, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 7 outputs.

3.33.112.1. Executing ABC.

3.33.113. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$958, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 11 inputs and 6 outputs.

3.33.113.1. Executing ABC.

3.33.114. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$971, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 14 inputs and 7 outputs.

3.33.114.1. Executing ABC.

3.33.115. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 11 inputs and 6 outputs.

3.33.115.1. Executing ABC.

3.33.116. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$997, asynchronously reset by \wb_rst_i
Extracted 13 gates and 30 wires to a netlist network with 16 inputs and 8 outputs.

3.33.116.1. Executing ABC.

3.33.117. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1010, asynchronously reset by \wb_rst_i
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 6 outputs.

3.33.117.1. Executing ABC.

3.33.118. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1023, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 15 inputs and 6 outputs.

3.33.118.1. Executing ABC.

3.33.119. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1036, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 2 outputs.

3.33.119.1. Executing ABC.

3.33.120. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1049, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 4 outputs.

3.33.120.1. Executing ABC.

3.33.121. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1062, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 2 outputs.

3.33.121.1. Executing ABC.

3.33.122. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 4 outputs.

3.33.122.1. Executing ABC.

3.33.123. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1088, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 2 outputs.

3.33.123.1. Executing ABC.

3.33.124. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1101, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 4 outputs.

3.33.124.1. Executing ABC.

3.33.125. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1556, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 3 outputs.

3.33.125.1. Executing ABC.

3.33.126. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1114, asynchronously reset by \wb_rst_i
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 7 outputs.

3.33.126.1. Executing ABC.

3.33.127. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1127, asynchronously reset by \wb_rst_i
Extracted 11 gates and 27 wires to a netlist network with 15 inputs and 4 outputs.

3.33.127.1. Executing ABC.

3.33.128. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 12 inputs and 5 outputs.

3.33.128.1. Executing ABC.

3.33.129. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1153, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.129.1. Executing ABC.

3.33.130. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$886, asynchronously reset by \wb_rst_i
Extracted 21 gates and 40 wires to a netlist network with 19 inputs and 21 outputs.

3.33.130.1. Executing ABC.

3.33.131. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$905, asynchronously reset by \wb_rst_i
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 11 outputs.

3.33.131.1. Executing ABC.

3.33.132. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1231, asynchronously reset by \wb_rst_i
Extracted 17 gates and 34 wires to a netlist network with 16 inputs and 6 outputs.

3.33.132.1. Executing ABC.

3.33.133. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$892, asynchronously reset by \wb_rst_i
Extracted 62 gates and 90 wires to a netlist network with 28 inputs and 45 outputs.

3.33.133.1. Executing ABC.

3.33.134. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$883, asynchronously reset by \wb_rst_i
Extracted 54 gates and 79 wires to a netlist network with 25 inputs and 17 outputs.

3.33.134.1. Executing ABC.

3.33.135. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \wb_rst_i
Extracted 251 gates and 366 wires to a netlist network with 114 inputs and 47 outputs.

3.33.135.1. Executing ABC.

3.33.136. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1218, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.136.1. Executing ABC.

3.33.137. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$889, asynchronously reset by \wb_rst_i
Extracted 22 gates and 37 wires to a netlist network with 15 inputs and 18 outputs.

3.33.137.1. Executing ABC.

3.33.138. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1166, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 2 outputs.

3.33.138.1. Executing ABC.

3.33.139. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1179, asynchronously reset by \wb_rst_i
Extracted 10 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.33.139.1. Executing ABC.

3.33.140. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1192, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 10 inputs and 2 outputs.

3.33.140.1. Executing ABC.

3.33.141. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1205, asynchronously reset by \wb_rst_i
Extracted 80 gates and 166 wires to a netlist network with 85 inputs and 6 outputs.

3.33.141.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  12 cells in clk=\wb_clk_i, en=$abc$10136$auto$opt_dff.cc:219:make_patterns_logic$1088, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$10168$auto$opt_dff.cc:219:make_patterns_logic$1114, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$10158$auto$opt_dff.cc:219:make_patterns_logic$1556, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$10198$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$10146$auto$opt_dff.cc:219:make_patterns_logic$1101, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$9971$auto$opt_dff.cc:219:make_patterns_logic$1283, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9947$auto$opt_dff.cc:219:make_patterns_logic$1335, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$10186$auto$opt_dff.cc:219:make_patterns_logic$1127, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9983$auto$opt_dff.cc:219:make_patterns_logic$1296, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$9960$auto$opt_dff.cc:219:make_patterns_logic$1270, arst=\wb_rst_i, srst={ }
  26 cells in clk=\wb_clk_i, en=$abc$10261$auto$opt_dff.cc:194:make_patterns_logic$905, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$997, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$10092$auto$opt_dff.cc:219:make_patterns_logic$1036, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$10211$auto$opt_dff.cc:219:make_patterns_logic$1153, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$10077$auto$opt_dff.cc:219:make_patterns_logic$1023, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$10114$auto$opt_dff.cc:219:make_patterns_logic$1062, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$10060$auto$opt_dff.cc:219:make_patterns_logic$1010, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$10023$auto$opt_dff.cc:219:make_patterns_logic$971, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$10000$auto$opt_dff.cc:219:make_patterns_logic$945, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$10102$auto$opt_dff.cc:219:make_patterns_logic$1049, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$10035$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$10012$auto$opt_dff.cc:219:make_patterns_logic$958, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$10124$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$9884$auto$opt_dff.cc:219:make_patterns_logic$1517, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$9787$auto$opt_dff.cc:219:make_patterns_logic$1413, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$9685$auto$opt_dff.cc:219:make_patterns_logic$1725, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9593$auto$opt_dff.cc:219:make_patterns_logic$1621, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9661$auto$opt_dff.cc:219:make_patterns_logic$1699, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9759$auto$opt_dff.cc:219:make_patterns_logic$1387, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9860$auto$opt_dff.cc:219:make_patterns_logic$1491, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9710$auto$opt_dff.cc:219:make_patterns_logic$1751, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9812$auto$opt_dff.cc:219:make_patterns_logic$1439, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$9910$auto$opt_dff.cc:219:make_patterns_logic$1543, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9935$auto$opt_dff.cc:219:make_patterns_logic$1322, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$9836$auto$opt_dff.cc:219:make_patterns_logic$1465, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$9733$auto$opt_dff.cc:219:make_patterns_logic$1361, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9637$auto$opt_dff.cc:219:make_patterns_logic$1673, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9555$auto$opt_dff.cc:219:make_patterns_logic$1569, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$9526$auto$opt_dff.cc:219:make_patterns_logic$1244, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8554$auto$opt_dff.cc:219:make_patterns_logic$2557, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8585$auto$opt_dff.cc:219:make_patterns_logic$2518, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8617$auto$opt_dff.cc:219:make_patterns_logic$2479, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$9873$auto$opt_dff.cc:219:make_patterns_logic$1504, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$9774$auto$opt_dff.cc:219:make_patterns_logic$1400, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$9674$auto$opt_dff.cc:219:make_patterns_logic$1712, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9584$auto$opt_dff.cc:219:make_patterns_logic$1608, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9452$auto$opt_dff.cc:219:make_patterns_logic$919, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$10279$auto$opt_dff.cc:219:make_patterns_logic$1231, arst=\wb_rst_i, srst={ }
  47 cells in clk=\wb_clk_i, en=$abc$10297$auto$opt_dff.cc:219:make_patterns_logic$892, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$9612$auto$opt_dff.cc:219:make_patterns_logic$1647, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$9574$auto$opt_dff.cc:219:make_patterns_logic$1595, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$10741$auto$opt_dff.cc:219:make_patterns_logic$1192, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8543$auto$opt_dff.cc:219:make_patterns_logic$2570, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8564$auto$opt_dff.cc:219:make_patterns_logic$2544, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8575$auto$opt_dff.cc:219:make_patterns_logic$2531, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8596$auto$opt_dff.cc:219:make_patterns_logic$2505, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$8606$auto$opt_dff.cc:219:make_patterns_logic$2492, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8631$auto$opt_dff.cc:219:make_patterns_logic$2466, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$8642$auto$opt_dff.cc:219:make_patterns_logic$2453, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8650$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8668$auto$opt_dff.cc:219:make_patterns_logic$2414, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$8678$auto$opt_dff.cc:219:make_patterns_logic$2401, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$8660$auto$opt_dff.cc:219:make_patterns_logic$2427, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9225$flatten\clgen.$verific$n118$407, arst=\wb_rst_i, srst={ }
  89 cells in clk=\wb_clk_i, en=$abc$9244$auto$opt_dff.cc:219:make_patterns_logic$895, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$10669$auto$opt_dff.cc:219:make_patterns_logic$1218, arst=\wb_rst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$abc$9218$auto$opt_dff.cc:219:make_patterns_logic$902, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$9205$auto$opt_dff.cc:219:make_patterns_logic$1764, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9193$auto$opt_dff.cc:219:make_patterns_logic$1257, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9184$auto$opt_dff.cc:219:make_patterns_logic$1777, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$9173$auto$opt_dff.cc:219:make_patterns_logic$1790, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9164$auto$opt_dff.cc:219:make_patterns_logic$1803, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$9153$auto$opt_dff.cc:219:make_patterns_logic$1816, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9144$auto$opt_dff.cc:219:make_patterns_logic$1829, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$9131$auto$opt_dff.cc:219:make_patterns_logic$1842, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9117$auto$opt_dff.cc:219:make_patterns_logic$1855, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$9106$auto$opt_dff.cc:219:make_patterns_logic$1868, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8867$auto$opt_dff.cc:219:make_patterns_logic$2167, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8891$auto$opt_dff.cc:219:make_patterns_logic$2141, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8912$auto$opt_dff.cc:219:make_patterns_logic$2115, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8933$auto$opt_dff.cc:219:make_patterns_logic$2089, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8954$auto$opt_dff.cc:219:make_patterns_logic$2063, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$8977$auto$opt_dff.cc:219:make_patterns_logic$2037, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$8995$auto$opt_dff.cc:219:make_patterns_logic$2011, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$9013$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8686$auto$opt_dff.cc:219:make_patterns_logic$2388, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$8696$auto$opt_dff.cc:219:make_patterns_logic$2375, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$8708$auto$opt_dff.cc:219:make_patterns_logic$2362, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8719$auto$opt_dff.cc:219:make_patterns_logic$2349, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$8729$auto$opt_dff.cc:219:make_patterns_logic$2336, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8740$auto$opt_dff.cc:219:make_patterns_logic$2323, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$8750$auto$opt_dff.cc:219:make_patterns_logic$2310, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8761$auto$opt_dff.cc:219:make_patterns_logic$2297, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$8771$auto$opt_dff.cc:219:make_patterns_logic$2284, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$8782$auto$opt_dff.cc:219:make_patterns_logic$2271, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8796$auto$opt_dff.cc:219:make_patterns_logic$2258, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$2245, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8816$auto$opt_dff.cc:219:make_patterns_logic$2232, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$8827$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8836$auto$opt_dff.cc:219:make_patterns_logic$2206, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$8847$auto$opt_dff.cc:219:make_patterns_logic$2193, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8856$auto$opt_dff.cc:219:make_patterns_logic$2180, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8880$auto$opt_dff.cc:219:make_patterns_logic$2154, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8901$auto$opt_dff.cc:219:make_patterns_logic$2128, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$8922$auto$opt_dff.cc:219:make_patterns_logic$2102, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$8943$auto$opt_dff.cc:219:make_patterns_logic$2076, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$8967$auto$opt_dff.cc:219:make_patterns_logic$2050, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$8985$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$9003$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9021$auto$opt_dff.cc:219:make_patterns_logic$1972, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$9031$auto$opt_dff.cc:219:make_patterns_logic$1959, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9043$auto$opt_dff.cc:219:make_patterns_logic$1946, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$9054$auto$opt_dff.cc:219:make_patterns_logic$1933, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9064$auto$opt_dff.cc:219:make_patterns_logic$1920, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$9075$auto$opt_dff.cc:219:make_patterns_logic$1907, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9085$auto$opt_dff.cc:219:make_patterns_logic$1894, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$9096$auto$opt_dff.cc:219:make_patterns_logic$1881, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$9897$auto$opt_dff.cc:219:make_patterns_logic$1530, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$9849$auto$opt_dff.cc:219:make_patterns_logic$1478, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$9801$auto$opt_dff.cc:219:make_patterns_logic$1426, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$9746$auto$opt_dff.cc:219:make_patterns_logic$1374, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$9698$auto$opt_dff.cc:219:make_patterns_logic$1738, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$9650$auto$opt_dff.cc:219:make_patterns_logic$1686, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$9603$auto$opt_dff.cc:219:make_patterns_logic$1634, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9565$auto$opt_dff.cc:219:make_patterns_logic$1582, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$10719$auto$opt_dff.cc:219:make_patterns_logic$1166, arst=\wb_rst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$abc$9923$auto$opt_dff.cc:219:make_patterns_logic$1309, arst=\wb_rst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$abc$9825$auto$opt_dff.cc:219:make_patterns_logic$1452, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$9721$auto$opt_dff.cc:219:make_patterns_logic$1348, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$9625$auto$opt_dff.cc:219:make_patterns_logic$1660, arst=\wb_rst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$abc$9543$auto$opt_dff.cc:219:make_patterns_logic$932, arst=\wb_rst_i, srst={ }
  112 cells in clk=\wb_clk_i, en=$abc$9338$flatten\shift.$verific$n338$492, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$10729$auto$opt_dff.cc:219:make_patterns_logic$1179, arst=\wb_rst_i, srst={ }
  1 cells in clk=\wb_clk_i, en=$abc$9538$auto$opt_dff.cc:194:make_patterns_logic$880, arst=\wb_rst_i, srst={ }
  31 cells in clk=\wb_clk_i, en=$abc$10367$auto$opt_dff.cc:219:make_patterns_logic$883, arst=\wb_rst_i, srst={ }
  37 cells in clk=\wb_clk_i, en=$abc$10406$auto$opt_dff.cc:194:make_patterns_logic$2573, arst=\wb_rst_i, srst={ }
  27 cells in clk=\wb_clk_i, en=$abc$10223$auto$opt_dff.cc:219:make_patterns_logic$886, arst=\wb_rst_i, srst={ }
  215 cells in clk=\wb_clk_i, en={ }, arst=\wb_rst_i, srst={ }
  24 cells in clk=\wb_clk_i, en=$abc$10681$auto$opt_dff.cc:219:make_patterns_logic$889, arst=\wb_rst_i, srst={ }
  139 cells in clk=\wb_clk_i, en=$abc$10751$auto$opt_dff.cc:219:make_patterns_logic$1205, arst=\wb_rst_i, srst={ }

3.34.2. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10136$auto$opt_dff.cc:219:make_patterns_logic$1088, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10168$auto$opt_dff.cc:219:make_patterns_logic$1114, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 5 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10158$auto$opt_dff.cc:219:make_patterns_logic$1556, asynchronously reset by \wb_rst_i
Extracted 9 gates and 22 wires to a netlist network with 13 inputs and 4 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10198$auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \wb_rst_i
Extracted 12 gates and 28 wires to a netlist network with 16 inputs and 5 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10146$auto$opt_dff.cc:219:make_patterns_logic$1101, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 3 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9971$auto$opt_dff.cc:219:make_patterns_logic$1283, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9947$auto$opt_dff.cc:219:make_patterns_logic$1335, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10186$auto$opt_dff.cc:219:make_patterns_logic$1127, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9983$auto$opt_dff.cc:219:make_patterns_logic$1296, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9960$auto$opt_dff.cc:219:make_patterns_logic$1270, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10261$auto$opt_dff.cc:194:make_patterns_logic$905, asynchronously reset by \wb_rst_i
Extracted 26 gates and 55 wires to a netlist network with 29 inputs and 17 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10046$auto$opt_dff.cc:219:make_patterns_logic$997, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 6 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10092$auto$opt_dff.cc:219:make_patterns_logic$1036, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 4 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10211$auto$opt_dff.cc:219:make_patterns_logic$1153, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 15 inputs and 4 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10077$auto$opt_dff.cc:219:make_patterns_logic$1023, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10114$auto$opt_dff.cc:219:make_patterns_logic$1062, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 6 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10060$auto$opt_dff.cc:219:make_patterns_logic$1010, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10023$auto$opt_dff.cc:219:make_patterns_logic$971, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10000$auto$opt_dff.cc:219:make_patterns_logic$945, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 6 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10102$auto$opt_dff.cc:219:make_patterns_logic$1049, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 2 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10035$auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10012$auto$opt_dff.cc:219:make_patterns_logic$958, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10124$auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9884$auto$opt_dff.cc:219:make_patterns_logic$1517, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 7 outputs.

3.34.25.1. Executing ABC.

3.34.26. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9787$auto$opt_dff.cc:219:make_patterns_logic$1413, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.34.26.1. Executing ABC.

3.34.27. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9685$auto$opt_dff.cc:219:make_patterns_logic$1725, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 6 outputs.

3.34.27.1. Executing ABC.

3.34.28. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9593$auto$opt_dff.cc:219:make_patterns_logic$1621, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.34.28.1. Executing ABC.

3.34.29. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9661$auto$opt_dff.cc:219:make_patterns_logic$1699, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 4 outputs.

3.34.29.1. Executing ABC.

3.34.30. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9759$auto$opt_dff.cc:219:make_patterns_logic$1387, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.30.1. Executing ABC.

3.34.31. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9860$auto$opt_dff.cc:219:make_patterns_logic$1491, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.34.31.1. Executing ABC.

3.34.32. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9710$auto$opt_dff.cc:219:make_patterns_logic$1751, asynchronously reset by \wb_rst_i
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 6 outputs.

3.34.32.1. Executing ABC.

3.34.33. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9812$auto$opt_dff.cc:219:make_patterns_logic$1439, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.34.33.1. Executing ABC.

3.34.34. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9910$auto$opt_dff.cc:219:make_patterns_logic$1543, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.34.34.1. Executing ABC.

3.34.35. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9935$auto$opt_dff.cc:219:make_patterns_logic$1322, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 6 outputs.

3.34.35.1. Executing ABC.

3.34.36. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9836$auto$opt_dff.cc:219:make_patterns_logic$1465, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 6 outputs.

3.34.36.1. Executing ABC.

3.34.37. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9733$auto$opt_dff.cc:219:make_patterns_logic$1361, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.34.37.1. Executing ABC.

3.34.38. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9637$auto$opt_dff.cc:219:make_patterns_logic$1673, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 4 outputs.

3.34.38.1. Executing ABC.

3.34.39. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9555$auto$opt_dff.cc:219:make_patterns_logic$1569, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.34.39.1. Executing ABC.

3.34.40. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9526$auto$opt_dff.cc:219:make_patterns_logic$1244, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 6 outputs.

3.34.40.1. Executing ABC.

3.34.41. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8554$auto$opt_dff.cc:219:make_patterns_logic$2557, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.41.1. Executing ABC.

3.34.42. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8585$auto$opt_dff.cc:219:make_patterns_logic$2518, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.42.1. Executing ABC.

3.34.43. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8617$auto$opt_dff.cc:219:make_patterns_logic$2479, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.43.1. Executing ABC.

3.34.44. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9873$auto$opt_dff.cc:219:make_patterns_logic$1504, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.34.44.1. Executing ABC.

3.34.45. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9774$auto$opt_dff.cc:219:make_patterns_logic$1400, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.34.45.1. Executing ABC.

3.34.46. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9674$auto$opt_dff.cc:219:make_patterns_logic$1712, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.34.46.1. Executing ABC.

3.34.47. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9584$auto$opt_dff.cc:219:make_patterns_logic$1608, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.34.47.1. Executing ABC.

3.34.48. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9452$auto$opt_dff.cc:219:make_patterns_logic$919, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.34.48.1. Executing ABC.

3.34.49. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10279$auto$opt_dff.cc:219:make_patterns_logic$1231, asynchronously reset by \wb_rst_i
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 4 outputs.

3.34.49.1. Executing ABC.

3.34.50. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10297$auto$opt_dff.cc:219:make_patterns_logic$892, asynchronously reset by \wb_rst_i
Extracted 47 gates and 79 wires to a netlist network with 32 inputs and 44 outputs.

3.34.50.1. Executing ABC.

3.34.51. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9612$auto$opt_dff.cc:219:make_patterns_logic$1647, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.34.51.1. Executing ABC.

3.34.52. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9574$auto$opt_dff.cc:219:make_patterns_logic$1595, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 3 outputs.

3.34.52.1. Executing ABC.

3.34.53. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10741$auto$opt_dff.cc:219:make_patterns_logic$1192, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.34.53.1. Executing ABC.

3.34.54. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8543$auto$opt_dff.cc:219:make_patterns_logic$2570, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.34.54.1. Executing ABC.

3.34.55. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8564$auto$opt_dff.cc:219:make_patterns_logic$2544, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.55.1. Executing ABC.

3.34.56. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8575$auto$opt_dff.cc:219:make_patterns_logic$2531, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.34.56.1. Executing ABC.

3.34.57. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8596$auto$opt_dff.cc:219:make_patterns_logic$2505, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.34.57.1. Executing ABC.

3.34.58. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8606$auto$opt_dff.cc:219:make_patterns_logic$2492, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.34.58.1. Executing ABC.

3.34.59. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8631$auto$opt_dff.cc:219:make_patterns_logic$2466, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.59.1. Executing ABC.

3.34.60. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8642$auto$opt_dff.cc:219:make_patterns_logic$2453, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.34.60.1. Executing ABC.

3.34.61. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8650$auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.61.1. Executing ABC.

3.34.62. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8668$auto$opt_dff.cc:219:make_patterns_logic$2414, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.62.1. Executing ABC.

3.34.63. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8678$auto$opt_dff.cc:219:make_patterns_logic$2401, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.34.63.1. Executing ABC.

3.34.64. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8660$auto$opt_dff.cc:219:make_patterns_logic$2427, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.34.64.1. Executing ABC.

3.34.65. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9225$flatten\clgen.$verific$n118$407, asynchronously reset by \wb_rst_i
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 6 outputs.

3.34.65.1. Executing ABC.

3.34.66. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9244$auto$opt_dff.cc:219:make_patterns_logic$895, asynchronously reset by \wb_rst_i
Extracted 89 gates and 156 wires to a netlist network with 67 inputs and 38 outputs.

3.34.66.1. Executing ABC.

3.34.67. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10669$auto$opt_dff.cc:219:make_patterns_logic$1218, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.34.67.1. Executing ABC.

3.34.68. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9218$auto$opt_dff.cc:219:make_patterns_logic$902, asynchronously reset by \wb_rst_i
Extracted 15 gates and 31 wires to a netlist network with 16 inputs and 5 outputs.

3.34.68.1. Executing ABC.

3.34.69. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9205$auto$opt_dff.cc:219:make_patterns_logic$1764, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.34.69.1. Executing ABC.

3.34.70. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9193$auto$opt_dff.cc:219:make_patterns_logic$1257, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.34.70.1. Executing ABC.

3.34.71. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9184$auto$opt_dff.cc:219:make_patterns_logic$1777, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.71.1. Executing ABC.

3.34.72. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9173$auto$opt_dff.cc:219:make_patterns_logic$1790, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.34.72.1. Executing ABC.

3.34.73. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9164$auto$opt_dff.cc:219:make_patterns_logic$1803, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.73.1. Executing ABC.

3.34.74. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9153$auto$opt_dff.cc:219:make_patterns_logic$1816, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.34.74.1. Executing ABC.

3.34.75. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9144$auto$opt_dff.cc:219:make_patterns_logic$1829, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.75.1. Executing ABC.

3.34.76. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9131$auto$opt_dff.cc:219:make_patterns_logic$1842, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 4 outputs.

3.34.76.1. Executing ABC.

3.34.77. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9117$auto$opt_dff.cc:219:make_patterns_logic$1855, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 8 outputs.

3.34.77.1. Executing ABC.

3.34.78. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9106$auto$opt_dff.cc:219:make_patterns_logic$1868, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 6 outputs.

3.34.78.1. Executing ABC.

3.34.79. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8867$auto$opt_dff.cc:219:make_patterns_logic$2167, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.79.1. Executing ABC.

3.34.80. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8891$auto$opt_dff.cc:219:make_patterns_logic$2141, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.80.1. Executing ABC.

3.34.81. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8912$auto$opt_dff.cc:219:make_patterns_logic$2115, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.81.1. Executing ABC.

3.34.82. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8933$auto$opt_dff.cc:219:make_patterns_logic$2089, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.82.1. Executing ABC.

3.34.83. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8954$auto$opt_dff.cc:219:make_patterns_logic$2063, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.34.83.1. Executing ABC.

3.34.84. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8977$auto$opt_dff.cc:219:make_patterns_logic$2037, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 8 outputs.

3.34.84.1. Executing ABC.

3.34.85. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8995$auto$opt_dff.cc:219:make_patterns_logic$2011, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.34.85.1. Executing ABC.

3.34.86. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9013$auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 9 outputs.

3.34.86.1. Executing ABC.

3.34.87. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8686$auto$opt_dff.cc:219:make_patterns_logic$2388, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.34.87.1. Executing ABC.

3.34.88. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8696$auto$opt_dff.cc:219:make_patterns_logic$2375, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 8 outputs.

3.34.88.1. Executing ABC.

3.34.89. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8708$auto$opt_dff.cc:219:make_patterns_logic$2362, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.34.89.1. Executing ABC.

3.34.90. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8719$auto$opt_dff.cc:219:make_patterns_logic$2349, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.34.90.1. Executing ABC.

3.34.91. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8729$auto$opt_dff.cc:219:make_patterns_logic$2336, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.34.91.1. Executing ABC.

3.34.92. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8740$auto$opt_dff.cc:219:make_patterns_logic$2323, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.34.92.1. Executing ABC.

3.34.93. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8750$auto$opt_dff.cc:219:make_patterns_logic$2310, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.34.93.1. Executing ABC.

3.34.94. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8761$auto$opt_dff.cc:219:make_patterns_logic$2297, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.34.94.1. Executing ABC.

3.34.95. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8771$auto$opt_dff.cc:219:make_patterns_logic$2284, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.34.95.1. Executing ABC.

3.34.96. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8782$auto$opt_dff.cc:219:make_patterns_logic$2271, asynchronously reset by \wb_rst_i
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 5 outputs.

3.34.96.1. Executing ABC.

3.34.97. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8796$auto$opt_dff.cc:219:make_patterns_logic$2258, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.34.97.1. Executing ABC.

3.34.98. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8807$auto$opt_dff.cc:219:make_patterns_logic$2245, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.34.98.1. Executing ABC.

3.34.99. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8816$auto$opt_dff.cc:219:make_patterns_logic$2232, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.34.99.1. Executing ABC.

3.34.100. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8827$auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.34.100.1. Executing ABC.

3.34.101. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8836$auto$opt_dff.cc:219:make_patterns_logic$2206, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.34.101.1. Executing ABC.

3.34.102. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8847$auto$opt_dff.cc:219:make_patterns_logic$2193, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.34.102.1. Executing ABC.

3.34.103. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8856$auto$opt_dff.cc:219:make_patterns_logic$2180, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 5 outputs.

3.34.103.1. Executing ABC.

3.34.104. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8880$auto$opt_dff.cc:219:make_patterns_logic$2154, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.34.104.1. Executing ABC.

3.34.105. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8901$auto$opt_dff.cc:219:make_patterns_logic$2128, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.34.105.1. Executing ABC.

3.34.106. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8922$auto$opt_dff.cc:219:make_patterns_logic$2102, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.34.106.1. Executing ABC.

3.34.107. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8943$auto$opt_dff.cc:219:make_patterns_logic$2076, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.34.107.1. Executing ABC.

3.34.108. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8967$auto$opt_dff.cc:219:make_patterns_logic$2050, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.34.108.1. Executing ABC.

3.34.109. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$8985$auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.34.109.1. Executing ABC.

3.34.110. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9003$auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 7 outputs.

3.34.110.1. Executing ABC.

3.34.111. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9021$auto$opt_dff.cc:219:make_patterns_logic$1972, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.34.111.1. Executing ABC.

3.34.112. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9031$auto$opt_dff.cc:219:make_patterns_logic$1959, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 4 outputs.

3.34.112.1. Executing ABC.

3.34.113. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9043$auto$opt_dff.cc:219:make_patterns_logic$1946, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.34.113.1. Executing ABC.

3.34.114. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9054$auto$opt_dff.cc:219:make_patterns_logic$1933, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.34.114.1. Executing ABC.

3.34.115. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9064$auto$opt_dff.cc:219:make_patterns_logic$1920, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.34.115.1. Executing ABC.

3.34.116. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9075$auto$opt_dff.cc:219:make_patterns_logic$1907, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.34.116.1. Executing ABC.

3.34.117. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9085$auto$opt_dff.cc:219:make_patterns_logic$1894, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.34.117.1. Executing ABC.

3.34.118. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9096$auto$opt_dff.cc:219:make_patterns_logic$1881, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.34.118.1. Executing ABC.

3.34.119. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9897$auto$opt_dff.cc:219:make_patterns_logic$1530, asynchronously reset by \wb_rst_i
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 7 outputs.

3.34.119.1. Executing ABC.

3.34.120. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9849$auto$opt_dff.cc:219:make_patterns_logic$1478, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.34.120.1. Executing ABC.

3.34.121. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9801$auto$opt_dff.cc:219:make_patterns_logic$1426, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.34.121.1. Executing ABC.

3.34.122. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9746$auto$opt_dff.cc:219:make_patterns_logic$1374, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.34.122.1. Executing ABC.

3.34.123. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9698$auto$opt_dff.cc:219:make_patterns_logic$1738, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.34.123.1. Executing ABC.

3.34.124. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9650$auto$opt_dff.cc:219:make_patterns_logic$1686, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.34.124.1. Executing ABC.

3.34.125. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9603$auto$opt_dff.cc:219:make_patterns_logic$1634, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 3 outputs.

3.34.125.1. Executing ABC.

3.34.126. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9565$auto$opt_dff.cc:219:make_patterns_logic$1582, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.34.126.1. Executing ABC.

3.34.127. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10719$auto$opt_dff.cc:219:make_patterns_logic$1166, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 3 outputs.

3.34.127.1. Executing ABC.

3.34.128. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9923$auto$opt_dff.cc:219:make_patterns_logic$1309, asynchronously reset by \wb_rst_i
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 7 outputs.

3.34.128.1. Executing ABC.

3.34.129. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9825$auto$opt_dff.cc:219:make_patterns_logic$1452, asynchronously reset by \wb_rst_i
Extracted 17 gates and 35 wires to a netlist network with 18 inputs and 8 outputs.

3.34.129.1. Executing ABC.

3.34.130. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9721$auto$opt_dff.cc:219:make_patterns_logic$1348, asynchronously reset by \wb_rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.34.130.1. Executing ABC.

3.34.131. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9625$auto$opt_dff.cc:219:make_patterns_logic$1660, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 4 outputs.

3.34.131.1. Executing ABC.

3.34.132. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9543$auto$opt_dff.cc:219:make_patterns_logic$932, asynchronously reset by \wb_rst_i
Extracted 15 gates and 29 wires to a netlist network with 14 inputs and 5 outputs.

3.34.132.1. Executing ABC.

3.34.133. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9338$flatten\shift.$verific$n338$492, asynchronously reset by \wb_rst_i
Extracted 112 gates and 185 wires to a netlist network with 73 inputs and 2 outputs.

3.34.133.1. Executing ABC.

3.34.134. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10729$auto$opt_dff.cc:219:make_patterns_logic$1179, asynchronously reset by \wb_rst_i
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 5 outputs.

3.34.134.1. Executing ABC.

3.34.135. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$9538$auto$opt_dff.cc:194:make_patterns_logic$880, asynchronously reset by \wb_rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.34.135.1. Executing ABC.

3.34.136. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10367$auto$opt_dff.cc:219:make_patterns_logic$883, asynchronously reset by \wb_rst_i
Extracted 31 gates and 56 wires to a netlist network with 25 inputs and 18 outputs.

3.34.136.1. Executing ABC.

3.34.137. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10406$auto$opt_dff.cc:194:make_patterns_logic$2573, asynchronously reset by \wb_rst_i
Extracted 37 gates and 47 wires to a netlist network with 10 inputs and 33 outputs.

3.34.137.1. Executing ABC.

3.34.138. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10223$auto$opt_dff.cc:219:make_patterns_logic$886, asynchronously reset by \wb_rst_i
Extracted 27 gates and 45 wires to a netlist network with 18 inputs and 23 outputs.

3.34.138.1. Executing ABC.

3.34.139. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \wb_rst_i
Extracted 215 gates and 325 wires to a netlist network with 110 inputs and 45 outputs.

3.34.139.1. Executing ABC.

3.34.140. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10681$auto$opt_dff.cc:219:make_patterns_logic$889, asynchronously reset by \wb_rst_i
Extracted 24 gates and 36 wires to a netlist network with 12 inputs and 21 outputs.

3.34.140.1. Executing ABC.

3.34.141. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10751$auto$opt_dff.cc:219:make_patterns_logic$1205, asynchronously reset by \wb_rst_i
Extracted 139 gates and 224 wires to a netlist network with 85 inputs and 6 outputs.

3.34.141.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  12 cells in clk=\wb_clk_i, en=$abc$10892$abc$10136$auto$opt_dff.cc:219:make_patterns_logic$1088, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$10905$abc$10168$auto$opt_dff.cc:219:make_patterns_logic$1114, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$10919$abc$10158$auto$opt_dff.cc:219:make_patterns_logic$1556, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$10929$abc$10198$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$10942$abc$10146$auto$opt_dff.cc:219:make_patterns_logic$1101, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$10953$abc$9971$auto$opt_dff.cc:219:make_patterns_logic$1283, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$10964$abc$9947$auto$opt_dff.cc:219:make_patterns_logic$1335, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$10973$abc$10186$auto$opt_dff.cc:219:make_patterns_logic$1127, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$10985$abc$9983$auto$opt_dff.cc:219:make_patterns_logic$1296, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11000$abc$9960$auto$opt_dff.cc:219:make_patterns_logic$1270, arst=\wb_rst_i, srst={ }
  24 cells in clk=\wb_clk_i, en=$abc$11011$abc$10261$auto$opt_dff.cc:194:make_patterns_logic$905, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11037$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$997, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11048$abc$10092$auto$opt_dff.cc:219:make_patterns_logic$1036, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11060$abc$10211$auto$opt_dff.cc:219:make_patterns_logic$1153, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11072$abc$10077$auto$opt_dff.cc:219:make_patterns_logic$1023, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$11085$abc$10114$auto$opt_dff.cc:219:make_patterns_logic$1062, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11099$abc$10060$auto$opt_dff.cc:219:make_patterns_logic$1010, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11109$abc$10023$auto$opt_dff.cc:219:make_patterns_logic$971, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11118$abc$10000$auto$opt_dff.cc:219:make_patterns_logic$945, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11129$abc$10102$auto$opt_dff.cc:219:make_patterns_logic$1049, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$11139$abc$10035$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$11146$abc$10012$auto$opt_dff.cc:219:make_patterns_logic$958, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11153$abc$10124$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$11165$abc$9884$auto$opt_dff.cc:219:make_patterns_logic$1517, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$11180$abc$9787$auto$opt_dff.cc:219:make_patterns_logic$1413, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$11189$abc$9685$auto$opt_dff.cc:219:make_patterns_logic$1725, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$11204$abc$9593$auto$opt_dff.cc:219:make_patterns_logic$1621, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$11215$abc$9661$auto$opt_dff.cc:219:make_patterns_logic$1699, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11228$abc$9759$auto$opt_dff.cc:219:make_patterns_logic$1387, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$11237$abc$9860$auto$opt_dff.cc:219:make_patterns_logic$1491, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$11251$abc$9710$auto$opt_dff.cc:219:make_patterns_logic$1751, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$11264$abc$9812$auto$opt_dff.cc:219:make_patterns_logic$1439, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11278$abc$9910$auto$opt_dff.cc:219:make_patterns_logic$1543, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$11291$abc$9935$auto$opt_dff.cc:219:make_patterns_logic$1322, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$11304$abc$9836$auto$opt_dff.cc:219:make_patterns_logic$1465, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$11318$abc$9733$auto$opt_dff.cc:219:make_patterns_logic$1361, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$11327$abc$9637$auto$opt_dff.cc:219:make_patterns_logic$1673, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$11340$abc$9555$auto$opt_dff.cc:219:make_patterns_logic$1569, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11351$abc$9526$auto$opt_dff.cc:219:make_patterns_logic$1244, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11364$abc$8554$auto$opt_dff.cc:219:make_patterns_logic$2557, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11375$abc$8585$auto$opt_dff.cc:219:make_patterns_logic$2518, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11386$abc$8617$auto$opt_dff.cc:219:make_patterns_logic$2479, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11397$abc$9873$auto$opt_dff.cc:219:make_patterns_logic$1504, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$11410$abc$9774$auto$opt_dff.cc:219:make_patterns_logic$1400, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11417$abc$9674$auto$opt_dff.cc:219:make_patterns_logic$1712, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$11429$abc$9584$auto$opt_dff.cc:219:make_patterns_logic$1608, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11440$abc$9452$auto$opt_dff.cc:219:make_patterns_logic$919, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11450$abc$10279$auto$opt_dff.cc:219:make_patterns_logic$1231, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11525$abc$9612$auto$opt_dff.cc:219:make_patterns_logic$1647, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$11538$abc$9574$auto$opt_dff.cc:219:make_patterns_logic$1595, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11547$abc$10741$auto$opt_dff.cc:219:make_patterns_logic$1192, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11560$abc$8543$auto$opt_dff.cc:219:make_patterns_logic$2570, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11570$abc$8564$auto$opt_dff.cc:219:make_patterns_logic$2544, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11581$abc$8575$auto$opt_dff.cc:219:make_patterns_logic$2531, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11591$abc$8596$auto$opt_dff.cc:219:make_patterns_logic$2505, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11601$abc$8606$auto$opt_dff.cc:219:make_patterns_logic$2492, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11614$abc$8631$auto$opt_dff.cc:219:make_patterns_logic$2466, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$11624$abc$8642$auto$opt_dff.cc:219:make_patterns_logic$2453, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11632$abc$8650$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11642$abc$8668$auto$opt_dff.cc:219:make_patterns_logic$2414, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$11652$abc$8678$auto$opt_dff.cc:219:make_patterns_logic$2401, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$11660$abc$8660$auto$opt_dff.cc:219:make_patterns_logic$2427, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$11668$abc$9225$flatten\clgen.$verific$n118$407, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$11777$abc$10669$auto$opt_dff.cc:219:make_patterns_logic$1218, arst=\wb_rst_i, srst={ }
  16 cells in clk=\wb_clk_i, en=$abc$11790$abc$9218$auto$opt_dff.cc:219:make_patterns_logic$902, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$11807$abc$9205$auto$opt_dff.cc:219:make_patterns_logic$1764, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11815$abc$9193$auto$opt_dff.cc:219:make_patterns_logic$1257, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11825$abc$9184$auto$opt_dff.cc:219:make_patterns_logic$1777, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$11834$abc$9173$auto$opt_dff.cc:219:make_patterns_logic$1790, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11842$abc$9164$auto$opt_dff.cc:219:make_patterns_logic$1803, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$11851$abc$9153$auto$opt_dff.cc:219:make_patterns_logic$1816, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11859$abc$9144$auto$opt_dff.cc:219:make_patterns_logic$1829, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$11868$abc$9131$auto$opt_dff.cc:219:make_patterns_logic$1842, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$11878$abc$9117$auto$opt_dff.cc:219:make_patterns_logic$1855, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11892$abc$9106$auto$opt_dff.cc:219:make_patterns_logic$1868, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$11904$abc$8867$auto$opt_dff.cc:219:make_patterns_logic$2167, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11913$abc$8891$auto$opt_dff.cc:219:make_patterns_logic$2141, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11924$abc$8912$auto$opt_dff.cc:219:make_patterns_logic$2115, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11935$abc$8933$auto$opt_dff.cc:219:make_patterns_logic$2089, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$11946$abc$8954$auto$opt_dff.cc:219:make_patterns_logic$2063, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$11957$abc$8977$auto$opt_dff.cc:219:make_patterns_logic$2037, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$11971$abc$8995$auto$opt_dff.cc:219:make_patterns_logic$2011, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$11986$abc$9013$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$12001$abc$8686$auto$opt_dff.cc:219:make_patterns_logic$2388, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$12011$abc$8696$auto$opt_dff.cc:219:make_patterns_logic$2375, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$12027$abc$8708$auto$opt_dff.cc:219:make_patterns_logic$2362, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12039$abc$8719$auto$opt_dff.cc:219:make_patterns_logic$2349, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$12051$abc$8729$auto$opt_dff.cc:219:make_patterns_logic$2336, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12066$abc$8740$auto$opt_dff.cc:219:make_patterns_logic$2323, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$12078$abc$8750$auto$opt_dff.cc:219:make_patterns_logic$2310, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12090$abc$8761$auto$opt_dff.cc:219:make_patterns_logic$2297, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$12102$abc$8771$auto$opt_dff.cc:219:make_patterns_logic$2284, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12114$abc$8782$auto$opt_dff.cc:219:make_patterns_logic$2271, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$12127$abc$8796$auto$opt_dff.cc:219:make_patterns_logic$2258, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$12137$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$2245, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$12145$abc$8816$auto$opt_dff.cc:219:make_patterns_logic$2232, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$12155$abc$8827$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$12163$abc$8836$auto$opt_dff.cc:219:make_patterns_logic$2206, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$12173$abc$8847$auto$opt_dff.cc:219:make_patterns_logic$2193, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12181$abc$8856$auto$opt_dff.cc:219:make_patterns_logic$2180, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$12193$abc$8880$auto$opt_dff.cc:219:make_patterns_logic$2154, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$12203$abc$8901$auto$opt_dff.cc:219:make_patterns_logic$2128, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$12213$abc$8922$auto$opt_dff.cc:219:make_patterns_logic$2102, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$12223$abc$8943$auto$opt_dff.cc:219:make_patterns_logic$2076, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12236$abc$8967$auto$opt_dff.cc:219:make_patterns_logic$2050, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$12248$abc$8985$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$12259$abc$9003$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$12272$abc$9021$auto$opt_dff.cc:219:make_patterns_logic$1972, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12283$abc$9031$auto$opt_dff.cc:219:make_patterns_logic$1959, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$12295$abc$9043$auto$opt_dff.cc:219:make_patterns_logic$1946, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$12306$abc$9054$auto$opt_dff.cc:219:make_patterns_logic$1933, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$12315$abc$9064$auto$opt_dff.cc:219:make_patterns_logic$1920, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$12326$abc$9075$auto$opt_dff.cc:219:make_patterns_logic$1907, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$12335$abc$9085$auto$opt_dff.cc:219:make_patterns_logic$1894, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12346$abc$9096$auto$opt_dff.cc:219:make_patterns_logic$1881, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$12358$abc$9897$auto$opt_dff.cc:219:make_patterns_logic$1530, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$12373$abc$9849$auto$opt_dff.cc:219:make_patterns_logic$1478, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$12387$abc$9801$auto$opt_dff.cc:219:make_patterns_logic$1426, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$12394$abc$9746$auto$opt_dff.cc:219:make_patterns_logic$1374, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$12401$abc$9698$auto$opt_dff.cc:219:make_patterns_logic$1738, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12414$abc$9650$auto$opt_dff.cc:219:make_patterns_logic$1686, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$12426$abc$9603$auto$opt_dff.cc:219:make_patterns_logic$1634, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$12435$abc$9565$auto$opt_dff.cc:219:make_patterns_logic$1582, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$12446$abc$10719$auto$opt_dff.cc:219:make_patterns_logic$1166, arst=\wb_rst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$abc$12457$abc$9923$auto$opt_dff.cc:219:make_patterns_logic$1309, arst=\wb_rst_i, srst={ }
  18 cells in clk=\wb_clk_i, en=$abc$12474$abc$9825$auto$opt_dff.cc:219:make_patterns_logic$1452, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$12493$abc$9721$auto$opt_dff.cc:219:make_patterns_logic$1348, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$12504$abc$9625$auto$opt_dff.cc:219:make_patterns_logic$1660, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$12520$abc$9543$auto$opt_dff.cc:219:make_patterns_logic$932, arst=\wb_rst_i, srst={ }
  89 cells in clk=\wb_clk_i, en=$abc$12535$abc$9338$flatten\shift.$verific$n338$492, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$12626$abc$10729$auto$opt_dff.cc:219:make_patterns_logic$1179, arst=\wb_rst_i, srst={ }
  1 cells in clk=\wb_clk_i, en=$abc$12781$abc$9538$auto$opt_dff.cc:194:make_patterns_logic$880, arst=\wb_rst_i, srst={ }
  30 cells in clk=\wb_clk_i, en=$abc$12645$abc$10367$auto$opt_dff.cc:219:make_patterns_logic$883, arst=\wb_rst_i, srst={ }
  58 cells in clk=\wb_clk_i, en=$abc$12685$abc$10406$auto$opt_dff.cc:194:make_patterns_logic$2573, arst=\wb_rst_i, srst={ }
  48 cells in clk=\wb_clk_i, en=$abc$11463$abc$10297$auto$opt_dff.cc:219:make_patterns_logic$892, arst=\wb_rst_i, srst={ }
  64 cells in clk=\wb_clk_i, en=$abc$11679$abc$9244$auto$opt_dff.cc:219:make_patterns_logic$895, arst=\wb_rst_i, srst={ }
  30 cells in clk=\wb_clk_i, en=$abc$12738$abc$10223$auto$opt_dff.cc:219:make_patterns_logic$886, arst=\wb_rst_i, srst={ }
  24 cells in clk=\wb_clk_i, en=$abc$13033$abc$10681$auto$opt_dff.cc:219:make_patterns_logic$889, arst=\wb_rst_i, srst={ }
  213 cells in clk=\wb_clk_i, en={ }, arst=\wb_rst_i, srst={ }
  116 cells in clk=\wb_clk_i, en=$abc$13071$abc$10751$auto$opt_dff.cc:219:make_patterns_logic$1205, arst=\wb_rst_i, srst={ }

3.35.2. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10892$abc$10136$auto$opt_dff.cc:219:make_patterns_logic$1088, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10905$abc$10168$auto$opt_dff.cc:219:make_patterns_logic$1114, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 5 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10919$abc$10158$auto$opt_dff.cc:219:make_patterns_logic$1556, asynchronously reset by \wb_rst_i
Extracted 9 gates and 22 wires to a netlist network with 13 inputs and 4 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10929$abc$10198$auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \wb_rst_i
Extracted 12 gates and 28 wires to a netlist network with 16 inputs and 5 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10942$abc$10146$auto$opt_dff.cc:219:make_patterns_logic$1101, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 3 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10953$abc$9971$auto$opt_dff.cc:219:make_patterns_logic$1283, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10964$abc$9947$auto$opt_dff.cc:219:make_patterns_logic$1335, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10973$abc$10186$auto$opt_dff.cc:219:make_patterns_logic$1127, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$10985$abc$9983$auto$opt_dff.cc:219:make_patterns_logic$1296, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 6 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11000$abc$9960$auto$opt_dff.cc:219:make_patterns_logic$1270, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11011$abc$10261$auto$opt_dff.cc:194:make_patterns_logic$905, asynchronously reset by \wb_rst_i
Extracted 24 gates and 49 wires to a netlist network with 25 inputs and 18 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11037$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$997, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 7 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11048$abc$10092$auto$opt_dff.cc:219:make_patterns_logic$1036, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 4 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11060$abc$10211$auto$opt_dff.cc:219:make_patterns_logic$1153, asynchronously reset by \wb_rst_i
Extracted 11 gates and 26 wires to a netlist network with 15 inputs and 4 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11072$abc$10077$auto$opt_dff.cc:219:make_patterns_logic$1023, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11085$abc$10114$auto$opt_dff.cc:219:make_patterns_logic$1062, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 6 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11099$abc$10060$auto$opt_dff.cc:219:make_patterns_logic$1010, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11109$abc$10023$auto$opt_dff.cc:219:make_patterns_logic$971, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11118$abc$10000$auto$opt_dff.cc:219:make_patterns_logic$945, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 6 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11129$abc$10102$auto$opt_dff.cc:219:make_patterns_logic$1049, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 2 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11139$abc$10035$auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11146$abc$10012$auto$opt_dff.cc:219:make_patterns_logic$958, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11153$abc$10124$auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11165$abc$9884$auto$opt_dff.cc:219:make_patterns_logic$1517, asynchronously reset by \wb_rst_i
Extracted 14 gates and 31 wires to a netlist network with 17 inputs and 7 outputs.

3.35.25.1. Executing ABC.

3.35.26. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11180$abc$9787$auto$opt_dff.cc:219:make_patterns_logic$1413, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.35.26.1. Executing ABC.

3.35.27. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11189$abc$9685$auto$opt_dff.cc:219:make_patterns_logic$1725, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 6 outputs.

3.35.27.1. Executing ABC.

3.35.28. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11204$abc$9593$auto$opt_dff.cc:219:make_patterns_logic$1621, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.35.28.1. Executing ABC.

3.35.29. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11215$abc$9661$auto$opt_dff.cc:219:make_patterns_logic$1699, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 5 outputs.

3.35.29.1. Executing ABC.

3.35.30. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11228$abc$9759$auto$opt_dff.cc:219:make_patterns_logic$1387, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.30.1. Executing ABC.

3.35.31. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11237$abc$9860$auto$opt_dff.cc:219:make_patterns_logic$1491, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.35.31.1. Executing ABC.

3.35.32. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11251$abc$9710$auto$opt_dff.cc:219:make_patterns_logic$1751, asynchronously reset by \wb_rst_i
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 6 outputs.

3.35.32.1. Executing ABC.

3.35.33. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11264$abc$9812$auto$opt_dff.cc:219:make_patterns_logic$1439, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.35.33.1. Executing ABC.

3.35.34. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11278$abc$9910$auto$opt_dff.cc:219:make_patterns_logic$1543, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.35.34.1. Executing ABC.

3.35.35. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11291$abc$9935$auto$opt_dff.cc:219:make_patterns_logic$1322, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 6 outputs.

3.35.35.1. Executing ABC.

3.35.36. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11304$abc$9836$auto$opt_dff.cc:219:make_patterns_logic$1465, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 6 outputs.

3.35.36.1. Executing ABC.

3.35.37. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11318$abc$9733$auto$opt_dff.cc:219:make_patterns_logic$1361, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.35.37.1. Executing ABC.

3.35.38. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11327$abc$9637$auto$opt_dff.cc:219:make_patterns_logic$1673, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 4 outputs.

3.35.38.1. Executing ABC.

3.35.39. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11340$abc$9555$auto$opt_dff.cc:219:make_patterns_logic$1569, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.35.39.1. Executing ABC.

3.35.40. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11351$abc$9526$auto$opt_dff.cc:219:make_patterns_logic$1244, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 6 outputs.

3.35.40.1. Executing ABC.

3.35.41. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11364$abc$8554$auto$opt_dff.cc:219:make_patterns_logic$2557, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.41.1. Executing ABC.

3.35.42. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11375$abc$8585$auto$opt_dff.cc:219:make_patterns_logic$2518, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.42.1. Executing ABC.

3.35.43. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11386$abc$8617$auto$opt_dff.cc:219:make_patterns_logic$2479, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.43.1. Executing ABC.

3.35.44. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11397$abc$9873$auto$opt_dff.cc:219:make_patterns_logic$1504, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.35.44.1. Executing ABC.

3.35.45. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11410$abc$9774$auto$opt_dff.cc:219:make_patterns_logic$1400, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.35.45.1. Executing ABC.

3.35.46. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11417$abc$9674$auto$opt_dff.cc:219:make_patterns_logic$1712, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.35.46.1. Executing ABC.

3.35.47. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11429$abc$9584$auto$opt_dff.cc:219:make_patterns_logic$1608, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.35.47.1. Executing ABC.

3.35.48. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11440$abc$9452$auto$opt_dff.cc:219:make_patterns_logic$919, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.35.48.1. Executing ABC.

3.35.49. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11450$abc$10279$auto$opt_dff.cc:219:make_patterns_logic$1231, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 3 outputs.

3.35.49.1. Executing ABC.

3.35.50. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11525$abc$9612$auto$opt_dff.cc:219:make_patterns_logic$1647, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.35.50.1. Executing ABC.

3.35.51. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11538$abc$9574$auto$opt_dff.cc:219:make_patterns_logic$1595, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 3 outputs.

3.35.51.1. Executing ABC.

3.35.52. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11547$abc$10741$auto$opt_dff.cc:219:make_patterns_logic$1192, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.35.52.1. Executing ABC.

3.35.53. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11560$abc$8543$auto$opt_dff.cc:219:make_patterns_logic$2570, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.35.53.1. Executing ABC.

3.35.54. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11570$abc$8564$auto$opt_dff.cc:219:make_patterns_logic$2544, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.54.1. Executing ABC.

3.35.55. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11581$abc$8575$auto$opt_dff.cc:219:make_patterns_logic$2531, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.35.55.1. Executing ABC.

3.35.56. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11591$abc$8596$auto$opt_dff.cc:219:make_patterns_logic$2505, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.35.56.1. Executing ABC.

3.35.57. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11601$abc$8606$auto$opt_dff.cc:219:make_patterns_logic$2492, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.35.57.1. Executing ABC.

3.35.58. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11614$abc$8631$auto$opt_dff.cc:219:make_patterns_logic$2466, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.58.1. Executing ABC.

3.35.59. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11624$abc$8642$auto$opt_dff.cc:219:make_patterns_logic$2453, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.35.59.1. Executing ABC.

3.35.60. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11632$abc$8650$auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.60.1. Executing ABC.

3.35.61. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11642$abc$8668$auto$opt_dff.cc:219:make_patterns_logic$2414, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.61.1. Executing ABC.

3.35.62. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11652$abc$8678$auto$opt_dff.cc:219:make_patterns_logic$2401, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.35.62.1. Executing ABC.

3.35.63. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11660$abc$8660$auto$opt_dff.cc:219:make_patterns_logic$2427, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.35.63.1. Executing ABC.

3.35.64. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11668$abc$9225$flatten\clgen.$verific$n118$407, asynchronously reset by \wb_rst_i
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 6 outputs.

3.35.64.1. Executing ABC.

3.35.65. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11777$abc$10669$auto$opt_dff.cc:219:make_patterns_logic$1218, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.35.65.1. Executing ABC.

3.35.66. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11790$abc$9218$auto$opt_dff.cc:219:make_patterns_logic$902, asynchronously reset by \wb_rst_i
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 6 outputs.

3.35.66.1. Executing ABC.

3.35.67. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11807$abc$9205$auto$opt_dff.cc:219:make_patterns_logic$1764, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.35.67.1. Executing ABC.

3.35.68. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11815$abc$9193$auto$opt_dff.cc:219:make_patterns_logic$1257, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.35.68.1. Executing ABC.

3.35.69. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11825$abc$9184$auto$opt_dff.cc:219:make_patterns_logic$1777, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.69.1. Executing ABC.

3.35.70. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11834$abc$9173$auto$opt_dff.cc:219:make_patterns_logic$1790, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.35.70.1. Executing ABC.

3.35.71. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11842$abc$9164$auto$opt_dff.cc:219:make_patterns_logic$1803, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.71.1. Executing ABC.

3.35.72. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11851$abc$9153$auto$opt_dff.cc:219:make_patterns_logic$1816, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.35.72.1. Executing ABC.

3.35.73. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11859$abc$9144$auto$opt_dff.cc:219:make_patterns_logic$1829, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.73.1. Executing ABC.

3.35.74. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11868$abc$9131$auto$opt_dff.cc:219:make_patterns_logic$1842, asynchronously reset by \wb_rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 5 outputs.

3.35.74.1. Executing ABC.

3.35.75. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11878$abc$9117$auto$opt_dff.cc:219:make_patterns_logic$1855, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 8 outputs.

3.35.75.1. Executing ABC.

3.35.76. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11892$abc$9106$auto$opt_dff.cc:219:make_patterns_logic$1868, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 6 outputs.

3.35.76.1. Executing ABC.

3.35.77. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11904$abc$8867$auto$opt_dff.cc:219:make_patterns_logic$2167, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.77.1. Executing ABC.

3.35.78. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11913$abc$8891$auto$opt_dff.cc:219:make_patterns_logic$2141, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.78.1. Executing ABC.

3.35.79. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11924$abc$8912$auto$opt_dff.cc:219:make_patterns_logic$2115, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.79.1. Executing ABC.

3.35.80. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11935$abc$8933$auto$opt_dff.cc:219:make_patterns_logic$2089, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.80.1. Executing ABC.

3.35.81. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11946$abc$8954$auto$opt_dff.cc:219:make_patterns_logic$2063, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.35.81.1. Executing ABC.

3.35.82. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11957$abc$8977$auto$opt_dff.cc:219:make_patterns_logic$2037, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 8 outputs.

3.35.82.1. Executing ABC.

3.35.83. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11971$abc$8995$auto$opt_dff.cc:219:make_patterns_logic$2011, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.35.83.1. Executing ABC.

3.35.84. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11986$abc$9013$auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.35.84.1. Executing ABC.

3.35.85. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12001$abc$8686$auto$opt_dff.cc:219:make_patterns_logic$2388, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.35.85.1. Executing ABC.

3.35.86. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12011$abc$8696$auto$opt_dff.cc:219:make_patterns_logic$2375, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 8 outputs.

3.35.86.1. Executing ABC.

3.35.87. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12027$abc$8708$auto$opt_dff.cc:219:make_patterns_logic$2362, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.35.87.1. Executing ABC.

3.35.88. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12039$abc$8719$auto$opt_dff.cc:219:make_patterns_logic$2349, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.35.88.1. Executing ABC.

3.35.89. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12051$abc$8729$auto$opt_dff.cc:219:make_patterns_logic$2336, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.35.89.1. Executing ABC.

3.35.90. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12066$abc$8740$auto$opt_dff.cc:219:make_patterns_logic$2323, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.35.90.1. Executing ABC.

3.35.91. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12078$abc$8750$auto$opt_dff.cc:219:make_patterns_logic$2310, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.35.91.1. Executing ABC.

3.35.92. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12090$abc$8761$auto$opt_dff.cc:219:make_patterns_logic$2297, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.35.92.1. Executing ABC.

3.35.93. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12102$abc$8771$auto$opt_dff.cc:219:make_patterns_logic$2284, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.35.93.1. Executing ABC.

3.35.94. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12114$abc$8782$auto$opt_dff.cc:219:make_patterns_logic$2271, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.35.94.1. Executing ABC.

3.35.95. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12127$abc$8796$auto$opt_dff.cc:219:make_patterns_logic$2258, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.35.95.1. Executing ABC.

3.35.96. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12137$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$2245, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.35.96.1. Executing ABC.

3.35.97. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12145$abc$8816$auto$opt_dff.cc:219:make_patterns_logic$2232, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.35.97.1. Executing ABC.

3.35.98. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12155$abc$8827$auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.35.98.1. Executing ABC.

3.35.99. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12163$abc$8836$auto$opt_dff.cc:219:make_patterns_logic$2206, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.35.99.1. Executing ABC.

3.35.100. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12173$abc$8847$auto$opt_dff.cc:219:make_patterns_logic$2193, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.35.100.1. Executing ABC.

3.35.101. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12181$abc$8856$auto$opt_dff.cc:219:make_patterns_logic$2180, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 5 outputs.

3.35.101.1. Executing ABC.

3.35.102. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12193$abc$8880$auto$opt_dff.cc:219:make_patterns_logic$2154, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.35.102.1. Executing ABC.

3.35.103. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12203$abc$8901$auto$opt_dff.cc:219:make_patterns_logic$2128, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.35.103.1. Executing ABC.

3.35.104. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12213$abc$8922$auto$opt_dff.cc:219:make_patterns_logic$2102, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.35.104.1. Executing ABC.

3.35.105. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12223$abc$8943$auto$opt_dff.cc:219:make_patterns_logic$2076, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.35.105.1. Executing ABC.

3.35.106. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12236$abc$8967$auto$opt_dff.cc:219:make_patterns_logic$2050, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.35.106.1. Executing ABC.

3.35.107. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12248$abc$8985$auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.35.107.1. Executing ABC.

3.35.108. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12259$abc$9003$auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 7 outputs.

3.35.108.1. Executing ABC.

3.35.109. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12272$abc$9021$auto$opt_dff.cc:219:make_patterns_logic$1972, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.35.109.1. Executing ABC.

3.35.110. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12283$abc$9031$auto$opt_dff.cc:219:make_patterns_logic$1959, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 4 outputs.

3.35.110.1. Executing ABC.

3.35.111. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12295$abc$9043$auto$opt_dff.cc:219:make_patterns_logic$1946, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.35.111.1. Executing ABC.

3.35.112. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12306$abc$9054$auto$opt_dff.cc:219:make_patterns_logic$1933, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.35.112.1. Executing ABC.

3.35.113. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12315$abc$9064$auto$opt_dff.cc:219:make_patterns_logic$1920, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.35.113.1. Executing ABC.

3.35.114. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12326$abc$9075$auto$opt_dff.cc:219:make_patterns_logic$1907, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.35.114.1. Executing ABC.

3.35.115. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12335$abc$9085$auto$opt_dff.cc:219:make_patterns_logic$1894, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 6 outputs.

3.35.115.1. Executing ABC.

3.35.116. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12346$abc$9096$auto$opt_dff.cc:219:make_patterns_logic$1881, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.35.116.1. Executing ABC.

3.35.117. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12358$abc$9897$auto$opt_dff.cc:219:make_patterns_logic$1530, asynchronously reset by \wb_rst_i
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 7 outputs.

3.35.117.1. Executing ABC.

3.35.118. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12373$abc$9849$auto$opt_dff.cc:219:make_patterns_logic$1478, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.35.118.1. Executing ABC.

3.35.119. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12387$abc$9801$auto$opt_dff.cc:219:make_patterns_logic$1426, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.35.119.1. Executing ABC.

3.35.120. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12394$abc$9746$auto$opt_dff.cc:219:make_patterns_logic$1374, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.35.120.1. Executing ABC.

3.35.121. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12401$abc$9698$auto$opt_dff.cc:219:make_patterns_logic$1738, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.35.121.1. Executing ABC.

3.35.122. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12414$abc$9650$auto$opt_dff.cc:219:make_patterns_logic$1686, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.35.122.1. Executing ABC.

3.35.123. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12426$abc$9603$auto$opt_dff.cc:219:make_patterns_logic$1634, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 3 outputs.

3.35.123.1. Executing ABC.

3.35.124. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12435$abc$9565$auto$opt_dff.cc:219:make_patterns_logic$1582, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 5 outputs.

3.35.124.1. Executing ABC.

3.35.125. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12446$abc$10719$auto$opt_dff.cc:219:make_patterns_logic$1166, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 3 outputs.

3.35.125.1. Executing ABC.

3.35.126. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12457$abc$9923$auto$opt_dff.cc:219:make_patterns_logic$1309, asynchronously reset by \wb_rst_i
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 7 outputs.

3.35.126.1. Executing ABC.

3.35.127. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12474$abc$9825$auto$opt_dff.cc:219:make_patterns_logic$1452, asynchronously reset by \wb_rst_i
Extracted 18 gates and 36 wires to a netlist network with 18 inputs and 9 outputs.

3.35.127.1. Executing ABC.

3.35.128. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12493$abc$9721$auto$opt_dff.cc:219:make_patterns_logic$1348, asynchronously reset by \wb_rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.35.128.1. Executing ABC.

3.35.129. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12504$abc$9625$auto$opt_dff.cc:219:make_patterns_logic$1660, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 4 outputs.

3.35.129.1. Executing ABC.

3.35.130. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12520$abc$9543$auto$opt_dff.cc:219:make_patterns_logic$932, asynchronously reset by \wb_rst_i
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 5 outputs.

3.35.130.1. Executing ABC.

3.35.131. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12535$abc$9338$flatten\shift.$verific$n338$492, asynchronously reset by \wb_rst_i
Extracted 89 gates and 162 wires to a netlist network with 73 inputs and 2 outputs.

3.35.131.1. Executing ABC.

3.35.132. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12626$abc$10729$auto$opt_dff.cc:219:make_patterns_logic$1179, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 5 outputs.

3.35.132.1. Executing ABC.

3.35.133. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12781$abc$9538$auto$opt_dff.cc:194:make_patterns_logic$880, asynchronously reset by \wb_rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.35.133.1. Executing ABC.

3.35.134. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12645$abc$10367$auto$opt_dff.cc:219:make_patterns_logic$883, asynchronously reset by \wb_rst_i
Extracted 30 gates and 55 wires to a netlist network with 25 inputs and 17 outputs.

3.35.134.1. Executing ABC.

3.35.135. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12685$abc$10406$auto$opt_dff.cc:194:make_patterns_logic$2573, asynchronously reset by \wb_rst_i
Extracted 58 gates and 72 wires to a netlist network with 14 inputs and 34 outputs.

3.35.135.1. Executing ABC.

3.35.136. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11463$abc$10297$auto$opt_dff.cc:219:make_patterns_logic$892, asynchronously reset by \wb_rst_i
Extracted 48 gates and 82 wires to a netlist network with 34 inputs and 43 outputs.

3.35.136.1. Executing ABC.

3.35.137. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$11679$abc$9244$auto$opt_dff.cc:219:make_patterns_logic$895, asynchronously reset by \wb_rst_i
Extracted 64 gates and 116 wires to a netlist network with 52 inputs and 29 outputs.

3.35.137.1. Executing ABC.

3.35.138. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$12738$abc$10223$auto$opt_dff.cc:219:make_patterns_logic$886, asynchronously reset by \wb_rst_i
Extracted 30 gates and 49 wires to a netlist network with 19 inputs and 24 outputs.

3.35.138.1. Executing ABC.

3.35.139. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13033$abc$10681$auto$opt_dff.cc:219:make_patterns_logic$889, asynchronously reset by \wb_rst_i
Extracted 24 gates and 36 wires to a netlist network with 12 inputs and 21 outputs.

3.35.139.1. Executing ABC.

3.35.140. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \wb_rst_i
Extracted 213 gates and 326 wires to a netlist network with 113 inputs and 47 outputs.

3.35.140.1. Executing ABC.

3.35.141. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13071$abc$10751$auto$opt_dff.cc:219:make_patterns_logic$1205, asynchronously reset by \wb_rst_i
Extracted 116 gates and 201 wires to a netlist network with 85 inputs and 5 outputs.

3.35.141.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  12 cells in clk=\wb_clk_i, en=$abc$13191$abc$10892$abc$10136$auto$opt_dff.cc:219:make_patterns_logic$1088, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$13204$abc$10905$abc$10168$auto$opt_dff.cc:219:make_patterns_logic$1114, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$13218$abc$10919$abc$10158$auto$opt_dff.cc:219:make_patterns_logic$1556, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$13228$abc$10929$abc$10198$auto$opt_dff.cc:219:make_patterns_logic$1140, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13241$abc$10942$abc$10146$auto$opt_dff.cc:219:make_patterns_logic$1101, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13252$abc$10953$abc$9971$auto$opt_dff.cc:219:make_patterns_logic$1283, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13263$abc$10964$abc$9947$auto$opt_dff.cc:219:make_patterns_logic$1335, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13272$abc$10973$abc$10186$auto$opt_dff.cc:219:make_patterns_logic$1127, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$13284$abc$10985$abc$9983$auto$opt_dff.cc:219:make_patterns_logic$1296, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13299$abc$11000$abc$9960$auto$opt_dff.cc:219:make_patterns_logic$1270, arst=\wb_rst_i, srst={ }
  19 cells in clk=\wb_clk_i, en=$abc$13310$abc$11011$abc$10261$auto$opt_dff.cc:194:make_patterns_logic$905, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13334$abc$11037$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$997, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13346$abc$11048$abc$10092$auto$opt_dff.cc:219:make_patterns_logic$1036, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$13358$abc$11060$abc$10211$auto$opt_dff.cc:219:make_patterns_logic$1153, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13370$abc$11072$abc$10077$auto$opt_dff.cc:219:make_patterns_logic$1023, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$13383$abc$11085$abc$10114$auto$opt_dff.cc:219:make_patterns_logic$1062, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13397$abc$11099$abc$10060$auto$opt_dff.cc:219:make_patterns_logic$1010, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13407$abc$11109$abc$10023$auto$opt_dff.cc:219:make_patterns_logic$971, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13416$abc$11118$abc$10000$auto$opt_dff.cc:219:make_patterns_logic$945, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13427$abc$11129$abc$10102$auto$opt_dff.cc:219:make_patterns_logic$1049, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$13437$abc$11139$abc$10035$auto$opt_dff.cc:219:make_patterns_logic$984, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$13444$abc$11146$abc$10012$auto$opt_dff.cc:219:make_patterns_logic$958, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13451$abc$11153$abc$10124$auto$opt_dff.cc:219:make_patterns_logic$1075, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$13463$abc$11165$abc$9884$auto$opt_dff.cc:219:make_patterns_logic$1517, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$13478$abc$11180$abc$9787$auto$opt_dff.cc:219:make_patterns_logic$1413, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$13487$abc$11189$abc$9685$auto$opt_dff.cc:219:make_patterns_logic$1725, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$13502$abc$11204$abc$9593$auto$opt_dff.cc:219:make_patterns_logic$1621, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$13513$abc$11215$abc$9661$auto$opt_dff.cc:219:make_patterns_logic$1699, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13527$abc$11228$abc$9759$auto$opt_dff.cc:219:make_patterns_logic$1387, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$13536$abc$11237$abc$9860$auto$opt_dff.cc:219:make_patterns_logic$1491, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$13550$abc$11251$abc$9710$auto$opt_dff.cc:219:make_patterns_logic$1751, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$13563$abc$11264$abc$9812$auto$opt_dff.cc:219:make_patterns_logic$1439, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13577$abc$11278$abc$9910$auto$opt_dff.cc:219:make_patterns_logic$1543, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$13590$abc$11291$abc$9935$auto$opt_dff.cc:219:make_patterns_logic$1322, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$13603$abc$11304$abc$9836$auto$opt_dff.cc:219:make_patterns_logic$1465, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$13617$abc$11318$abc$9733$auto$opt_dff.cc:219:make_patterns_logic$1361, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$13626$abc$11327$abc$9637$auto$opt_dff.cc:219:make_patterns_logic$1673, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$13639$abc$11340$abc$9555$auto$opt_dff.cc:219:make_patterns_logic$1569, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13650$abc$11351$abc$9526$auto$opt_dff.cc:219:make_patterns_logic$1244, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13663$abc$11364$abc$8554$auto$opt_dff.cc:219:make_patterns_logic$2557, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13674$abc$11375$abc$8585$auto$opt_dff.cc:219:make_patterns_logic$2518, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13685$abc$11386$abc$8617$auto$opt_dff.cc:219:make_patterns_logic$2479, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13696$abc$11397$abc$9873$auto$opt_dff.cc:219:make_patterns_logic$1504, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$13709$abc$11410$abc$9774$auto$opt_dff.cc:219:make_patterns_logic$1400, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13716$abc$11417$abc$9674$auto$opt_dff.cc:219:make_patterns_logic$1712, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$13728$abc$11429$abc$9584$auto$opt_dff.cc:219:make_patterns_logic$1608, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13739$abc$11440$abc$9452$auto$opt_dff.cc:219:make_patterns_logic$919, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13749$abc$11450$abc$10279$auto$opt_dff.cc:219:make_patterns_logic$1231, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13761$abc$11525$abc$9612$auto$opt_dff.cc:219:make_patterns_logic$1647, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$13774$abc$11538$abc$9574$auto$opt_dff.cc:219:make_patterns_logic$1595, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13783$abc$11547$abc$10741$auto$opt_dff.cc:219:make_patterns_logic$1192, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13796$abc$11560$abc$8543$auto$opt_dff.cc:219:make_patterns_logic$2570, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$13806$abc$11570$abc$8564$auto$opt_dff.cc:219:make_patterns_logic$2544, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13817$abc$11581$abc$8575$auto$opt_dff.cc:219:make_patterns_logic$2531, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13827$abc$11591$abc$8596$auto$opt_dff.cc:219:make_patterns_logic$2505, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13837$abc$11601$abc$8606$auto$opt_dff.cc:219:make_patterns_logic$2492, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13850$abc$11614$abc$8631$auto$opt_dff.cc:219:make_patterns_logic$2466, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$13860$abc$11624$abc$8642$auto$opt_dff.cc:219:make_patterns_logic$2453, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13868$abc$11632$abc$8650$auto$opt_dff.cc:219:make_patterns_logic$2440, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13878$abc$11642$abc$8668$auto$opt_dff.cc:219:make_patterns_logic$2414, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$13888$abc$11652$abc$8678$auto$opt_dff.cc:219:make_patterns_logic$2401, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$13896$abc$11660$abc$8660$auto$opt_dff.cc:219:make_patterns_logic$2427, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$13904$abc$11668$abc$9225$flatten\clgen.$verific$n118$407, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$13915$abc$11777$abc$10669$auto$opt_dff.cc:219:make_patterns_logic$1218, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$13928$abc$11790$abc$9218$auto$opt_dff.cc:219:make_patterns_logic$902, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$13946$abc$11807$abc$9205$auto$opt_dff.cc:219:make_patterns_logic$1764, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13954$abc$11815$abc$9193$auto$opt_dff.cc:219:make_patterns_logic$1257, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13964$abc$11825$abc$9184$auto$opt_dff.cc:219:make_patterns_logic$1777, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$13973$abc$11834$abc$9173$auto$opt_dff.cc:219:make_patterns_logic$1790, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13981$abc$11842$abc$9164$auto$opt_dff.cc:219:make_patterns_logic$1803, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$13990$abc$11851$abc$9153$auto$opt_dff.cc:219:make_patterns_logic$1816, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$13998$abc$11859$abc$9144$auto$opt_dff.cc:219:make_patterns_logic$1829, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14007$abc$11868$abc$9131$auto$opt_dff.cc:219:make_patterns_logic$1842, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$14018$abc$11878$abc$9117$auto$opt_dff.cc:219:make_patterns_logic$1855, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14032$abc$11892$abc$9106$auto$opt_dff.cc:219:make_patterns_logic$1868, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14044$abc$11904$abc$8867$auto$opt_dff.cc:219:make_patterns_logic$2167, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14053$abc$11913$abc$8891$auto$opt_dff.cc:219:make_patterns_logic$2141, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14064$abc$11924$abc$8912$auto$opt_dff.cc:219:make_patterns_logic$2115, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14075$abc$11935$abc$8933$auto$opt_dff.cc:219:make_patterns_logic$2089, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14086$abc$11946$abc$8954$auto$opt_dff.cc:219:make_patterns_logic$2063, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$14097$abc$11957$abc$8977$auto$opt_dff.cc:219:make_patterns_logic$2037, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$14111$abc$11971$abc$8995$auto$opt_dff.cc:219:make_patterns_logic$2011, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$14126$abc$11986$abc$9013$auto$opt_dff.cc:219:make_patterns_logic$1985, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14141$abc$12001$abc$8686$auto$opt_dff.cc:219:make_patterns_logic$2388, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$14151$abc$12011$abc$8696$auto$opt_dff.cc:219:make_patterns_logic$2375, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$14167$abc$12027$abc$8708$auto$opt_dff.cc:219:make_patterns_logic$2362, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14179$abc$12039$abc$8719$auto$opt_dff.cc:219:make_patterns_logic$2349, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$14191$abc$12051$abc$8729$auto$opt_dff.cc:219:make_patterns_logic$2336, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14206$abc$12066$abc$8740$auto$opt_dff.cc:219:make_patterns_logic$2323, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$14218$abc$12078$abc$8750$auto$opt_dff.cc:219:make_patterns_logic$2310, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14230$abc$12090$abc$8761$auto$opt_dff.cc:219:make_patterns_logic$2297, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$14242$abc$12102$abc$8771$auto$opt_dff.cc:219:make_patterns_logic$2284, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14254$abc$12114$abc$8782$auto$opt_dff.cc:219:make_patterns_logic$2271, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14266$abc$12127$abc$8796$auto$opt_dff.cc:219:make_patterns_logic$2258, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$14276$abc$12137$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$2245, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14284$abc$12145$abc$8816$auto$opt_dff.cc:219:make_patterns_logic$2232, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$14294$abc$12155$abc$8827$auto$opt_dff.cc:219:make_patterns_logic$2219, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14302$abc$12163$abc$8836$auto$opt_dff.cc:219:make_patterns_logic$2206, arst=\wb_rst_i, srst={ }
  6 cells in clk=\wb_clk_i, en=$abc$14312$abc$12173$abc$8847$auto$opt_dff.cc:219:make_patterns_logic$2193, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14320$abc$12181$abc$8856$auto$opt_dff.cc:219:make_patterns_logic$2180, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14332$abc$12193$abc$8880$auto$opt_dff.cc:219:make_patterns_logic$2154, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14342$abc$12203$abc$8901$auto$opt_dff.cc:219:make_patterns_logic$2128, arst=\wb_rst_i, srst={ }
  8 cells in clk=\wb_clk_i, en=$abc$14352$abc$12213$abc$8922$auto$opt_dff.cc:219:make_patterns_logic$2102, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$14362$abc$12223$abc$8943$auto$opt_dff.cc:219:make_patterns_logic$2076, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14375$abc$12236$abc$8967$auto$opt_dff.cc:219:make_patterns_logic$2050, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14387$abc$12248$abc$8985$auto$opt_dff.cc:219:make_patterns_logic$2024, arst=\wb_rst_i, srst={ }
  11 cells in clk=\wb_clk_i, en=$abc$14398$abc$12259$abc$9003$auto$opt_dff.cc:219:make_patterns_logic$1998, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14411$abc$12272$abc$9021$auto$opt_dff.cc:219:make_patterns_logic$1972, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14422$abc$12283$abc$9031$auto$opt_dff.cc:219:make_patterns_logic$1959, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14434$abc$12295$abc$9043$auto$opt_dff.cc:219:make_patterns_logic$1946, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$14445$abc$12306$abc$9054$auto$opt_dff.cc:219:make_patterns_logic$1933, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14454$abc$12315$abc$9064$auto$opt_dff.cc:219:make_patterns_logic$1920, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$14465$abc$12326$abc$9075$auto$opt_dff.cc:219:make_patterns_logic$1907, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$14474$abc$12335$abc$9085$auto$opt_dff.cc:219:make_patterns_logic$1894, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14487$abc$12346$abc$9096$auto$opt_dff.cc:219:make_patterns_logic$1881, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$14499$abc$12358$abc$9897$auto$opt_dff.cc:219:make_patterns_logic$1530, arst=\wb_rst_i, srst={ }
  12 cells in clk=\wb_clk_i, en=$abc$14514$abc$12373$abc$9849$auto$opt_dff.cc:219:make_patterns_logic$1478, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$14528$abc$12387$abc$9801$auto$opt_dff.cc:219:make_patterns_logic$1426, arst=\wb_rst_i, srst={ }
  5 cells in clk=\wb_clk_i, en=$abc$14535$abc$12394$abc$9746$auto$opt_dff.cc:219:make_patterns_logic$1374, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14542$abc$12401$abc$9698$auto$opt_dff.cc:219:make_patterns_logic$1738, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14555$abc$12414$abc$9650$auto$opt_dff.cc:219:make_patterns_logic$1686, arst=\wb_rst_i, srst={ }
  7 cells in clk=\wb_clk_i, en=$abc$14567$abc$12426$abc$9603$auto$opt_dff.cc:219:make_patterns_logic$1634, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14576$abc$12435$abc$9565$auto$opt_dff.cc:219:make_patterns_logic$1582, arst=\wb_rst_i, srst={ }
  10 cells in clk=\wb_clk_i, en=$abc$14588$abc$12446$abc$10719$auto$opt_dff.cc:219:make_patterns_logic$1166, arst=\wb_rst_i, srst={ }
  15 cells in clk=\wb_clk_i, en=$abc$14599$abc$12457$abc$9923$auto$opt_dff.cc:219:make_patterns_logic$1309, arst=\wb_rst_i, srst={ }
  17 cells in clk=\wb_clk_i, en=$abc$14616$abc$12474$abc$9825$auto$opt_dff.cc:219:make_patterns_logic$1452, arst=\wb_rst_i, srst={ }
  9 cells in clk=\wb_clk_i, en=$abc$14636$abc$12493$abc$9721$auto$opt_dff.cc:219:make_patterns_logic$1348, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$14647$abc$12504$abc$9625$auto$opt_dff.cc:219:make_patterns_logic$1660, arst=\wb_rst_i, srst={ }
  14 cells in clk=\wb_clk_i, en=$abc$14663$abc$12520$abc$9543$auto$opt_dff.cc:219:make_patterns_logic$932, arst=\wb_rst_i, srst={ }
  98 cells in clk=\wb_clk_i, en=$abc$14678$abc$12535$abc$9338$flatten\shift.$verific$n338$492, arst=\wb_rst_i, srst={ }
  13 cells in clk=\wb_clk_i, en=$abc$14778$abc$12626$abc$10729$auto$opt_dff.cc:219:make_patterns_logic$1179, arst=\wb_rst_i, srst={ }
  1 cells in clk=\wb_clk_i, en=$abc$15117$abc$12781$abc$9538$auto$opt_dff.cc:194:make_patterns_logic$880, arst=\wb_rst_i, srst={ }
  30 cells in clk=\wb_clk_i, en=$abc$14798$abc$12645$abc$10367$auto$opt_dff.cc:219:make_patterns_logic$883, arst=\wb_rst_i, srst={ }
  50 cells in clk=\wb_clk_i, en=$abc$15117$abc$12685$abc$10406$auto$opt_dff.cc:194:make_patterns_logic$2573, arst=\wb_rst_i, srst={ }
  53 cells in clk=\wb_clk_i, en=$abc$14900$abc$11463$abc$10297$auto$opt_dff.cc:219:make_patterns_logic$892, arst=\wb_rst_i, srst={ }
  69 cells in clk=\wb_clk_i, en=$abc$14961$abc$11679$abc$9244$auto$opt_dff.cc:219:make_patterns_logic$895, arst=\wb_rst_i, srst={ }
  24 cells in clk=\wb_clk_i, en=$abc$15035$abc$12738$abc$10223$auto$opt_dff.cc:219:make_patterns_logic$886, arst=\wb_rst_i, srst={ }
  29 cells in clk=\wb_clk_i, en=$abc$15079$abc$13033$abc$10681$auto$opt_dff.cc:219:make_patterns_logic$889, arst=\wb_rst_i, srst={ }
  212 cells in clk=\wb_clk_i, en={ }, arst=\wb_rst_i, srst={ }
  125 cells in clk=\wb_clk_i, en=$abc$15363$abc$13071$abc$10751$auto$opt_dff.cc:219:make_patterns_logic$1205, arst=\wb_rst_i, srst={ }

3.36.2. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13191$abc$10892$abc$10136$auto$opt_dff.cc:219:make_patterns_logic$1088, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13204$abc$10905$abc$10168$auto$opt_dff.cc:219:make_patterns_logic$1114, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 5 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13218$abc$10919$abc$10158$auto$opt_dff.cc:219:make_patterns_logic$1556, asynchronously reset by \wb_rst_i
Extracted 9 gates and 22 wires to a netlist network with 13 inputs and 4 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13228$abc$10929$abc$10198$auto$opt_dff.cc:219:make_patterns_logic$1140, asynchronously reset by \wb_rst_i
Extracted 12 gates and 28 wires to a netlist network with 16 inputs and 5 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13241$abc$10942$abc$10146$auto$opt_dff.cc:219:make_patterns_logic$1101, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13252$abc$10953$abc$9971$auto$opt_dff.cc:219:make_patterns_logic$1283, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13263$abc$10964$abc$9947$auto$opt_dff.cc:219:make_patterns_logic$1335, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13272$abc$10973$abc$10186$auto$opt_dff.cc:219:make_patterns_logic$1127, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13284$abc$10985$abc$9983$auto$opt_dff.cc:219:make_patterns_logic$1296, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 6 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13299$abc$11000$abc$9960$auto$opt_dff.cc:219:make_patterns_logic$1270, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13310$abc$11011$abc$10261$auto$opt_dff.cc:194:make_patterns_logic$905, asynchronously reset by \wb_rst_i
Extracted 19 gates and 39 wires to a netlist network with 20 inputs and 16 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13334$abc$11037$abc$10046$auto$opt_dff.cc:219:make_patterns_logic$997, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 7 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13346$abc$11048$abc$10092$auto$opt_dff.cc:219:make_patterns_logic$1036, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 4 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13358$abc$11060$abc$10211$auto$opt_dff.cc:219:make_patterns_logic$1153, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 5 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13370$abc$11072$abc$10077$auto$opt_dff.cc:219:make_patterns_logic$1023, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13383$abc$11085$abc$10114$auto$opt_dff.cc:219:make_patterns_logic$1062, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 6 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13397$abc$11099$abc$10060$auto$opt_dff.cc:219:make_patterns_logic$1010, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13407$abc$11109$abc$10023$auto$opt_dff.cc:219:make_patterns_logic$971, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13416$abc$11118$abc$10000$auto$opt_dff.cc:219:make_patterns_logic$945, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 6 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13427$abc$11129$abc$10102$auto$opt_dff.cc:219:make_patterns_logic$1049, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 2 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13437$abc$11139$abc$10035$auto$opt_dff.cc:219:make_patterns_logic$984, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13444$abc$11146$abc$10012$auto$opt_dff.cc:219:make_patterns_logic$958, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13451$abc$11153$abc$10124$auto$opt_dff.cc:219:make_patterns_logic$1075, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13463$abc$11165$abc$9884$auto$opt_dff.cc:219:make_patterns_logic$1517, asynchronously reset by \wb_rst_i
Extracted 14 gates and 31 wires to a netlist network with 17 inputs and 7 outputs.

3.36.25.1. Executing ABC.

3.36.26. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13478$abc$11180$abc$9787$auto$opt_dff.cc:219:make_patterns_logic$1413, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.36.26.1. Executing ABC.

3.36.27. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13487$abc$11189$abc$9685$auto$opt_dff.cc:219:make_patterns_logic$1725, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 6 outputs.

3.36.27.1. Executing ABC.

3.36.28. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13502$abc$11204$abc$9593$auto$opt_dff.cc:219:make_patterns_logic$1621, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.36.28.1. Executing ABC.

3.36.29. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13513$abc$11215$abc$9661$auto$opt_dff.cc:219:make_patterns_logic$1699, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 5 outputs.

3.36.29.1. Executing ABC.

3.36.30. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13527$abc$11228$abc$9759$auto$opt_dff.cc:219:make_patterns_logic$1387, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.30.1. Executing ABC.

3.36.31. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13536$abc$11237$abc$9860$auto$opt_dff.cc:219:make_patterns_logic$1491, asynchronously reset by \wb_rst_i
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 7 outputs.

3.36.31.1. Executing ABC.

3.36.32. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13550$abc$11251$abc$9710$auto$opt_dff.cc:219:make_patterns_logic$1751, asynchronously reset by \wb_rst_i
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 6 outputs.

3.36.32.1. Executing ABC.

3.36.33. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13563$abc$11264$abc$9812$auto$opt_dff.cc:219:make_patterns_logic$1439, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.36.33.1. Executing ABC.

3.36.34. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13577$abc$11278$abc$9910$auto$opt_dff.cc:219:make_patterns_logic$1543, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.36.34.1. Executing ABC.

3.36.35. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13590$abc$11291$abc$9935$auto$opt_dff.cc:219:make_patterns_logic$1322, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 6 outputs.

3.36.35.1. Executing ABC.

3.36.36. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13603$abc$11304$abc$9836$auto$opt_dff.cc:219:make_patterns_logic$1465, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 6 outputs.

3.36.36.1. Executing ABC.

3.36.37. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13617$abc$11318$abc$9733$auto$opt_dff.cc:219:make_patterns_logic$1361, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 4 outputs.

3.36.37.1. Executing ABC.

3.36.38. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13626$abc$11327$abc$9637$auto$opt_dff.cc:219:make_patterns_logic$1673, asynchronously reset by \wb_rst_i
Extracted 13 gates and 29 wires to a netlist network with 16 inputs and 5 outputs.

3.36.38.1. Executing ABC.

3.36.39. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13639$abc$11340$abc$9555$auto$opt_dff.cc:219:make_patterns_logic$1569, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.36.39.1. Executing ABC.

3.36.40. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13650$abc$11351$abc$9526$auto$opt_dff.cc:219:make_patterns_logic$1244, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 6 outputs.

3.36.40.1. Executing ABC.

3.36.41. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13663$abc$11364$abc$8554$auto$opt_dff.cc:219:make_patterns_logic$2557, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.41.1. Executing ABC.

3.36.42. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13674$abc$11375$abc$8585$auto$opt_dff.cc:219:make_patterns_logic$2518, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.42.1. Executing ABC.

3.36.43. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13685$abc$11386$abc$8617$auto$opt_dff.cc:219:make_patterns_logic$2479, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.43.1. Executing ABC.

3.36.44. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13696$abc$11397$abc$9873$auto$opt_dff.cc:219:make_patterns_logic$1504, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 5 outputs.

3.36.44.1. Executing ABC.

3.36.45. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13709$abc$11410$abc$9774$auto$opt_dff.cc:219:make_patterns_logic$1400, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.36.45.1. Executing ABC.

3.36.46. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13716$abc$11417$abc$9674$auto$opt_dff.cc:219:make_patterns_logic$1712, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.36.46.1. Executing ABC.

3.36.47. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13728$abc$11429$abc$9584$auto$opt_dff.cc:219:make_patterns_logic$1608, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.36.47.1. Executing ABC.

3.36.48. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13739$abc$11440$abc$9452$auto$opt_dff.cc:219:make_patterns_logic$919, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.36.48.1. Executing ABC.

3.36.49. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13749$abc$11450$abc$10279$auto$opt_dff.cc:219:make_patterns_logic$1231, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 3 outputs.

3.36.49.1. Executing ABC.

3.36.50. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13761$abc$11525$abc$9612$auto$opt_dff.cc:219:make_patterns_logic$1647, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.36.50.1. Executing ABC.

3.36.51. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13774$abc$11538$abc$9574$auto$opt_dff.cc:219:make_patterns_logic$1595, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 3 outputs.

3.36.51.1. Executing ABC.

3.36.52. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13783$abc$11547$abc$10741$auto$opt_dff.cc:219:make_patterns_logic$1192, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.36.52.1. Executing ABC.

3.36.53. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13796$abc$11560$abc$8543$auto$opt_dff.cc:219:make_patterns_logic$2570, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.36.53.1. Executing ABC.

3.36.54. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13806$abc$11570$abc$8564$auto$opt_dff.cc:219:make_patterns_logic$2544, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.54.1. Executing ABC.

3.36.55. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13817$abc$11581$abc$8575$auto$opt_dff.cc:219:make_patterns_logic$2531, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.36.55.1. Executing ABC.

3.36.56. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13827$abc$11591$abc$8596$auto$opt_dff.cc:219:make_patterns_logic$2505, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.36.56.1. Executing ABC.

3.36.57. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13837$abc$11601$abc$8606$auto$opt_dff.cc:219:make_patterns_logic$2492, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.36.57.1. Executing ABC.

3.36.58. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13850$abc$11614$abc$8631$auto$opt_dff.cc:219:make_patterns_logic$2466, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.58.1. Executing ABC.

3.36.59. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13860$abc$11624$abc$8642$auto$opt_dff.cc:219:make_patterns_logic$2453, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.36.59.1. Executing ABC.

3.36.60. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13868$abc$11632$abc$8650$auto$opt_dff.cc:219:make_patterns_logic$2440, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.60.1. Executing ABC.

3.36.61. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13878$abc$11642$abc$8668$auto$opt_dff.cc:219:make_patterns_logic$2414, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.61.1. Executing ABC.

3.36.62. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13888$abc$11652$abc$8678$auto$opt_dff.cc:219:make_patterns_logic$2401, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.36.62.1. Executing ABC.

3.36.63. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13896$abc$11660$abc$8660$auto$opt_dff.cc:219:make_patterns_logic$2427, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 2 outputs.

3.36.63.1. Executing ABC.

3.36.64. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13904$abc$11668$abc$9225$flatten\clgen.$verific$n118$407, asynchronously reset by \wb_rst_i
Extracted 9 gates and 15 wires to a netlist network with 6 inputs and 6 outputs.

3.36.64.1. Executing ABC.

3.36.65. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13915$abc$11777$abc$10669$auto$opt_dff.cc:219:make_patterns_logic$1218, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 5 outputs.

3.36.65.1. Executing ABC.

3.36.66. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13928$abc$11790$abc$9218$auto$opt_dff.cc:219:make_patterns_logic$902, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 5 outputs.

3.36.66.1. Executing ABC.

3.36.67. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13946$abc$11807$abc$9205$auto$opt_dff.cc:219:make_patterns_logic$1764, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.36.67.1. Executing ABC.

3.36.68. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13954$abc$11815$abc$9193$auto$opt_dff.cc:219:make_patterns_logic$1257, asynchronously reset by \wb_rst_i
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 3 outputs.

3.36.68.1. Executing ABC.

3.36.69. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13964$abc$11825$abc$9184$auto$opt_dff.cc:219:make_patterns_logic$1777, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.69.1. Executing ABC.

3.36.70. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13973$abc$11834$abc$9173$auto$opt_dff.cc:219:make_patterns_logic$1790, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.36.70.1. Executing ABC.

3.36.71. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13981$abc$11842$abc$9164$auto$opt_dff.cc:219:make_patterns_logic$1803, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.71.1. Executing ABC.

3.36.72. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13990$abc$11851$abc$9153$auto$opt_dff.cc:219:make_patterns_logic$1816, asynchronously reset by \wb_rst_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 3 outputs.

3.36.72.1. Executing ABC.

3.36.73. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$13998$abc$11859$abc$9144$auto$opt_dff.cc:219:make_patterns_logic$1829, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.73.1. Executing ABC.

3.36.74. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14007$abc$11868$abc$9131$auto$opt_dff.cc:219:make_patterns_logic$1842, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.36.74.1. Executing ABC.

3.36.75. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14018$abc$11878$abc$9117$auto$opt_dff.cc:219:make_patterns_logic$1855, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 8 outputs.

3.36.75.1. Executing ABC.

3.36.76. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14032$abc$11892$abc$9106$auto$opt_dff.cc:219:make_patterns_logic$1868, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 6 outputs.

3.36.76.1. Executing ABC.

3.36.77. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14044$abc$11904$abc$8867$auto$opt_dff.cc:219:make_patterns_logic$2167, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.77.1. Executing ABC.

3.36.78. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14053$abc$11913$abc$8891$auto$opt_dff.cc:219:make_patterns_logic$2141, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.78.1. Executing ABC.

3.36.79. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14064$abc$11924$abc$8912$auto$opt_dff.cc:219:make_patterns_logic$2115, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.79.1. Executing ABC.

3.36.80. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14075$abc$11935$abc$8933$auto$opt_dff.cc:219:make_patterns_logic$2089, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.80.1. Executing ABC.

3.36.81. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14086$abc$11946$abc$8954$auto$opt_dff.cc:219:make_patterns_logic$2063, asynchronously reset by \wb_rst_i
Extracted 10 gates and 23 wires to a netlist network with 13 inputs and 4 outputs.

3.36.81.1. Executing ABC.

3.36.82. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14097$abc$11957$abc$8977$auto$opt_dff.cc:219:make_patterns_logic$2037, asynchronously reset by \wb_rst_i
Extracted 12 gates and 27 wires to a netlist network with 15 inputs and 8 outputs.

3.36.82.1. Executing ABC.

3.36.83. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14111$abc$11971$abc$8995$auto$opt_dff.cc:219:make_patterns_logic$2011, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.36.83.1. Executing ABC.

3.36.84. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14126$abc$11986$abc$9013$auto$opt_dff.cc:219:make_patterns_logic$1985, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.36.84.1. Executing ABC.

3.36.85. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14141$abc$12001$abc$8686$auto$opt_dff.cc:219:make_patterns_logic$2388, asynchronously reset by \wb_rst_i
Extracted 8 gates and 19 wires to a netlist network with 11 inputs and 4 outputs.

3.36.85.1. Executing ABC.

3.36.86. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14151$abc$12011$abc$8696$auto$opt_dff.cc:219:make_patterns_logic$2375, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 8 outputs.

3.36.86.1. Executing ABC.

3.36.87. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14167$abc$12027$abc$8708$auto$opt_dff.cc:219:make_patterns_logic$2362, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.36.87.1. Executing ABC.

3.36.88. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14179$abc$12039$abc$8719$auto$opt_dff.cc:219:make_patterns_logic$2349, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.36.88.1. Executing ABC.

3.36.89. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14191$abc$12051$abc$8729$auto$opt_dff.cc:219:make_patterns_logic$2336, asynchronously reset by \wb_rst_i
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.36.89.1. Executing ABC.

3.36.90. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14206$abc$12066$abc$8740$auto$opt_dff.cc:219:make_patterns_logic$2323, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.36.90.1. Executing ABC.

3.36.91. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14218$abc$12078$abc$8750$auto$opt_dff.cc:219:make_patterns_logic$2310, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.36.91.1. Executing ABC.

3.36.92. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14230$abc$12090$abc$8761$auto$opt_dff.cc:219:make_patterns_logic$2297, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.36.92.1. Executing ABC.

3.36.93. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14242$abc$12102$abc$8771$auto$opt_dff.cc:219:make_patterns_logic$2284, asynchronously reset by \wb_rst_i
Extracted 11 gates and 25 wires to a netlist network with 14 inputs and 6 outputs.

3.36.93.1. Executing ABC.

3.36.94. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14254$abc$12114$abc$8782$auto$opt_dff.cc:219:make_patterns_logic$2271, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.36.94.1. Executing ABC.

3.36.95. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14266$abc$12127$abc$8796$auto$opt_dff.cc:219:make_patterns_logic$2258, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.36.95.1. Executing ABC.

3.36.96. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14276$abc$12137$abc$8807$auto$opt_dff.cc:219:make_patterns_logic$2245, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.36.96.1. Executing ABC.

3.36.97. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14284$abc$12145$abc$8816$auto$opt_dff.cc:219:make_patterns_logic$2232, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.36.97.1. Executing ABC.

3.36.98. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14294$abc$12155$abc$8827$auto$opt_dff.cc:219:make_patterns_logic$2219, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.36.98.1. Executing ABC.

3.36.99. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14302$abc$12163$abc$8836$auto$opt_dff.cc:219:make_patterns_logic$2206, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 5 outputs.

3.36.99.1. Executing ABC.

3.36.100. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14312$abc$12173$abc$8847$auto$opt_dff.cc:219:make_patterns_logic$2193, asynchronously reset by \wb_rst_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.36.100.1. Executing ABC.

3.36.101. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14320$abc$12181$abc$8856$auto$opt_dff.cc:219:make_patterns_logic$2180, asynchronously reset by \wb_rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.36.101.1. Executing ABC.

3.36.102. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14332$abc$12193$abc$8880$auto$opt_dff.cc:219:make_patterns_logic$2154, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.36.102.1. Executing ABC.

3.36.103. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14342$abc$12203$abc$8901$auto$opt_dff.cc:219:make_patterns_logic$2128, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.36.103.1. Executing ABC.

3.36.104. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14352$abc$12213$abc$8922$auto$opt_dff.cc:219:make_patterns_logic$2102, asynchronously reset by \wb_rst_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 3 outputs.

3.36.104.1. Executing ABC.

3.36.105. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14362$abc$12223$abc$8943$auto$opt_dff.cc:219:make_patterns_logic$2076, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 4 outputs.

3.36.105.1. Executing ABC.

3.36.106. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14375$abc$12236$abc$8967$auto$opt_dff.cc:219:make_patterns_logic$2050, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 6 outputs.

3.36.106.1. Executing ABC.

3.36.107. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14387$abc$12248$abc$8985$auto$opt_dff.cc:219:make_patterns_logic$2024, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.36.107.1. Executing ABC.

3.36.108. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14398$abc$12259$abc$9003$auto$opt_dff.cc:219:make_patterns_logic$1998, asynchronously reset by \wb_rst_i
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 7 outputs.

3.36.108.1. Executing ABC.

3.36.109. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14411$abc$12272$abc$9021$auto$opt_dff.cc:219:make_patterns_logic$1972, asynchronously reset by \wb_rst_i
Extracted 9 gates and 21 wires to a netlist network with 12 inputs and 5 outputs.

3.36.109.1. Executing ABC.

3.36.110. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14422$abc$12283$abc$9031$auto$opt_dff.cc:219:make_patterns_logic$1959, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 4 outputs.

3.36.110.1. Executing ABC.

3.36.111. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14434$abc$12295$abc$9043$auto$opt_dff.cc:219:make_patterns_logic$1946, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.36.111.1. Executing ABC.

3.36.112. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14445$abc$12306$abc$9054$auto$opt_dff.cc:219:make_patterns_logic$1933, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.36.112.1. Executing ABC.

3.36.113. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14454$abc$12315$abc$9064$auto$opt_dff.cc:219:make_patterns_logic$1920, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 5 outputs.

3.36.113.1. Executing ABC.

3.36.114. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14465$abc$12326$abc$9075$auto$opt_dff.cc:219:make_patterns_logic$1907, asynchronously reset by \wb_rst_i
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.36.114.1. Executing ABC.

3.36.115. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14474$abc$12335$abc$9085$auto$opt_dff.cc:219:make_patterns_logic$1894, asynchronously reset by \wb_rst_i
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 6 outputs.

3.36.115.1. Executing ABC.

3.36.116. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14487$abc$12346$abc$9096$auto$opt_dff.cc:219:make_patterns_logic$1881, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.36.116.1. Executing ABC.

3.36.117. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14499$abc$12358$abc$9897$auto$opt_dff.cc:219:make_patterns_logic$1530, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.36.117.1. Executing ABC.

3.36.118. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14514$abc$12373$abc$9849$auto$opt_dff.cc:219:make_patterns_logic$1478, asynchronously reset by \wb_rst_i
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 6 outputs.

3.36.118.1. Executing ABC.

3.36.119. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14528$abc$12387$abc$9801$auto$opt_dff.cc:219:make_patterns_logic$1426, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.36.119.1. Executing ABC.

3.36.120. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14535$abc$12394$abc$9746$auto$opt_dff.cc:219:make_patterns_logic$1374, asynchronously reset by \wb_rst_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.36.120.1. Executing ABC.

3.36.121. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14542$abc$12401$abc$9698$auto$opt_dff.cc:219:make_patterns_logic$1738, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.36.121.1. Executing ABC.

3.36.122. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14555$abc$12414$abc$9650$auto$opt_dff.cc:219:make_patterns_logic$1686, asynchronously reset by \wb_rst_i
Extracted 10 gates and 22 wires to a netlist network with 12 inputs and 3 outputs.

3.36.122.1. Executing ABC.

3.36.123. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14567$abc$12426$abc$9603$auto$opt_dff.cc:219:make_patterns_logic$1634, asynchronously reset by \wb_rst_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 3 outputs.

3.36.123.1. Executing ABC.

3.36.124. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14576$abc$12435$abc$9565$auto$opt_dff.cc:219:make_patterns_logic$1582, asynchronously reset by \wb_rst_i
Extracted 9 gates and 20 wires to a netlist network with 11 inputs and 4 outputs.

3.36.124.1. Executing ABC.

3.36.125. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14588$abc$12446$abc$10719$auto$opt_dff.cc:219:make_patterns_logic$1166, asynchronously reset by \wb_rst_i
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.36.125.1. Executing ABC.

3.36.126. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14599$abc$12457$abc$9923$auto$opt_dff.cc:219:make_patterns_logic$1309, asynchronously reset by \wb_rst_i
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 7 outputs.

3.36.126.1. Executing ABC.

3.36.127. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14616$abc$12474$abc$9825$auto$opt_dff.cc:219:make_patterns_logic$1452, asynchronously reset by \wb_rst_i
Extracted 17 gates and 35 wires to a netlist network with 18 inputs and 8 outputs.

3.36.127.1. Executing ABC.

3.36.128. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14636$abc$12493$abc$9721$auto$opt_dff.cc:219:make_patterns_logic$1348, asynchronously reset by \wb_rst_i
Extracted 9 gates and 19 wires to a netlist network with 10 inputs and 4 outputs.

3.36.128.1. Executing ABC.

3.36.129. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14647$abc$12504$abc$9625$auto$opt_dff.cc:219:make_patterns_logic$1660, asynchronously reset by \wb_rst_i
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 4 outputs.

3.36.129.1. Executing ABC.

3.36.130. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14663$abc$12520$abc$9543$auto$opt_dff.cc:219:make_patterns_logic$932, asynchronously reset by \wb_rst_i
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 6 outputs.

3.36.130.1. Executing ABC.

3.36.131. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14678$abc$12535$abc$9338$flatten\shift.$verific$n338$492, asynchronously reset by \wb_rst_i
Extracted 98 gates and 171 wires to a netlist network with 73 inputs and 2 outputs.

3.36.131.1. Executing ABC.

3.36.132. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14778$abc$12626$abc$10729$auto$opt_dff.cc:219:make_patterns_logic$1179, asynchronously reset by \wb_rst_i
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 4 outputs.

3.36.132.1. Executing ABC.

3.36.133. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$15117$abc$12781$abc$9538$auto$opt_dff.cc:194:make_patterns_logic$880, asynchronously reset by \wb_rst_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

3.36.133.1. Executing ABC.

3.36.134. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14798$abc$12645$abc$10367$auto$opt_dff.cc:219:make_patterns_logic$883, asynchronously reset by \wb_rst_i
Extracted 30 gates and 55 wires to a netlist network with 25 inputs and 17 outputs.

3.36.134.1. Executing ABC.

3.36.135. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$15117$abc$12685$abc$10406$auto$opt_dff.cc:194:make_patterns_logic$2573, asynchronously reset by \wb_rst_i
Extracted 50 gates and 68 wires to a netlist network with 18 inputs and 33 outputs.

3.36.135.1. Executing ABC.

3.36.136. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14900$abc$11463$abc$10297$auto$opt_dff.cc:219:make_patterns_logic$892, asynchronously reset by \wb_rst_i
Extracted 53 gates and 87 wires to a netlist network with 34 inputs and 42 outputs.

3.36.136.1. Executing ABC.

3.36.137. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$14961$abc$11679$abc$9244$auto$opt_dff.cc:219:make_patterns_logic$895, asynchronously reset by \wb_rst_i
Extracted 69 gates and 125 wires to a netlist network with 56 inputs and 31 outputs.

3.36.137.1. Executing ABC.

3.36.138. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$15035$abc$12738$abc$10223$auto$opt_dff.cc:219:make_patterns_logic$886, asynchronously reset by \wb_rst_i
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 21 outputs.

3.36.138.1. Executing ABC.

3.36.139. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$15079$abc$13033$abc$10681$auto$opt_dff.cc:219:make_patterns_logic$889, asynchronously reset by \wb_rst_i
Extracted 29 gates and 45 wires to a netlist network with 16 inputs and 23 outputs.

3.36.139.1. Executing ABC.

3.36.140. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, asynchronously reset by \wb_rst_i
Extracted 212 gates and 325 wires to a netlist network with 113 inputs and 47 outputs.

3.36.140.1. Executing ABC.

3.36.141. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \wb_clk_i, enabled by $abc$15363$abc$13071$abc$10751$auto$opt_dff.cc:219:make_patterns_logic$1205, asynchronously reset by \wb_rst_i
Extracted 125 gates and 210 wires to a netlist network with 85 inputs and 5 outputs.

3.36.141.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~103 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~441 debug messages>
Removed a total of 147 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 15693 unused wires.
<suppressed ~28 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_cbcJhX/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Extracted 1616 gates and 1854 wires to a netlist network with 238 inputs and 340 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 238  #Luts =   642  Max Lvl =   9  Avg Lvl =   6.39  [   0.12 sec. at Pass 0]
DE:   #PIs = 238  #Luts =   546  Max Lvl =   9  Avg Lvl =   6.64  [   3.21 sec. at Pass 1]
DE:   #PIs = 238  #Luts =   542  Max Lvl =   8  Avg Lvl =   6.33  [   0.57 sec. at Pass 2]
DE:   #PIs = 238  #Luts =   538  Max Lvl =   8  Avg Lvl =   5.91  [   1.37 sec. at Pass 3]
DE:   #PIs = 238  #Luts =   536  Max Lvl =   8  Avg Lvl =   6.29  [   0.84 sec. at Pass 4]
DE:   #PIs = 238  #Luts =   536  Max Lvl =   8  Avg Lvl =   6.29  [   1.21 sec. at Pass 5]
DE:   #PIs = 238  #Luts =   535  Max Lvl =   8  Avg Lvl =   6.29  [   0.71 sec. at Pass 6]
DE:   #PIs = 238  #Luts =   535  Max Lvl =   8  Avg Lvl =   6.29  [   1.41 sec. at Pass 7]
DE:   #PIs = 238  #Luts =   534  Max Lvl =   8  Avg Lvl =   6.28  [   0.90 sec. at Pass 8]
DE:   #PIs = 238  #Luts =   533  Max Lvl =   8  Avg Lvl =   5.54  [   1.64 sec. at Pass 9]
DE:   #PIs = 238  #Luts =   533  Max Lvl =   7  Avg Lvl =   5.54  [   0.95 sec. at Pass 10]
DE:   #PIs = 238  #Luts =   533  Max Lvl =   7  Avg Lvl =   5.54  [   1.25 sec. at Pass 11]
DE:   #PIs = 238  #Luts =   533  Max Lvl =   7  Avg Lvl =   5.54  [   0.79 sec. at Pass 12]
DE:   #PIs = 238  #Luts =   533  Max Lvl =   7  Avg Lvl =   5.54  [   1.17 sec. at Pass 13]
DE:   #PIs = 238  #Luts =   530  Max Lvl =   7  Avg Lvl =   5.91  [   3.04 sec. at Pass 14]
DE:   #PIs = 238  #Luts =   530  Max Lvl =   7  Avg Lvl =   5.91  [   0.80 sec. at Pass 15]
DE:   #PIs = 238  #Luts =   530  Max Lvl =   7  Avg Lvl =   5.91  [   1.48 sec. at Pass 16]
DE:   #PIs = 238  #Luts =   530  Max Lvl =   7  Avg Lvl =   5.91  [   1.47 sec. at Pass 17]
DE:   #PIs = 238  #Luts =   529  Max Lvl =   7  Avg Lvl =   5.91  [   3.39 sec. at Pass 18]
DE:   #PIs = 238  #Luts =   529  Max Lvl =   7  Avg Lvl =   5.91  [   1.39 sec. at Pass 19]
DE:   #PIs = 238  #Luts =   529  Max Lvl =   7  Avg Lvl =   5.91  [   1.30 sec. at Pass 20]
DE:   #PIs = 238  #Luts =   529  Max Lvl =   7  Avg Lvl =   5.91  [   1.66 sec. at Pass 21]
DE:   #PIs = 238  #Luts =   529  Max Lvl =   7  Avg Lvl =   5.91  [   5.34 sec. at Pass 22]
DE:   #PIs = 238  #Luts =   529  Max Lvl =   7  Avg Lvl =   5.91  [   0.25 sec. at Pass 23]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 1808 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== spi_top ===

   Number of wires:                676
   Number of wire bits:           1236
   Number of public wires:          43
   Number of public wire bits:     603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                758
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     51
     $lut                          529


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== spi_top ===

   Number of wires:                676
   Number of wire bits:           1236
   Number of public wires:          43
   Number of public wire bits:     603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                758
     $_DFFE_PP0P_                  178
     $_DFF_PP0_                     51
     $lut                          529


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1123 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~11012 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~6315 debug messages>
Removed a total of 2105 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 2698 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.
<suppressed ~518 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 79 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_cbcJhX/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\spi_top' to `<abc-temp-dir>/input.blif'..
Extracted 1674 gates and 1915 wires to a netlist network with 239 inputs and 341 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   0.11 sec. at Pass 0]
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   3.46 sec. at Pass 1]
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   0.78 sec. at Pass 2]
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   1.78 sec. at Pass 3]
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   0.94 sec. at Pass 4]
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   1.18 sec. at Pass 5]
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   3.70 sec. at Pass 6]
DE:   #PIs = 239  #Luts =   532  Max Lvl =   8  Avg Lvl =   5.98  [   0.43 sec. at Pass 7]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 1609 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \spi_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \spi_top.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\spi_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module spi_top.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \spi_top

3.56.2. Analyzing design hierarchy..
Top module:  \spi_top
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== spi_top ===

   Number of wires:                679
   Number of wire bits:           1239
   Number of public wires:          43
   Number of public wire bits:     603
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                761
     $lut                          532
     dffsre                        229


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \spi_top..
Removed 0 unused cells and 24 unused wires.
<suppressed ~24 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\spi_top'.

Warnings: 51 unique messages, 51 total
End of script. Logfile hash: f838fd8d94, CPU: user 11.52s system 1.65s, MEM: 51.41 MB peak
Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)
Time spent: 98% 6x abc (469 sec), 0% 41x opt_expr (2 sec), ...
real 105.69
user 440.29
sys 35.94
