
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.24
 Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl kasumi.vhdl keyschedule.vhdl sbox.vhdl

yosys> verific -vhdl kasumi.vhdl keyschedule.vhdl sbox.vhdl

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Mar22_SW_Release, released at Fri Apr  1 00:31:54 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'kasumi.vhdl'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_1164' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_1164.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.textio' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/textio.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_unsigned' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_unsigned.vdb'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'ieee.std_logic_arith' from file '/home/users/aram/Workspace/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/ieee/std_logic_arith.vdb'
VERIFIC-INFO [VHDL-1012] kasumi.vhdl:34: analyzing entity 'kasumi'
VERIFIC-INFO [VHDL-1010] kasumi.vhdl:58: analyzing architecture 'phy'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'keyschedule.vhdl'
VERIFIC-INFO [VHDL-1012] keyschedule.vhdl:34: analyzing entity 'keyschedule'
VERIFIC-INFO [VHDL-1010] keyschedule.vhdl:49: analyzing architecture 'phy'
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'sbox.vhdl'
VERIFIC-INFO [VHDL-1012] sbox.vhdl:34: analyzing entity 'sbox'
VERIFIC-INFO [VHDL-1010] sbox.vhdl:43: analyzing architecture 'phy'

yosys> synth_rs -top kasumi -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.47

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top kasumi

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] kasumi.vhdl:34: processing 'kasumi(phy)'
VERIFIC-INFO [VHDL-1067] sbox.vhdl:34: processing 'sbox(phy)'
VERIFIC-INFO [VHDL-1067] keyschedule.vhdl:34: processing 'keyschedule(phy)'
Importing module kasumi.
Importing module keyschedule(phy).
Importing module sbox(phy).

3.3.1. Analyzing design hierarchy..
Top module:  \kasumi
Used module:     \keyschedule(phy)
Used module:     \sbox(phy)

3.3.2. Analyzing design hierarchy..
Top module:  \kasumi
Used module:     \keyschedule(phy)
Used module:     \sbox(phy)
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module sbox(phy).
Optimizing module keyschedule(phy).
<suppressed ~3 debug messages>
Optimizing module kasumi.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module sbox(phy).
Deleting now unused module keyschedule(phy).
<suppressed ~3 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 116 unused wires.
<suppressed ~63 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module kasumi...
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n441$30 [0]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n441$30 [1]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n444$31 [0]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_171$kasumi.vhdl:188$149 ($and)
    cell $verific$or_31$kasumi.vhdl:188$146 ($or)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n444$31 [1]
    wire $verific$n447$32 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$and_32$kasumi.vhdl:188$147 ($and)
    cell $verific$or_33$kasumi.vhdl:188$148 ($or)
    wire $verific$n450$33 [0]
    wire \c3b_cr [1]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [0]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [1]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [2]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [3]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [4]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [5]
Warning: found logic loop in module kasumi:
    cell $verific$xor_168$kasumi.vhdl:311$200 ($xor)
    wire \FI [6]
Found and reported 12 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $verific$mux_95$kasumi.vhdl:269$173.
    dead port 1/2 on $mux $verific$mux_96$kasumi.vhdl:269$174.
Removed 2 multiplexer ports.
<suppressed ~17 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$rnd_reg$kasumi.vhdl:341$218 ($aldff) from module kasumi.
Removing never-active async load on $flatten\roundkey.$verific$keyreg2_reg$keyschedule.vhdl:111$283 ($aldff) from module kasumi.
Removing never-active async load on $flatten\roundkey.$verific$keyreg1_reg$keyschedule.vhdl:111$282 ($aldff) from module kasumi.
Removing never-active async load on $verific$ireg1_reg$kasumi.vhdl:329$209 ($aldff) from module kasumi.
Removing never-active async load on $verific$iptt_reg$kasumi.vhdl:173$139 ($aldff) from module kasumi.
Removing never-active async load on $verific$ipt_reg$kasumi.vhdl:173$138 ($aldff) from module kasumi.
Removing never-active async load on $verific$c3b_reg$kasumi.vhdl:198$154 ($aldff) from module kasumi.
Removing never-active async load on $verific$FL_reg$kasumi.vhdl:287$187 ($aldff) from module kasumi.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $verific$vld_reg$kasumi.vhdl:354$223 ($dff) from module kasumi (D = $verific$n2381$22, Q = \vld, rval = 1'0).
Adding SRST signal on $verific$rnd_reg$kasumi.vhdl:341$218 ($dff) from module kasumi (D = $verific$n2368$108, Q = \rnd, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$559 ($sdff) from module kasumi (D = $verific$n2362$106, Q = \rnd).
Adding SRST signal on $verific$ireg1_reg$kasumi.vhdl:329$209 ($dff) from module kasumi (D = $verific$n2157$102, Q = \ireg1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$561 ($sdff) from module kasumi (D = $verific$n2157$102, Q = \ireg1).
Adding SRST signal on $verific$iptt_reg$kasumi.vhdl:173$139 ($dff) from module kasumi (D = \pt, Q = \iptt, rval = 0).
Adding SRST signal on $verific$ipt_reg$kasumi.vhdl:173$138 ($dff) from module kasumi (D = \iptt, Q = \ipt, rval = 0).
Adding SRST signal on $verific$ildptt_reg$kasumi.vhdl:173$137 ($dff) from module kasumi (D = \ldpt, Q = \ildptt, rval = 1'0).
Adding SRST signal on $verific$ildpt_reg$kasumi.vhdl:173$136 ($dff) from module kasumi (D = \ildptt, Q = \ildpt, rval = 1'0).
Adding SRST signal on $verific$even_reg$kasumi.vhdl:184$145 ($dff) from module kasumi (D = $verific$n431$12, Q = \even, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$569 ($sdff) from module kasumi (D = $verific$n429$10, Q = \even).
Adding SRST signal on $verific$c3b_reg$kasumi.vhdl:198$154 ($dff) from module kasumi (D = $verific$n467$37, Q = \c3b, rval = 3'000).
Adding SRST signal on $verific$FL_reg$kasumi.vhdl:287$187 ($dff) from module kasumi (D = { \LFL \RFL }, Q = \FL, rval = 0).
Adding SRST signal on $flatten\roundkey.$verific$keyreg2_reg$keyschedule.vhdl:111$283 ($dff) from module kasumi (D = $flatten\roundkey.$verific$n1183$239, Q = \roundkey.keyreg2, rval = 128'00000001001000110100010101100111100010011010101111001101111011111111111011011100101110101001100001110110010101000011001000010000).
Adding EN signal on $auto$ff.cc:262:slice$573 ($sdff) from module kasumi (D = { \roundkey.keyreg2 [95:0] \roundkey.keyreg2 [127:96] }, Q = \roundkey.keyreg2).
Adding SRST signal on $flatten\roundkey.$verific$keyreg1_reg$keyschedule.vhdl:111$282 ($dff) from module kasumi (D = $flatten\roundkey.$verific$n925$237, Q = \roundkey.keyreg1, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$577 ($sdff) from module kasumi (D = $flatten\roundkey.$verific$n925$237, Q = \roundkey.keyreg1).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 16 unused cells and 16 unused wires.
<suppressed ~17 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~2 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell kasumi.$verific$and_32$kasumi.vhdl:188$147 ($and).
Removed top 2 bits (of 3) from port A of cell kasumi.$verific$xor_36$kasumi.vhdl:196$150 ($xor).
Removed top 2 bits (of 9) from port A of cell kasumi.$verific$xor_119$kasumi.vhdl:305$192 ($xor).
Removed top 1 bits (of 2) from port A of cell kasumi.$verific$xor_144$kasumi.vhdl:339$213 ($xor).

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module kasumi:
  created 0 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== kasumi ===

   Number of wires:                355
   Number of wire bits:           2638
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                309
     $and                          146
     $bmux                           3
     $eq                             3
     $mux                            8
     $not                            5
     $or                             4
     $reduce_bool                    2
     $reduce_or                      1
     $sdff                           7
     $sdffe                          5
     $xor                          125


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== kasumi ===

   Number of wires:                355
   Number of wire bits:           2638
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                309
     $and                          146
     $bmux                           3
     $eq                             3
     $mux                            8
     $not                            5
     $or                             4
     $reduce_bool                    2
     $reduce_or                      1
     $sdff                           7
     $sdffe                          5
     $xor                          125


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> stat

3.24. Printing statistics.

=== kasumi ===

   Number of wires:                355
   Number of wire bits:           2638
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                309
     $and                          146
     $bmux                           3
     $eq                             3
     $mux                            8
     $not                            5
     $or                             4
     $reduce_bool                    2
     $reduce_or                      1
     $sdff                           7
     $sdffe                          5
     $xor                          125


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~380 debug messages>

yosys> stat

3.26. Printing statistics.

=== kasumi ===

   Number of wires:                383
   Number of wire bits:           3387
   Number of public wires:          77
   Number of public wire bits:    1360
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2586
     $_AND_                        319
     $_MUX_                       1153
     $_NOT_                         22
     $_OR_                          34
     $_SDFFE_PP0P_                 259
     $_SDFFE_PP1P_                  64
     $_SDFF_PP0_                   102
     $_XOR_                        633


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~357 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~795 debug messages>
Removed a total of 265 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~32 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~192 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.31. Executing ABC pass (technology mapping using ABC).

3.31.1. Summary of detected clock domains:
  19 cells in clk=\clk, en=!$auto$simplemap.cc:257:simplemap_eqne$710, arst={ }, srst=\rst
  458 cells in clk=\clk, en={ }, arst={ }, srst=\c3b_rst
  354 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$579, arst={ }, srst=\rst
  132 cells in clk=\clk, en=!$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$574
  999 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  5 cells in clk=\clk, en=!$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=\rst
  112 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$563, arst={ }, srst=\rst

3.31.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$simplemap.cc:257:simplemap_eqne$710, synchronously reset by \rst
Extracted 19 gates and 53 wires to a netlist network with 34 inputs and 19 outputs.

3.31.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        1
ABC RESULTS:               MUX cells:       16
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       19
Removing temp directory.

3.31.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \c3b_rst
Extracted 458 gates and 844 wires to a netlist network with 386 inputs and 117 outputs.

3.31.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:             ORNOT cells:       48
ABC RESULTS:              NAND cells:      296
ABC RESULTS:               MUX cells:      204
ABC RESULTS:                OR cells:       46
ABC RESULTS:               AND cells:      132
ABC RESULTS:               XOR cells:        1
ABC RESULTS:              XNOR cells:       17
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        4
ABC RESULTS:        internal signals:      341
ABC RESULTS:           input signals:      386
ABC RESULTS:          output signals:      117
Removing temp directory.

3.31.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$579, synchronously reset by \rst
Extracted 354 gates and 516 wires to a netlist network with 162 inputs and 193 outputs.

3.31.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      128
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:               XOR cells:       96
ABC RESULTS:               MUX cells:      128
ABC RESULTS:               BUF cells:       96
ABC RESULTS:        internal signals:      161
ABC RESULTS:           input signals:      162
ABC RESULTS:          output signals:      193
Removing temp directory.

3.31.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by $auto$opt_dff.cc:253:combine_resets$574
Extracted 132 gates and 138 wires to a netlist network with 6 inputs and 99 outputs.

3.31.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        4
ABC RESULTS:               BUF cells:       49
ABC RESULTS:               NOT cells:       49
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:       99
Removing temp directory.

3.31.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 999 gates and 1248 wires to a netlist network with 248 inputs and 291 outputs.

3.31.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       99
ABC RESULTS:               NOT cells:        6
ABC RESULTS:              NAND cells:       51
ABC RESULTS:               AND cells:       91
ABC RESULTS:              XNOR cells:      209
ABC RESULTS:               XOR cells:       89
ABC RESULTS:                OR cells:       42
ABC RESULTS:               MUX cells:      264
ABC RESULTS:             ORNOT cells:       14
ABC RESULTS:               NOR cells:       14
ABC RESULTS:            ANDNOT cells:       48
ABC RESULTS:               BUF cells:       67
ABC RESULTS:        internal signals:      709
ABC RESULTS:           input signals:      248
ABC RESULTS:          output signals:      291
Removing temp directory.

3.31.7. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by \rst
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 2 outputs.

3.31.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        0
ABC RESULTS:          output signals:        2
Removing temp directory.

3.31.8. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4665$auto$opt_dff.cc:194:make_patterns_logic$563, synchronously reset by \rst
Extracted 112 gates and 224 wires to a netlist network with 112 inputs and 112 outputs.

3.31.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.31.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               XOR cells:       48
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:      112
ABC RESULTS:          output signals:      112
Removing temp directory.

yosys> abc -dff

3.32. Executing ABC pass (technology mapping using ABC).

3.32.1. Summary of detected clock domains:
  178 cells in clk=\clk, en=!$abc$3318$auto$simplemap.cc:257:simplemap_eqne$710, arst={ }, srst=\rst
  8 cells in clk=\clk, en=!$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=\rst
  989 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  69 cells in clk=\clk, en=!$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=$abc$4560$auto$opt_dff.cc:253:combine_resets$574
  464 cells in clk=\clk, en=$abc$4110$auto$opt_dff.cc:194:make_patterns_logic$579, arst={ }, srst=\rst
  295 cells in clk=\clk, en={ }, arst={ }, srst=$abc$3340$c3b_rst
  238 cells in clk=\clk, en=$abc$4665$auto$opt_dff.cc:194:make_patterns_logic$563, arst={ }, srst=\rst

3.32.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$3318$auto$simplemap.cc:257:simplemap_eqne$710, synchronously reset by \rst
Extracted 178 gates and 294 wires to a netlist network with 116 inputs and 20 outputs.

3.32.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        2
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               AND cells:       73
ABC RESULTS:              NAND cells:      114
ABC RESULTS:               MUX cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:      158
ABC RESULTS:           input signals:      116
ABC RESULTS:          output signals:       20
Removing temp directory.

3.32.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by \rst
Extracted 8 gates and 11 wires to a netlist network with 3 inputs and 3 outputs.

3.32.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

3.32.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 989 gates and 1258 wires to a netlist network with 269 inputs and 255 outputs.

3.32.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       99
ABC RESULTS:               NOT cells:       28
ABC RESULTS:              XNOR cells:      177
ABC RESULTS:               XOR cells:       62
ABC RESULTS:             ORNOT cells:       26
ABC RESULTS:                OR cells:       51
ABC RESULTS:               AND cells:      132
ABC RESULTS:               MUX cells:      267
ABC RESULTS:              NAND cells:      166
ABC RESULTS:               NOR cells:        7
ABC RESULTS:            ANDNOT cells:       31
ABC RESULTS:               BUF cells:       67
ABC RESULTS:        internal signals:      734
ABC RESULTS:           input signals:      269
ABC RESULTS:          output signals:      255
Removing temp directory.

3.32.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by $abc$4560$auto$opt_dff.cc:253:combine_resets$574
Extracted 69 gates and 88 wires to a netlist network with 19 inputs and 68 outputs.

3.32.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:       17
ABC RESULTS:               NOT cells:       49
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       68
Removing temp directory.

3.32.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$4110$auto$opt_dff.cc:194:make_patterns_logic$579, synchronously reset by \rst
Extracted 464 gates and 588 wires to a netlist network with 124 inputs and 167 outputs.

3.32.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      128
ABC RESULTS:                OR cells:       15
ABC RESULTS:              NAND cells:        1
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:               XOR cells:       79
ABC RESULTS:               MUX cells:      224
ABC RESULTS:               BUF cells:       17
ABC RESULTS:        internal signals:      297
ABC RESULTS:           input signals:      124
ABC RESULTS:          output signals:      167
Removing temp directory.

3.32.7. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$3340$c3b_rst
Extracted 295 gates and 506 wires to a netlist network with 211 inputs and 143 outputs.

3.32.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:             ORNOT cells:       54
ABC RESULTS:              NAND cells:       54
ABC RESULTS:               AND cells:       52
ABC RESULTS:            ANDNOT cells:       14
ABC RESULTS:               MUX cells:       77
ABC RESULTS:                OR cells:       37
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        6
ABC RESULTS:        internal signals:      152
ABC RESULTS:           input signals:      211
ABC RESULTS:          output signals:      143
Removing temp directory.

3.32.8. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6125$abc$4665$auto$opt_dff.cc:194:make_patterns_logic$563, synchronously reset by \rst
Extracted 238 gates and 383 wires to a netlist network with 145 inputs and 127 outputs.

3.32.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.32.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:            ANDNOT cells:        7
ABC RESULTS:                OR cells:        8
ABC RESULTS:               MUX cells:       10
ABC RESULTS:               AND cells:       15
ABC RESULTS:               NOR cells:        5
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              NAND cells:       11
ABC RESULTS:              XNOR cells:       45
ABC RESULTS:               XOR cells:       63
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:      111
ABC RESULTS:           input signals:      145
ABC RESULTS:          output signals:      127
Removing temp directory.

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  366 cells in clk=\clk, en={ }, arst={ }, srst=$abc$7794$abc$3340$c3b_rst
  161 cells in clk=\clk, en=!$abc$5908$abc$3318$auto$simplemap.cc:257:simplemap_eqne$710, arst={ }, srst=\rst
  8 cells in clk=\clk, en=!$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=\rst
  1041 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  57 cells in clk=\clk, en=!$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=$abc$7239$abc$4560$auto$opt_dff.cc:253:combine_resets$574
  448 cells in clk=\clk, en=$abc$7312$abc$4110$auto$opt_dff.cc:194:make_patterns_logic$579, arst={ }, srst=\rst
  247 cells in clk=\clk, en=$abc$6125$abc$4665$auto$opt_dff.cc:194:make_patterns_logic$563, arst={ }, srst=\rst

3.33.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by $abc$7794$abc$3340$c3b_rst
Extracted 366 gates and 647 wires to a netlist network with 281 inputs and 241 outputs.

3.33.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:            ANDNOT cells:       19
ABC RESULTS:             ORNOT cells:       25
ABC RESULTS:               AND cells:      109
ABC RESULTS:               MUX cells:      103
ABC RESULTS:              NAND cells:      163
ABC RESULTS:                OR cells:       69
ABC RESULTS:              XNOR cells:        6
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:       14
ABC RESULTS:        internal signals:      125
ABC RESULTS:           input signals:      281
ABC RESULTS:          output signals:      241
Removing temp directory.

3.33.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$5908$abc$3318$auto$simplemap.cc:257:simplemap_eqne$710, synchronously reset by \rst
Extracted 161 gates and 275 wires to a netlist network with 114 inputs and 31 outputs.

3.33.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:                OR cells:        5
ABC RESULTS:             ORNOT cells:        5
ABC RESULTS:               AND cells:       43
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:              NAND cells:       82
ABC RESULTS:               MUX cells:       16
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:        internal signals:      130
ABC RESULTS:           input signals:      114
ABC RESULTS:          output signals:       31
Removing temp directory.

3.33.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by \rst
Extracted 8 gates and 11 wires to a netlist network with 3 inputs and 3 outputs.

3.33.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

3.33.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 1041 gates and 1384 wires to a netlist network with 343 inputs and 241 outputs.

3.33.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       99
ABC RESULTS:               NOT cells:       23
ABC RESULTS:               AND cells:      163
ABC RESULTS:                OR cells:       66
ABC RESULTS:              NAND cells:      243
ABC RESULTS:               MUX cells:      171
ABC RESULTS:              XNOR cells:      155
ABC RESULTS:             ORNOT cells:       25
ABC RESULTS:               XOR cells:       65
ABC RESULTS:               NOR cells:       11
ABC RESULTS:            ANDNOT cells:       42
ABC RESULTS:               BUF cells:      104
ABC RESULTS:        internal signals:      800
ABC RESULTS:           input signals:      343
ABC RESULTS:          output signals:      241
Removing temp directory.

3.33.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$9138$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by $abc$7239$abc$4560$auto$opt_dff.cc:253:combine_resets$574
Extracted 57 gates and 64 wires to a netlist network with 7 inputs and 56 outputs.

3.33.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               XOR cells:        5
ABC RESULTS:               NOT cells:       49
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:        1
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:       56
Removing temp directory.

3.33.7. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7312$abc$4110$auto$opt_dff.cc:194:make_patterns_logic$579, synchronously reset by \rst
Extracted 448 gates and 566 wires to a netlist network with 118 inputs and 167 outputs.

3.33.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      128
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:            ANDNOT cells:       15
ABC RESULTS:                OR cells:        6
ABC RESULTS:               XOR cells:       91
ABC RESULTS:               MUX cells:      206
ABC RESULTS:               BUF cells:       21
ABC RESULTS:        internal signals:      281
ABC RESULTS:           input signals:      118
ABC RESULTS:          output signals:      167
Removing temp directory.

3.33.8. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9147$abc$6125$abc$4665$auto$opt_dff.cc:194:make_patterns_logic$563, synchronously reset by \rst
Extracted 247 gates and 399 wires to a netlist network with 152 inputs and 129 outputs.

3.33.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.33.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        4
ABC RESULTS:            ANDNOT cells:        4
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               MUX cells:       10
ABC RESULTS:               AND cells:       26
ABC RESULTS:                OR cells:        7
ABC RESULTS:              NAND cells:       15
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:              XNOR cells:       51
ABC RESULTS:               XOR cells:       59
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:      118
ABC RESULTS:           input signals:      152
ABC RESULTS:          output signals:      129
Removing temp directory.

yosys> opt_ffinv

3.34. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.35. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~28 debug messages>

yosys> opt_merge -nomux

3.35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~150 debug messages>
Removed a total of 50 cells.

yosys> opt_muxtree

3.35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 8706 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.35.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.35.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.35.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.35.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.35.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.35.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.35.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.35.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.35.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  1280 cells in clk=\clk, en={ }, arst={ }, srst=\rst
  7 cells in clk=\clk, en=!$abc$10376$abc$9138$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=\rst
  185 cells in clk=\clk, en=!$abc$3318$auto$simplemap.cc:257:simplemap_eqne$710, arst={ }, srst=\rst
  371 cells in clk=\clk, en={ }, arst={ }, srst=\c3b_rst
  246 cells in clk=\clk, en=$abc$4665$auto$opt_dff.cc:194:make_patterns_logic$563, arst={ }, srst=\rst
  354 cells in clk=\clk, en=$abc$10376$abc$7312$abc$4110$auto$opt_dff.cc:194:make_patterns_logic$579, arst={ }, srst=\rst
  5 cells in clk=\clk, en=!$abc$10376$abc$9138$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, arst={ }, srst=$abc$10315$abc$7239$abc$4560$auto$opt_dff.cc:253:combine_resets$574

3.36.2. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \rst
Extracted 1280 gates and 1618 wires to a netlist network with 338 inputs and 251 outputs.

3.36.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.2.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       99
ABC RESULTS:               NOT cells:       10
ABC RESULTS:               XOR cells:       59
ABC RESULTS:                OR cells:       69
ABC RESULTS:              XNOR cells:      153
ABC RESULTS:               AND cells:      235
ABC RESULTS:             ORNOT cells:       49
ABC RESULTS:              NAND cells:      376
ABC RESULTS:               MUX cells:      194
ABC RESULTS:               NOR cells:       19
ABC RESULTS:            ANDNOT cells:       63
ABC RESULTS:               BUF cells:       67
ABC RESULTS:        internal signals:     1029
ABC RESULTS:           input signals:      338
ABC RESULTS:          output signals:      251
Removing temp directory.

3.36.3. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$10376$abc$9138$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by \rst
Extracted 7 gates and 10 wires to a netlist network with 3 inputs and 3 outputs.

3.36.3.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.3.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        2
ABC RESULTS:               XOR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        3
Removing temp directory.

3.36.4. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$3318$auto$simplemap.cc:257:simplemap_eqne$710, synchronously reset by \rst
Extracted 185 gates and 301 wires to a netlist network with 116 inputs and 46 outputs.

3.36.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.4.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        1
ABC RESULTS:            ANDNOT cells:        8
ABC RESULTS:             ORNOT cells:        3
ABC RESULTS:                OR cells:       12
ABC RESULTS:               MUX cells:       10
ABC RESULTS:              NAND cells:       90
ABC RESULTS:               AND cells:       67
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:        internal signals:      139
ABC RESULTS:           input signals:      116
ABC RESULTS:          output signals:       46
Removing temp directory.

3.36.5. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, synchronously reset by \c3b_rst
Extracted 371 gates and 640 wires to a netlist network with 269 inputs and 191 outputs.

3.36.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.5.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        3
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:               NOR cells:        4
ABC RESULTS:             ORNOT cells:       46
ABC RESULTS:               AND cells:       56
ABC RESULTS:               MUX cells:       99
ABC RESULTS:              NAND cells:      106
ABC RESULTS:                OR cells:       25
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               BUF cells:        1
ABC RESULTS:               NOT cells:        5
ABC RESULTS:        internal signals:      180
ABC RESULTS:           input signals:      269
ABC RESULTS:          output signals:      191
Removing temp directory.

3.36.6. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11223$abc$4665$auto$opt_dff.cc:194:make_patterns_logic$563, synchronously reset by \rst
Extracted 246 gates and 400 wires to a netlist network with 154 inputs and 129 outputs.

3.36.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.6.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:       64
ABC RESULTS:               NOT cells:        2
ABC RESULTS:               NOR cells:        1
ABC RESULTS:            ANDNOT cells:        6
ABC RESULTS:             ORNOT cells:        4
ABC RESULTS:               AND cells:       18
ABC RESULTS:               MUX cells:        9
ABC RESULTS:                OR cells:        5
ABC RESULTS:              NAND cells:       25
ABC RESULTS:              XNOR cells:       51
ABC RESULTS:               XOR cells:       60
ABC RESULTS:               BUF cells:      128
ABC RESULTS:        internal signals:      117
ABC RESULTS:           input signals:      154
ABC RESULTS:          output signals:      129
Removing temp directory.

3.36.7. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$10376$abc$7312$abc$4110$auto$opt_dff.cc:194:make_patterns_logic$579, synchronously reset by \rst
Extracted 354 gates and 425 wires to a netlist network with 71 inputs and 194 outputs.

3.36.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.7.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:      128
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               XOR cells:       96
ABC RESULTS:               MUX cells:      128
ABC RESULTS:               BUF cells:       96
ABC RESULTS:        internal signals:      160
ABC RESULTS:           input signals:       71
ABC RESULTS:          output signals:      194
Removing temp directory.

3.36.8. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$12617$abc$10376$abc$9138$abc$6116$abc$4560$auto$simplemap.cc:128:simplemap_reduce$1720, synchronously reset by $abc$10315$abc$7239$abc$4560$auto$opt_dff.cc:253:combine_resets$574
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 5 outputs.

3.36.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.36.8.2. Re-integrating ABC results.
ABC RESULTS:               DFF cells:        2
ABC RESULTS:                OR cells:        1
ABC RESULTS:               NOT cells:        3
ABC RESULTS:               BUF cells:        3
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        5
Removing temp directory.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> abc -script /tmp/yosys_NYyyR4/abc_tmp_1.scr

3.38. Executing ABC pass (technology mapping using ABC).

3.38.1. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Extracted 2196 gates and 2528 wires to a netlist network with 332 inputs and 238 outputs.

3.38.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_NYyyR4/abc_tmp_1.scr 
ABC:   #PIs = 332  #Luts =   703  Max Lvl =  15  Avg Lvl =   3.58  [   0.11 sec. at Pass 0]
ABC:   #PIs = 332  #Luts =   660  Max Lvl =  14  Avg Lvl =   3.46  [   7.01 sec. at Pass 1]
ABC:   #PIs = 332  #Luts =   655  Max Lvl =  14  Avg Lvl =   3.58  [   0.97 sec. at Pass 2]
ABC:   #PIs = 332  #Luts =   619  Max Lvl =  13  Avg Lvl =   3.38  [   2.33 sec. at Pass 3]
ABC:   #PIs = 332  #Luts =   608  Max Lvl =  13  Avg Lvl =   3.31  [   1.25 sec. at Pass 4]
ABC:   #PIs = 332  #Luts =   601  Max Lvl =  13  Avg Lvl =   3.22  [   3.55 sec. at Pass 5]
ABC:   #PIs = 332  #Luts =   591  Max Lvl =  14  Avg Lvl =   3.35  [   1.60 sec. at Pass 6]
ABC:   #PIs = 332  #Luts =   589  Max Lvl =  14  Avg Lvl =   3.33  [   3.86 sec. at Pass 7]
ABC:   #PIs = 332  #Luts =   589  Max Lvl =  13  Avg Lvl =   3.26  [   1.63 sec. at Pass 8]
ABC:   #PIs = 332  #Luts =   589  Max Lvl =  12  Avg Lvl =   3.21  [   4.49 sec. at Pass 9]
ABC:   #PIs = 332  #Luts =   586  Max Lvl =  12  Avg Lvl =   3.13  [   1.59 sec. at Pass 10]
ABC:   #PIs = 332  #Luts =   583  Max Lvl =  13  Avg Lvl =   3.19  [   4.55 sec. at Pass 11]
ABC:   #PIs = 332  #Luts =   583  Max Lvl =  13  Avg Lvl =   3.19  [   1.57 sec. at Pass 12]
ABC:   #PIs = 332  #Luts =   579  Max Lvl =  12  Avg Lvl =   3.11  [   5.13 sec. at Pass 13]
ABC:   #PIs = 332  #Luts =   579  Max Lvl =  12  Avg Lvl =   3.11  [   2.05 sec. at Pass 14]
ABC:   #PIs = 332  #Luts =   579  Max Lvl =  12  Avg Lvl =   3.11  [   3.89 sec. at Pass 15]
ABC:   #PIs = 332  #Luts =   577  Max Lvl =  14  Avg Lvl =   3.37  [   1.41 sec. at Pass 16]
ABC:   #PIs = 332  #Luts =   576  Max Lvl =  13  Avg Lvl =   3.21  [   3.73 sec. at Pass 17]
ABC:   #PIs = 332  #Luts =   570  Max Lvl =  12  Avg Lvl =   3.20  [   1.22 sec. at Pass 18]
ABC:   #PIs = 332  #Luts =   570  Max Lvl =  12  Avg Lvl =   3.20  [   3.55 sec. at Pass 19]
ABC:   #PIs = 332  #Luts =   570  Max Lvl =  12  Avg Lvl =   3.20  [   1.39 sec. at Pass 20]
ABC:   #PIs = 332  #Luts =   570  Max Lvl =  12  Avg Lvl =   3.20  [   3.98 sec. at Pass 21]
ABC:   #PIs = 332  #Luts =   563  Max Lvl =  12  Avg Lvl =   3.11  [  23.94 sec. at Pass 22]
ABC:   #PIs = 332  #Luts =   563  Max Lvl =  12  Avg Lvl =   3.11  [   1.47 sec. at Pass 23]
ABC:   #PIs = 332  #Luts =   563  Max Lvl =  12  Avg Lvl =   3.11  [   3.89 sec. at Pass 24]
ABC:   #PIs = 332  #Luts =   561  Max Lvl =  12  Avg Lvl =   3.18  [   1.41 sec. at Pass 25]
ABC:   #PIs = 332  #Luts =   561  Max Lvl =  12  Avg Lvl =   3.18  [   4.68 sec. at Pass 26]
ABC:   #PIs = 332  #Luts =   561  Max Lvl =  12  Avg Lvl =   3.18  [   1.63 sec. at Pass 27]
ABC:   #PIs = 332  #Luts =   561  Max Lvl =  12  Avg Lvl =   3.18  [   3.49 sec. at Pass 28]
ABC:   #PIs = 332  #Luts =   556  Max Lvl =  12  Avg Lvl =   3.17  [  20.24 sec. at Pass 29]
ABC:   #PIs = 332  #Luts =   556  Max Lvl =  12  Avg Lvl =   3.17  [   2.35 sec. at Pass 30]
ABC:   #PIs = 332  #Luts =   556  Max Lvl =  12  Avg Lvl =   3.17  [   3.50 sec. at Pass 31]
ABC:   #PIs = 332  #Luts =   554  Max Lvl =  13  Avg Lvl =   3.19  [   2.15 sec. at Pass 32]
ABC:   #PIs = 332  #Luts =   554  Max Lvl =  13  Avg Lvl =   3.19  [   3.25 sec. at Pass 33]
ABC:   #PIs = 332  #Luts =   554  Max Lvl =  13  Avg Lvl =   3.19  [   1.36 sec. at Pass 34]
ABC:   #PIs = 332  #Luts =   554  Max Lvl =  13  Avg Lvl =   3.19  [   3.68 sec. at Pass 35]
ABC:   #PIs = 332  #Luts =   551  Max Lvl =  12  Avg Lvl =   3.05  [  17.80 sec. at Pass 36]
ABC:   #PIs = 332  #Luts =   551  Max Lvl =  12  Avg Lvl =   3.05  [   1.36 sec. at Pass 37]
ABC:   #PIs = 332  #Luts =   551  Max Lvl =  12  Avg Lvl =   3.05  [   3.82 sec. at Pass 38]
ABC:   #PIs = 332  #Luts =   551  Max Lvl =  12  Avg Lvl =   3.05  [   1.32 sec. at Pass 39]
ABC:   #PIs = 332  #Luts =   548  Max Lvl =  13  Avg Lvl =   3.10  [  23.87 sec. at Pass 40]
ABC:   #PIs = 332  #Luts =   548  Max Lvl =  13  Avg Lvl =   3.10  [   4.51 sec. at Pass 41]
ABC:   #PIs = 332  #Luts =   548  Max Lvl =  13  Avg Lvl =   3.10  [   1.67 sec. at Pass 42]
ABC:   #PIs = 332  #Luts =   548  Max Lvl =  12  Avg Lvl =   3.03  [   4.61 sec. at Pass 43]
ABC:   #PIs = 332  #Luts =   546  Max Lvl =  13  Avg Lvl =   3.08  [   1.42 sec. at Pass 44]
ABC:   #PIs = 332  #Luts =   546  Max Lvl =  13  Avg Lvl =   3.08  [   3.99 sec. at Pass 45]
ABC:   #PIs = 332  #Luts =   545  Max Lvl =  13  Avg Lvl =   3.09  [   1.45 sec. at Pass 46]
ABC:   #PIs = 332  #Luts =   545  Max Lvl =  13  Avg Lvl =   3.09  [   3.71 sec. at Pass 47]
ABC:   #PIs = 332  #Luts =   545  Max Lvl =  13  Avg Lvl =   3.09  [   1.38 sec. at Pass 48]
ABC:   #PIs = 332  #Luts =   545  Max Lvl =  13  Avg Lvl =   3.09  [   3.35 sec. at Pass 49]
ABC:   #PIs = 332  #Luts =   545  Max Lvl =  13  Avg Lvl =   3.09  [   0.22 sec. at Pass 50]
ABC:   [DE total time =  215.27 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.38.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      545
ABC RESULTS:        internal signals:     1958
ABC RESULTS:           input signals:      332
ABC RESULTS:          output signals:      238
Removing temp directory.

yosys> opt

3.39. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.39.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.39.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 6189 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.39.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.39.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.39.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.39.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.39.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.39.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.39.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.39.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.40. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 3 inverters.

yosys> stat

3.41. Printing statistics.

=== kasumi ===

   Number of wires:                814
   Number of wire bits:           1695
   Number of public wires:          44
   Number of public wire bits:     925
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                841
     $_SDFFE_PP0N_                   3
     $_SDFFE_PP0P_                 192
     $_SDFFE_PP1N_                   2
     $_SDFF_PP0_                   101
     $_SDFF_PP1_                     1
     $lut                          542


yosys> shregmap -minlen 8 -maxlen 20

3.42. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.43. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.44. Printing statistics.

=== kasumi ===

   Number of wires:               1310
   Number of wire bits:           2191
   Number of public wires:          44
   Number of public wire bits:     925
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1337
     $_DFF_P_                      299
     $_MUX_                        496
     $lut                          542


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/Workspace/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~977 debug messages>

yosys> opt_expr -mux_undef

3.46. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~11345 debug messages>

yosys> simplemap

3.47. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge

3.49. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~6774 debug messages>
Removed a total of 2258 cells.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 2111 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.52. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.52.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.
<suppressed ~461 debug messages>

yosys> opt_merge -nomux

3.52.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_muxtree

3.52.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.52.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 66 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.52.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.52.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.52.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.52.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.52.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.52.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.52.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.52.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_NYyyR4/abc_tmp_2.scr

3.53. Executing ABC pass (technology mapping using ABC).

3.53.1. Extracting gate netlist of module `\kasumi' to `<abc-temp-dir>/input.blif'..
Extracted 3275 gates and 3674 wires to a netlist network with 397 inputs and 299 outputs.

3.53.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + source /tmp/yosys_NYyyR4/abc_tmp_2.scr 
ABC:   #PIs = 397  #Luts =   641  Max Lvl =  14  Avg Lvl =   3.87  [   0.22 sec. at Pass 0]
ABC:   #PIs = 397  #Luts =   641  Max Lvl =  14  Avg Lvl =   3.87  [   7.78 sec. at Pass 1]
ABC:   #PIs = 397  #Luts =   640  Max Lvl =  14  Avg Lvl =   3.87  [   1.78 sec. at Pass 2]
ABC:   #PIs = 397  #Luts =   638  Max Lvl =  13  Avg Lvl =   4.32  [   4.57 sec. at Pass 3]
ABC:   #PIs = 397  #Luts =   638  Max Lvl =  13  Avg Lvl =   4.32  [   2.15 sec. at Pass 4]
ABC:   #PIs = 397  #Luts =   638  Max Lvl =  13  Avg Lvl =   4.32  [   4.38 sec. at Pass 5]
ABC:   #PIs = 397  #Luts =   635  Max Lvl =  13  Avg Lvl =   4.27  [   1.87 sec. at Pass 6]
ABC:   #PIs = 397  #Luts =   635  Max Lvl =  13  Avg Lvl =   4.27  [   5.23 sec. at Pass 7]
ABC:   #PIs = 397  #Luts =   635  Max Lvl =  13  Avg Lvl =   4.27  [   1.88 sec. at Pass 8]
ABC:   #PIs = 397  #Luts =   635  Max Lvl =  13  Avg Lvl =   4.27  [   4.24 sec. at Pass 9]
ABC:   #PIs = 397  #Luts =   635  Max Lvl =  13  Avg Lvl =   4.27  [   0.45 sec. at Pass 10]
ABC:   [DE total time =   35.20 sec. ]
ABC: + write_blif <abc-temp-dir>/output.blif 

3.53.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      635
ABC RESULTS:        internal signals:     2978
ABC RESULTS:           input signals:      397
ABC RESULTS:          output signals:      299
Removing temp directory.

yosys> opt

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 2526 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \kasumi..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \kasumi.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\kasumi'.
Removed a total of 0 cells.

yosys> opt_dff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module kasumi.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.55. Executing HIERARCHY pass (managing design hierarchy).

3.55.1. Analyzing design hierarchy..
Top module:  \kasumi

3.55.2. Analyzing design hierarchy..
Top module:  \kasumi
Removed 0 unused modules.

yosys> stat

3.56. Printing statistics.

=== kasumi ===

   Number of wires:                904
   Number of wire bits:           1785
   Number of public wires:          43
   Number of public wire bits:     924
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                934
     $lut                          635
     dffsre                        299


yosys> opt_clean -purge

3.57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \kasumi..
Removed 0 unused cells and 31 unused wires.
<suppressed ~31 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.58. Executing Verilog backend.

yosys> bmuxmap

3.58.1. Executing BMUXMAP pass.

yosys> demuxmap

3.58.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\kasumi'.

Warnings: 12 unique messages, 12 total
End of script. Logfile hash: dae98c7cfe, CPU: user 10.97s system 0.18s, MEM: 52.43 MB peak
Yosys 0.16+65 (git sha1 03bd62bb8, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 6x abc (2947 sec), 0% 18x opt_dff (3 sec), ...
real 271.35
user 2801.68
sys 155.82
