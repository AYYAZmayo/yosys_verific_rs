
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.32
 Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_count_pkg.sv prim_esc_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_ram_1p_pkg.sv prim_ram_2p_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv jtag_pkg.sv lc_ctrl_pkg.sv usbdev_reg_pkg.sv usbuart_reg_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_arbiter_fixed.sv prim_arbiter_ppc.sv prim_buf.sv prim_clock_buf.sv prim_clock_gating.sv prim_clock_inv.sv prim_clock_mux2.sv prim_count.sv prim_diff_decode.sv prim_edge_detector.sv prim_edn_req.sv prim_esc_receiver.sv prim_fifo_async.sv prim_fifo_async_sram_adapter.sv prim_fifo_sync.sv prim_flop.sv prim_flop_2sync.sv prim_flop_en.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_generic_flop_en.sv prim_generic_ram_1p.sv prim_generic_ram_2p.sv prim_intr_hw.sv prim_lc_sync.sv prim_lfsr.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_prince.sv prim_pulse_sync.sv prim_subst_perm.sv prim_ram_1p.sv prim_ram_1p_adv.sv prim_ram_1p_scr.sv prim_ram_2p.sv prim_sync_reqack.sv rising_edge_detector.sv prim_ram_2p_async_adv.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_28_22_dec.sv prim_secded_28_22_enc.sv prim_secded_72_64_dec.sv prim_secded_72_64_enc.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_slicer.sv prim_sparse_fsm_flop.sv prim_sram_arbiter.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_host.sv tlul_adapter_reg.sv tlul_adapter_sram.sv tlul_assert.sv tlul_assert_multiple.sv tlul_cmd_intg_chk.sv tlul_cmd_intg_gen.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_err_resp.sv tlul_fifo_async.sv tlul_fifo_sync.sv tlul_rsp_intg_chk.sv tlul_rsp_intg_gen.sv tlul_socket_1n.sv tlul_socket_m1.sv tlul_sram_byte.sv usb_consts_pkg.sv usb_fs_nb_in_pe.sv usb_fs_nb_out_pe.sv usb_fs_nb_pe.sv usb_fs_rx.sv usb_fs_tx.sv usb_fs_tx_mux.sv usb_serial_ctrl_ep.sv usb_serial_fifo_ep.sv usbdev_iomux.sv usbuart.sv usbuart_core.sv usbuart_reg_top.sv usbuart_usbif.sv wav_cgc_rl.sv

yosys> verific -sv prim_alert_pkg.sv prim_cipher_pkg.sv prim_count_pkg.sv prim_esc_pkg.sv prim_mubi_pkg.sv prim_pkg.sv prim_ram_1p_pkg.sv prim_ram_2p_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv jtag_pkg.sv lc_ctrl_pkg.sv usbdev_reg_pkg.sv usbuart_reg_pkg.sv entropy_src_pkg.sv edn_reg_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv prim_alert_sender.sv prim_arbiter_fixed.sv prim_arbiter_ppc.sv prim_buf.sv prim_clock_buf.sv prim_clock_gating.sv prim_clock_inv.sv prim_clock_mux2.sv prim_count.sv prim_diff_decode.sv prim_edge_detector.sv prim_edn_req.sv prim_esc_receiver.sv prim_fifo_async.sv prim_fifo_async_sram_adapter.sv prim_fifo_sync.sv prim_flop.sv prim_flop_2sync.sv prim_flop_en.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_flop_2sync.sv prim_generic_flop_en.sv prim_generic_ram_1p.sv prim_generic_ram_2p.sv prim_intr_hw.sv prim_lc_sync.sv prim_lfsr.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_prince.sv prim_pulse_sync.sv prim_subst_perm.sv prim_ram_1p.sv prim_ram_1p_adv.sv prim_ram_1p_scr.sv prim_ram_2p.sv prim_sync_reqack.sv rising_edge_detector.sv prim_ram_2p_async_adv.sv prim_reg_cdc.sv prim_sec_anchor_buf.sv prim_secded_28_22_dec.sv prim_secded_28_22_enc.sv prim_secded_72_64_dec.sv prim_secded_72_64_enc.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_slicer.sv prim_sparse_fsm_flop.sv prim_sram_arbiter.sv prim_subreg.sv prim_subreg_ext.sv tlul_adapter_host.sv tlul_adapter_reg.sv tlul_adapter_sram.sv tlul_assert.sv tlul_assert_multiple.sv tlul_cmd_intg_chk.sv tlul_cmd_intg_gen.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_err_resp.sv tlul_fifo_async.sv tlul_fifo_sync.sv tlul_rsp_intg_chk.sv tlul_rsp_intg_gen.sv tlul_socket_1n.sv tlul_socket_m1.sv tlul_sram_byte.sv usb_consts_pkg.sv usb_fs_nb_in_pe.sv usb_fs_nb_out_pe.sv usb_fs_nb_pe.sv usb_fs_rx.sv usb_fs_tx.sv usb_fs_tx_mux.sv usb_serial_ctrl_ep.sv usb_serial_fifo_ep.sv usbdev_iomux.sv usbuart.sv usbuart_core.sv usbuart_reg_top.sv usbuart_usbif.sv wav_cgc_rl.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:19: parameter 'ALERT_TX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_alert_pkg.sv:22: parameter 'ALERT_RX_DEFAULT' declared inside package 'prim_alert_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_cipher_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:23: parameter 'PRINCE_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:28: parameter 'PRINCE_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:33: parameter 'PRINCE_SHIFT_ROWS64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:38: parameter 'PRINCE_SHIFT_ROWS64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:44: parameter 'PRINCE_ROUND_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:58: parameter 'PRINCE_ALPHA_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:61: parameter 'PRINCE_SHIFT_ROWS_CONST0' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:62: parameter 'PRINCE_SHIFT_ROWS_CONST1' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:63: parameter 'PRINCE_SHIFT_ROWS_CONST2' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:64: parameter 'PRINCE_SHIFT_ROWS_CONST3' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:141: parameter 'PRESENT_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:146: parameter 'PRESENT_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:153: parameter 'PRESENT_PERM32' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:162: parameter 'PRESENT_PERM32_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:172: parameter 'PRESENT_PERM64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:189: parameter 'PRESENT_PERM64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_esc_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_esc_pkg.sv:17: parameter 'ESC_TX_DEFAULT' declared inside package 'prim_esc_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_esc_pkg.sv:20: parameter 'ESC_RX_DEFAULT' declared inside package 'prim_esc_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_1p_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_ram_1p_pkg.sv:18: parameter 'RAM_1P_CFG_DEFAULT' declared inside package 'prim_ram_1p_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_2p_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_ram_2p_pkg.sv:20: parameter 'RAM_2P_CFG_DEFAULT' declared inside package 'prim_ram_2p_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'jtag_pkg.sv'
VERIFIC-WARNING [VERI-2418] jtag_pkg.sv:15: parameter 'JTAG_REQ_DEFAULT' declared inside package 'jtag_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] jtag_pkg.sv:22: parameter 'JTAG_RSP_DEFAULT' declared inside package 'jtag_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbdev_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:10: parameter 'NEndpoints' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:534: parameter 'USBDEV_INTR_STATE_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:535: parameter 'USBDEV_INTR_ENABLE_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:536: parameter 'USBDEV_INTR_TEST_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:537: parameter 'USBDEV_USBCTRL_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:538: parameter 'USBDEV_USBSTAT_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:539: parameter 'USBDEV_AVBUFFER_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:540: parameter 'USBDEV_RXFIFO_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:541: parameter 'USBDEV_RXENABLE_SETUP_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:542: parameter 'USBDEV_RXENABLE_OUT_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:543: parameter 'USBDEV_IN_SENT_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:544: parameter 'USBDEV_STALL_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:545: parameter 'USBDEV_CONFIGIN_0_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:546: parameter 'USBDEV_CONFIGIN_1_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:547: parameter 'USBDEV_CONFIGIN_2_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:548: parameter 'USBDEV_CONFIGIN_3_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:549: parameter 'USBDEV_CONFIGIN_4_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:550: parameter 'USBDEV_CONFIGIN_5_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:551: parameter 'USBDEV_CONFIGIN_6_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:552: parameter 'USBDEV_CONFIGIN_7_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:553: parameter 'USBDEV_CONFIGIN_8_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:554: parameter 'USBDEV_CONFIGIN_9_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:555: parameter 'USBDEV_CONFIGIN_10_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:556: parameter 'USBDEV_CONFIGIN_11_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:557: parameter 'USBDEV_ISO_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:558: parameter 'USBDEV_DATA_TOGGLE_CLEAR_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:559: parameter 'USBDEV_PHY_PINS_SENSE_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:560: parameter 'USBDEV_PHY_PINS_DRIVE_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:561: parameter 'USBDEV_PHY_CONFIG_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:564: parameter 'USBDEV_BUFFER_OFFSET' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:565: parameter 'USBDEV_BUFFER_SIZE' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbdev_reg_pkg.sv:600: parameter 'USBDEV_PERMIT' declared inside package 'usbdev_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbuart_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:333: parameter 'USBUART_INTR_STATE_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:334: parameter 'USBUART_INTR_ENABLE_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:335: parameter 'USBUART_INTR_TEST_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:336: parameter 'USBUART_ALERT_TEST_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:337: parameter 'USBUART_CTRL_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:338: parameter 'USBUART_STATUS_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:339: parameter 'USBUART_RDATA_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:340: parameter 'USBUART_WDATA_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:341: parameter 'USBUART_FIFO_CTRL_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:342: parameter 'USBUART_FIFO_STATUS_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:343: parameter 'USBUART_OVRD_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:344: parameter 'USBUART_VAL_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:345: parameter 'USBUART_TIMEOUT_CTRL_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:346: parameter 'USBUART_USBSTAT_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:347: parameter 'USBUART_USBPARAM_OFFSET' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:350: parameter 'USBUART_INTR_TEST_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:351: parameter 'USBUART_INTR_TEST_TX_WATERMARK_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:352: parameter 'USBUART_INTR_TEST_RX_WATERMARK_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:353: parameter 'USBUART_INTR_TEST_TX_OVERFLOW_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:354: parameter 'USBUART_INTR_TEST_RX_OVERFLOW_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:355: parameter 'USBUART_INTR_TEST_RX_FRAME_ERR_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:356: parameter 'USBUART_INTR_TEST_RX_BREAK_ERR_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:357: parameter 'USBUART_INTR_TEST_RX_TIMEOUT_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:358: parameter 'USBUART_INTR_TEST_RX_PARITY_ERR_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:359: parameter 'USBUART_ALERT_TEST_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:360: parameter 'USBUART_ALERT_TEST_FATAL_FAULT_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:361: parameter 'USBUART_STATUS_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:362: parameter 'USBUART_RDATA_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:363: parameter 'USBUART_FIFO_STATUS_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:364: parameter 'USBUART_VAL_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:365: parameter 'USBUART_USBSTAT_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:366: parameter 'USBUART_USBPARAM_RESVAL' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] usbuart_reg_pkg.sv:388: parameter 'USBUART_PERMIT' declared inside package 'usbuart_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'entropy_src_pkg.sv'
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:13: parameter 'RNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:14: parameter 'CSRNG_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:15: parameter 'FIPS_BUS_WIDTH' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:28: parameter 'ENTROPY_SRC_HW_IF_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:29: parameter 'ENTROPY_SRC_HW_IF_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:42: parameter 'ENTROPY_SRC_RNG_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:43: parameter 'ENTROPY_SRC_RNG_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:62: parameter 'ENTROPY_SRC_XHT_REQ_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] entropy_src_pkg.sv:63: parameter 'ENTROPY_SRC_XHT_RSP_DEFAULT' declared inside package 'entropy_src_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:10: parameter 'NumAlerts' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:13: parameter 'BlockAw' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:224: parameter 'EDN_INTR_STATE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:225: parameter 'EDN_INTR_ENABLE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:226: parameter 'EDN_INTR_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:227: parameter 'EDN_ALERT_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:228: parameter 'EDN_REGWEN_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:229: parameter 'EDN_CTRL_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:230: parameter 'EDN_SUM_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:231: parameter 'EDN_BOOT_INS_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:232: parameter 'EDN_BOOT_GEN_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:233: parameter 'EDN_SW_CMD_REQ_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:234: parameter 'EDN_SW_CMD_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:235: parameter 'EDN_RESEED_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:236: parameter 'EDN_GENERATE_CMD_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:237: parameter 'EDN_MAX_NUM_REQS_BETWEEN_RESEEDS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:238: parameter 'EDN_RECOV_ALERT_STS_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:239: parameter 'EDN_ERR_CODE_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:240: parameter 'EDN_ERR_CODE_TEST_OFFSET' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:243: parameter 'EDN_INTR_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:244: parameter 'EDN_INTR_TEST_EDN_CMD_REQ_DONE_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:245: parameter 'EDN_INTR_TEST_EDN_FATAL_ERR_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:246: parameter 'EDN_ALERT_TEST_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:247: parameter 'EDN_ALERT_TEST_RECOV_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:248: parameter 'EDN_ALERT_TEST_FATAL_ALERT_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:249: parameter 'EDN_SW_CMD_REQ_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:250: parameter 'EDN_RESEED_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:251: parameter 'EDN_GENERATE_CMD_RESVAL' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_reg_pkg.sv:275: parameter 'EDN_PERMIT' declared inside package 'edn_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:12: parameter 'ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:13: parameter 'FIPS_ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:26: parameter 'EDN_REQ_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:27: parameter 'EDN_RSP_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:30: parameter 'EDN_MODE_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_alert_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_arbiter_fixed.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_arbiter_ppc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_clock_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_clock_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_gating.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_count.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_diff_decode.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_edge_detector.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_edn_req.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_esc_receiver.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_fifo_async.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_fifo_async_sram_adapter.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_fifo_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop.sv'
VERIFIC-WARNING [VERI-1199] prim_flop.sv:30: parameter 'Impl' becomes localparam in 'prim_flop' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_en.sv'
VERIFIC-WARNING [VERI-1199] prim_flop_en.sv:30: parameter 'Impl' becomes localparam in 'prim_flop_en' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop_en.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_ram_1p.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_ram_2p.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_intr_hw.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lc_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lfsr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_packer_fifo.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_prince.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subst_perm.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_1p.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_1p_adv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_1p_scr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_2p.sv'
VERIFIC-WARNING [VERI-1199] prim_ram_2p.sv:41: parameter 'Impl' becomes localparam in 'prim_ram_2p' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sync_reqack.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'rising_edge_detector.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_ram_2p_async_adv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_reg_cdc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sec_anchor_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_28_22_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_28_22_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_72_64_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_72_64_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_slicer.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sparse_fsm_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sram_arbiter.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_host.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_sram.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_assert.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_assert_multiple.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err_resp.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_fifo_async.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_fifo_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_socket_1n.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_socket_m1.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_sram_byte.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_consts_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_fs_nb_in_pe.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_fs_nb_out_pe.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_fs_nb_pe.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_fs_rx.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_fs_tx.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_fs_tx_mux.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_serial_ctrl_ep.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_serial_fifo_ep.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbdev_iomux.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbuart.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbuart_core.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbuart_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usbuart_usbif.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wav_cgc_rl.sv'

yosys> synth_rs -top usbuart -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.50

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top usbuart

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-WARNING [VERI-1927] usbuart_core.sv:485: port 'sys_hw2reg_sense_o' remains unconnected for this instance
VERIFIC-WARNING [VERI-2435] usbuart_core.sv:485: port 'sys_reg2hw_drive_i' is not connected on this instance
VERIFIC-WARNING [VERI-1927] usbuart_usbif.sv:241: port 'in_ep_xfr_end_o' remains unconnected for this instance
VERIFIC-WARNING [VERI-1927] usb_fs_nb_pe.sv:168: port 'in_ep_xact_end_o' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] usbuart.sv:8: compiling module 'usbuart'
VERIFIC-INFO [VERI-1018] usbuart_reg_top.sv:8: compiling module 'usbuart_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:10: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:10: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=6)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:49: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b0110)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b010000)'
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b01011)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b0111)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext(DW=32'b010)'
VERIFIC-INFO [VERI-1018] usbuart_core.sv:8: compiling module 'usbuart_core'
VERIFIC-WARNING [VERI-1209] usbuart_core.sv:96: expression size 4 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] usbuart_core.sv:101: expression size 4 truncated to fit in target size 3
VERIFIC-INFO [VERI-1018] prim_fifo_async.sv:8: compiling module 'prim_fifo_async(Width=32'b01000,Depth=32'b0100000)'
VERIFIC-INFO [VERI-2571] prim_fifo_async.sv:164: extracting RAM for identifier 'storage'
VERIFIC-WARNING [VERI-1209] prim_fifo_async.sv:187: expression size 7 truncated to fit in target size 6
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=6)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=6,ResetValue=6'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=6,ResetValue=6'b0)'
VERIFIC-WARNING [VERI-1209] prim_fifo_async.sv:187: expression size 7 truncated to fit in target size 6
VERIFIC-INFO [VERI-1018] usbuart_usbif.sv:7: compiling module 'usbuart_usbif'
VERIFIC-INFO [VERI-1018] usb_serial_ctrl_ep.sv:10: compiling module 'usb_serial_ctrl_ep(MaxPktSizeByte=32'b0100000)'
VERIFIC-INFO [VERI-1018] rising_edge_detector.sv:5: compiling module 'rising_edge_detector'
VERIFIC-INFO [VERI-1018] usb_serial_fifo_ep.sv:6: compiling module 'usb_serial_fifo_ep(MaxPktSizeByte=32'b0100000)'
VERIFIC-INFO [VERI-2571] usb_serial_fifo_ep.sv:66: extracting RAM for identifier 'out_pkt_buffer'
VERIFIC-INFO [VERI-2571] usb_serial_fifo_ep.sv:129: extracting RAM for identifier 'in_pkt_buffer'
VERIFIC-INFO [VERI-1018] usb_fs_nb_pe.sv:17: compiling module 'usb_fs_nb_pe(MaxPktSizeByte=32'b0100000)'
VERIFIC-INFO [VERI-1018] usb_fs_nb_in_pe.sv:14: compiling module 'usb_fs_nb_in_pe(NumInEps=5'b010,MaxInPktSizeByte=32'b0100000)'
VERIFIC-INFO [VERI-1018] usb_fs_nb_out_pe.sv:15: compiling module 'usb_fs_nb_out_pe(NumOutEps=5'b010,MaxOutPktSizeByte=32'b0100000)'
VERIFIC-WARNING [VERI-1209] usb_fs_nb_out_pe.sv:410: expression size 6 truncated to fit in target size 5
VERIFIC-INFO [VERI-1018] usb_fs_rx.sv:7: compiling module 'usb_fs_rx'
VERIFIC-WARNING [VERI-1209] usb_fs_rx.sv:228: expression size 3 truncated to fit in target size 2
VERIFIC-INFO [VERI-1018] usb_fs_tx_mux.sv:7: compiling module 'usb_fs_tx_mux'
VERIFIC-INFO [VERI-1018] usb_fs_tx.sv:7: compiling module 'usb_fs_tx'
VERIFIC-WARNING [VERI-1209] usb_fs_tx.sv:254: expression size 4 truncated to fit in target size 3
VERIFIC-WARNING [VERI-1209] usbuart_usbif.sv:260: expression size 21 truncated to fit in target size 20
VERIFIC-INFO [VERI-1018] prim_intr_hw.sv:10: compiling module 'prim_intr_hw'
VERIFIC-INFO [VERI-1018] usbdev_iomux.sv:12: compiling module 'usbdev_iomux'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=10)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=10,ResetValue=10'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=10,ResetValue=10'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=4)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=4,ResetValue=4'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=4,ResetValue=4'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_clock_mux2.sv:6: compiling module 'prim_generic_clock_mux2(NoFpgaBufG=1'b1)'
VERIFIC-WARNING [VDB-1013] usbuart_core.sv:485: input port 'sys_reg2hw_drive_i[dp_o][q]' is not connected on this instance
VERIFIC-WARNING [VDB-1053] usbuart_core.sv:485: input port 'sys_reg2hw_drive_i[d_o][q]' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] prim_alert_sender.sv:32: compiling module 'prim_alert_sender(IsFatal=0)'
VERIFIC-INFO [VERI-1018] prim_diff_decode.sv:19: compiling module 'prim_diff_decode(AsyncOn=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:13: compiling module 'prim_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop_2sync.sv:9: compiling module 'prim_generic_flop_2sync(Width=1,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
Importing module usbuart.
Importing module prim_alert_sender(IsFatal=0).
Importing module prim_buf.
Importing module prim_diff_decode(AsyncOn=1'b1).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_buf.
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Importing module prim_generic_flop(ResetValue=1'b1).
Importing module usbuart_core.
Importing module prim_fifo_async(Width=32'b01000,Depth=32'b0100000).
Importing module prim_flop_2sync(Width=6).
Importing module prim_generic_flop_2sync(Width=6,ResetValue=6'b0).
Importing module prim_generic_flop(Width=6,ResetValue=6'b0).
Importing module prim_intr_hw.
Importing module usbdev_iomux.
Importing module prim_flop_2sync(Width=10).
Importing module prim_flop_2sync(Width=4).
Importing module prim_generic_clock_mux2(NoFpgaBufG=1'b1).
Importing module prim_generic_flop_2sync(Width=10,ResetValue=10'b0).
Importing module prim_generic_flop(Width=10,ResetValue=10'b0).
Importing module prim_generic_flop_2sync(Width=4,ResetValue=4'b0).
Importing module prim_generic_flop(Width=4,ResetValue=4'b0).
Importing module usbuart_reg_top.
Importing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Importing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Importing module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
Importing module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
Importing module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
Importing module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
Importing module prim_subreg_ext(DW=32'b01).
Importing module prim_subreg_ext(DW=32'b010).
Importing module prim_subreg_ext(DW=32'b01000).
Importing module prim_subreg_ext(DW=32'b010000).
Importing module prim_subreg_ext(DW=32'b01011).
Importing module prim_subreg_ext(DW=32'b0110).
Importing module prim_subreg_ext(DW=32'b0111).
Importing module tlul_adapter_reg(RegAw=6).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.
Importing module usbuart_usbif.
Importing module usb_fs_nb_pe(MaxPktSizeByte=32'b0100000).
Importing module usb_fs_nb_in_pe(NumInEps=5'b010,MaxInPktSizeByte=32'b0100000).
Importing module usb_fs_nb_out_pe(NumOutEps=5'b010,MaxOutPktSizeByte=32'b0100000).
Importing module usb_fs_rx.
Importing module usb_fs_tx.
Importing module usb_fs_tx_mux.
Importing module usb_serial_ctrl_ep(MaxPktSizeByte=32'b0100000).
Importing module rising_edge_detector.
Importing module usb_serial_fifo_ep(MaxPktSizeByte=32'b0100000).

3.3.1. Analyzing design hierarchy..
Top module:  \usbuart
Used module:     \prim_alert_sender(IsFatal=0)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \usbuart_core
Used module:         \usbdev_iomux
Used module:             \prim_generic_clock_mux2(NoFpgaBufG=1'b1)
Used module:             \prim_flop_2sync(Width=4)
Used module:                 \prim_generic_flop_2sync(Width=4,ResetValue=4'b0)
Used module:                     \prim_generic_flop(Width=4,ResetValue=4'b0)
Used module:             \prim_flop_2sync(Width=10)
Used module:                 \prim_generic_flop_2sync(Width=10,ResetValue=10'b0)
Used module:                     \prim_generic_flop(Width=10,ResetValue=10'b0)
Used module:         \prim_intr_hw
Used module:         \usbuart_usbif
Used module:             \usb_fs_nb_pe(MaxPktSizeByte=32'b0100000)
Used module:                 \usb_fs_tx
Used module:                 \usb_fs_tx_mux
Used module:                 \usb_fs_rx
Used module:                 \usb_fs_nb_out_pe(NumOutEps=5'b010,MaxOutPktSizeByte=32'b0100000)
Used module:                 \usb_fs_nb_in_pe(NumInEps=5'b010,MaxInPktSizeByte=32'b0100000)
Used module:             \usb_serial_fifo_ep(MaxPktSizeByte=32'b0100000)
Used module:                 \rising_edge_detector
Used module:             \usb_serial_ctrl_ep(MaxPktSizeByte=32'b0100000)
Used module:         \prim_fifo_async(Width=32'b01000,Depth=32'b0100000)
Used module:             \prim_flop_2sync(Width=6)
Used module:                 \prim_generic_flop_2sync(Width=6,ResetValue=6'b0)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b0)
Used module:     \usbuart_reg_top
Used module:         \prim_subreg_ext(DW=32'b010)
Used module:         \prim_subreg_ext(DW=32'b010000)
Used module:         \prim_subreg_ext(DW=32'b0111)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg_ext(DW=32'b01011)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)
Used module:         \prim_subreg_ext(DW=32'b0110)
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)
Used module:         \prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg_ext(DW=32'b01000)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=6)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec

3.3.2. Analyzing design hierarchy..
Top module:  \usbuart
Used module:     \prim_alert_sender(IsFatal=0)
Used module:         \prim_buf
Used module:             \prim_generic_buf
Used module:         \prim_diff_decode(AsyncOn=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b1)
Used module:                     \prim_generic_flop(ResetValue=1'b1)
Used module:             \prim_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                 \prim_generic_flop_2sync(Width=1,ResetValue=1'b0)
Used module:                     \prim_generic_flop(ResetValue=1'b0)
Used module:     \usbuart_core
Used module:         \usbdev_iomux
Used module:             \prim_generic_clock_mux2(NoFpgaBufG=1'b1)
Used module:             \prim_flop_2sync(Width=4)
Used module:                 \prim_generic_flop_2sync(Width=4,ResetValue=4'b0)
Used module:                     \prim_generic_flop(Width=4,ResetValue=4'b0)
Used module:             \prim_flop_2sync(Width=10)
Used module:                 \prim_generic_flop_2sync(Width=10,ResetValue=10'b0)
Used module:                     \prim_generic_flop(Width=10,ResetValue=10'b0)
Used module:         \prim_intr_hw
Used module:         \usbuart_usbif
Used module:             \usb_fs_nb_pe(MaxPktSizeByte=32'b0100000)
Used module:                 \usb_fs_tx
Used module:                 \usb_fs_tx_mux
Used module:                 \usb_fs_rx
Used module:                 \usb_fs_nb_out_pe(NumOutEps=5'b010,MaxOutPktSizeByte=32'b0100000)
Used module:                 \usb_fs_nb_in_pe(NumInEps=5'b010,MaxInPktSizeByte=32'b0100000)
Used module:             \usb_serial_fifo_ep(MaxPktSizeByte=32'b0100000)
Used module:                 \rising_edge_detector
Used module:             \usb_serial_ctrl_ep(MaxPktSizeByte=32'b0100000)
Used module:         \prim_fifo_async(Width=32'b01000,Depth=32'b0100000)
Used module:             \prim_flop_2sync(Width=6)
Used module:                 \prim_generic_flop_2sync(Width=6,ResetValue=6'b0)
Used module:                     \prim_generic_flop(Width=6,ResetValue=6'b0)
Used module:     \usbuart_reg_top
Used module:         \prim_subreg_ext(DW=32'b010)
Used module:         \prim_subreg_ext(DW=32'b010000)
Used module:         \prim_subreg_ext(DW=32'b0111)
Used module:         \prim_subreg_ext(DW=32'b01)
Used module:         \prim_subreg_ext(DW=32'b01011)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0)
Used module:         \prim_subreg_ext(DW=32'b0110)
Used module:         \prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0)
Used module:         \prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0)
Used module:         \prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0)
Used module:         \prim_subreg_ext(DW=32'b01000)
Used module:         \prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0)
Used module:         \prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0)
Used module:         \tlul_adapter_reg(RegAw=6)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb_serial_fifo_ep(MaxPktSizeByte=32'b0100000).
<suppressed ~32 debug messages>
Optimizing module rising_edge_detector.
<suppressed ~1 debug messages>
Optimizing module usb_serial_ctrl_ep(MaxPktSizeByte=32'b0100000).
<suppressed ~18 debug messages>
Optimizing module usb_fs_tx_mux.
Optimizing module usb_fs_tx.
<suppressed ~27 debug messages>
Optimizing module usb_fs_rx.
<suppressed ~31 debug messages>
Optimizing module usb_fs_nb_out_pe(NumOutEps=5'b010,MaxOutPktSizeByte=32'b0100000).
<suppressed ~19 debug messages>
Optimizing module usb_fs_nb_in_pe(NumInEps=5'b010,MaxInPktSizeByte=32'b0100000).
<suppressed ~17 debug messages>
Optimizing module usb_fs_nb_pe(MaxPktSizeByte=32'b0100000).
Optimizing module usbuart_usbif.
<suppressed ~10 debug messages>
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=6).
<suppressed ~12 debug messages>
Optimizing module prim_subreg_ext(DW=32'b0111).
Optimizing module prim_subreg_ext(DW=32'b0110).
Optimizing module prim_subreg_ext(DW=32'b01011).
Optimizing module prim_subreg_ext(DW=32'b010000).
Optimizing module prim_subreg_ext(DW=32'b01000).
Optimizing module prim_subreg_ext(DW=32'b010).
Optimizing module prim_subreg_ext(DW=32'b01).
Optimizing module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
<suppressed ~3 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
<suppressed ~2 debug messages>
Optimizing module usbuart_reg_top.
<suppressed ~2 debug messages>
Optimizing module prim_generic_flop(Width=4,ResetValue=4'b0).
<suppressed ~2 debug messages>
Optimizing module prim_generic_flop_2sync(Width=4,ResetValue=4'b0).
Optimizing module prim_generic_flop(Width=10,ResetValue=10'b0).
<suppressed ~2 debug messages>
Optimizing module prim_generic_flop_2sync(Width=10,ResetValue=10'b0).
Optimizing module prim_generic_clock_mux2(NoFpgaBufG=1'b1).
Optimizing module prim_flop_2sync(Width=4).
Optimizing module prim_flop_2sync(Width=10).
Optimizing module usbdev_iomux.
Optimizing module prim_intr_hw.
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(Width=6,ResetValue=6'b0).
<suppressed ~2 debug messages>
Optimizing module prim_generic_flop_2sync(Width=6,ResetValue=6'b0).
Optimizing module prim_flop_2sync(Width=6).
Optimizing module prim_fifo_async(Width=32'b01000,Depth=32'b0100000).
<suppressed ~8 debug messages>
Optimizing module usbuart_core.
<suppressed ~14 debug messages>
Optimizing module prim_generic_flop(ResetValue=1'b1).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b1).
Optimizing module prim_flop_2sync(Width=1,ResetValue=1'b0).
Optimizing module prim_diff_decode(AsyncOn=1'b1).
<suppressed ~5 debug messages>
Optimizing module prim_buf.
Optimizing module prim_alert_sender(IsFatal=0).
<suppressed ~7 debug messages>
Optimizing module usbuart.

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module usb_serial_fifo_ep(MaxPktSizeByte=32'b0100000).
Deleting now unused module rising_edge_detector.
Deleting now unused module usb_serial_ctrl_ep(MaxPktSizeByte=32'b0100000).
Deleting now unused module usb_fs_tx_mux.
Deleting now unused module usb_fs_tx.
Deleting now unused module usb_fs_rx.
Deleting now unused module usb_fs_nb_out_pe(NumOutEps=5'b010,MaxOutPktSizeByte=32'b0100000).
Deleting now unused module usb_fs_nb_in_pe(NumInEps=5'b010,MaxInPktSizeByte=32'b0100000).
Deleting now unused module usb_fs_nb_pe(MaxPktSizeByte=32'b0100000).
Deleting now unused module usbuart_usbif.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=6).
Deleting now unused module prim_subreg_ext(DW=32'b0111).
Deleting now unused module prim_subreg_ext(DW=32'b0110).
Deleting now unused module prim_subreg_ext(DW=32'b01011).
Deleting now unused module prim_subreg_ext(DW=32'b010000).
Deleting now unused module prim_subreg_ext(DW=32'b01000).
Deleting now unused module prim_subreg_ext(DW=32'b010).
Deleting now unused module prim_subreg_ext(DW=32'b01).
Deleting now unused module prim_subreg(DW=8,SwAccess=SwAccessWO_prim_subreg_pkg,RESVAL=8'b0).
Deleting now unused module prim_subreg(DW=3,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=3'b0).
Deleting now unused module prim_subreg(DW=24,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=24'b0).
Deleting now unused module prim_subreg(DW=2,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=2'b0).
Deleting now unused module prim_subreg(DW=16,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=16'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessW1C_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module prim_subreg(DW=1,SwAccess=SwAccessRW_prim_subreg_pkg,RESVAL=1'b0).
Deleting now unused module usbuart_reg_top.
Deleting now unused module prim_generic_flop(Width=4,ResetValue=4'b0).
Deleting now unused module prim_generic_flop_2sync(Width=4,ResetValue=4'b0).
Deleting now unused module prim_generic_flop(Width=10,ResetValue=10'b0).
Deleting now unused module prim_generic_flop_2sync(Width=10,ResetValue=10'b0).
Deleting now unused module prim_generic_clock_mux2(NoFpgaBufG=1'b1).
Deleting now unused module prim_flop_2sync(Width=4).
Deleting now unused module prim_flop_2sync(Width=10).
Deleting now unused module usbdev_iomux.
Deleting now unused module prim_intr_hw.
Deleting now unused module prim_generic_flop(Width=6,ResetValue=6'b0).
Deleting now unused module prim_generic_flop_2sync(Width=6,ResetValue=6'b0).
Deleting now unused module prim_flop_2sync(Width=6).
Deleting now unused module prim_fifo_async(Width=32'b01000,Depth=32'b0100000).
Deleting now unused module usbuart_core.
Deleting now unused module prim_generic_flop(ResetValue=1'b1).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b1).
Deleting now unused module prim_flop_2sync(Width=1,ResetValue=1'b0).
Deleting now unused module prim_diff_decode(AsyncOn=1'b1).
Deleting now unused module prim_buf.
Deleting now unused module prim_alert_sender(IsFatal=0).
<suppressed ~126 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~89 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 295 unused cells and 5056 unused wires.
<suppressed ~1460 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module usbuart...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~58 debug messages>

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$i17$prim_subreg.sv:72$3600: \u_reg.u_fifo_ctrl_rxrst.q -> 1'0
      Replacing known input bits on port A of cell $flatten\u_reg.\u_fifo_ctrl_txrst.$verific$i17$prim_subreg.sv:72$3600: \u_reg.u_fifo_ctrl_txrst.q -> 1'0
      Replacing known input bits on port B of cell $flatten\usbuart_core.$verific$mux_25$usbuart_core.sv:97$1000: \usbuart_core.txres_cnt -> { 1'1 \usbuart_core.txres_cnt [1:0] }
      Replacing known input bits on port B of cell $flatten\usbuart_core.$verific$mux_30$usbuart_core.sv:102$1004: \usbuart_core.rxres_cnt -> { 1'1 \usbuart_core.rxres_cnt [1:0] }
      Replacing known input bits on port A of cell $flatten\usbuart_core.\usbuart_rxfifo.$verific$mux_38$prim_fifo_async.sv:183$1487: $flatten\usbuart_core.\usbuart_rxfifo.$verific$n32$1400 -> { 1'0 $flatten\usbuart_core.\usbuart_rxfifo.$verific$n32$1400 [4:0] }
      Replacing known input bits on port A of cell $flatten\usbuart_core.\usbuart_rxfifo.$verific$mux_97$prim_fifo_async.sv:183$1533: $flatten\usbuart_core.\usbuart_rxfifo.$verific$n279$1424 -> { 1'0 $flatten\usbuart_core.\usbuart_rxfifo.$verific$n279$1424 [4:0] }
      Replacing known input bits on port A of cell $flatten\usbuart_core.\usbuart_txfifo.$verific$mux_38$prim_fifo_async.sv:183$1487: $flatten\usbuart_core.\usbuart_txfifo.$verific$n32$1400 -> { 1'0 $flatten\usbuart_core.\usbuart_txfifo.$verific$n32$1400 [4:0] }
      Replacing known input bits on port A of cell $flatten\usbuart_core.\usbuart_txfifo.$verific$mux_97$prim_fifo_async.sv:183$1533: $flatten\usbuart_core.\usbuart_txfifo.$verific$n279$1424 -> { 1'0 $flatten\usbuart_core.\usbuart_txfifo.$verific$n279$1424 [4:0] }
      Replacing known input bits on port A of cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$i152$usb_serial_ctrl_ep.sv:310$6959: \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.save_dev_addr -> 1'0
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$mux_93$usb_fs_tx.sv:231$6529.
    dead port 1/2 on $mux $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$mux_94$usb_fs_tx.sv:231$6530.
    dead port 1/2 on $mux $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$mux_95$usb_fs_tx.sv:231$6531.
Removed 3 multiplexer ports.
<suppressed ~186 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_315$usbuart_reg_top.sv:1700$3576: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1320$2009 $flatten\u_reg.$verific$n1329$2018 $flatten\u_reg.$verific$n1332$2021 $flatten\u_reg.$verific$n1335$2024 $flatten\u_reg.$verific$n1341$2030 $flatten\u_reg.$verific$n1344$2033 $flatten\u_reg.$verific$n1347$2036 $flatten\u_reg.$verific$n1353$2042 $flatten\u_reg.$verific$n1356$2045 $flatten\u_reg.$verific$n1359$2048 $flatten\u_reg.$verific$n1361$2050 }
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_116$usb_serial_ctrl_ep.sv:273$6936: $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n539$6709
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_117$usb_serial_ctrl_ep.sv:273$6937: { $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n538$6708 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n539$6709 }
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_135$usb_serial_ctrl_ep.sv:299$6947: $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n619$6713
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_136$usb_serial_ctrl_ep.sv:299$6948: $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n619$6713
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_138$usb_serial_ctrl_ep.sv:299$6950: { $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n620$6714 $auto$opt_reduce.cc:134:opt_pmux$7401 }
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_232$usb_serial_ctrl_ep.sv:382$7042: { $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n919$6726 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n927$6734 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n928$6735 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n929$6736 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n944$6751 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n945$6752 $auto$opt_reduce.cc:134:opt_pmux$7417 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n951$6758 $auto$opt_reduce.cc:134:opt_pmux$7415 $auto$opt_reduce.cc:134:opt_pmux$7413 $auto$opt_reduce.cc:134:opt_pmux$7411 $auto$opt_reduce.cc:134:opt_pmux$7409 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n964$6771 $auto$opt_reduce.cc:134:opt_pmux$7407 $auto$opt_reduce.cc:134:opt_pmux$7405 $auto$opt_reduce.cc:134:opt_pmux$7403 }
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$select_223$usb_serial_fifo_ep.sv:401$7376: { $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n852$7130 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n854$7132 $auto$opt_reduce.cc:134:opt_pmux$7419 }
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$select_224$usb_serial_fifo_ep.sv:401$7377: $auto$opt_reduce.cc:134:opt_pmux$7421
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$select_225$usb_serial_fifo_ep.sv:401$7378: { $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n853$7131 $auto$opt_reduce.cc:134:opt_pmux$7423 }
    New ctrl vector for $pmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$select_226$usb_serial_fifo_ep.sv:401$7379: { $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n855$7133 $auto$opt_reduce.cc:134:opt_pmux$7425 }
  Optimizing cells in module \usbuart.
Performed a total of 16 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.\detect_in_data_transfer_done.$verific$last_q_reg$rising_edge_detector.sv:19$7053 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$tx_read_reg$usb_serial_fifo_ep.sv:167$7279 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$send_length_reg$usb_serial_fifo_ep.sv:407$7395 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$rx_write_reg$usb_serial_fifo_ep.sv:113$7249 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$rx_fifo_wdata_reg$usb_serial_fifo_ep.sv:113$7250 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$return_data_reg$usb_serial_fifo_ep.sv:407$7396 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$pb_wptr_reg$usb_serial_fifo_ep.sv:180$7288 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$parity_o_reg$usb_serial_fifo_ep.sv:407$7393 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$ob_unload_reg$usb_serial_fifo_ep.sv:95$7236 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$ob_rptr_reg$usb_serial_fifo_ep.sv:113$7248 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$ob_max_used_reg$usb_serial_fifo_ep.sv:84$7225 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$897 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$level_q_reg$prim_diff_decode.sv:172$853 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$ctrl_xfr_state_reg$usb_serial_fifo_ep.sv:333$7341 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$bytes_sent_reg$usb_serial_fifo_ep.sv:407$7394 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$baud_o_reg$usb_serial_fifo_ep.sv:407$7392 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.\detect_in_data_transfer_done.$verific$last_q_reg$rising_edge_detector.sv:19$7053 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$save_dev_addr_reg$usb_serial_ctrl_ep.sv:312$6979 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$rom_length_reg$usb_serial_ctrl_ep.sv:312$6985 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$rom_addr_reg$usb_serial_ctrl_ep.sv:312$6983 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$new_dev_addr_reg$usb_serial_ctrl_ep.sv:312$6987 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$in_ep_stall_o_reg$usb_serial_ctrl_ep.sv:312$6980 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$dev_addr_int_reg$usb_serial_ctrl_ep.sv:312$6978 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$ctrl_xfr_state_reg$usb_serial_ctrl_ep.sv:211$6899 ($aldff) from module usbuart.
Removing never-active async load on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$bytes_sent_reg$usb_serial_ctrl_ep.sv:312$6981 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$usb_se0_q_reg$usb_fs_tx.sv:430$6664 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$usb_d_q_reg$usb_fs_tx.sv:430$6663 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$tx_data_get_q_reg$usb_fs_tx.sv:331$6612 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$state_q_reg$usb_fs_tx.sv:331$6607 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$se0_shift_reg_q_reg$usb_fs_tx.sv:331$6611 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$pid_q_reg$usb_fs_tx.sv:93$6477 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$out_state_q_reg$usb_fs_tx.sv:430$6665 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$oe_shift_reg_q_reg$usb_fs_tx.sv:331$6610 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$oe_q_reg$usb_fs_tx.sv:430$6662 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$897 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$dp_eop_q_reg$usb_fs_tx.sv:430$6661 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$data_shift_reg_q_reg$usb_fs_tx.sv:331$6609 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$data_payload_q_reg$usb_fs_tx.sv:331$6608 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$crc16_q_reg$usb_fs_tx.sv:331$6616 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$byte_strobe_q_reg$usb_fs_tx.sv:331$6613 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bitstuff_q_reg$usb_fs_tx.sv:126$6495 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bitstuff_q4_reg$usb_fs_tx.sv:126$6498 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bitstuff_q3_reg$usb_fs_tx.sv:126$6497 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bitstuff_q2_reg$usb_fs_tx.sv:126$6496 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bit_history_q_reg$usb_fs_tx.sv:331$6614 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bit_count_q_reg$usb_fs_tx.sv:331$6615 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$token_payload_q_reg$usb_fs_rx.sv:583$6287 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$rx_data_buffer_q_reg$usb_fs_rx.sv:583$6291 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$packet_valid_q_reg$usb_fs_rx.sv:299$6141 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$line_state_qq_reg$usb_fs_rx.sv:128$6079 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$line_state_q_reg$usb_fs_rx.sv:128$6078 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$line_history_q_reg$usb_fs_rx.sv:299$6142 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$full_pid_q_reg$usb_fs_rx.sv:583$6284 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$frame_num_q_reg$usb_fs_rx.sv:583$6290 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$endp_q_reg$usb_fs_rx.sv:583$6289 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$diff_state_q_reg$usb_fs_rx.sv:128$6080 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$crc5_q_reg$usb_fs_rx.sv:583$6286 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$crc16_q_reg$usb_fs_rx.sv:583$6285 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$bitstuff_history_q_reg$usb_fs_rx.sv:362$6164 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$bitstuff_error_q_reg$usb_fs_rx.sv:389$6176 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$bit_phase_q_reg$usb_fs_rx.sv:239$6113 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$addr_q_reg$usb_fs_rx.sv:583$6288 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$timeout_cntdown_q_reg$usb_fs_nb_out_pe.sv:322$5832 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_xact_state_reg$usb_fs_nb_out_pe.sv:330$5836 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_setup_o_reg$usb_fs_nb_out_pe.sv:184$5787 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_put_addr_o_reg$usb_fs_nb_out_pe.sv:412$5883 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_data_put_o_reg$usb_fs_nb_out_pe.sv:377$5861 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_data_o_reg$usb_fs_nb_out_pe.sv:194$5791 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_current_o_reg$usb_fs_nb_out_pe.sv:368$5856 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$nak_out_transaction_reg$usb_fs_nb_out_pe.sv:393$5869 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$850 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$880 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$880 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$880 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_p.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg[0]$prim_generic_flop.sv:23$880 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$851 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$852 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$897 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$data_toggle_q_reg$usb_fs_nb_out_pe.sv:352$5848 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$current_xact_setup_q_reg$usb_fs_nb_out_pe.sv:368$5857 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$tx_data_o_reg$usb_fs_nb_in_pe.sv:274$5577 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$timeout_cntdown_q_reg$usb_fs_nb_in_pe.sv:266$5574 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$in_xact_state_reg$usb_fs_nb_in_pe.sv:288$5584 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$in_ep_get_addr_o_reg$usb_fs_nb_in_pe.sv:300$5593 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$in_ep_data_get_o_reg$usb_fs_nb_in_pe.sv:348$5618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$in_ep_current_o_reg$usb_fs_nb_in_pe.sv:314$5600 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$data_toggle_q_reg$usb_fs_nb_in_pe.sv:336$5615 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.$verific$status_host_timeout_o_reg$usbuart_usbif.sv:262$5141 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.$verific$status_frame_o_reg$usbuart_usbif.sv:262$5142 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.$verific$ns_cnt_reg$usbuart_usbif.sv:54$4878 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_usbif.$verific$host_presence_timer_reg$usbuart_usbif.sv:262$5140 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_wptr_reg$prim_fifo_async.sv:64$1480 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_wptr_gray_reg$prim_fifo_async.sv:76$1494 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_reg$prim_fifo_async.sv:99$1527 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_gray_reg$prim_fifo_async.sv:111$1539 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_wptr_reg$prim_fifo_async.sv:64$1480 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_wptr_gray_reg$prim_fifo_async.sv:76$1494 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_reg$prim_fifo_async.sv:99$1527 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_gray_reg$prim_fifo_async.sv:111$1539 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_tx_watermark.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_tx_overflow.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_rx_watermark.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_rx_timeout.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_rx_parity_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_rx_overflow.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_rx_frame_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\intr_hw_rx_break_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_usb.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1879 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_usb.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1879 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ack.\gen_async.i_sync_n.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg[0]$prim_generic_flop.sv:23$897 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.$verific$txres_cnt_reg$usbuart_core.sv:103$1006 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.$verific$rxres_cnt_reg$usbuart_core.sv:103$1007 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.$verific$rx_fifo_depth_prev_reg$usbuart_core.sv:319$1234 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\usbuart_core.$verific$nco_sum_reg$usbuart_core.sv:156$1040 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$ping_set_q_reg$prim_alert_sender.sv:235$764 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$state_q_reg$prim_alert_sender.sv:235$760 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_wdata.$verific$qe_reg$prim_subreg.sv:67$3709 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_set_q_reg$prim_alert_sender.sv:235$763 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.state_q_reg$prim_diff_decode.sv:172$850 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_pq_reg$prim_diff_decode.sv:172$851 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$3829 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$3828 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$3827 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$3838 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$3817 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$3839 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_tx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_state_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_tx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.\i_decode_ping.$verific$gen_async.diff_nq_reg$prim_diff_decode.sv:172$852 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3656 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_nq_reg$prim_alert_sender.sv:235$762 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$qe_reg$prim_subreg.sv:67$3598 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3694 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\gen_alert_tx[0].u_prim_alert_sender.$verific$alert_pq_reg$prim_alert_sender.sv:235$761 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3656 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($aldff) from module usbuart.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$usbuart_reg_top.sv:61$2187 ($aldff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($adff) from module usbuart.
Setting constant 0-bit at position 7 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_usb.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1879 ($adff) from module usbuart.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 30 unused cells and 128 unused wires.
<suppressed ~56 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~181 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_tx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3656 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3694 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3656 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($adff) from module usbuart (removing D path).
Handling D = Q on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_llpbk.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_ctrl_nco.$verific$q_reg$prim_subreg.sv:72$3637 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_nf.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_parity_en.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_parity_odd.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_rx.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3656 ($dlatch) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_ctrl_rxblvl.$verific$q_reg$prim_subreg.sv:72$3656 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_slpbk.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ctrl_tx.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3694 ($dlatch) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3694 ($dlatch) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_fifo_ctrl_rxilvl.$verific$q_reg$prim_subreg.sv:72$3694 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3656 ($dlatch) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_fifo_ctrl_txilvl.$verific$q_reg$prim_subreg.sv:72$3656 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_fifo_ctrl_rxrst.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_tx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_intr_enable_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ovrd_txen.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_ovrd_txval.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_timeout_ctrl_en.$verific$q_reg[0]$prim_subreg.sv:72$3601 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_timeout_ctrl_val.$verific$q_reg$prim_subreg.sv:72$3675 ($dlatch) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_wdata.$verific$q_reg$prim_subreg.sv:72$3713 ($dlatch) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($adff) from module usbuart.
Setting constant 0-bit at position 7 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_sys.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1850 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\i_usbdev_iomux.\cdc_io_to_usb.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1879 ($adff) from module usbuart.

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 2 unused cells and 0 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~32 debug messages>

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\usbuart_core.$verific$mux_131$usbuart_core.sv:308$1220.
    dead port 2/2 on $mux $flatten\usbuart_core.$verific$mux_131$usbuart_core.sv:308$1220.
    dead port 1/2 on $mux $flatten\usbuart_core.$verific$mux_132$usbuart_core.sv:308$1221.
    dead port 2/2 on $mux $flatten\usbuart_core.$verific$mux_132$usbuart_core.sv:308$1221.
    dead port 1/2 on $mux $flatten\usbuart_core.$verific$mux_133$usbuart_core.sv:308$1222.
    dead port 2/2 on $mux $flatten\usbuart_core.$verific$mux_133$usbuart_core.sv:308$1222.
    dead port 1/2 on $mux $flatten\usbuart_core.$verific$mux_134$usbuart_core.sv:308$1223.
    dead port 2/2 on $mux $flatten\usbuart_core.$verific$mux_134$usbuart_core.sv:308$1223.
Removed 8 multiplexer ports.
<suppressed ~175 debug messages>

yosys> opt_reduce

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_315$usbuart_reg_top.sv:1700$3576: { \u_reg.addr_hit [0] $flatten\u_reg.$verific$n1332$2021 $flatten\u_reg.$verific$n1335$2024 $flatten\u_reg.$verific$n1344$2033 $flatten\u_reg.$verific$n1356$2045 $flatten\u_reg.$verific$n1359$2048 $flatten\u_reg.$verific$n1361$2050 }
  Optimizing cells in module \usbuart.
Performed a total of 3 changes.

yosys> opt_merge

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_dff -nodffe -nosdff

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\usbuart_core.$verific$lb_data_move_reg$usbuart_core.sv:221$1113 ($dff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 6 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 7 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 8 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 9 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 10 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 11 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 12 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 13 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 14 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 15 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 16 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 17 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 18 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 19 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 20 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 21 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 22 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 23 on $flatten\usbuart_core.$verific$rx_timeout_count_reg$usbuart_core.sv:319$1233 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\intr_hw_rx_break_err.$verific$intr_o_reg[0]$prim_intr_hw.sv:46$1671 ($adff) from module usbuart.

yosys> opt_clean

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 47 unused cells and 77 unused wires.
<suppressed ~62 debug messages>

yosys> opt_expr

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~172 debug messages>

yosys> opt_reduce

3.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.11.30. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking usbuart.usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.diff_state_q as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking usbuart.usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.line_state_q as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking usbuart.usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_length as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking usbuart.usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.send_length as FSM state register:
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~172 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$send_length_reg$usb_serial_fifo_ep.sv:407$7395 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n874$7192, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.send_length).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$rx_fifo_wdata_reg$usb_serial_fifo_ep.sv:113$7250 ($dff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n105$7143, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$return_data_reg$usb_serial_fifo_ep.sv:407$7396 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n857$7191, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.return_data).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[0]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[1]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[2]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[3]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[4]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[5]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[6]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$raw_setup_data_reg$usb_serial_fifo_ep.sv:353$7362 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.raw_setup_data[7]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$pb_wptr_reg$usb_serial_fifo_ep.sv:180$7288 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n273$7155, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.pb_wptr).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$parity_o_reg$usb_serial_fifo_ep.sv:407$7393 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n877$7193, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.parity_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$ob_unload_reg$usb_serial_fifo_ep.sv:95$7236 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n74$7077, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.ob_unload).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$ob_rptr_reg$usb_serial_fifo_ep.sv:113$7248 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n144$7148, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.ob_rptr).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$ob_max_used_reg$usb_serial_fifo_ep.sv:84$7225 ($dff) from module usbuart (D = { $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n38$7069 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n27$7137 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n25$7066 }, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.ob_max_used).
Adding SRST signal on $auto$ff.cc:262:slice$7477 ($dffe) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_put_addr_o [4:1], Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.ob_max_used [4:1], rval = 4'0000).
Adding SRST signal on $auto$ff.cc:262:slice$7477 ($dffe) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_put_addr_o [0], Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.ob_max_used [0], rval = 1'1).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$bytes_sent_reg$usb_serial_fifo_ep.sv:407$7394 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n916$7199, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.bytes_sent).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$baud_o_reg$usb_serial_fifo_ep.sv:407$7392 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n880$7194, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.baud_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$save_dev_addr_reg$usb_serial_ctrl_ep.sv:312$6979 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n826$6725, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.save_dev_addr).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$rom_length_reg$usb_serial_ctrl_ep.sv:312$6985 ($dff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n818$6833, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_length).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$rom_addr_reg$usb_serial_ctrl_ep.sv:312$6983 ($dff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n810$6832, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[0]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[1]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[3]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[4]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[5]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[6]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$raw_setup_data_reg$usb_serial_ctrl_ep.sv:232$6922 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[7]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$new_dev_addr_reg$usb_serial_ctrl_ep.sv:312$6987 ($dff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n642$6816, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$in_ep_stall_o_reg$usb_serial_ctrl_ep.sv:312$6980 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n624$6717, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.in_ep_stall_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$dev_addr_int_reg$usb_serial_ctrl_ep.sv:312$6978 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.dev_addr_int).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$bytes_sent_reg$usb_serial_ctrl_ep.sv:312$6981 ($dff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n800$6831, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent).
Adding SRST signal on $auto$ff.cc:262:slice$7547 ($dffe) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n774$6828, Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent, rval = 8'00000000).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$pid_q_reg$usb_fs_tx.sv:93$6477 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pid_i, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pid_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$oe_q_reg$usb_fs_tx.sv:430$6662 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.oe_shift_reg_q [0], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.oe_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$crc16_q_reg$usb_fs_tx.sv:331$6616 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.crc16_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.crc16_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bit_history_q_reg$usb_fs_tx.sv:331$6614 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.bit_history_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.bit_history_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$bit_count_q_reg$usb_fs_tx.sv:331$6615 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.bit_count_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.bit_count_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$token_payload_q_reg$usb_fs_rx.sv:583$6287 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.token_payload_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.token_payload_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$rx_data_buffer_q_reg$usb_fs_rx.sv:583$6291 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.rx_data_buffer_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.rx_data_buffer_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$line_state_q_reg$usb_fs_rx.sv:128$6078 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.line_state_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.line_state_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$line_history_q_reg$usb_fs_rx.sv:299$6142 ($adff) from module usbuart (D = { \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.line_history_q [9:0] \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.line_state_rx [1:0] }, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.line_history_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$full_pid_q_reg$usb_fs_rx.sv:583$6284 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.full_pid_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.full_pid_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$frame_num_q_reg$usb_fs_rx.sv:583$6290 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.token_payload_q [11:1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.frame_num_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$endp_q_reg$usb_fs_rx.sv:583$6289 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.token_payload_q [11:8], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.endp_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$diff_state_q_reg$usb_fs_rx.sv:128$6080 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.diff_state_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.diff_state_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$crc5_q_reg$usb_fs_rx.sv:583$6286 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.crc5_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.crc5_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$crc16_q_reg$usb_fs_rx.sv:583$6285 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.crc16_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.crc16_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$bitstuff_history_q_reg$usb_fs_rx.sv:362$6164 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.bitstuff_history_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.bitstuff_history_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$bitstuff_error_q_reg$usb_fs_rx.sv:389$6176 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.bitstuff_error_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.bitstuff_error_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$addr_q_reg$usb_fs_rx.sv:583$6288 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.token_payload_q [7:1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.addr_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_setup_o_reg$usb_fs_nb_out_pe.sv:184$5787 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$n84$5697 [1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_setup_o [1]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_setup_o_reg$usb_fs_nb_out_pe.sv:184$5787 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$n84$5697 [0], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_setup_o [0]).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_put_addr_o_reg$usb_fs_nb_out_pe.sv:412$5883 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$n420$5731, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_put_addr_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_data_o_reg$usb_fs_nb_out_pe.sv:194$5791 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.rx_data_buffer_q [8:1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_ep_current_o_reg$usb_fs_nb_out_pe.sv:368$5856 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_ep_current_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_current_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$nak_out_transaction_reg$usb_fs_nb_out_pe.sv:393$5869 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$n376$5689, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.nak_out_transaction).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$current_xact_setup_q_reg$usb_fs_nb_out_pe.sv:368$5857 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.setup_token_received, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.current_xact_setup_q).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$in_ep_get_addr_o_reg$usb_fs_nb_in_pe.sv:300$5593 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$n297$5483, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_ep_get_addr_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$in_ep_current_o_reg$usb_fs_nb_in_pe.sv:314$5600 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_ep_current_d, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_ep_current_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.$verific$status_host_timeout_o_reg$usbuart_usbif.sv:262$5141 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.$verific$n404$4854, Q = \usbuart_core.usbuart_usbif.status_host_timeout_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.$verific$status_frame_o_reg$usbuart_usbif.sv:262$5142 ($adff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.frame_num_q, Q = \usbuart_core.usbuart_usbif.status_frame_o).
Adding EN signal on $flatten\usbuart_core.\usbuart_usbif.$verific$host_presence_timer_reg$usbuart_usbif.sv:262$5140 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.$verific$n383$4868, Q = \usbuart_core.usbuart_usbif.host_presence_timer).
Adding EN signal on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_wptr_reg$prim_fifo_async.sv:64$1480 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_txfifo.$verific$n46$1402, Q = \usbuart_core.usbuart_txfifo.fifo_wptr).
Adding EN signal on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_wptr_gray_reg$prim_fifo_async.sv:76$1494 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_txfifo.$verific$n178$1417, Q = \usbuart_core.usbuart_txfifo.fifo_wptr_gray).
Adding EN signal on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_reg$prim_fifo_async.sv:99$1527 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_txfifo.$verific$n293$1426, Q = \usbuart_core.usbuart_txfifo.fifo_rptr).
Adding EN signal on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_gray_reg$prim_fifo_async.sv:111$1539 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_txfifo.$verific$n425$1441, Q = \usbuart_core.usbuart_txfifo.fifo_rptr_gray).
Adding EN signal on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_wptr_reg$prim_fifo_async.sv:64$1480 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_rxfifo.$verific$n46$1402, Q = \usbuart_core.usbuart_rxfifo.fifo_wptr).
Adding EN signal on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_wptr_gray_reg$prim_fifo_async.sv:76$1494 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_rxfifo.$verific$n178$1417, Q = \usbuart_core.usbuart_rxfifo.fifo_wptr_gray).
Adding EN signal on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_reg$prim_fifo_async.sv:99$1527 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_rxfifo.$verific$n293$1426, Q = \usbuart_core.usbuart_rxfifo.fifo_rptr).
Adding EN signal on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_gray_reg$prim_fifo_async.sv:111$1539 ($adff) from module usbuart (D = $flatten\usbuart_core.\usbuart_rxfifo.$verific$n425$1441, Q = \usbuart_core.usbuart_rxfifo.fifo_rptr_gray).
Adding EN signal on $flatten\usbuart_core.$verific$txres_cnt_reg$usbuart_core.sv:103$1006 ($adff) from module usbuart (D = $flatten\usbuart_core.$verific$n38$955 [1:0], Q = \usbuart_core.txres_cnt [1:0]).
Adding EN signal on $flatten\usbuart_core.$verific$rxres_cnt_reg$usbuart_core.sv:103$1007 ($adff) from module usbuart (D = $flatten\usbuart_core.$verific$n59$959 [1:0], Q = \usbuart_core.rxres_cnt [1:0]).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$3829 ($adff) from module usbuart (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$3828 ($adff) from module usbuart (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$3827 ($adff) from module usbuart (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$3838 ($adff) from module usbuart (D = $flatten\u_reg.\u_reg_if.$verific$n183$3787, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$3817 ($adff) from module usbuart (D = $flatten\u_reg.\u_reg_if.$verific$n74$3759, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$3839 ($adff) from module usbuart (D = $flatten\u_reg.\u_reg_if.$verific$n181$3761, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.\u_intr_state_tx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.tx_watermark.d, Q = \u_reg.u_intr_state_tx_watermark.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_tx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.tx_overflow.d, Q = \u_reg.u_intr_state_tx_overflow.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_watermark.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.rx_watermark.d, Q = \u_reg.u_intr_state_rx_watermark.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_timeout.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.rx_timeout.d, Q = \u_reg.u_intr_state_rx_timeout.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_parity_err.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.rx_parity_err.d, Q = \u_reg.u_intr_state_rx_parity_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_overflow.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.rx_overflow.d, Q = \u_reg.u_intr_state_rx_overflow.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_frame_err.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.rx_frame_err.d, Q = \u_reg.u_intr_state_rx_frame_err.q).
Adding EN signal on $flatten\u_reg.\u_intr_state_rx_break_err.$verific$q_reg[0]$prim_subreg.sv:72$3618 ($adff) from module usbuart (D = \u_reg.hw2reg.intr_state.rx_break_err.d, Q = \u_reg.u_intr_state_rx_break_err.q).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$usbuart_reg_top.sv:61$2187 ($adff) from module usbuart (D = 1'1, Q = \u_reg.intg_err_q).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7657 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7657 ($adffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7652 ($adffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7652 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7652 ($adffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7652 ($adffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7652 ($adffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$7652 ($adffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7650 ($adffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7650 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7650 ($adffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7650 ($adffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7650 ($adffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$7650 ($adffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7648 ($adffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7648 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7648 ($adffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7648 ($adffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7648 ($adffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$7648 ($adffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7646 ($adffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7646 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7646 ($adffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7646 ($adffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7646 ($adffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$7646 ($adffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7633 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7633 ($adffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7633 ($adffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7625 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$7625 ($adffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7625 ($adffe) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$out_xact_state_reg$usb_fs_nb_out_pe.sv:330$5836 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$timeout_cntdown_q_reg$usb_fs_nb_out_pe.sv:322$5832 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$timeout_cntdown_q_reg$usb_fs_nb_out_pe.sv:322$5832 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$timeout_cntdown_q_reg$usb_fs_nb_out_pe.sv:322$5832 ($adff) from module usbuart.
Setting constant 1-bit at position 6 on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$timeout_cntdown_q_reg$usb_fs_nb_out_pe.sv:322$5832 ($adff) from module usbuart.
Setting constant 0-bit at position 7 on $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$se0_shift_reg_q_reg$usb_fs_tx.sv:331$6611 ($adff) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$7552 ($sdffce) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7430 ($adffe) from module usbuart.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 106 unused cells and 124 unused wires.
<suppressed ~121 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~33 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~131 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
    New ctrl vector for $bmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$Mux_125$usb_fs_nb_out_pe.sv:310$5822: \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_state [1:0]
    New ctrl vector for $bmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$Mux_126$usb_fs_nb_out_pe.sv:310$5823: \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_state [1:0]
    New ctrl vector for $bmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$Mux_128$usb_fs_nb_out_pe.sv:310$5825: \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_state [1:0]
    New ctrl vector for $bmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$Mux_131$usb_fs_nb_out_pe.sv:310$5828: \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_state [1:0]
    New ctrl vector for $bmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$mux_124$usb_fs_nb_out_pe.sv:310$5821: \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_state [1:0]
    New ctrl vector for $bmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$mux_129$usb_fs_nb_out_pe.sv:310$5826: \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_state [1:0]
    New ctrl vector for $bmux cell $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$mux_130$usb_fs_nb_out_pe.sv:310$5827: \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_state [1:0]
  Optimizing cells in module \usbuart.
Performed a total of 7 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$7679 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_1.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$7682 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_rxfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_txfifo.\sync_rptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_txfifo.\sync_wptr.\gen_generic.u_impl_generic.\u_sync_2.$verific$q_o_reg$prim_generic_flop.sv:23$1651 ($adff) from module usbuart.

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~33 debug messages>

3.13.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7683 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_rxfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 0 on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 1 on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 2 on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 3 on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 4 on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.
Setting constant 0-bit at position 5 on $flatten\usbuart_core.\usbuart_txfifo.$verific$fifo_rptr_sync_reg$prim_fifo_async.sv:124$1565 ($adff) from module usbuart.

yosys> opt_clean

3.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 32 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~5 debug messages>

3.13.30. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.13.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$7684 ($adff) from module usbuart.

yosys> opt_clean

3.13.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.13.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.13.37. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.13.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.13.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.41. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.13.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.13.44. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from port B of cell usbuart.$auto$opt_dff.cc:195:make_patterns_logic$7493 ($ne).
Removed top 2 bits (of 3) from port B of cell usbuart.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:56$3797 ($eq).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\u_reg.\u_reg_if.$verific$equal_76$prim_mubi_pkg.sv:27$3850 ($eq).
Removed top 31 bits (of 32) from port A of cell usbuart.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$4465 ($shl).
Removed top 28 bits (of 32) from port Y of cell usbuart.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$4465 ($shl).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\u_reg.$verific$equal_33$usbuart_reg_top.sv:1456$3391 ($eq).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\u_reg.$verific$equal_31$usbuart_reg_top.sv:1455$3390 ($eq).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\u_reg.$verific$equal_29$usbuart_reg_top.sv:1454$3389 ($eq).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\u_reg.$verific$equal_27$usbuart_reg_top.sv:1453$3388 ($eq).
Removed top 2 bits (of 4) from port B of cell usbuart.$flatten\u_reg.$verific$equal_25$usbuart_reg_top.sv:1452$3387 ($eq).
Removed top 2 bits (of 4) from port B of cell usbuart.$flatten\u_reg.$verific$equal_23$usbuart_reg_top.sv:1451$3386 ($eq).
Removed top 3 bits (of 4) from port B of cell usbuart.$flatten\u_reg.$verific$equal_21$usbuart_reg_top.sv:1450$3385 ($eq).
Removed top 1 bits (of 8) from FF cell usbuart.$auto$ff.cc:262:slice$7516 ($dffe).
Removed top 5 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.$verific$add_10$usbuart_usbif.sv:53$4876 ($add).
Removed top 19 bits (of 20) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.$verific$add_67$usbuart_usbif.sv:260$5132 ($add).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_227$usb_serial_ctrl_ep.sv:374$7035 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_226$usb_serial_ctrl_ep.sv:373$7034 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_225$usb_serial_ctrl_ep.sv:372$7033 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_224$usb_serial_ctrl_ep.sv:371$7032 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_221$usb_serial_ctrl_ep.sv:366$7029 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_220$usb_serial_ctrl_ep.sv:365$7028 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_219$usb_serial_ctrl_ep.sv:364$7027 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_218$usb_serial_ctrl_ep.sv:363$7026 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_217$usb_serial_ctrl_ep.sv:362$7025 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_215$usb_serial_ctrl_ep.sv:358$7023 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_214$usb_serial_ctrl_ep.sv:357$7022 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_213$usb_serial_ctrl_ep.sv:356$7021 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_212$usb_serial_ctrl_ep.sv:355$7020 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_209$usb_serial_ctrl_ep.sv:352$7017 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_208$usb_serial_ctrl_ep.sv:351$7016 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_207$usb_serial_ctrl_ep.sv:348$7015 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_206$usb_serial_ctrl_ep.sv:347$7014 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_204$usb_serial_ctrl_ep.sv:345$7012 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_203$usb_serial_ctrl_ep.sv:344$7011 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_201$usb_serial_ctrl_ep.sv:342$7009 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_200$usb_serial_ctrl_ep.sv:341$7008 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_199$usb_serial_ctrl_ep.sv:340$7007 ($eq).
Removed top 2 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_198$usb_serial_ctrl_ep.sv:337$7006 ($eq).
Removed top 3 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_194$usb_serial_ctrl_ep.sv:333$7002 ($eq).
Removed top 3 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_192$usb_serial_ctrl_ep.sv:330$7000 ($eq).
Removed top 3 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_191$usb_serial_ctrl_ep.sv:329$6999 ($eq).
Removed top 3 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_190$usb_serial_ctrl_ep.sv:328$6998 ($eq).
Removed top 3 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_189$usb_serial_ctrl_ep.sv:327$6997 ($eq).
Removed top 4 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_188$usb_serial_ctrl_ep.sv:325$6996 ($eq).
Removed top 5 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_184$usb_serial_ctrl_ep.sv:321$6992 ($eq).
Removed top 6 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_182$usb_serial_ctrl_ep.sv:319$6990 ($eq).
Removed top 1 bits (of 8) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$mux_159$usb_serial_ctrl_ep.sv:311$6967 ($mux).
Removed top 1 bits (of 8) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$mux_153$usb_serial_ctrl_ep.sv:311$6961 ($mux).
Removed top 1 bits (of 8) from port A of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_144$usb_serial_ctrl_ep.sv:302$6955 ($add).
Removed top 7 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_144$usb_serial_ctrl_ep.sv:302$6955 ($add).
Removed top 1 bits (of 8) from port Y of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_144$usb_serial_ctrl_ep.sv:302$6955 ($add).
Removed top 6 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_142$usb_serial_ctrl_ep.sv:301$6953 ($add).
Removed top 4 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_131$usb_serial_ctrl_ep.sv:288$6942 ($eq).
Removed top 5 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_130$usb_serial_ctrl_ep.sv:276$6941 ($eq).
Removed top 5 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_129$usb_serial_ctrl_ep.sv:248$6940 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_228$usb_serial_ctrl_ep.sv:375$7036 ($eq).
Removed top 1 bits (of 7) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_117$usb_serial_ctrl_ep.sv:273$6937 ($pmux).
Removed top 2 bits (of 7) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$select_116$usb_serial_ctrl_ep.sv:273$6936 ($mux).
Removed top 5 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_113$usb_serial_ctrl_ep.sv:262$6931 ($eq).
Removed top 6 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_112$usb_serial_ctrl_ep.sv:256$6930 ($eq).
Removed top 7 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_111$usb_serial_ctrl_ep.sv:250$6929 ($eq).
Removed top 1 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_230$usb_serial_ctrl_ep.sv:377$7038 ($eq).
Removed top 7 bits (of 8) from port A of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$Decoder_80$usb_serial_ctrl_ep.sv:230$6912 ($shl).
Removed top 1 bits (of 3) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$mux_48$usb_serial_ctrl_ep.sv:169$6890 ($mux).
Removed top 1 bits (of 3) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$equal_31$usb_serial_ctrl_ep.sv:117$6875 ($eq).
Removed top 1 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$LessThan_24$usb_serial_ctrl_ep.sv:105$6864 ($le).
Removed top 1 bits (of 8) from port A of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$LessThan_22$usb_serial_ctrl_ep.sv:104$6862 ($le).
Removed top 1 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$LessThan_22$usb_serial_ctrl_ep.sv:104$6862 ($le).
Removed top 1 bits (of 2) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_230$usb_serial_fifo_ep.sv:403$7382 ($add).
Removed top 6 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$equal_221$usb_serial_fifo_ep.sv:393$7372 ($eq).
Removed top 6 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$equal_220$usb_serial_fifo_ep.sv:387$7371 ($eq).
Removed top 7 bits (of 8) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$equal_219$usb_serial_fifo_ep.sv:381$7370 ($eq).
Removed top 1 bits (of 3) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$equal_143$usb_serial_fifo_ep.sv:242$7320 ($eq).
Removed top 5 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_107$usb_serial_fifo_ep.sv:176$7283 ($add).
Removed top 1 bits (of 6) from port A of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$equal_75$usb_serial_fifo_ep.sv:137$7259 ($eq).
Removed top 4 bits (of 5) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_53$usb_serial_fifo_ep.sv:109$7240 ($add).
Removed top 1 bits (of 6) from port A of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$equal_34$usb_serial_fifo_ep.sv:92$7231 ($eq).
Removed top 4 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$sub_33$usb_serial_fifo_ep.sv:92$7230 ($sub).
Removed top 1 bits (of 2) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$equal_42$usb_fs_tx.sv:129$6499 ($eq).
Removed top 2 bits (of 3) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$add_108$usb_fs_tx.sv:254$6543 ($add).
Removed top 5 bits (of 8) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$mux_146$usb_fs_tx.sv:262$6563 ($mux).
Removed top 5 bits (of 40) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$mux_299$usb_fs_tx.sv:219$6591 ($mux).
Removed top 1 bits (of 2) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$mux_6$usb_fs_rx.sv:110$6068 ($mux).
Removed top 1 bits (of 2) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$equal_49$usb_fs_rx.sv:224$6101 ($eq).
Removed top 1 bits (of 2) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$add_54$usb_fs_rx.sv:228$6106 ($add).
Removed top 1 bits (of 3) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$mux_55$usb_fs_rx.sv:228$6107 ($mux).
Removed top 1 bits (of 12) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$equal_78$usb_fs_rx.sv:267$6126 ($eq).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$equal_105$usb_fs_rx.sv:319$6147 ($eq).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$equal_114$usb_fs_rx.sv:329$6152 ($eq).
Removed top 1 bits (of 5) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$equal_160$usb_fs_rx.sv:422$6189 ($eq).
Removed top 2 bits (of 5) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$xor_167$usb_fs_rx.sv:433$6196 ($xor).
Removed top 3 bits (of 4) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$equal_12$usb_fs_nb_out_pe.sv:134$5744 ($eq).
Removed top 2 bits (of 4) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$equal_22$usb_fs_nb_out_pe.sv:147$5753 ($eq).
Removed top 1 bits (of 2) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$equal_199$usb_fs_nb_out_pe.sv:388$5863 ($eq).
Removed top 4 bits (of 5) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$add_221$usb_fs_nb_out_pe.sv:410$5879 ($add).
Removed top 1 bits (of 2) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$equal_7$usb_fs_nb_in_pe.sv:119$5503 ($eq).
Removed top 2 bits (of 4) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$equal_19$usb_fs_nb_in_pe.sv:133$5514 ($eq).
Removed top 2 bits (of 4) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$LessThan_22$usb_fs_nb_in_pe.sv:136$5517 ($lt).
Removed top 3 bits (of 4) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$mux_24$usb_fs_nb_in_pe.sv:137$5519 ($mux).
Removed top 1 bits (of 3) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$equal_36$usb_fs_nb_in_pe.sv:153$5531 ($eq).
Removed top 6 bits (of 7) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$sub_64$usb_fs_nb_in_pe.sv:229$5555 ($sub).
Removed top 4 bits (of 5) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$add_117$usb_fs_nb_in_pe.sv:298$5589 ($add).
Removed top 1 bits (of 4) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.$verific$equal_4$usb_fs_nb_pe.sv:124$5152 ($eq).
Removed top 5 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_rxfifo.$verific$add_18$prim_fifo_async.sv:62$1476 ($add).
Removed top 5 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_rxfifo.$verific$add_77$prim_fifo_async.sv:97$1523 ($add).
Removed top 5 bits (of 6) from port A of cell usbuart.$flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_160$prim_fifo_async.sv:157$1589 ($sub).
Removed top 1 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_160$prim_fifo_async.sv:157$1589 ($sub).
Removed top 1 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_161$prim_fifo_async.sv:158$1590 ($sub).
Removed top 5 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_txfifo.$verific$add_18$prim_fifo_async.sv:62$1476 ($add).
Removed top 5 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_txfifo.$verific$add_77$prim_fifo_async.sv:97$1523 ($add).
Removed top 1 bits (of 6) from port B of cell usbuart.$flatten\usbuart_core.\usbuart_txfifo.$verific$add_148$prim_fifo_async.sv:144$1578 ($add).
Removed top 1 bits (of 2) from port B of cell usbuart.$auto$opt_dff.cc:195:make_patterns_logic$7609 ($ne).
Removed top 5 bits (of 6) from port A of cell usbuart.$flatten\usbuart_core.$verific$LessThan_112$usbuart_core.sv:279$1202 ($le).
Removed top 2 bits (of 3) from port B of cell usbuart.$auto$opt_dff.cc:195:make_patterns_logic$7607 ($ne).
Removed top 5 bits (of 6) from port A of cell usbuart.$flatten\usbuart_core.$verific$LessThan_103$usbuart_core.sv:270$1193 ($le).
Removed top 2 bits (of 3) from port B of cell usbuart.$flatten\usbuart_core.$verific$add_28$usbuart_core.sv:101$1002 ($add).
Removed top 2 bits (of 3) from port B of cell usbuart.$flatten\usbuart_core.$verific$add_23$usbuart_core.sv:96$998 ($add).
Removed top 5 bits (of 8) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$mux_141$usb_fs_tx.sv:262$6558 ($mux).
Removed top 1 bits (of 3) from port Y of cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$add_54$usb_fs_rx.sv:228$6106 ($add).
Removed top 5 bits (of 8) from mux cell usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$mux_136$usb_fs_tx.sv:261$6553 ($mux).
Removed top 3 bits (of 4) from wire usbuart.$flatten\u_reg.$verific$n872$2054.
Removed top 1 bits (of 4) from wire usbuart.$flatten\u_reg.$verific$n929$2056.
Removed top 2 bits (of 4) from wire usbuart.$flatten\u_reg.$verific$n944$2057.
Removed top 2 bits (of 3) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$n139$5468.
Removed top 2 bits (of 3) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$n94$5460.
Removed top 5 bits (of 8) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$n351$6399.
Removed top 5 bits (of 8) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$n524$6418.
Removed top 5 bits (of 8) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$n561$6423.
Removed top 2 bits (of 7) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n543$6808.
Removed top 1 bits (of 7) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n551$6809.
Removed top 1 bits (of 8) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n671$6819.
Removed top 1 bits (of 8) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n732$6823.
Removed top 1 bits (of 8) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n774$6828.
Removed top 1 bits (of 3) from wire usbuart.$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n374$7163.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 14 unused cells and 38 unused wires.
<suppressed ~15 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module usbuart:
  creating $macc model for $flatten\usbuart_core.$verific$add_23$usbuart_core.sv:96$998 ($add).
  creating $macc model for $flatten\usbuart_core.$verific$add_28$usbuart_core.sv:101$1002 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_rxfifo.$verific$add_18$prim_fifo_async.sv:62$1476 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_rxfifo.$verific$add_77$prim_fifo_async.sv:97$1523 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_160$prim_fifo_async.sv:157$1589 ($sub).
  creating $macc model for $flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_161$prim_fifo_async.sv:158$1590 ($sub).
  creating $macc model for $flatten\usbuart_core.\usbuart_txfifo.$verific$add_148$prim_fifo_async.sv:144$1578 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_txfifo.$verific$add_18$prim_fifo_async.sv:62$1476 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_txfifo.$verific$add_77$prim_fifo_async.sv:97$1523 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.$verific$add_10$usbuart_usbif.sv:53$4876 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.$verific$add_67$usbuart_usbif.sv:260$5132 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$add_117$usb_fs_nb_in_pe.sv:298$5589 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$sub_64$usb_fs_nb_in_pe.sv:229$5555 ($sub).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$add_221$usb_fs_nb_out_pe.sv:410$5879 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$add_54$usb_fs_rx.sv:228$6106 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$add_108$usb_fs_tx.sv:254$6543 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_142$usb_serial_ctrl_ep.sv:301$6953 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_144$usb_serial_ctrl_ep.sv:302$6955 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_107$usb_serial_fifo_ep.sv:176$7283 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_230$usb_serial_fifo_ep.sv:403$7382 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_53$usb_serial_fifo_ep.sv:109$7240 ($add).
  creating $macc model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$sub_33$usb_serial_fifo_ep.sv:92$7230 ($sub).
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$sub_33$usb_serial_fifo_ep.sv:92$7230.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_53$usb_serial_fifo_ep.sv:109$7240.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_230$usb_serial_fifo_ep.sv:403$7382.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_107$usb_serial_fifo_ep.sv:176$7283.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_144$usb_serial_ctrl_ep.sv:302$6955.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_142$usb_serial_ctrl_ep.sv:301$6953.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$add_108$usb_fs_tx.sv:254$6543.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$add_54$usb_fs_rx.sv:228$6106.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$add_221$usb_fs_nb_out_pe.sv:410$5879.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$sub_64$usb_fs_nb_in_pe.sv:229$5555.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$add_117$usb_fs_nb_in_pe.sv:298$5589.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.$verific$add_67$usbuart_usbif.sv:260$5132.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_usbif.$verific$add_10$usbuart_usbif.sv:53$4876.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_txfifo.$verific$add_77$prim_fifo_async.sv:97$1523.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_txfifo.$verific$add_18$prim_fifo_async.sv:62$1476.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_txfifo.$verific$add_148$prim_fifo_async.sv:144$1578.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_161$prim_fifo_async.sv:158$1590.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_160$prim_fifo_async.sv:157$1589.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_rxfifo.$verific$add_77$prim_fifo_async.sv:97$1523.
  creating $alu model for $macc $flatten\usbuart_core.\usbuart_rxfifo.$verific$add_18$prim_fifo_async.sv:62$1476.
  creating $alu model for $macc $flatten\usbuart_core.$verific$add_28$usbuart_core.sv:101$1002.
  creating $alu model for $macc $flatten\usbuart_core.$verific$add_23$usbuart_core.sv:96$998.
  creating $alu model for $flatten\usbuart_core.$verific$LessThan_103$usbuart_core.sv:270$1193 ($le): new $alu
  creating $alu model for $flatten\usbuart_core.$verific$LessThan_112$usbuart_core.sv:279$1202 ($le): new $alu
  creating $alu model for $flatten\usbuart_core.\usbuart_usbif.$verific$LessThan_65$usbuart_usbif.sv:257$5130 ($lt): new $alu
  creating $alu model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$LessThan_22$usb_fs_nb_in_pe.sv:136$5517 ($lt): new $alu
  creating $alu model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$LessThan_22$usb_serial_ctrl_ep.sv:104$6862 ($le): new $alu
  creating $alu model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$LessThan_24$usb_serial_ctrl_ep.sv:105$6864 ($le): new $alu
  creating $alu model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$LessThan_134$usb_serial_fifo_ep.sv:230$7307 ($le): new $alu
  creating $alu model for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$LessThan_136$usb_serial_fifo_ep.sv:231$7309 ($le): new $alu
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$LessThan_136$usb_serial_fifo_ep.sv:231$7309: $auto$alumacc.cc:485:replace_alu$7826
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$LessThan_134$usb_serial_fifo_ep.sv:230$7307: $auto$alumacc.cc:485:replace_alu$7839
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$LessThan_24$usb_serial_ctrl_ep.sv:105$6864: $auto$alumacc.cc:485:replace_alu$7852
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$LessThan_22$usb_serial_ctrl_ep.sv:104$6862: $auto$alumacc.cc:485:replace_alu$7865
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$LessThan_22$usb_fs_nb_in_pe.sv:136$5517: $auto$alumacc.cc:485:replace_alu$7878
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.$verific$LessThan_65$usbuart_usbif.sv:257$5130: $auto$alumacc.cc:485:replace_alu$7889
  creating $alu cell for $flatten\usbuart_core.$verific$LessThan_112$usbuart_core.sv:279$1202: $auto$alumacc.cc:485:replace_alu$7900
  creating $alu cell for $flatten\usbuart_core.$verific$LessThan_103$usbuart_core.sv:270$1193: $auto$alumacc.cc:485:replace_alu$7909
  creating $alu cell for $flatten\usbuart_core.$verific$add_23$usbuart_core.sv:96$998: $auto$alumacc.cc:485:replace_alu$7918
  creating $alu cell for $flatten\usbuart_core.$verific$add_28$usbuart_core.sv:101$1002: $auto$alumacc.cc:485:replace_alu$7921
  creating $alu cell for $flatten\usbuart_core.\usbuart_rxfifo.$verific$add_18$prim_fifo_async.sv:62$1476: $auto$alumacc.cc:485:replace_alu$7924
  creating $alu cell for $flatten\usbuart_core.\usbuart_rxfifo.$verific$add_77$prim_fifo_async.sv:97$1523: $auto$alumacc.cc:485:replace_alu$7927
  creating $alu cell for $flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_160$prim_fifo_async.sv:157$1589: $auto$alumacc.cc:485:replace_alu$7930
  creating $alu cell for $flatten\usbuart_core.\usbuart_rxfifo.$verific$sub_161$prim_fifo_async.sv:158$1590: $auto$alumacc.cc:485:replace_alu$7933
  creating $alu cell for $flatten\usbuart_core.\usbuart_txfifo.$verific$add_148$prim_fifo_async.sv:144$1578: $auto$alumacc.cc:485:replace_alu$7936
  creating $alu cell for $flatten\usbuart_core.\usbuart_txfifo.$verific$add_18$prim_fifo_async.sv:62$1476: $auto$alumacc.cc:485:replace_alu$7939
  creating $alu cell for $flatten\usbuart_core.\usbuart_txfifo.$verific$add_77$prim_fifo_async.sv:97$1523: $auto$alumacc.cc:485:replace_alu$7942
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.$verific$add_10$usbuart_usbif.sv:53$4876: $auto$alumacc.cc:485:replace_alu$7945
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.$verific$add_67$usbuart_usbif.sv:260$5132: $auto$alumacc.cc:485:replace_alu$7948
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$add_117$usb_fs_nb_in_pe.sv:298$5589: $auto$alumacc.cc:485:replace_alu$7951
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_in_pe.$verific$sub_64$usb_fs_nb_in_pe.sv:229$5555: $auto$alumacc.cc:485:replace_alu$7954
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_nb_out_pe.$verific$add_221$usb_fs_nb_out_pe.sv:410$5879: $auto$alumacc.cc:485:replace_alu$7957
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$add_54$usb_fs_rx.sv:228$6106: $auto$alumacc.cc:485:replace_alu$7960
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$add_108$usb_fs_tx.sv:254$6543: $auto$alumacc.cc:485:replace_alu$7963
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_142$usb_serial_ctrl_ep.sv:301$6953: $auto$alumacc.cc:485:replace_alu$7966
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$add_144$usb_serial_ctrl_ep.sv:302$6955: $auto$alumacc.cc:485:replace_alu$7969
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_107$usb_serial_fifo_ep.sv:176$7283: $auto$alumacc.cc:485:replace_alu$7972
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_230$usb_serial_fifo_ep.sv:403$7382: $auto$alumacc.cc:485:replace_alu$7975
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$add_53$usb_serial_fifo_ep.sv:109$7240: $auto$alumacc.cc:485:replace_alu$7978
  creating $alu cell for $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$sub_33$usb_serial_fifo_ep.sv:92$7230: $auto$alumacc.cc:485:replace_alu$7981
  created 30 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7760: { $auto$rtlil.cc:2398:Or$7749 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n922$6729 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n938$6745 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n950$6757 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n958$6765 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n964$6771 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n965$6772 }
    New input vector for $reduce_or cell $auto$pmuxtree.cc:37:or_generator$7786: { $auto$rtlil.cc:2398:Or$7749 $auto$rtlil.cc:2398:Or$7757 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n920$6727 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n922$6729 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n930$6737 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n932$6739 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n936$6743 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n938$6745 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n941$6748 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n942$6749 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n950$6757 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n952$6759 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n953$6760 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n957$6764 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n958$6765 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n964$6771 $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n965$6772 }
  Optimizing cells in module \usbuart.
Performed a total of 2 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 1 unused cells and 10 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~128 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== usbuart ===

   Number of wires:               2924
   Number of wire bits:           8805
   Number of public wires:        2143
   Number of public wire bits:    6508
   Number of memories:               4
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:               1104
     $adff                          54
     $adffe                         62
     $alu                           30
     $and                          154
     $bmux                          43
     $dffe                          17
     $eq                           105
     $logic_not                     20
     $memrd                          4
     $memwr                          4
     $mux                          229
     $ne                            12
     $not                          120
     $or                            99
     $reduce_and                    40
     $reduce_bool                   25
     $reduce_or                     40
     $reduce_xor                    28
     $sdffce                         3
     $shl                            2
     $xor                           13


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing usbuart.usbuart_core.usbuart_rxfifo.storage write port 0.
  Analyzing usbuart.usbuart_core.usbuart_txfifo.storage write port 0.
  Analyzing usbuart.usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer write port 0.
  Analyzing usbuart.usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer write port 0.

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\usbuart_core.usbuart_rxfifo.storage'[0] in module `\usbuart': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\usbuart_core.usbuart_txfifo.storage'[0] in module `\usbuart': no output FF found.
Checking read port `\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer'[0] in module `\usbuart': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port `\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer'[0] in module `\usbuart': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port address `\usbuart_core.usbuart_rxfifo.storage'[0] in module `\usbuart': address FF has async set and/or reset, not supported.
Checking read port address `\usbuart_core.usbuart_txfifo.storage'[0] in module `\usbuart': address FF has async set and/or reset, not supported.
Checking read port address `\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer'[0] in module `\usbuart': address FF has async set and/or reset, not supported.

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 1 unused cells and 9 unused wires.
<suppressed ~2 debug messages>

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== usbuart ===

   Number of wires:               2923
   Number of wire bits:           8797
   Number of public wires:        2143
   Number of public wire bits:    6508
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1099
     $adff                          54
     $adffe                         62
     $alu                           30
     $and                          154
     $bmux                          43
     $dffe                          16
     $eq                           105
     $logic_not                     20
     $mem_v2                         4
     $mux                          229
     $ne                            12
     $not                          120
     $or                            99
     $reduce_and                    40
     $reduce_bool                   25
     $reduce_or                     40
     $reduce_xor                    28
     $sdffce                         3
     $shl                            2
     $xor                           13


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> stat

3.24. Printing statistics.

=== usbuart ===

   Number of wires:               2923
   Number of wire bits:           8797
   Number of public wires:        2143
   Number of public wire bits:    6508
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1099
     $adff                          54
     $adffe                         62
     $alu                           30
     $and                          154
     $bmux                          43
     $dffe                          16
     $eq                           105
     $logic_not                     20
     $mem_v2                         4
     $mux                          229
     $ne                            12
     $not                          120
     $or                            99
     $reduce_and                    40
     $reduce_bool                   25
     $reduce_or                     40
     $reduce_xor                    28
     $sdffce                         3
     $shl                            2
     $xor                           13


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $bmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$ce0ec84be7047712840b0952f343ee9e63ef75d1\_90_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_90_alu for cells of type $alu.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$3b3a66a7766bf28794ddcd35314b025da1fe57c8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$83151c8406433c0495b5b7e0dbb2075d191f092d\_80_rs_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$77c41f01d44837e49c79fea5acd89fafec4e506f\_80_rs_alu for cells of type $alu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using template $paramod$75108d6e8d490ab2eec24aee458e87cb2a6c124c\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_90_alu for cells of type $alu.
Using template $paramod$6fc37af1c109ae54e8aed83fcd995c12d378ce93\_90_alu for cells of type $alu.
Using template $paramod$10ed987432f06055e5279101f9ec60a49861b43c\_90_alu for cells of type $alu.
Using template $paramod$5e23d2e0f07f5403e3d2c5b606bab0c16e4174c1\_90_alu for cells of type $alu.
Using template $paramod$a40b3a69ab2154dca9743e30e1e84efb03b892b4\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~4271 debug messages>

yosys> stat

3.26. Printing statistics.

=== usbuart ===

   Number of wires:               4996
   Number of wire bits:          49861
   Number of public wires:        2143
   Number of public wire bits:    6508
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6515
     $_AND_                        722
     $_DFFE_PN0N_                    4
     $_DFFE_PN0P_                  312
     $_DFFE_PN1P_                    8
     $_DFFE_PP_                    117
     $_DFF_PN0_                     99
     $_DFF_PN1_                     10
     $_MUX_                       2065
     $_NOT_                        464
     $_OR_                        1086
     $_SDFFCE_PP0P_                 11
     $_SDFFCE_PP1P_                  1
     $_XOR_                       1597
     $mem_v2                         4
     adder_carry                    15


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~2506 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~2517 debug messages>
Removed a total of 839 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$14599 ($_DFF_PN0_) from module usbuart (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [2], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [2]).
Adding SRST signal on $auto$ff.cc:262:slice$10928 ($_DFFE_PP_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n766$6827 [6], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10922 ($_DFFE_PP_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n766$6827 [0], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10924 ($_DFFE_PP_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n766$6827 [2], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10925 ($_DFFE_PP_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n766$6827 [3], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10927 ($_DFFE_PP_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n766$6827 [5], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10948 ($_DFFE_PP_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n783$6829 [3], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_length [3], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$14598 ($_DFF_PN0_) from module usbuart (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$14597 ($_DFF_PN0_) from module usbuart (D = \gen_alert_tx[0].u_prim_alert_sender.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.state_q [0]).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 171 unused cells and 1881 unused wires.
<suppressed ~173 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~62 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$14586 ($_DFF_PN0_) from module usbuart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$14585 ($_DFF_PN0_) from module usbuart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ping.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$14532 ($_DFF_PN0_) from module usbuart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [1], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$14531 ($_DFF_PN0_) from module usbuart (D = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_d [0], Q = \gen_alert_tx[0].u_prim_alert_sender.i_decode_ack.gen_async.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$13954 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.data_toggle_d [1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.data_toggle_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$13953 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.data_toggle_d [0], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.data_toggle_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$13921 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_xact_state_next [2], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_xact_state [2]).
Adding EN signal on $auto$ff.cc:262:slice$13920 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_xact_state_next [1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_xact_state [1]).
Adding EN signal on $auto$ff.cc:262:slice$13919 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_xact_state_next [0], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_xact_state [0]).
Adding EN signal on $auto$ff.cc:262:slice$13568 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.data_toggle_d [1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.data_toggle_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$13567 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.data_toggle_d [0], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.data_toggle_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$12601 ($_DFF_PN0_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_tx.$verific$n261$6311, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.tx_data_get_q).
Adding EN signal on $auto$ff.cc:262:slice$12577 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.tx_data_avail_i, Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.data_payload_q).
Adding EN signal on $auto$ff.cc:262:slice$12576 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.state_d [2], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.state_q [2]).
Adding EN signal on $auto$ff.cc:262:slice$12575 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.state_d [1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$12574 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.state_d [0], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.state_q [0]).
Adding EN signal on $auto$ff.cc:262:slice$12466 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.out_state_d [1], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.out_state_q [1]).
Adding EN signal on $auto$ff.cc:262:slice$12465 ($_DFF_PN0_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.out_state_d [0], Q = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.out_state_q [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 7 unused cells and 95 unused wires.
<suppressed ~10 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~130 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~336 debug messages>
Removed a total of 112 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 132 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~455 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$12594 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7969.X [0], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12597 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7969.Y [3], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12600 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7969.Y [6], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12599 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7969.Y [5], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12598 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7969.Y [4], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12596 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7969.Y [2], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$12595 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7969.Y [1], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.bytes_sent [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10949 ($_DFFE_PP_) from module usbuart (D = $auto$rtlil.cc:2464:Mux$7731 [4], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_length [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$10950 ($_DFFE_PP_) from module usbuart (D = $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_ctrl_ep.$verific$n625$6814 [4], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_length [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17058 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7966.Y [5], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17057 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7966.Y [3], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17056 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7966.Y [2], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17055 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7966.X [0], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$17054 ($_SDFFCE_PP0P_) from module usbuart (D = $auto$alumacc.cc:485:replace_alu$7966.Y [6], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.rom_addr [6], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$17059 ($_SDFFCE_PP0P_) from module usbuart.

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 15 unused cells and 69 unused wires.
<suppressed ~16 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~43 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$11251 ($_DFFE_PP_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2] [6], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11250 ($_DFFE_PP_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2] [5], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11249 ($_DFFE_PP_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2] [4], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11248 ($_DFFE_PP_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2] [3], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11247 ($_DFFE_PP_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2] [2], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11246 ($_DFFE_PP_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2] [1], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr [1], rval = 1'0).
Adding SRST signal on $auto$ff.cc:262:slice$11245 ($_DFFE_PP_) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.raw_setup_data[2] [0], Q = \usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.new_dev_addr [0], rval = 1'0).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 7 unused cells and 31 unused wires.
<suppressed ~8 debug messages>

3.28.10. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

yosys> opt_merge

3.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

3.28.15. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \usbuart_core.usbuart_rxfifo.storage in module \usbuart:
  created 32 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 32 write mux blocks.
Mapping memory \usbuart_core.usbuart_txfifo.storage in module \usbuart:
  created 32 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 32 write mux blocks.
Mapping memory \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer in module \usbuart:
  created 32 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 31 $mux cells.
  write interface: 32 write mux blocks.
Mapping memory \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer in module \usbuart:
  created 32 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of usbuart.usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer: $\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$rdreg[0]
  read interface: 1 $dff and 31 $mux cells.
  write interface: 32 write mux blocks.

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~41 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14570 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$14554
        $auto$simplemap.cc:278:simplemap_mux$14550

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$14575 in front of them:
        $auto$simplemap.cc:278:simplemap_mux$14555
        $auto$simplemap.cc:278:simplemap_mux$14551


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 2 unused cells and 283 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~2 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~134 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[9]$19191 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[9]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[8]$19189 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[8]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[7]$19187 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[7]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[6]$19185 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[6]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[5]$19183 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[5]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[4]$19181 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[4]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[3]$19179 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[3]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[31]$19235 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[31]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[30]$19233 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[30]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[2]$19177 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[2]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[29]$19231 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[29]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[28]$19229 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[28]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[27]$19227 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[27]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[26]$19225 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[26]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[25]$19223 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[25]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[24]$19221 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[24]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[23]$19219 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[23]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[22]$19217 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[22]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[21]$19215 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[21]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[20]$19213 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[20]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[1]$19175 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[1]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[19]$19211 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[19]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[18]$19209 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[18]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[17]$19207 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[17]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[16]$19205 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[16]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[15]$19203 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[15]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[14]$19201 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[14]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[13]$19199 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[13]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[12]$19197 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[12]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[11]$19195 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[11]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[10]$19193 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[10]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[0]$19173 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_ep_data_o, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer[0]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[9]$18790 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[9]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[8]$18788 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[8]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[7]$18786 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[7]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[6]$18784 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[6]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[5]$18782 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[5]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[4]$18780 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[4]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[3]$18778 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[3]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[31]$18834 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[31]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[30]$18832 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[30]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[2]$18776 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[2]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[29]$18830 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[29]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[28]$18828 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[28]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[27]$18826 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[27]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[26]$18824 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[26]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[25]$18822 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[25]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[24]$18820 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[24]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[23]$18818 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[23]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[22]$18816 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[22]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[21]$18814 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[21]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[20]$18812 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[20]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[1]$18774 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[1]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[19]$18810 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[19]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[18]$18808 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[18]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[17]$18806 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[17]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[16]$18804 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[16]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[15]$18802 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[15]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[14]$18800 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[14]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[13]$18798 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[13]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[12]$18796 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[12]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[11]$18794 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[11]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[10]$18792 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[10]).
Adding EN signal on $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[0]$18772 ($dff) from module usbuart (D = \usbuart_core.usb_tx_fifo_rdata, Q = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.in_pkt_buffer[0]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[9]$18389 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[9]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[8]$18387 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[8]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[7]$18385 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[7]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[6]$18383 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[6]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[5]$18381 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[5]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[4]$18379 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[4]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[3]$18377 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[3]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[31]$18433 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[31]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[30]$18431 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[30]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[2]$18375 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[2]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[29]$18429 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[29]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[28]$18427 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[28]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[27]$18425 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[27]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[26]$18423 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[26]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[25]$18421 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[25]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[24]$18419 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[24]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[23]$18417 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[23]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[22]$18415 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[22]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[21]$18413 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[21]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[20]$18411 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[20]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[1]$18373 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[1]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[19]$18409 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[19]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[18]$18407 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[18]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[17]$18405 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[17]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[16]$18403 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[16]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[15]$18401 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[15]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[14]$18399 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[14]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[13]$18397 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[13]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[12]$18395 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[12]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[11]$18393 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[11]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[10]$18391 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[10]).
Adding EN signal on $memory\usbuart_core.usbuart_txfifo.storage[0]$18371 ($dff) from module usbuart (D = 8'00000000, Q = \usbuart_core.usbuart_txfifo.storage[0]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[9]$17988 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[9]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[8]$17986 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[8]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[7]$17984 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[7]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[6]$17982 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[6]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[5]$17980 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[5]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[4]$17978 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[4]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[3]$17976 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[3]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[31]$18032 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[31]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[30]$18030 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[30]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[2]$17974 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[2]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[29]$18028 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[29]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[28]$18026 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[28]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[27]$18024 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[27]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[26]$18022 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[26]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[25]$18020 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[25]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[24]$18018 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[24]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[23]$18016 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[23]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[22]$18014 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[22]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[21]$18012 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[21]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[20]$18010 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[20]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[1]$17972 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[1]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[19]$18008 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[19]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[18]$18006 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[18]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[17]$18004 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[17]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[16]$18002 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[16]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[15]$18000 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[15]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[14]$17998 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[14]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[13]$17996 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[13]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[12]$17994 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[12]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[11]$17992 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[11]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[10]$17990 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[10]).
Adding EN signal on $memory\usbuart_core.usbuart_rxfifo.storage[0]$17970 ($dff) from module usbuart (D = \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.rx_fifo_wdata, Q = \usbuart_core.usbuart_rxfifo.storage[0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19678 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19677 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19676 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19675 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19674 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19673 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19672 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19671 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19670 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19669 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19668 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19667 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19666 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19665 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19664 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19663 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19662 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19661 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19660 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19659 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19658 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19657 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19656 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19655 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19654 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19653 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19652 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19651 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19650 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19649 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19648 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19647 ($dffe) from module usbuart.

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 213 unused cells and 215 unused wires.
<suppressed ~214 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~31 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19615 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19616 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19617 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19618 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19619 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19620 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19621 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19622 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19623 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19624 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19625 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19626 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19627 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19628 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19629 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19630 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19631 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19632 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19633 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19634 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19635 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19636 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19637 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19638 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19639 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19640 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19641 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19642 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19643 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19644 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19645 ($dffe) from module usbuart.
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$19646 ($dffe) from module usbuart.

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 86 unused cells and 116 unused wires.
<suppressed ~87 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~31 debug messages>

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 30 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~8 debug messages>

3.30.34. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.30.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_share

3.30.38. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.39. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr -full

3.30.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.30.42. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~370 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  8 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7517, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7460, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7463, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7451, arst={ }, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
  3 cells in clk=\clk_usb_48mhz_i, en=$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7520, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7514, arst={ }, srst={ }
  19 cells in clk=\clk_i, en=\u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7662, arst=!\rst_ni, srst={ }
  378 cells in clk=\clk_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=\u_reg.u_intr_state_tx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  257 cells in clk=\clk_i, en=\u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  11 cells in clk=\clk_i, en=\u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7445, arst={ }, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7448, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7434, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494, arst={ }, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7537, arst={ }, srst=$auto$simplemap.cc:257:simplemap_eqne$11083
  7 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=!\usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
  11 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=$auto$opt_dff.cc:253:combine_resets$17915
  90 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst=$auto$opt_dff.cc:194:make_patterns_logic$7492
  16 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17718, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  76 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17677, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  55 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17641, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  28 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17577, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17513, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17504, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  9 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17495, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  3 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17458, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  94 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$17383, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17376, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17339, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  23 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17262, arst=!\rst_ni, srst={ }
  29 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17182, arst=!\rst_ni, srst={ }
  28 cells in clk=\clk_i, en=$auto$opt_dff.cc:194:make_patterns_logic$17031, arst=!\rst_ni, srst={ }
  38 cells in clk=\clk_i, en=$auto$opt_dff.cc:219:make_patterns_logic$17048, arst=!\rst_ni, srst={ }
  62 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7619, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!\usbuart_core.rxres_cnt [2], arst=!\rst_ni, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7529, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7532, arst={ }, srst={ }
  46 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_rxfifo.fifo_incr_wptr, arst=!\usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  38 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_txfifo.fifo_incr_rptr, arst=!\usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  228 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!\usbuart_core.txres_cnt [2], arst=!\rst_ni, srst={ }
  171 cells in clk=\clk_i, en=\usbuart_core.usbuart_rxfifo.fifo_incr_rptr, arst=!\usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  31 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7635, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  26 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  27 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7631, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7627, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.rx_data_buffer_q [0], arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  49 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7622, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  29 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7597, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  23 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7576, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7600, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7610, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  46 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7583, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  20 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7588, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  65 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7591, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  30 cells in clk=\clk_usb_48mhz_i, en=!$auto$simplemap.cc:257:simplemap_eqne$12809, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7579, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  54 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7560, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7563, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  34 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7573, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7570, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7557, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  21 cells in clk=\clk_usb_48mhz_i, en=$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.ob_max_used [5]
  138 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7475, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  30 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7482, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  37 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7439, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7469, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7442, arst={ }, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.tx_read, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  46 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7487, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:194:make_patterns_logic$7472, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7496, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  27 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7545, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  9 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7511, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  43 cells in clk=\clk_i, en=\usbuart_core.usbuart_txfifo.fifo_incr_wptr, arst=!\usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  64 cells in clk=\clk_usb_48mhz_i, en=\usbuart_core.usbuart_usbif.sof_valid, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  127 cells in clk=\clk_usb_48mhz_i, en=$auto$opt_dff.cc:219:make_patterns_logic$7643, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }
  453 cells in clk=\clk_usb_48mhz_i, en={ }, arst=!\usbuart_core.usbuart_usbif.rst_ni, srst={ }

3.33.2. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7517
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 8 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7460
Extracted 18 gates and 28 wires to a netlist network with 10 inputs and 9 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7463
Extracted 13 gates and 23 wires to a netlist network with 10 inputs and 5 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7451
Extracted 17 gates and 29 wires to a netlist network with 11 inputs and 9 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 4 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062
Extracted 3 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7520
Extracted 18 gates and 28 wires to a netlist network with 10 inputs and 7 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7514
Extracted 19 gates and 29 wires to a netlist network with 10 inputs and 7 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 19 gates and 29 wires to a netlist network with 9 inputs and 2 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7662, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 378 gates and 484 wires to a netlist network with 104 inputs and 54 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_tx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 5 gates and 10 wires to a netlist network with 4 inputs and 2 outputs.

3.33.13.1. Executing ABC.

3.33.14. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.14.1. Executing ABC.

3.33.15. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 19 gates and 29 wires to a netlist network with 9 inputs and 2 outputs.

3.33.15.1. Executing ABC.

3.33.16. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.16.1. Executing ABC.

3.33.17. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 8 gates and 16 wires to a netlist network with 7 inputs and 3 outputs.

3.33.17.1. Executing ABC.

3.33.18. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

3.33.18.1. Executing ABC.

3.33.19. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

3.33.19.1. Executing ABC.

3.33.20. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 11 gates and 20 wires to a netlist network with 8 inputs and 7 outputs.

3.33.20.1. Executing ABC.

3.33.21. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7445
Extracted 17 gates and 27 wires to a netlist network with 10 inputs and 9 outputs.

3.33.21.1. Executing ABC.

3.33.22. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7448
Extracted 25 gates and 42 wires to a netlist network with 16 inputs and 14 outputs.

3.33.22.1. Executing ABC.

3.33.23. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.23.1. Executing ABC.

3.33.24. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.24.1. Executing ABC.

3.33.25. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.25.1. Executing ABC.

3.33.26. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.26.1. Executing ABC.

3.33.27. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.27.1. Executing ABC.

3.33.28. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.28.1. Executing ABC.

3.33.29. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.29.1. Executing ABC.

3.33.30. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.30.1. Executing ABC.

3.33.31. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.31.1. Executing ABC.

3.33.32. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.32.1. Executing ABC.

3.33.33. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.33.1. Executing ABC.

3.33.34. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.34.1. Executing ABC.

3.33.35. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.35.1. Executing ABC.

3.33.36. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.36.1. Executing ABC.

3.33.37. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.37.1. Executing ABC.

3.33.38. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7434
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 9 outputs.

3.33.38.1. Executing ABC.

3.33.39. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.39.1. Executing ABC.

3.33.40. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.40.1. Executing ABC.

3.33.41. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.41.1. Executing ABC.

3.33.42. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.42.1. Executing ABC.

3.33.43. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.43.1. Executing ABC.

3.33.44. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.44.1. Executing ABC.

3.33.45. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.45.1. Executing ABC.

3.33.46. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342
Extracted 19 gates and 40 wires to a netlist network with 21 inputs and 10 outputs.

3.33.46.1. Executing ABC.

3.33.47. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.47.1. Executing ABC.

3.33.48. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.48.1. Executing ABC.

3.33.49. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.49.1. Executing ABC.

3.33.50. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.50.1. Executing ABC.

3.33.51. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.51.1. Executing ABC.

3.33.52. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.52.1. Executing ABC.

3.33.53. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.53.1. Executing ABC.

3.33.54. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.54.1. Executing ABC.

3.33.55. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.55.1. Executing ABC.

3.33.56. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.56.1. Executing ABC.

3.33.57. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.57.1. Executing ABC.

3.33.58. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.58.1. Executing ABC.

3.33.59. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.59.1. Executing ABC.

3.33.60. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.60.1. Executing ABC.

3.33.61. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.61.1. Executing ABC.

3.33.62. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.62.1. Executing ABC.

3.33.63. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.63.1. Executing ABC.

3.33.64. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.64.1. Executing ABC.

3.33.65. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.65.1. Executing ABC.

3.33.66. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.66.1. Executing ABC.

3.33.67. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.67.1. Executing ABC.

3.33.68. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.68.1. Executing ABC.

3.33.69. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.69.1. Executing ABC.

3.33.70. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.70.1. Executing ABC.

3.33.71. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.71.1. Executing ABC.

3.33.72. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.72.1. Executing ABC.

3.33.73. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.73.1. Executing ABC.

3.33.74. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.74.1. Executing ABC.

3.33.75. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.75.1. Executing ABC.

3.33.76. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.76.1. Executing ABC.

3.33.77. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.77.1. Executing ABC.

3.33.78. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.78.1. Executing ABC.

3.33.79. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.79.1. Executing ABC.

3.33.80. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.80.1. Executing ABC.

3.33.81. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.81.1. Executing ABC.

3.33.82. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.33.82.1. Executing ABC.

3.33.83. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.83.1. Executing ABC.

3.33.84. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.84.1. Executing ABC.

3.33.85. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.85.1. Executing ABC.

3.33.86. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.33.86.1. Executing ABC.

3.33.87. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.33.87.1. Executing ABC.

3.33.88. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7537, synchronously reset by $auto$simplemap.cc:257:simplemap_eqne$11083
Extracted 22 gates and 38 wires to a netlist network with 16 inputs and 10 outputs.

3.33.88.1. Executing ABC.

3.33.89. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by !\usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
Extracted 7 gates and 15 wires to a netlist network with 7 inputs and 4 outputs.

3.33.89.1. Executing ABC.

3.33.90. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by $auto$opt_dff.cc:253:combine_resets$17915
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 5 outputs.

3.33.90.1. Executing ABC.

3.33.91. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7508, synchronously reset by $auto$opt_dff.cc:194:make_patterns_logic$7492
Extracted 75 gates and 99 wires to a netlist network with 24 inputs and 43 outputs.

3.33.91.1. Executing ABC.

3.33.92. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17718, asynchronously reset by !\usbuart_core.usbuart_usbif.rst_ni
Extracted 16 gates and 23 wires to a netlist network with 6 inputs and 4 outputs.

3.33.92.1. Executing ABC.

3.33.93. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17677, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 76 gates and 165 wires to a netlist network with 87 inputs and 68 outputs.

3.33.93.1. Executing ABC.

3.33.94. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17641, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 55 gates and 146 wires to a netlist network with 90 inputs and 50 outputs.

3.33.94.1. Executing ABC.

3.33.95. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17577, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 28 gates and 76 wires to a netlist network with 47 inputs and 24 outputs.

3.33.95.1. Executing ABC.

3.33.96. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17513, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.33.96.1. Executing ABC.

3.33.97. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17504, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.33.97.1. Executing ABC.

3.33.98. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17495, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 9 gates and 18 wires to a netlist network with 8 inputs and 4 outputs.

3.33.98.1. Executing ABC.

3.33.99. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17458, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 2 outputs.

3.33.99.1. Executing ABC.

3.33.100. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$17383, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 94 gates and 125 wires to a netlist network with 29 inputs and 18 outputs.

3.33.100.1. Executing ABC.

3.33.101. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17376, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 15 gates and 24 wires to a netlist network with 9 inputs and 8 outputs.

3.33.101.1. Executing ABC.

3.33.102. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17339, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 4 outputs.

3.33.102.1. Executing ABC.

3.33.103. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17262, asynchronously reset by !\rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 3 outputs.

3.33.103.1. Executing ABC.

3.33.104. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17182, asynchronously reset by !\rst_ni
Extracted 29 gates and 37 wires to a netlist network with 7 inputs and 4 outputs.

3.33.104.1. Executing ABC.

3.33.105. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$17031, asynchronously reset by !\rst_ni
Extracted 28 gates and 42 wires to a netlist network with 12 inputs and 17 outputs.

3.33.105.1. Executing ABC.

3.33.106. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$17048, asynchronously reset by !\rst_ni
Extracted 38 gates and 58 wires to a netlist network with 18 inputs and 12 outputs.

3.33.106.1. Executing ABC.

3.33.107. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 62 gates and 89 wires to a netlist network with 26 inputs and 31 outputs.

3.33.107.1. Executing ABC.

3.33.108. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7619, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 8 outputs.

3.33.108.1. Executing ABC.

3.33.109. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$24115$lo18, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.33.109.1. Executing ABC.

3.33.110. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7529
Extracted 24 gates and 38 wires to a netlist network with 14 inputs and 14 outputs.

3.33.110.1. Executing ABC.

3.33.111. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7532
Extracted 13 gates and 23 wires to a netlist network with 10 inputs and 5 outputs.

3.33.111.1. Executing ABC.

3.33.112. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_rxfifo.fifo_incr_wptr, asynchronously reset by !$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 46 gates and 48 wires to a netlist network with 2 inputs and 18 outputs.

3.33.112.1. Executing ABC.

3.33.113. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_txfifo.fifo_incr_rptr, asynchronously reset by !$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 38 gates and 39 wires to a netlist network with 1 inputs and 2 outputs.

3.33.113.1. Executing ABC.

3.33.114. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 228 gates and 282 wires to a netlist network with 52 inputs and 24 outputs.

3.33.114.1. Executing ABC.

3.33.115. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$24115$lo19, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.33.115.1. Executing ABC.

3.33.116. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by \usbuart_core.usbuart_rxfifo.fifo_incr_rptr, asynchronously reset by !$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 171 gates and 305 wires to a netlist network with 134 inputs and 22 outputs.

3.33.116.1. Executing ABC.

3.33.117. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7635, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 31 gates and 53 wires to a netlist network with 22 inputs and 4 outputs.

3.33.117.1. Executing ABC.

3.33.118. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 26 gates and 50 wires to a netlist network with 22 inputs and 13 outputs.

3.33.118.1. Executing ABC.

3.33.119. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7631, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 27 gates and 34 wires to a netlist network with 7 inputs and 7 outputs.

3.33.119.1. Executing ABC.

3.33.120. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7627, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 5 outputs.

3.33.120.1. Executing ABC.

3.33.121. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_rx.rx_data_buffer_q [0], asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 8 outputs.

3.33.121.1. Executing ABC.

3.33.122. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7622, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 49 gates and 53 wires to a netlist network with 3 inputs and 30 outputs.

3.33.122.1. Executing ABC.

3.33.123. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 25 gates and 45 wires to a netlist network with 20 inputs and 24 outputs.

3.33.123.1. Executing ABC.

3.33.124. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7597, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 29 gates and 37 wires to a netlist network with 7 inputs and 9 outputs.

3.33.124.1. Executing ABC.

3.33.125. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7576, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 23 gates and 29 wires to a netlist network with 5 inputs and 12 outputs.

3.33.125.1. Executing ABC.

3.33.126. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7600, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 4 outputs.

3.33.126.1. Executing ABC.

3.33.127. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7610, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.33.127.1. Executing ABC.

3.33.128. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7583, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 46 gates and 57 wires to a netlist network with 10 inputs and 18 outputs.

3.33.128.1. Executing ABC.

3.33.129. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7588, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 20 gates and 29 wires to a netlist network with 8 inputs and 4 outputs.

3.33.129.1. Executing ABC.

3.33.130. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7591, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 65 gates and 69 wires to a netlist network with 3 inputs and 11 outputs.

3.33.130.1. Executing ABC.

3.33.131. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by !$auto$simplemap.cc:257:simplemap_eqne$12809, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 30 gates and 32 wires to a netlist network with 2 inputs and 9 outputs.

3.33.131.1. Executing ABC.

3.33.132. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7579, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 15 wires to a netlist network with 1 inputs and 6 outputs.

3.33.132.1. Executing ABC.

3.33.133. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7560, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 54 gates and 60 wires to a netlist network with 5 inputs and 17 outputs.

3.33.133.1. Executing ABC.

3.33.134. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7563, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 17 gates and 21 wires to a netlist network with 3 inputs and 7 outputs.

3.33.134.1. Executing ABC.

3.33.135. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7573, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 34 gates and 43 wires to a netlist network with 8 inputs and 16 outputs.

3.33.135.1. Executing ABC.

3.33.136. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7570, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 15 gates and 19 wires to a netlist network with 4 inputs and 2 outputs.

3.33.136.1. Executing ABC.

3.33.137. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7557, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 4 outputs.

3.33.137.1. Executing ABC.

3.33.138. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $abc$21071$lo0
Extracted 21 gates and 26 wires to a netlist network with 5 inputs and 9 outputs.

3.33.138.1. Executing ABC.

3.33.139. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7475, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 138 gates and 275 wires to a netlist network with 137 inputs and 23 outputs.

3.33.139.1. Executing ABC.

3.33.140. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7482, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 30 gates and 58 wires to a netlist network with 27 inputs and 16 outputs.

3.33.140.1. Executing ABC.

3.33.141. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7439, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 37 gates and 59 wires to a netlist network with 22 inputs and 18 outputs.

3.33.141.1. Executing ABC.

3.33.142. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7469, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 16 gates and 29 wires to a netlist network with 11 inputs and 8 outputs.

3.33.142.1. Executing ABC.

3.33.143. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7442
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 7 outputs.

3.33.143.1. Executing ABC.

3.33.144. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.tx_read, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 22 gates and 23 wires to a netlist network with 1 inputs and 10 outputs.

3.33.144.1. Executing ABC.

3.33.145. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7487, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 46 gates and 74 wires to a netlist network with 27 inputs and 42 outputs.

3.33.145.1. Executing ABC.

3.33.146. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$7472, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 6 outputs.

3.33.146.1. Executing ABC.

3.33.147. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7496, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 3 outputs.

3.33.147.1. Executing ABC.

3.33.148. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 20 wires to a netlist network with 6 inputs and 9 outputs.

3.33.148.1. Executing ABC.

3.33.149. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7545, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 27 gates and 48 wires to a netlist network with 20 inputs and 21 outputs.

3.33.149.1. Executing ABC.

3.33.150. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 11 wires to a netlist network with 4 inputs and 4 outputs.

3.33.150.1. Executing ABC.

3.33.151. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7511
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 5 outputs.

3.33.151.1. Executing ABC.

3.33.152. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 8 outputs.

3.33.152.1. Executing ABC.

3.33.153. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 8 gates and 15 wires to a netlist network with 6 inputs and 3 outputs.

3.33.153.1. Executing ABC.

3.33.154. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24115$usbuart_core.usbuart_txfifo.fifo_incr_wptr, asynchronously reset by !$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 43 gates and 44 wires to a netlist network with 0 inputs and 7 outputs.

3.33.154.1. Executing ABC.

3.33.155. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by \usbuart_core.usbuart_usbif.sof_valid, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 64 gates and 112 wires to a netlist network with 48 inputs and 23 outputs.

3.33.155.1. Executing ABC.

3.33.156. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$7643, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 127 gates and 132 wires to a netlist network with 4 inputs and 25 outputs.

3.33.156.1. Executing ABC.

3.33.157. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 453 gates and 602 wires to a netlist network with 147 inputs and 139 outputs.

3.33.157.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  42 cells in clk=\clk_i, en=$abc$24076$auto$opt_dff.cc:219:make_patterns_logic$17048, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$24198$auto$opt_dff.cc:219:make_patterns_logic$7619, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$24115$lo18, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$24217$auto$opt_dff.cc:219:make_patterns_logic$7529, arst={ }, srst={ }
  9 cells in clk=\clk_usb_48mhz_i, en=$abc$24250$auto$opt_dff.cc:219:make_patterns_logic$7532, arst={ }, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$26065$usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=$abc$24750$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=$abc$23625$auto$opt_dff.cc:253:combine_resets$17915
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$23920$auto$opt_dff.cc:219:make_patterns_logic$17458, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  47 cells in clk=\clk_usb_48mhz_i, en=$abc$24322$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$23019$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548, arst={ }, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$25320$auto$opt_dff.cc:219:make_patterns_logic$7557, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=$abc$21071$lo0
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$25242$auto$opt_dff.cc:194:make_patterns_logic$7563, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$25173$auto$opt_dff.cc:194:make_patterns_logic$7579, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$25727$auto$opt_dff.cc:219:make_patterns_logic$7496, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=$abc$25590$auto$opt_dff.cc:219:make_patterns_logic$7442, arst={ }, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=$abc$25490$auto$opt_dff.cc:194:make_patterns_logic$7482, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23316$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$23289$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23262$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23235$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23343$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22695$memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22614$memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23154$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$23127$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23100$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23208$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22451$memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$25013$auto$opt_dff.cc:219:make_patterns_logic$7610, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=$abc$25063$auto$opt_dff.cc:194:make_patterns_logic$7588, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22641$memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276, arst={ }, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=$abc$24970$auto$opt_dff.cc:194:make_patterns_logic$7576, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  234 cells in clk=\clk_usb_48mhz_i, en=$abc$25348$auto$opt_dff.cc:194:make_patterns_logic$7475, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$22533$memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22396$memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$22479$memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$22368$memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282, arst={ }, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$24806$auto$opt_dff.cc:194:make_patterns_logic$7627, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$25003$auto$opt_dff.cc:194:make_patterns_logic$7600, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  40 cells in clk=\clk_usb_48mhz_i, en=$abc$24844$auto$opt_dff.cc:194:make_patterns_logic$7622, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  31 cells in clk=\clk_usb_48mhz_i, en=$abc$25260$auto$opt_dff.cc:194:make_patterns_logic$7573, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$23910$auto$opt_dff.cc:219:make_patterns_logic$17495, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$23998$auto$opt_dff.cc:219:make_patterns_logic$17376, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  20 cells in clk=\clk_i, en=$abc$24054$auto$opt_dff.cc:194:make_patterns_logic$17031, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_usb_48mhz_i, en=$abc$25711$auto$opt_dff.cc:194:make_patterns_logic$7472, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$24012$auto$opt_dff.cc:219:make_patterns_logic$17339, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$23903$auto$opt_dff.cc:219:make_patterns_logic$17504, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  61 cells in clk=\clk_usb_48mhz_i, en=$abc$23809$auto$opt_dff.cc:219:make_patterns_logic$17641, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  29 cells in clk=\clk_usb_48mhz_i, en=$abc$23866$auto$opt_dff.cc:219:make_patterns_logic$17577, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$23896$auto$opt_dff.cc:219:make_patterns_logic$17513, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$24021$auto$opt_dff.cc:219:make_patterns_logic$17262, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_usb_48mhz_i, en=$abc$26065$lo14, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  88 cells in clk=\clk_usb_48mhz_i, en=$abc$23735$auto$opt_dff.cc:219:make_patterns_logic$17677, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  21 cells in clk=\clk_usb_48mhz_i, en=$abc$25735$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$24115$lo19, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_usb_48mhz_i, en=$abc$24299$usbuart_core.usbuart_txfifo.fifo_incr_rptr, arst=!$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  34 cells in clk=\clk_usb_48mhz_i, en=$abc$24264$usbuart_core.usbuart_rxfifo.fifo_incr_wptr, arst=!$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  28 cells in clk=\clk_usb_48mhz_i, en=$abc$24942$auto$opt_dff.cc:194:make_patterns_logic$7597, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$25572$auto$opt_dff.cc:219:make_patterns_logic$7469, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$22749$memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240, arst={ }, srst={ }
  78 cells in clk=\clk_usb_48mhz_i, en=$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst=$abc$23635$auto$opt_dff.cc:194:make_patterns_logic$7492
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$23720$auto$opt_dff.cc:219:make_patterns_logic$17718, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23181$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476, arst={ }, srst={ }
  45 cells in clk=\clk_usb_48mhz_i, en=$abc$23926$auto$opt_dff.cc:194:make_patterns_logic$17383, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$24034$auto$opt_dff.cc:219:make_patterns_logic$17182, arst=!\rst_ni, srst={ }
  27 cells in clk=\clk_usb_48mhz_i, en=$abc$24777$auto$opt_dff.cc:194:make_patterns_logic$7631, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$22506$memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$22830$memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226, arst={ }, srst={ }
  218 cells in clk=\clk_i, en=$abc$24513$usbuart_core.usbuart_rxfifo.fifo_incr_rptr, arst=!$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$24970$lo0, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$22341$memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22668$memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$25305$auto$opt_dff.cc:219:make_patterns_logic$7570, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$23587$auto$opt_dff.cc:219:make_patterns_logic$7537, arst={ }, srst=$abc$23587$auto$simplemap.cc:257:simplemap_eqne$11083
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$22722$memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22560$memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$22423$memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$23046$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$22965$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372, arst={ }, srst={ }
  38 cells in clk=\clk_usb_48mhz_i, en=$abc$25753$auto$opt_dff.cc:219:make_patterns_logic$7545, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  36 cells in clk=\clk_usb_48mhz_i, en=$abc$25519$auto$opt_dff.cc:219:make_patterns_logic$7439, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$22938$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$22884$memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$22776$memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$23559$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23451$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390, arst={ }, srst={ }
  4 cells in clk=\clk_usb_48mhz_i, en=$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=!$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23424$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23478$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23505$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$23532$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$23397$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420, arst={ }, srst={ }
  68 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  59 cells in clk=\clk_usb_48mhz_i, en=$abc$25632$auto$opt_dff.cc:219:make_patterns_logic$7487, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22857$memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232, arst={ }, srst={ }
  28 cells in clk=\clk_usb_48mhz_i, en=$abc$24720$auto$opt_dff.cc:194:make_patterns_logic$7635, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$23073$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530, arst={ }, srst={ }
  54 cells in clk=\clk_usb_48mhz_i, en=$abc$25187$auto$opt_dff.cc:194:make_patterns_logic$7560, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  37 cells in clk=\clk_usb_48mhz_i, en=$abc$25021$auto$opt_dff.cc:194:make_patterns_logic$7583, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$22587$memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184, arst={ }, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=!$abc$26065$auto$simplemap.cc:257:simplemap_eqne$12809, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  20 cells in clk=\clk_usb_48mhz_i, en=$abc$24895$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$22803$memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296, arst={ }, srst={ }
  57 cells in clk=\clk_usb_48mhz_i, en=$abc$25871$usbuart_core.usbuart_usbif.sof_valid, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$22992$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$22911$memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330, arst={ }, srst={ }
  60 cells in clk=\clk_usb_48mhz_i, en=$abc$25079$auto$opt_dff.cc:194:make_patterns_logic$7591, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$23370$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408, arst={ }, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=$abc$20976$auto$opt_dff.cc:219:make_patterns_logic$7517, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$20999$auto$opt_dff.cc:219:make_patterns_logic$7460, arst={ }, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$21023$auto$opt_dff.cc:219:make_patterns_logic$7463, arst={ }, srst={ }
  2 cells in clk=\clk_usb_48mhz_i, en=$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$21037$auto$opt_dff.cc:219:make_patterns_logic$7451, arst={ }, srst={ }
  4 cells in clk=\clk_usb_48mhz_i, en=$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$21076$auto$opt_dff.cc:219:make_patterns_logic$7520, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$25805$auto$opt_dff.cc:219:make_patterns_logic$7511, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$21096$auto$opt_dff.cc:219:make_patterns_logic$7514, arst={ }, srst={ }
  7 cells in clk=\clk_i, en=$abc$21116$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst={ }
  127 cells in clk=\clk_usb_48mhz_i, en=$abc$25938$auto$opt_dff.cc:219:make_patterns_logic$7643, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  22 cells in clk=\clk_i, en=$abc$24115$usbuart_core.usbuart_txfifo.fifo_incr_wptr, arst=!$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$21127$auto$opt_dff.cc:194:make_patterns_logic$7662, arst=!\rst_ni, srst={ }
  327 cells in clk=\clk_i, en=$abc$21134$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$21485$u_reg.u_intr_state_tx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$21491$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  9 cells in clk=\clk_i, en=$abc$21496$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$21507$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$21512$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  225 cells in clk=\clk_i, en=$abc$21521$u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$21748$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$21753$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  20 cells in clk=\clk_usb_48mhz_i, en=$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$7445, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$21785$auto$opt_dff.cc:219:make_patterns_logic$7448, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$21822$memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$21849$memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$21876$memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$21904$memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$21931$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$21958$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$21986$memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$22013$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$22041$memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$22069$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$22097$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$22124$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$22151$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$22179$memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$22206$memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$22233$auto$opt_dff.cc:219:make_patterns_logic$7434, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$22259$memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$22286$memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$22313$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426, arst={ }, srst={ }
  478 cells in clk=\clk_usb_48mhz_i, en={ }, arst=!$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }

3.34.2. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24076$auto$opt_dff.cc:219:make_patterns_logic$17048, asynchronously reset by !\rst_ni
Extracted 42 gates and 56 wires to a netlist network with 14 inputs and 13 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24198$auto$opt_dff.cc:219:make_patterns_logic$7619, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$24115$lo18, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24217$auto$opt_dff.cc:219:make_patterns_logic$7529
Extracted 22 gates and 34 wires to a netlist network with 12 inputs and 14 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24250$auto$opt_dff.cc:219:make_patterns_logic$7532
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 3 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26065$usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24750$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 25 gates and 50 wires to a netlist network with 25 inputs and 14 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by $abc$23625$auto$opt_dff.cc:253:combine_resets$17915
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 4 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23920$auto$opt_dff.cc:219:make_patterns_logic$17458, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 3 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24322$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 47 gates and 87 wires to a netlist network with 40 inputs and 21 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23019$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25320$auto$opt_dff.cc:219:make_patterns_logic$7557, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 5 outputs.

3.34.13.1. Executing ABC.

3.34.14. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $abc$21071$lo0
Extracted 17 gates and 25 wires to a netlist network with 8 inputs and 11 outputs.

3.34.14.1. Executing ABC.

3.34.15. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25242$auto$opt_dff.cc:194:make_patterns_logic$7563, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 16 gates and 19 wires to a netlist network with 3 inputs and 6 outputs.

3.34.15.1. Executing ABC.

3.34.16. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25173$auto$opt_dff.cc:194:make_patterns_logic$7579, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 6 outputs.

3.34.16.1. Executing ABC.

3.34.17. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25727$auto$opt_dff.cc:219:make_patterns_logic$7496, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 3 outputs.

3.34.17.1. Executing ABC.

3.34.18. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25590$auto$opt_dff.cc:219:make_patterns_logic$7442
Extracted 8 gates and 16 wires to a netlist network with 8 inputs and 5 outputs.

3.34.18.1. Executing ABC.

3.34.19. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25490$auto$opt_dff.cc:194:make_patterns_logic$7482, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 25 gates and 41 wires to a netlist network with 15 inputs and 11 outputs.

3.34.19.1. Executing ABC.

3.34.20. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23316$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.20.1. Executing ABC.

3.34.21. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23289$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.21.1. Executing ABC.

3.34.22. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23262$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.22.1. Executing ABC.

3.34.23. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23235$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.23.1. Executing ABC.

3.34.24. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23343$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.24.1. Executing ABC.

3.34.25. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22695$memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 10 outputs.

3.34.25.1. Executing ABC.

3.34.26. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22614$memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.34.26.1. Executing ABC.

3.34.27. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23154$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.27.1. Executing ABC.

3.34.28. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23127$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 9 outputs.

3.34.28.1. Executing ABC.

3.34.29. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23100$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.29.1. Executing ABC.

3.34.30. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23208$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.30.1. Executing ABC.

3.34.31. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22451$memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.34.31.1. Executing ABC.

3.34.32. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25013$auto$opt_dff.cc:219:make_patterns_logic$7610, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 12 gates and 22 wires to a netlist network with 10 inputs and 5 outputs.

3.34.32.1. Executing ABC.

3.34.33. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25063$auto$opt_dff.cc:194:make_patterns_logic$7588, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 8 gates and 11 wires to a netlist network with 3 inputs and 4 outputs.

3.34.33.1. Executing ABC.

3.34.34. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22641$memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.34.34.1. Executing ABC.

3.34.35. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24970$auto$opt_dff.cc:194:make_patterns_logic$7576, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 24 gates and 30 wires to a netlist network with 6 inputs and 13 outputs.

3.34.35.1. Executing ABC.

3.34.36. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25348$auto$opt_dff.cc:194:make_patterns_logic$7475, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 234 gates and 464 wires to a netlist network with 230 inputs and 18 outputs.

3.34.36.1. Executing ABC.

3.34.37. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22533$memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.34.37.1. Executing ABC.

3.34.38. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22396$memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.34.38.1. Executing ABC.

3.34.39. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22479$memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.34.39.1. Executing ABC.

3.34.40. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22368$memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.34.40.1. Executing ABC.

3.34.41. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24806$auto$opt_dff.cc:194:make_patterns_logic$7627, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 10 wires to a netlist network with 4 inputs and 4 outputs.

3.34.41.1. Executing ABC.

3.34.42. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25003$auto$opt_dff.cc:194:make_patterns_logic$7600, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 7 outputs.

3.34.42.1. Executing ABC.

3.34.43. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24844$auto$opt_dff.cc:194:make_patterns_logic$7622, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 25 outputs.

3.34.43.1. Executing ABC.

3.34.44. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25260$auto$opt_dff.cc:194:make_patterns_logic$7573, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 31 gates and 38 wires to a netlist network with 7 inputs and 16 outputs.

3.34.44.1. Executing ABC.

3.34.45. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23910$auto$opt_dff.cc:219:make_patterns_logic$17495, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 3 outputs.

3.34.45.1. Executing ABC.

3.34.46. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23998$auto$opt_dff.cc:219:make_patterns_logic$17376, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 5 outputs.

3.34.46.1. Executing ABC.

3.34.47. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24054$auto$opt_dff.cc:194:make_patterns_logic$17031, asynchronously reset by !\rst_ni
Extracted 20 gates and 35 wires to a netlist network with 15 inputs and 13 outputs.

3.34.47.1. Executing ABC.

3.34.48. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25711$auto$opt_dff.cc:194:make_patterns_logic$7472, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 21 gates and 39 wires to a netlist network with 18 inputs and 11 outputs.

3.34.48.1. Executing ABC.

3.34.49. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24012$auto$opt_dff.cc:219:make_patterns_logic$17339, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 4 outputs.

3.34.49.1. Executing ABC.

3.34.50. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23903$auto$opt_dff.cc:219:make_patterns_logic$17504, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.34.50.1. Executing ABC.

3.34.51. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23809$auto$opt_dff.cc:219:make_patterns_logic$17641, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 61 gates and 154 wires to a netlist network with 93 inputs and 50 outputs.

3.34.51.1. Executing ABC.

3.34.52. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23866$auto$opt_dff.cc:219:make_patterns_logic$17577, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 29 gates and 78 wires to a netlist network with 49 inputs and 25 outputs.

3.34.52.1. Executing ABC.

3.34.53. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23896$auto$opt_dff.cc:219:make_patterns_logic$17513, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 22 gates and 40 wires to a netlist network with 18 inputs and 6 outputs.

3.34.53.1. Executing ABC.

3.34.54. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24021$auto$opt_dff.cc:219:make_patterns_logic$17262, asynchronously reset by !\rst_ni
Extracted 10 gates and 13 wires to a netlist network with 3 inputs and 3 outputs.

3.34.54.1. Executing ABC.

3.34.55. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26065$lo14, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 23 gates and 26 wires to a netlist network with 3 inputs and 10 outputs.

3.34.55.1. Executing ABC.

3.34.56. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23735$auto$opt_dff.cc:219:make_patterns_logic$17677, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 88 gates and 178 wires to a netlist network with 90 inputs and 64 outputs.

3.34.56.1. Executing ABC.

3.34.57. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25735$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 21 gates and 34 wires to a netlist network with 13 inputs and 10 outputs.

3.34.57.1. Executing ABC.

3.34.58. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$24115$lo19, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.34.58.1. Executing ABC.

3.34.59. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24299$usbuart_core.usbuart_txfifo.fifo_incr_rptr, asynchronously reset by !$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 21 gates and 25 wires to a netlist network with 4 inputs and 5 outputs.

3.34.59.1. Executing ABC.

3.34.60. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24264$usbuart_core.usbuart_rxfifo.fifo_incr_wptr, asynchronously reset by !$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 34 gates and 36 wires to a netlist network with 2 inputs and 18 outputs.

3.34.60.1. Executing ABC.

3.34.61. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24942$auto$opt_dff.cc:194:make_patterns_logic$7597, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 28 gates and 35 wires to a netlist network with 7 inputs and 10 outputs.

3.34.61.1. Executing ABC.

3.34.62. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25572$auto$opt_dff.cc:219:make_patterns_logic$7469, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 16 gates and 26 wires to a netlist network with 10 inputs and 9 outputs.

3.34.62.1. Executing ABC.

3.34.63. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22749$memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.34.63.1. Executing ABC.

3.34.64. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, synchronously reset by $abc$23635$auto$opt_dff.cc:194:make_patterns_logic$7492
Extracted 65 gates and 85 wires to a netlist network with 20 inputs and 42 outputs.

3.34.64.1. Executing ABC.

3.34.65. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23720$auto$opt_dff.cc:219:make_patterns_logic$17718, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 11 gates and 15 wires to a netlist network with 4 inputs and 3 outputs.

3.34.65.1. Executing ABC.

3.34.66. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23181$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.66.1. Executing ABC.

3.34.67. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23926$auto$opt_dff.cc:194:make_patterns_logic$17383, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 45 gates and 64 wires to a netlist network with 19 inputs and 9 outputs.

3.34.67.1. Executing ABC.

3.34.68. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24034$auto$opt_dff.cc:219:make_patterns_logic$17182, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 6 outputs.

3.34.68.1. Executing ABC.

3.34.69. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24777$auto$opt_dff.cc:194:make_patterns_logic$7631, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 27 gates and 33 wires to a netlist network with 6 inputs and 8 outputs.

3.34.69.1. Executing ABC.

3.34.70. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22506$memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.34.70.1. Executing ABC.

3.34.71. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22830$memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 9 outputs.

3.34.71.1. Executing ABC.

3.34.72. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$24513$usbuart_core.usbuart_rxfifo.fifo_incr_rptr, asynchronously reset by !$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 218 gates and 385 wires to a netlist network with 167 inputs and 45 outputs.

3.34.72.1. Executing ABC.

3.34.73. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27180$lo1, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 22 gates and 30 wires to a netlist network with 8 inputs and 22 outputs.

3.34.73.1. Executing ABC.

3.34.74. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22341$memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.34.74.1. Executing ABC.

3.34.75. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22668$memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 10 outputs.

3.34.75.1. Executing ABC.

3.34.76. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25305$auto$opt_dff.cc:219:make_patterns_logic$7570, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 2 outputs.

3.34.76.1. Executing ABC.

3.34.77. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23587$auto$opt_dff.cc:219:make_patterns_logic$7537, synchronously reset by $abc$23587$auto$simplemap.cc:257:simplemap_eqne$11083
Extracted 15 gates and 29 wires to a netlist network with 14 inputs and 9 outputs.

3.34.77.1. Executing ABC.

3.34.78. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22722$memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 10 outputs.

3.34.78.1. Executing ABC.

3.34.79. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22560$memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.34.79.1. Executing ABC.

3.34.80. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22423$memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.34.80.1. Executing ABC.

3.34.81. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23046$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.34.81.1. Executing ABC.

3.34.82. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22965$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 9 outputs.

3.34.82.1. Executing ABC.

3.34.83. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25753$auto$opt_dff.cc:219:make_patterns_logic$7545, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 38 gates and 64 wires to a netlist network with 26 inputs and 24 outputs.

3.34.83.1. Executing ABC.

3.34.84. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25519$auto$opt_dff.cc:219:make_patterns_logic$7439, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 36 gates and 58 wires to a netlist network with 22 inputs and 13 outputs.

3.34.84.1. Executing ABC.

3.34.85. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22938$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 9 outputs.

3.34.85.1. Executing ABC.

3.34.86. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22884$memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 9 outputs.

3.34.86.1. Executing ABC.

3.34.87. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22776$memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.34.87.1. Executing ABC.

3.34.88. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23559$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.88.1. Executing ABC.

3.34.89. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23451$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.89.1. Executing ABC.

3.34.90. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by !$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.90.1. Executing ABC.

3.34.91. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23424$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.91.1. Executing ABC.

3.34.92. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23478$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.92.1. Executing ABC.

3.34.93. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23505$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.93.1. Executing ABC.

3.34.94. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23532$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.94.1. Executing ABC.

3.34.95. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23397$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.34.95.1. Executing ABC.

3.34.96. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 68 gates and 97 wires to a netlist network with 29 inputs and 25 outputs.

3.34.96.1. Executing ABC.

3.34.97. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25632$auto$opt_dff.cc:219:make_patterns_logic$7487, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 59 gates and 88 wires to a netlist network with 29 inputs and 35 outputs.

3.34.97.1. Executing ABC.

3.34.98. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22857$memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.34.98.1. Executing ABC.

3.34.99. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24720$auto$opt_dff.cc:194:make_patterns_logic$7635, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 28 gates and 50 wires to a netlist network with 22 inputs and 3 outputs.

3.34.99.1. Executing ABC.

3.34.100. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23073$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.34.100.1. Executing ABC.

3.34.101. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25187$auto$opt_dff.cc:194:make_patterns_logic$7560, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 54 gates and 59 wires to a netlist network with 5 inputs and 17 outputs.

3.34.101.1. Executing ABC.

3.34.102. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25021$auto$opt_dff.cc:194:make_patterns_logic$7583, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 37 gates and 43 wires to a netlist network with 6 inputs and 16 outputs.

3.34.102.1. Executing ABC.

3.34.103. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22587$memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.34.103.1. Executing ABC.

3.34.104. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by !$abc$26065$auto$simplemap.cc:257:simplemap_eqne$12809, asynchronously reset by !$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 25 gates and 32 wires to a netlist network with 7 inputs and 12 outputs.

3.34.104.1. Executing ABC.

3.34.105. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$24895$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 20 gates and 37 wires to a netlist network with 17 inputs and 20 outputs.

3.34.105.1. Executing ABC.

3.34.106. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22803$memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.34.106.1. Executing ABC.

3.34.107. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25871$usbuart_core.usbuart_usbif.sof_valid, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 57 gates and 105 wires to a netlist network with 48 inputs and 23 outputs.

3.34.107.1. Executing ABC.

3.34.108. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22992$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.34.108.1. Executing ABC.

3.34.109. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22911$memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 9 outputs.

3.34.109.1. Executing ABC.

3.34.110. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25079$auto$opt_dff.cc:194:make_patterns_logic$7591, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 60 gates and 63 wires to a netlist network with 3 inputs and 12 outputs.

3.34.110.1. Executing ABC.

3.34.111. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$23370$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 9 outputs.

3.34.111.1. Executing ABC.

3.34.112. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$20976$auto$opt_dff.cc:219:make_patterns_logic$7517
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 8 outputs.

3.34.112.1. Executing ABC.

3.34.113. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$20999$auto$opt_dff.cc:219:make_patterns_logic$7460
Extracted 16 gates and 25 wires to a netlist network with 9 inputs and 8 outputs.

3.34.113.1. Executing ABC.

3.34.114. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21023$auto$opt_dff.cc:219:make_patterns_logic$7463
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.34.114.1. Executing ABC.

3.34.115. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.34.115.1. Executing ABC.

3.34.116. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21037$auto$opt_dff.cc:219:make_patterns_logic$7451
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 10 outputs.

3.34.116.1. Executing ABC.

3.34.117. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

3.34.117.1. Executing ABC.

3.34.118. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21076$auto$opt_dff.cc:219:make_patterns_logic$7520
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 7 outputs.

3.34.118.1. Executing ABC.

3.34.119. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25805$auto$opt_dff.cc:219:make_patterns_logic$7511
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 6 outputs.

3.34.119.1. Executing ABC.

3.34.120. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21096$auto$opt_dff.cc:219:make_patterns_logic$7514
Extracted 12 gates and 20 wires to a netlist network with 8 inputs and 6 outputs.

3.34.120.1. Executing ABC.

3.34.121. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21116$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.34.121.1. Executing ABC.

3.34.122. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508
Extracted 19 gates and 29 wires to a netlist network with 10 inputs and 8 outputs.

3.34.122.1. Executing ABC.

3.34.123. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$25938$auto$opt_dff.cc:219:make_patterns_logic$7643, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 127 gates and 130 wires to a netlist network with 3 inputs and 25 outputs.

3.34.123.1. Executing ABC.

3.34.124. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 4 outputs.

3.34.124.1. Executing ABC.

3.34.125. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29555$abc$24115$usbuart_core.usbuart_txfifo.fifo_incr_wptr, asynchronously reset by !$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 22 gates and 22 wires to a netlist network with 0 inputs and 12 outputs.

3.34.125.1. Executing ABC.

3.34.126. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21127$auto$opt_dff.cc:194:make_patterns_logic$7662, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.34.126.1. Executing ABC.

3.34.127. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21134$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 327 gates and 455 wires to a netlist network with 128 inputs and 54 outputs.

3.34.127.1. Executing ABC.

3.34.128. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21485$u_reg.u_intr_state_tx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.34.128.1. Executing ABC.

3.34.129. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21491$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.129.1. Executing ABC.

3.34.130. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21496$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 2 outputs.

3.34.130.1. Executing ABC.

3.34.131. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21507$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.131.1. Executing ABC.

3.34.132. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21512$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.34.132.1. Executing ABC.

3.34.133. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21521$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

3.34.133.1. Executing ABC.

3.34.134. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21748$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.34.134.1. Executing ABC.

3.34.135. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$21753$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.34.135.1. Executing ABC.

3.34.136. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21765$auto$opt_dff.cc:219:make_patterns_logic$7445
Extracted 20 gates and 28 wires to a netlist network with 8 inputs and 8 outputs.

3.34.136.1. Executing ABC.

3.34.137. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21785$auto$opt_dff.cc:219:make_patterns_logic$7448
Extracted 15 gates and 30 wires to a netlist network with 15 inputs and 13 outputs.

3.34.137.1. Executing ABC.

3.34.138. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21822$memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.138.1. Executing ABC.

3.34.139. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21849$memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.139.1. Executing ABC.

3.34.140. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21876$memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.140.1. Executing ABC.

3.34.141. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21904$memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.141.1. Executing ABC.

3.34.142. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21931$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.142.1. Executing ABC.

3.34.143. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21958$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.143.1. Executing ABC.

3.34.144. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$21986$memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.144.1. Executing ABC.

3.34.145. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22013$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.145.1. Executing ABC.

3.34.146. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22041$memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.146.1. Executing ABC.

3.34.147. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22069$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.147.1. Executing ABC.

3.34.148. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22097$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.148.1. Executing ABC.

3.34.149. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22124$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.149.1. Executing ABC.

3.34.150. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22151$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.150.1. Executing ABC.

3.34.151. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22179$memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.151.1. Executing ABC.

3.34.152. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22206$memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.152.1. Executing ABC.

3.34.153. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22233$auto$opt_dff.cc:219:make_patterns_logic$7434
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.34.153.1. Executing ABC.

3.34.154. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22259$memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.154.1. Executing ABC.

3.34.155. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22286$memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.34.155.1. Executing ABC.

3.34.156. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$22313$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.34.156.1. Executing ABC.

3.34.157. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 476 gates and 634 wires to a netlist network with 158 inputs and 140 outputs.

3.34.157.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$26516$abc$24198$auto$opt_dff.cc:219:make_patterns_logic$7619, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$29555$lo11, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$26571$abc$26065$usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=$abc$26604$abc$23625$auto$opt_dff.cc:253:combine_resets$17915
  33 cells in clk=\clk_i, en=$abc$26476$abc$24076$auto$opt_dff.cc:219:make_patterns_logic$17048, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$26613$abc$23920$auto$opt_dff.cc:219:make_patterns_logic$17458, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=$abc$26620$abc$24322$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$26697$abc$25320$auto$opt_dff.cc:219:make_patterns_logic$7557, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=$abc$30307$lo0
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$26728$abc$25242$auto$opt_dff.cc:194:make_patterns_logic$7563, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$26745$abc$25173$auto$opt_dff.cc:194:make_patterns_logic$7579, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$26761$abc$25727$auto$opt_dff.cc:219:make_patterns_logic$7496, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$26769$abc$25590$auto$opt_dff.cc:219:make_patterns_logic$7442, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$26779$abc$25490$auto$opt_dff.cc:194:make_patterns_logic$7482, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$26802$abc$23316$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$26829$abc$23289$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$26857$abc$23262$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$26884$abc$23235$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$26911$abc$23343$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$26938$abc$22695$memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$26966$abc$22614$memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$26993$abc$23154$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$27020$abc$23127$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$27047$abc$23100$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$26670$abc$23019$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$27074$abc$23208$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$27128$abc$25013$auto$opt_dff.cc:219:make_patterns_logic$7610, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$27140$abc$25063$auto$opt_dff.cc:194:make_patterns_logic$7588, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$27153$abc$22641$memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276, arst={ }, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=$abc$27180$abc$24970$auto$opt_dff.cc:194:make_patterns_logic$7576, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  303 cells in clk=\clk_usb_48mhz_i, en=$abc$27214$abc$25348$auto$opt_dff.cc:194:make_patterns_logic$7475, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$27651$abc$22533$memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$27678$abc$22396$memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$27705$abc$22479$memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336, arst={ }, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$27759$abc$24806$auto$opt_dff.cc:194:make_patterns_logic$7627, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$27766$abc$25003$auto$opt_dff.cc:194:make_patterns_logic$7600, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  39 cells in clk=\clk_usb_48mhz_i, en=$abc$27781$abc$24844$auto$opt_dff.cc:194:make_patterns_logic$7622, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$31765$abc$22313$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426, arst={ }, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$27870$abc$23910$auto$opt_dff.cc:219:make_patterns_logic$17495, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$27878$abc$23998$auto$opt_dff.cc:219:make_patterns_logic$17376, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  21 cells in clk=\clk_i, en=$abc$27891$abc$24054$auto$opt_dff.cc:194:make_patterns_logic$17031, arst=!\rst_ni, srst={ }
  21 cells in clk=\clk_usb_48mhz_i, en=$abc$27912$abc$25711$auto$opt_dff.cc:194:make_patterns_logic$7472, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$27936$abc$24012$auto$opt_dff.cc:219:make_patterns_logic$17339, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$27945$abc$23903$auto$opt_dff.cc:219:make_patterns_logic$17504, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  82 cells in clk=\clk_usb_48mhz_i, en=$abc$27951$abc$23809$auto$opt_dff.cc:219:make_patterns_logic$17641, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  37 cells in clk=\clk_usb_48mhz_i, en=$abc$28019$abc$23866$auto$opt_dff.cc:219:make_patterns_logic$17577, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  20 cells in clk=\clk_usb_48mhz_i, en=$abc$28050$abc$23896$auto$opt_dff.cc:219:make_patterns_logic$17513, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$28070$abc$24021$auto$opt_dff.cc:219:make_patterns_logic$17262, arst=!\rst_ni, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=$abc$31792$lo13, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  75 cells in clk=\clk_usb_48mhz_i, en=$abc$28110$abc$23735$auto$opt_dff.cc:219:make_patterns_logic$17677, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$26530$abc$24217$auto$opt_dff.cc:219:make_patterns_logic$7529, arst={ }, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=$abc$28211$abc$25735$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$29555$lo10, arst=!\rst_ni, srst={ }
  23 cells in clk=\clk_usb_48mhz_i, en=$abc$28240$abc$24299$usbuart_core.usbuart_txfifo.fifo_incr_rptr, arst=!$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$27101$abc$22451$memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342, arst={ }, srst={ }
  34 cells in clk=\clk_usb_48mhz_i, en=$abc$28262$abc$24264$usbuart_core.usbuart_rxfifo.fifo_incr_wptr, arst=!$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$28326$abc$25572$auto$opt_dff.cc:219:make_patterns_logic$7469, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$28343$abc$22749$memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240, arst={ }, srst={ }
  79 cells in clk=\clk_usb_48mhz_i, en=$abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst=$abc$28370$abc$23635$auto$opt_dff.cc:194:make_patterns_logic$7492
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$28443$abc$23720$auto$opt_dff.cc:219:make_patterns_logic$17718, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$28457$abc$23181$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476, arst={ }, srst={ }
  30 cells in clk=\clk_usb_48mhz_i, en=$abc$27826$abc$25260$auto$opt_dff.cc:194:make_patterns_logic$7573, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  47 cells in clk=\clk_usb_48mhz_i, en=$abc$28484$abc$23926$auto$opt_dff.cc:194:make_patterns_logic$17383, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_i, en=$abc$28530$abc$24034$auto$opt_dff.cc:219:make_patterns_logic$17182, arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_usb_48mhz_i, en=$abc$28548$abc$24777$auto$opt_dff.cc:194:make_patterns_logic$7631, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$28579$abc$22506$memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$28606$abc$22830$memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226, arst={ }, srst={ }
  202 cells in clk=\clk_i, en=$abc$28633$abc$24513$usbuart_core.usbuart_rxfifo.fifo_incr_rptr, arst=!$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  25 cells in clk=\clk_usb_48mhz_i, en=$abc$27180$lo1, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$28953$abc$22341$memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$29008$abc$25305$auto$opt_dff.cc:219:make_patterns_logic$7570, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$29023$abc$23587$auto$opt_dff.cc:219:make_patterns_logic$7537, arst={ }, srst=$abc$29023$abc$23587$auto$simplemap.cc:257:simplemap_eqne$11083
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$29051$abc$22722$memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$29079$abc$22560$memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$29106$abc$22423$memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$29133$abc$23046$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542, arst={ }, srst={ }
  51 cells in clk=\clk_usb_48mhz_i, en=$abc$29187$abc$25753$auto$opt_dff.cc:219:make_patterns_logic$7545, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$29160$abc$22965$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372, arst={ }, srst={ }
  34 cells in clk=\clk_usb_48mhz_i, en=$abc$29232$abc$25519$auto$opt_dff.cc:219:make_patterns_logic$7439, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$29279$abc$22938$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$29306$abc$22884$memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$29333$abc$22776$memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166, arst={ }, srst={ }
  26 cells in clk=\clk_usb_48mhz_i, en=$abc$26577$abc$24750$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  27 cells in clk=\clk_usb_48mhz_i, en=$abc$28297$abc$24942$auto$opt_dff.cc:194:make_patterns_logic$7597, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$29360$abc$23559$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494, arst={ }, srst={ }
  9 cells in clk=\clk_usb_48mhz_i, en=$abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=!$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$29420$abc$23424$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$29447$abc$23478$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$29474$abc$23505$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$29501$abc$23532$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$29528$abc$23397$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420, arst={ }, srst={ }
  90 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  67 cells in clk=\clk_usb_48mhz_i, en=$abc$29635$abc$25632$auto$opt_dff.cc:219:make_patterns_logic$7487, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$29705$abc$22857$memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232, arst={ }, srst={ }
  28 cells in clk=\clk_usb_48mhz_i, en=$abc$29732$abc$24720$auto$opt_dff.cc:194:make_patterns_logic$7635, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$29761$abc$23073$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530, arst={ }, srst={ }
  37 cells in clk=\clk_usb_48mhz_i, en=$abc$29843$abc$25021$auto$opt_dff.cc:194:make_patterns_logic$7583, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$29881$abc$22587$memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184, arst={ }, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=!$abc$29908$abc$26065$auto$simplemap.cc:257:simplemap_eqne$12809, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$27732$abc$22368$memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282, arst={ }, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$29943$abc$24895$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$28980$abc$22668$memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$29986$abc$22803$memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296, arst={ }, srst={ }
  54 cells in clk=\clk_usb_48mhz_i, en=$abc$30013$abc$25871$usbuart_core.usbuart_usbif.sof_valid, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$30081$abc$22992$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556, arst={ }, srst={ }
  54 cells in clk=\clk_usb_48mhz_i, en=$abc$29788$abc$25187$auto$opt_dff.cc:194:make_patterns_logic$7560, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$30108$abc$22911$memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$29388$abc$23451$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$30196$abc$23370$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408, arst={ }, srst={ }
  61 cells in clk=\clk_usb_48mhz_i, en=$abc$30135$abc$25079$auto$opt_dff.cc:194:make_patterns_logic$7591, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=$abc$30223$abc$20976$auto$opt_dff.cc:219:make_patterns_logic$7517, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$30246$abc$20999$auto$opt_dff.cc:219:make_patterns_logic$7460, arst={ }, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$30267$abc$21023$auto$opt_dff.cc:219:make_patterns_logic$7463, arst={ }, srst={ }
  3 cells in clk=\clk_usb_48mhz_i, en=$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=$abc$30275$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$30280$abc$21037$auto$opt_dff.cc:219:make_patterns_logic$7451, arst={ }, srst={ }
  4 cells in clk=\clk_usb_48mhz_i, en=$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$30313$abc$21076$auto$opt_dff.cc:219:make_patterns_logic$7520, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$30331$abc$25805$auto$opt_dff.cc:219:make_patterns_logic$7511, arst={ }, srst={ }
  7 cells in clk=\clk_i, en=$abc$30360$abc$21116$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$30343$abc$21096$auto$opt_dff.cc:219:make_patterns_logic$7514, arst={ }, srst={ }
  24 cells in clk=\clk_i, en=$abc$29555$abc$24115$usbuart_core.usbuart_txfifo.fifo_incr_wptr, arst=!$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$30553$abc$21127$auto$opt_dff.cc:194:make_patterns_logic$7662, arst=!\rst_ni, srst={ }
  369 cells in clk=\clk_i, en=$abc$30560$abc$21134$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$30942$abc$21485$u_reg.u_intr_state_tx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$30948$abc$21491$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$30953$abc$21496$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$30963$abc$21507$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$30968$abc$21512$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  224 cells in clk=\clk_i, en=$abc$30977$abc$21521$u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$31203$abc$21748$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$31208$abc$21753$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$31221$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$7445, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$31241$abc$21785$auto$opt_dff.cc:219:make_patterns_logic$7448, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$31272$abc$21822$memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$31299$abc$21849$memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$31326$abc$21876$memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$31354$abc$21904$memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$31381$abc$21931$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$31408$abc$21958$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$31436$abc$21986$memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$31463$abc$22013$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$31491$abc$22041$memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$31519$abc$22069$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$31547$abc$22097$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$31574$abc$22124$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$31601$abc$22151$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$31629$abc$22179$memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$31656$abc$22206$memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368, arst={ }, srst={ }
  23 cells in clk=\clk_usb_48mhz_i, en=$abc$31683$abc$22233$auto$opt_dff.cc:219:make_patterns_logic$7434, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$31711$abc$22259$memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$31738$abc$22286$memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302, arst={ }, srst={ }
  125 cells in clk=\clk_usb_48mhz_i, en=$abc$30388$abc$25938$auto$opt_dff.cc:219:make_patterns_logic$7643, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$26561$abc$24250$auto$opt_dff.cc:219:make_patterns_logic$7532, arst={ }, srst={ }
  451 cells in clk=\clk_usb_48mhz_i, en={ }, arst=!$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }

3.35.2. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26516$abc$24198$auto$opt_dff.cc:219:make_patterns_logic$7619, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$29555$lo11, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26571$abc$26065$usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by $abc$26604$abc$23625$auto$opt_dff.cc:253:combine_resets$17915
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$26476$abc$24076$auto$opt_dff.cc:219:make_patterns_logic$17048, asynchronously reset by !\rst_ni
Extracted 33 gates and 45 wires to a netlist network with 12 inputs and 12 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26613$abc$23920$auto$opt_dff.cc:219:make_patterns_logic$17458, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 12 wires to a netlist network with 7 inputs and 3 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26620$abc$24322$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 24 gates and 42 wires to a netlist network with 18 inputs and 14 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26697$abc$25320$auto$opt_dff.cc:219:make_patterns_logic$7557, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 5 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $abc$30307$lo0
Extracted 16 gates and 23 wires to a netlist network with 7 inputs and 11 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26728$abc$25242$auto$opt_dff.cc:194:make_patterns_logic$7563, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 16 gates and 19 wires to a netlist network with 3 inputs and 6 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26745$abc$25173$auto$opt_dff.cc:194:make_patterns_logic$7579, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 11 gates and 14 wires to a netlist network with 3 inputs and 6 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26761$abc$25727$auto$opt_dff.cc:219:make_patterns_logic$7496, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 2 outputs.

3.35.13.1. Executing ABC.

3.35.14. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26769$abc$25590$auto$opt_dff.cc:219:make_patterns_logic$7442
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.35.14.1. Executing ABC.

3.35.15. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26779$abc$25490$auto$opt_dff.cc:194:make_patterns_logic$7482, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 18 gates and 28 wires to a netlist network with 10 inputs and 9 outputs.

3.35.15.1. Executing ABC.

3.35.16. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26802$abc$23316$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432
Extracted 18 gates and 36 wires to a netlist network with 18 inputs and 9 outputs.

3.35.16.1. Executing ABC.

3.35.17. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26829$abc$23289$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 10 outputs.

3.35.17.1. Executing ABC.

3.35.18. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26857$abc$23262$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452
Extracted 18 gates and 33 wires to a netlist network with 15 inputs and 9 outputs.

3.35.18.1. Executing ABC.

3.35.19. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26884$abc$23235$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458
Extracted 17 gates and 32 wires to a netlist network with 15 inputs and 9 outputs.

3.35.19.1. Executing ABC.

3.35.20. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26911$abc$23343$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352
Extracted 18 gates and 37 wires to a netlist network with 19 inputs and 9 outputs.

3.35.20.1. Executing ABC.

3.35.21. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26938$abc$22695$memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 10 outputs.

3.35.21.1. Executing ABC.

3.35.22. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26966$abc$22614$memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.35.22.1. Executing ABC.

3.35.23. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26993$abc$23154$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 9 outputs.

3.35.23.1. Executing ABC.

3.35.24. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27020$abc$23127$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502
Extracted 18 gates and 35 wires to a netlist network with 17 inputs and 9 outputs.

3.35.24.1. Executing ABC.

3.35.25. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27047$abc$23100$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520
Extracted 18 gates and 34 wires to a netlist network with 16 inputs and 9 outputs.

3.35.25.1. Executing ABC.

3.35.26. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26670$abc$23019$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.35.26.1. Executing ABC.

3.35.27. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27074$abc$23208$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464
Extracted 18 gates and 33 wires to a netlist network with 15 inputs and 9 outputs.

3.35.27.1. Executing ABC.

3.35.28. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27128$abc$25013$auto$opt_dff.cc:219:make_patterns_logic$7610, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 4 outputs.

3.35.28.1. Executing ABC.

3.35.29. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27140$abc$25063$auto$opt_dff.cc:194:make_patterns_logic$7588, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 6 outputs.

3.35.29.1. Executing ABC.

3.35.30. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27153$abc$22641$memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.35.30.1. Executing ABC.

3.35.31. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27180$abc$24970$auto$opt_dff.cc:194:make_patterns_logic$7576, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 25 gates and 31 wires to a netlist network with 6 inputs and 14 outputs.

3.35.31.1. Executing ABC.

3.35.32. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27214$abc$25348$auto$opt_dff.cc:194:make_patterns_logic$7475, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 303 gates and 510 wires to a netlist network with 207 inputs and 32 outputs.

3.35.32.1. Executing ABC.

3.35.33. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27651$abc$22533$memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.35.33.1. Executing ABC.

3.35.34. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27678$abc$22396$memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.35.34.1. Executing ABC.

3.35.35. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27705$abc$22479$memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.35.35.1. Executing ABC.

3.35.36. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27759$abc$24806$auto$opt_dff.cc:194:make_patterns_logic$7627, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

3.35.36.1. Executing ABC.

3.35.37. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27766$abc$25003$auto$opt_dff.cc:194:make_patterns_logic$7600, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 24 wires to a netlist network with 11 inputs and 6 outputs.

3.35.37.1. Executing ABC.

3.35.38. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27781$abc$24844$auto$opt_dff.cc:194:make_patterns_logic$7622, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 39 gates and 43 wires to a netlist network with 4 inputs and 24 outputs.

3.35.38.1. Executing ABC.

3.35.39. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31765$abc$22313$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426
Extracted 17 gates and 34 wires to a netlist network with 17 inputs and 9 outputs.

3.35.39.1. Executing ABC.

3.35.40. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27870$abc$23910$auto$opt_dff.cc:219:make_patterns_logic$17495, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.35.40.1. Executing ABC.

3.35.41. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27878$abc$23998$auto$opt_dff.cc:219:make_patterns_logic$17376, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 4 outputs.

3.35.41.1. Executing ABC.

3.35.42. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$27891$abc$24054$auto$opt_dff.cc:194:make_patterns_logic$17031, asynchronously reset by !\rst_ni
Extracted 21 gates and 37 wires to a netlist network with 15 inputs and 14 outputs.

3.35.42.1. Executing ABC.

3.35.43. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27912$abc$25711$auto$opt_dff.cc:194:make_patterns_logic$7472, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 21 gates and 39 wires to a netlist network with 18 inputs and 11 outputs.

3.35.43.1. Executing ABC.

3.35.44. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27936$abc$24012$auto$opt_dff.cc:219:make_patterns_logic$17339, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.35.44.1. Executing ABC.

3.35.45. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27945$abc$23903$auto$opt_dff.cc:219:make_patterns_logic$17504, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.35.45.1. Executing ABC.

3.35.46. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27951$abc$23809$auto$opt_dff.cc:219:make_patterns_logic$17641, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 82 gates and 191 wires to a netlist network with 109 inputs and 50 outputs.

3.35.46.1. Executing ABC.

3.35.47. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28019$abc$23866$auto$opt_dff.cc:219:make_patterns_logic$17577, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 37 gates and 92 wires to a netlist network with 55 inputs and 27 outputs.

3.35.47.1. Executing ABC.

3.35.48. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28050$abc$23896$auto$opt_dff.cc:219:make_patterns_logic$17513, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 20 gates and 37 wires to a netlist network with 17 inputs and 5 outputs.

3.35.48.1. Executing ABC.

3.35.49. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28070$abc$24021$auto$opt_dff.cc:219:make_patterns_logic$17262, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 5 outputs.

3.35.49.1. Executing ABC.

3.35.50. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31792$lo13, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 25 gates and 29 wires to a netlist network with 4 inputs and 9 outputs.

3.35.50.1. Executing ABC.

3.35.51. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28110$abc$23735$auto$opt_dff.cc:219:make_patterns_logic$17677, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 75 gates and 156 wires to a netlist network with 81 inputs and 74 outputs.

3.35.51.1. Executing ABC.

3.35.52. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26530$abc$24217$auto$opt_dff.cc:219:make_patterns_logic$7529
Extracted 22 gates and 34 wires to a netlist network with 12 inputs and 14 outputs.

3.35.52.1. Executing ABC.

3.35.53. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28211$abc$25735$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, asynchronously reset by !$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 24 gates and 40 wires to a netlist network with 16 inputs and 11 outputs.

3.35.53.1. Executing ABC.

3.35.54. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$29555$lo10, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.35.54.1. Executing ABC.

3.35.55. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28240$abc$24299$usbuart_core.usbuart_txfifo.fifo_incr_rptr, asynchronously reset by !$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 23 gates and 26 wires to a netlist network with 3 inputs and 3 outputs.

3.35.55.1. Executing ABC.

3.35.56. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27101$abc$22451$memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.35.56.1. Executing ABC.

3.35.57. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28262$abc$24264$usbuart_core.usbuart_rxfifo.fifo_incr_wptr, asynchronously reset by !$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 34 gates and 36 wires to a netlist network with 2 inputs and 18 outputs.

3.35.57.1. Executing ABC.

3.35.58. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28326$abc$25572$auto$opt_dff.cc:219:make_patterns_logic$7469, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 8 outputs.

3.35.58.1. Executing ABC.

3.35.59. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28343$abc$22749$memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.35.59.1. Executing ABC.

3.35.60. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, synchronously reset by $abc$28370$abc$23635$auto$opt_dff.cc:194:make_patterns_logic$7492
Extracted 66 gates and 86 wires to a netlist network with 20 inputs and 41 outputs.

3.35.60.1. Executing ABC.

3.35.61. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28443$abc$23720$auto$opt_dff.cc:219:make_patterns_logic$17718, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 17 wires to a netlist network with 4 inputs and 4 outputs.

3.35.61.1. Executing ABC.

3.35.62. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28457$abc$23181$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.35.62.1. Executing ABC.

3.35.63. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27826$abc$25260$auto$opt_dff.cc:194:make_patterns_logic$7573, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 30 gates and 37 wires to a netlist network with 7 inputs and 15 outputs.

3.35.63.1. Executing ABC.

3.35.64. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28484$abc$23926$auto$opt_dff.cc:194:make_patterns_logic$17383, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 47 gates and 66 wires to a netlist network with 19 inputs and 9 outputs.

3.35.64.1. Executing ABC.

3.35.65. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28530$abc$24034$auto$opt_dff.cc:219:make_patterns_logic$17182, asynchronously reset by !\rst_ni
Extracted 16 gates and 21 wires to a netlist network with 5 inputs and 5 outputs.

3.35.65.1. Executing ABC.

3.35.66. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28548$abc$24777$auto$opt_dff.cc:194:make_patterns_logic$7631, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 26 gates and 30 wires to a netlist network with 4 inputs and 8 outputs.

3.35.66.1. Executing ABC.

3.35.67. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28579$abc$22506$memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.35.67.1. Executing ABC.

3.35.68. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28606$abc$22830$memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.35.68.1. Executing ABC.

3.35.69. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$28633$abc$24513$usbuart_core.usbuart_rxfifo.fifo_incr_rptr, asynchronously reset by !$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 202 gates and 366 wires to a netlist network with 164 inputs and 86 outputs.

3.35.69.1. Executing ABC.

3.35.70. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32853$lo1, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 25 gates and 33 wires to a netlist network with 8 inputs and 22 outputs.

3.35.70.1. Executing ABC.

3.35.71. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28953$abc$22341$memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252
Extracted 18 gates and 37 wires to a netlist network with 19 inputs and 9 outputs.

3.35.71.1. Executing ABC.

3.35.72. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29008$abc$25305$auto$opt_dff.cc:219:make_patterns_logic$7570, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 15 gates and 19 wires to a netlist network with 4 inputs and 2 outputs.

3.35.72.1. Executing ABC.

3.35.73. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29023$abc$23587$auto$opt_dff.cc:219:make_patterns_logic$7537, synchronously reset by $abc$29023$abc$23587$auto$simplemap.cc:257:simplemap_eqne$11083
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 8 outputs.

3.35.73.1. Executing ABC.

3.35.74. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29051$abc$22722$memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 10 outputs.

3.35.74.1. Executing ABC.

3.35.75. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29079$abc$22560$memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.35.75.1. Executing ABC.

3.35.76. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29106$abc$22423$memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.35.76.1. Executing ABC.

3.35.77. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29133$abc$23046$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.35.77.1. Executing ABC.

3.35.78. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29187$abc$25753$auto$opt_dff.cc:219:make_patterns_logic$7545, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 49 gates and 93 wires to a netlist network with 44 inputs and 22 outputs.

3.35.78.1. Executing ABC.

3.35.79. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29160$abc$22965$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.35.79.1. Executing ABC.

3.35.80. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29232$abc$25519$auto$opt_dff.cc:219:make_patterns_logic$7439, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 34 gates and 56 wires to a netlist network with 22 inputs and 10 outputs.

3.35.80.1. Executing ABC.

3.35.81. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29279$abc$22938$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 9 outputs.

3.35.81.1. Executing ABC.

3.35.82. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29306$abc$22884$memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.35.82.1. Executing ABC.

3.35.83. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29333$abc$22776$memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.35.83.1. Executing ABC.

3.35.84. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26577$abc$24750$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 26 gates and 50 wires to a netlist network with 24 inputs and 15 outputs.

3.35.84.1. Executing ABC.

3.35.85. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28297$abc$24942$auto$opt_dff.cc:194:make_patterns_logic$7597, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 27 gates and 34 wires to a netlist network with 7 inputs and 9 outputs.

3.35.85.1. Executing ABC.

3.35.86. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29360$abc$23559$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 10 outputs.

3.35.86.1. Executing ABC.

3.35.87. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32301$abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by !$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 6 outputs.

3.35.87.1. Executing ABC.

3.35.88. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29420$abc$23424$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 9 outputs.

3.35.88.1. Executing ABC.

3.35.89. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29447$abc$23478$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.35.89.1. Executing ABC.

3.35.90. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29474$abc$23505$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.35.90.1. Executing ABC.

3.35.91. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29501$abc$23532$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 9 outputs.

3.35.91.1. Executing ABC.

3.35.92. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29528$abc$23397$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.35.92.1. Executing ABC.

3.35.93. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 90 gates and 137 wires to a netlist network with 47 inputs and 26 outputs.

3.35.93.1. Executing ABC.

3.35.94. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29635$abc$25632$auto$opt_dff.cc:219:make_patterns_logic$7487, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 67 gates and 95 wires to a netlist network with 28 inputs and 36 outputs.

3.35.94.1. Executing ABC.

3.35.95. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29705$abc$22857$memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 9 outputs.

3.35.95.1. Executing ABC.

3.35.96. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29732$abc$24720$auto$opt_dff.cc:194:make_patterns_logic$7635, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 28 gates and 50 wires to a netlist network with 22 inputs and 3 outputs.

3.35.96.1. Executing ABC.

3.35.97. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29761$abc$23073$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.35.97.1. Executing ABC.

3.35.98. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29843$abc$25021$auto$opt_dff.cc:194:make_patterns_logic$7583, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 37 gates and 43 wires to a netlist network with 6 inputs and 16 outputs.

3.35.98.1. Executing ABC.

3.35.99. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29881$abc$22587$memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184
Extracted 17 gates and 34 wires to a netlist network with 17 inputs and 9 outputs.

3.35.99.1. Executing ABC.

3.35.100. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by !$abc$29908$abc$26065$auto$simplemap.cc:257:simplemap_eqne$12809, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 24 gates and 29 wires to a netlist network with 5 inputs and 10 outputs.

3.35.100.1. Executing ABC.

3.35.101. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$27732$abc$22368$memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 9 outputs.

3.35.101.1. Executing ABC.

3.35.102. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29943$abc$24895$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 22 gates and 41 wires to a netlist network with 19 inputs and 22 outputs.

3.35.102.1. Executing ABC.

3.35.103. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$28980$abc$22668$memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 10 outputs.

3.35.103.1. Executing ABC.

3.35.104. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29986$abc$22803$memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 9 outputs.

3.35.104.1. Executing ABC.

3.35.105. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30013$abc$25871$usbuart_core.usbuart_usbif.sof_valid, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 54 gates and 101 wires to a netlist network with 47 inputs and 23 outputs.

3.35.105.1. Executing ABC.

3.35.106. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30081$abc$22992$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556
Extracted 16 gates and 33 wires to a netlist network with 17 inputs and 9 outputs.

3.35.106.1. Executing ABC.

3.35.107. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29788$abc$25187$auto$opt_dff.cc:194:make_patterns_logic$7560, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 54 gates and 59 wires to a netlist network with 5 inputs and 17 outputs.

3.35.107.1. Executing ABC.

3.35.108. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30108$abc$22911$memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.35.108.1. Executing ABC.

3.35.109. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$29388$abc$23451$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 9 outputs.

3.35.109.1. Executing ABC.

3.35.110. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30196$abc$23370$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 9 outputs.

3.35.110.1. Executing ABC.

3.35.111. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30135$abc$25079$auto$opt_dff.cc:194:make_patterns_logic$7591, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 61 gates and 64 wires to a netlist network with 3 inputs and 13 outputs.

3.35.111.1. Executing ABC.

3.35.112. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30223$abc$20976$auto$opt_dff.cc:219:make_patterns_logic$7517
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 8 outputs.

3.35.112.1. Executing ABC.

3.35.113. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30246$abc$20999$auto$opt_dff.cc:219:make_patterns_logic$7460
Extracted 16 gates and 27 wires to a netlist network with 11 inputs and 9 outputs.

3.35.113.1. Executing ABC.

3.35.114. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30267$abc$21023$auto$opt_dff.cc:219:make_patterns_logic$7463
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.35.114.1. Executing ABC.

3.35.115. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $abc$30275$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.35.115.1. Executing ABC.

3.35.116. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30280$abc$21037$auto$opt_dff.cc:219:make_patterns_logic$7451
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 11 outputs.

3.35.116.1. Executing ABC.

3.35.117. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

3.35.117.1. Executing ABC.

3.35.118. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30313$abc$21076$auto$opt_dff.cc:219:make_patterns_logic$7520
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 5 outputs.

3.35.118.1. Executing ABC.

3.35.119. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30331$abc$25805$auto$opt_dff.cc:219:make_patterns_logic$7511
Extracted 11 gates and 21 wires to a netlist network with 10 inputs and 6 outputs.

3.35.119.1. Executing ABC.

3.35.120. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30360$abc$21116$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.35.120.1. Executing ABC.

3.35.121. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33959$abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508
Extracted 17 gates and 26 wires to a netlist network with 9 inputs and 8 outputs.

3.35.121.1. Executing ABC.

3.35.122. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34996$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.35.122.1. Executing ABC.

3.35.123. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30343$abc$21096$auto$opt_dff.cc:219:make_patterns_logic$7514
Extracted 14 gates and 22 wires to a netlist network with 8 inputs and 5 outputs.

3.35.123.1. Executing ABC.

3.35.124. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$29555$abc$24115$usbuart_core.usbuart_txfifo.fifo_incr_wptr, asynchronously reset by !$abc$33830$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 24 gates and 28 wires to a netlist network with 4 inputs and 13 outputs.

3.35.124.1. Executing ABC.

3.35.125. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30553$abc$21127$auto$opt_dff.cc:194:make_patterns_logic$7662, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.35.125.1. Executing ABC.

3.35.126. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30560$abc$21134$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 369 gates and 540 wires to a netlist network with 171 inputs and 57 outputs.

3.35.126.1. Executing ABC.

3.35.127. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30942$abc$21485$u_reg.u_intr_state_tx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.35.127.1. Executing ABC.

3.35.128. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30948$abc$21491$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.128.1. Executing ABC.

3.35.129. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30953$abc$21496$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 2 outputs.

3.35.129.1. Executing ABC.

3.35.130. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30963$abc$21507$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.130.1. Executing ABC.

3.35.131. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30968$abc$21512$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.35.131.1. Executing ABC.

3.35.132. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$30977$abc$21521$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

3.35.132.1. Executing ABC.

3.35.133. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31203$abc$21748$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.35.133.1. Executing ABC.

3.35.134. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$31208$abc$21753$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.35.134.1. Executing ABC.

3.35.135. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31221$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$7445
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 8 outputs.

3.35.135.1. Executing ABC.

3.35.136. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31241$abc$21785$auto$opt_dff.cc:219:make_patterns_logic$7448
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 12 outputs.

3.35.136.1. Executing ABC.

3.35.137. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31272$abc$21822$memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 9 outputs.

3.35.137.1. Executing ABC.

3.35.138. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31299$abc$21849$memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.35.138.1. Executing ABC.

3.35.139. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31326$abc$21876$memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 10 outputs.

3.35.139.1. Executing ABC.

3.35.140. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31354$abc$21904$memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 9 outputs.

3.35.140.1. Executing ABC.

3.35.141. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31381$abc$21931$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402
Extracted 16 gates and 29 wires to a netlist network with 13 inputs and 9 outputs.

3.35.141.1. Executing ABC.

3.35.142. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31408$abc$21958$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446
Extracted 16 gates and 29 wires to a netlist network with 13 inputs and 10 outputs.

3.35.142.1. Executing ABC.

3.35.143. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31436$abc$21986$memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.35.143.1. Executing ABC.

3.35.144. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31463$abc$22013$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 10 outputs.

3.35.144.1. Executing ABC.

3.35.145. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31491$abc$22041$memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.35.145.1. Executing ABC.

3.35.146. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31519$abc$22069$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 10 outputs.

3.35.146.1. Executing ABC.

3.35.147. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31547$abc$22097$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 9 outputs.

3.35.147.1. Executing ABC.

3.35.148. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31574$abc$22124$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 9 outputs.

3.35.148.1. Executing ABC.

3.35.149. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31601$abc$22151$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.35.149.1. Executing ABC.

3.35.150. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31629$abc$22179$memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.35.150.1. Executing ABC.

3.35.151. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31656$abc$22206$memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.35.151.1. Executing ABC.

3.35.152. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31683$abc$22233$auto$opt_dff.cc:219:make_patterns_logic$7434
Extracted 23 gates and 47 wires to a netlist network with 24 inputs and 10 outputs.

3.35.152.1. Executing ABC.

3.35.153. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31711$abc$22259$memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 9 outputs.

3.35.153.1. Executing ABC.

3.35.154. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$31738$abc$22286$memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302
Extracted 14 gates and 28 wires to a netlist network with 14 inputs and 9 outputs.

3.35.154.1. Executing ABC.

3.35.155. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$30388$abc$25938$auto$opt_dff.cc:219:make_patterns_logic$7643, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 125 gates and 128 wires to a netlist network with 3 inputs and 25 outputs.

3.35.155.1. Executing ABC.

3.35.156. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$26561$abc$24250$auto$opt_dff.cc:219:make_patterns_logic$7532
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 3 outputs.

3.35.156.1. Executing ABC.

3.35.157. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 451 gates and 587 wires to a netlist network with 136 inputs and 129 outputs.

3.35.157.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$37515$abc$26561$abc$24250$auto$opt_dff.cc:219:make_patterns_logic$7532, arst={ }, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$32283$abc$26516$abc$24198$auto$opt_dff.cc:219:make_patterns_logic$7619, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$32295$abc$26571$abc$26065$usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$32301$abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=$abc$32301$abc$26604$abc$23625$auto$opt_dff.cc:253:combine_resets$17915
  36 cells in clk=\clk_i, en=$abc$32309$abc$26476$abc$24076$auto$opt_dff.cc:219:make_patterns_logic$17048, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$32345$abc$26613$abc$23920$auto$opt_dff.cc:219:make_patterns_logic$17458, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  23 cells in clk=\clk_usb_48mhz_i, en=$abc$32352$abc$26620$abc$24322$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$32377$abc$26697$abc$25320$auto$opt_dff.cc:219:make_patterns_logic$7557, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=$abc$36006$lo0
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$32423$abc$26745$abc$25173$auto$opt_dff.cc:194:make_patterns_logic$7579, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$32438$abc$26761$abc$25727$auto$opt_dff.cc:219:make_patterns_logic$7496, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$35141$lo15, arst=!\rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$32445$abc$26769$abc$25590$auto$opt_dff.cc:219:make_patterns_logic$7442, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$32454$abc$26779$abc$25490$auto$opt_dff.cc:194:make_patterns_logic$7482, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$32474$abc$26802$abc$23316$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$32501$abc$26829$abc$23289$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$32529$abc$26857$abc$23262$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$32556$abc$26884$abc$23235$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$32583$abc$26911$abc$23343$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$32610$abc$26938$abc$22695$memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$32638$abc$26966$abc$22614$memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$32665$abc$26993$abc$23154$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$32692$abc$27020$abc$23127$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$32719$abc$27047$abc$23100$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$32746$abc$26670$abc$23019$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548, arst={ }, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$32800$abc$27128$abc$25013$auto$opt_dff.cc:219:make_patterns_logic$7610, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$32811$abc$27140$abc$25063$auto$opt_dff.cc:194:make_patterns_logic$7588, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$32826$abc$27153$abc$22641$memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276, arst={ }, srst={ }
  352 cells in clk=\clk_usb_48mhz_i, en=$abc$32888$abc$27214$abc$25348$auto$opt_dff.cc:194:make_patterns_logic$7475, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$33235$abc$27651$abc$22533$memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$33262$abc$27678$abc$22396$memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174, arst={ }, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$33316$abc$27759$abc$24806$auto$opt_dff.cc:194:make_patterns_logic$7627, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$32773$abc$27074$abc$23208$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$33324$abc$27766$abc$25003$auto$opt_dff.cc:194:make_patterns_logic$7600, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  40 cells in clk=\clk_usb_48mhz_i, en=$abc$33338$abc$27781$abc$24844$auto$opt_dff.cc:194:make_patterns_logic$7622, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$33409$abc$27870$abc$23910$auto$opt_dff.cc:219:make_patterns_logic$17495, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$33418$abc$27878$abc$23998$auto$opt_dff.cc:219:make_patterns_logic$17376, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  19 cells in clk=\clk_i, en=$abc$33428$abc$27891$abc$24054$auto$opt_dff.cc:194:make_patterns_logic$17031, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$33449$abc$27912$abc$25711$auto$opt_dff.cc:194:make_patterns_logic$7472, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$33472$abc$27936$abc$24012$auto$opt_dff.cc:219:make_patterns_logic$17339, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_usb_48mhz_i, en=$abc$33482$abc$27945$abc$23903$auto$opt_dff.cc:219:make_patterns_logic$17504, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$32406$abc$26728$abc$25242$auto$opt_dff.cc:194:make_patterns_logic$7563, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  67 cells in clk=\clk_usb_48mhz_i, en=$abc$33488$abc$27951$abc$23809$auto$opt_dff.cc:219:make_patterns_logic$17641, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  66 cells in clk=\clk_usb_48mhz_i, en=$abc$33587$abc$28019$abc$23866$auto$opt_dff.cc:219:make_patterns_logic$17577, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  20 cells in clk=\clk_usb_48mhz_i, en=$abc$33626$abc$28050$abc$23896$auto$opt_dff.cc:219:make_patterns_logic$17513, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$33647$abc$28070$abc$24021$auto$opt_dff.cc:219:make_patterns_logic$17262, arst=!\rst_ni, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=$abc$37523$lo13, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  77 cells in clk=\clk_usb_48mhz_i, en=$abc$33690$abc$28110$abc$23735$auto$opt_dff.cc:219:make_patterns_logic$17677, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  23 cells in clk=\clk_usb_48mhz_i, en=$abc$33799$abc$28211$abc$25735$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  5 cells in clk=\clk_i, en=!$abc$35141$lo14, arst=!\rst_ni, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$33830$abc$28240$abc$24299$usbuart_core.usbuart_txfifo.fifo_incr_rptr, arst=!$abc$33830$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$33854$abc$27101$abc$22451$memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342, arst={ }, srst={ }
  34 cells in clk=\clk_usb_48mhz_i, en=$abc$33881$abc$28262$abc$24264$usbuart_core.usbuart_rxfifo.fifo_incr_wptr, arst=!$abc$34264$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$33916$abc$28326$abc$25572$auto$opt_dff.cc:219:make_patterns_logic$7469, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$33932$abc$28343$abc$22749$memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240, arst={ }, srst={ }
  77 cells in clk=\clk_usb_48mhz_i, en=$abc$33959$abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst=$abc$33959$abc$28370$abc$23635$auto$opt_dff.cc:194:make_patterns_logic$7492
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$34032$abc$28443$abc$23720$auto$opt_dff.cc:219:make_patterns_logic$17718, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$34046$abc$28457$abc$23181$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476, arst={ }, srst={ }
  27 cells in clk=\clk_usb_48mhz_i, en=$abc$34073$abc$27826$abc$25260$auto$opt_dff.cc:194:make_patterns_logic$7573, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  44 cells in clk=\clk_usb_48mhz_i, en=$abc$34116$abc$28484$abc$23926$auto$opt_dff.cc:194:make_patterns_logic$17383, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_i, en=$abc$34162$abc$28530$abc$24034$auto$opt_dff.cc:219:make_patterns_logic$17182, arst=!\rst_ni, srst={ }
  26 cells in clk=\clk_usb_48mhz_i, en=$abc$34179$abc$28548$abc$24777$auto$opt_dff.cc:194:make_patterns_logic$7631, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$34210$abc$28579$abc$22506$memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$33289$abc$27705$abc$22479$memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336, arst={ }, srst={ }
  166 cells in clk=\clk_i, en=$abc$34264$abc$28633$abc$24513$usbuart_core.usbuart_rxfifo.fifo_incr_rptr, arst=!$abc$34264$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=$abc$32853$lo1, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$34549$abc$29008$abc$25305$auto$opt_dff.cc:219:make_patterns_logic$7570, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$34564$abc$29023$abc$23587$auto$opt_dff.cc:219:make_patterns_logic$7537, arst={ }, srst=$abc$36075$abc$29023$abc$23587$auto$simplemap.cc:257:simplemap_eqne$11083
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$34590$abc$29051$abc$22722$memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$34618$abc$29079$abc$22560$memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$34645$abc$29106$abc$22423$memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$34672$abc$29133$abc$23046$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542, arst={ }, srst={ }
  52 cells in clk=\clk_usb_48mhz_i, en=$abc$34699$abc$29187$abc$25753$auto$opt_dff.cc:219:make_patterns_logic$7545, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$34761$abc$29160$abc$22965$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372, arst={ }, srst={ }
  39 cells in clk=\clk_usb_48mhz_i, en=$abc$34788$abc$29232$abc$25519$auto$opt_dff.cc:219:make_patterns_logic$7439, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$34831$abc$29279$abc$22938$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$34858$abc$29306$abc$22884$memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$34522$abc$28953$abc$22341$memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$34885$abc$29333$abc$22776$memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166, arst={ }, srst={ }
  24 cells in clk=\clk_usb_48mhz_i, en=$abc$34912$abc$26577$abc$24750$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  27 cells in clk=\clk_usb_48mhz_i, en=$abc$34940$abc$28297$abc$24942$auto$opt_dff.cc:194:make_patterns_logic$7597, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$34968$abc$29360$abc$23559$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494, arst={ }, srst={ }
  9 cells in clk=\clk_usb_48mhz_i, en=$abc$32301$abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, arst={ }, srst=!$abc$34996$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$35006$abc$29420$abc$23424$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$35033$abc$29447$abc$23478$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$35060$abc$29474$abc$23505$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$33382$abc$31765$abc$22313$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$35087$abc$29501$abc$23532$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$35114$abc$29528$abc$23397$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420, arst={ }, srst={ }
  95 cells in clk=\clk_i, en={ }, arst=!\rst_ni, srst={ }
  60 cells in clk=\clk_usb_48mhz_i, en=$abc$35246$abc$29635$abc$25632$auto$opt_dff.cc:219:make_patterns_logic$7487, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$35319$abc$29705$abc$22857$memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232, arst={ }, srst={ }
  40 cells in clk=\clk_usb_48mhz_i, en=$abc$35346$abc$29732$abc$24720$auto$opt_dff.cc:194:make_patterns_logic$7635, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$35375$abc$29761$abc$23073$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530, arst={ }, srst={ }
  37 cells in clk=\clk_usb_48mhz_i, en=$abc$35402$abc$29843$abc$25021$auto$opt_dff.cc:194:make_patterns_logic$7583, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  22 cells in clk=\clk_usb_48mhz_i, en=$abc$33768$abc$26530$abc$24217$auto$opt_dff.cc:219:make_patterns_logic$7529, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$35440$abc$29881$abc$22587$memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184, arst={ }, srst={ }
  23 cells in clk=\clk_usb_48mhz_i, en=!$abc$35467$abc$29908$abc$26065$auto$simplemap.cc:257:simplemap_eqne$12809, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$35500$abc$27732$abc$22368$memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282, arst={ }, srst={ }
  26 cells in clk=\clk_usb_48mhz_i, en=$abc$35527$abc$29943$abc$24895$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$34237$abc$28606$abc$22830$memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$35572$abc$28980$abc$22668$memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$35600$abc$29986$abc$22803$memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296, arst={ }, srst={ }
  42 cells in clk=\clk_usb_48mhz_i, en=$abc$35627$abc$30013$abc$25871$usbuart_core.usbuart_usbif.sof_valid, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$35694$abc$30081$abc$22992$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556, arst={ }, srst={ }
  55 cells in clk=\clk_usb_48mhz_i, en=$abc$35721$abc$29788$abc$25187$auto$opt_dff.cc:194:make_patterns_logic$7560, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$35776$abc$30108$abc$22911$memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$35803$abc$29388$abc$23451$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$35830$abc$30196$abc$23370$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408, arst={ }, srst={ }
  64 cells in clk=\clk_usb_48mhz_i, en=$abc$35857$abc$30135$abc$25079$auto$opt_dff.cc:194:make_patterns_logic$7591, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  8 cells in clk=\clk_usb_48mhz_i, en=$abc$35919$abc$30223$abc$20976$auto$opt_dff.cc:219:make_patterns_logic$7517, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$35942$abc$30246$abc$20999$auto$opt_dff.cc:219:make_patterns_logic$7460, arst={ }, srst={ }
  7 cells in clk=\clk_usb_48mhz_i, en=$abc$35964$abc$30267$abc$21023$auto$opt_dff.cc:219:make_patterns_logic$7463, arst={ }, srst={ }
  3 cells in clk=\clk_usb_48mhz_i, en=$abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst=$abc$35972$abc$30275$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$35978$abc$30280$abc$21037$auto$opt_dff.cc:219:make_patterns_logic$7451, arst={ }, srst={ }
  4 cells in clk=\clk_usb_48mhz_i, en=$abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$36012$abc$30313$abc$21076$auto$opt_dff.cc:219:make_patterns_logic$7520, arst={ }, srst={ }
  9 cells in clk=\clk_usb_48mhz_i, en=$abc$36027$abc$30331$abc$25805$auto$opt_dff.cc:219:make_patterns_logic$7511, arst={ }, srst={ }
  7 cells in clk=\clk_i, en=$abc$36039$abc$30360$abc$21116$u_reg.u_intr_state_tx_watermark.wr_en, arst=!\rst_ni, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$33959$abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, arst={ }, srst={ }
  6 cells in clk=\clk_usb_48mhz_i, en=$abc$34996$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$36075$abc$30343$abc$21096$auto$opt_dff.cc:219:make_patterns_logic$7514, arst={ }, srst={ }
  23 cells in clk=\clk_i, en=$abc$36092$abc$29555$abc$24115$usbuart_core.usbuart_txfifo.fifo_incr_wptr, arst=!$abc$33830$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$36122$abc$30553$abc$21127$auto$opt_dff.cc:194:make_patterns_logic$7662, arst=!\rst_ni, srst={ }
  5 cells in clk=\clk_i, en=$abc$36556$abc$30942$abc$21485$u_reg.u_intr_state_tx_overflow.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$36562$abc$30948$abc$21491$u_reg.u_intr_state_rx_timeout.wr_en, arst=!\rst_ni, srst={ }
  10 cells in clk=\clk_i, en=$abc$36567$abc$30953$abc$21496$u_reg.u_intr_state_rx_watermark.wr_en, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$36578$abc$30963$abc$21507$u_reg.u_intr_state_rx_frame_err.wr_en, arst=!\rst_ni, srst={ }
  8 cells in clk=\clk_i, en=$abc$36583$abc$30968$abc$21512$u_reg.u_intr_state_rx_break_err.wr_en, arst=!\rst_ni, srst={ }
  228 cells in clk=\clk_i, en=$abc$36592$abc$30977$abc$21521$u_reg.intg_err, arst=!\rst_ni, srst={ }
  4 cells in clk=\clk_i, en=$abc$36822$abc$31203$abc$21748$u_reg.u_intr_state_rx_parity_err.wr_en, arst=!\rst_ni, srst={ }
  12 cells in clk=\clk_i, en=$abc$36827$abc$31208$abc$21753$u_reg.u_intr_state_rx_overflow.wr_en, arst=!\rst_ni, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$36840$abc$31221$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$7445, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$36857$abc$31241$abc$21785$auto$opt_dff.cc:219:make_patterns_logic$7448, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$36887$abc$31272$abc$21822$memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$36914$abc$31299$abc$21849$memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$36941$abc$31326$abc$21876$memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$36969$abc$31354$abc$21904$memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314, arst={ }, srst={ }
  19 cells in clk=\clk_usb_48mhz_i, en=$abc$36996$abc$31381$abc$21931$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$37023$abc$31408$abc$21958$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446, arst={ }, srst={ }
  12 cells in clk=\clk_usb_48mhz_i, en=$abc$37051$abc$31436$abc$21986$memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196, arst={ }, srst={ }
  18 cells in clk=\clk_usb_48mhz_i, en=$abc$37078$abc$31463$abc$22013$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488, arst={ }, srst={ }
  11 cells in clk=\clk_usb_48mhz_i, en=$abc$37106$abc$31491$abc$22041$memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$37134$abc$31519$abc$22069$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362, arst={ }, srst={ }
  15 cells in clk=\clk_usb_48mhz_i, en=$abc$37162$abc$31547$abc$22097$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508, arst={ }, srst={ }
  17 cells in clk=\clk_usb_48mhz_i, en=$abc$37189$abc$31574$abc$22124$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$37216$abc$31601$abc$22151$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536, arst={ }, srst={ }
  13 cells in clk=\clk_usb_48mhz_i, en=$abc$37244$abc$31629$abc$22179$memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258, arst={ }, srst={ }
  10 cells in clk=\clk_usb_48mhz_i, en=$abc$37271$abc$31656$abc$22206$memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368, arst={ }, srst={ }
  34 cells in clk=\clk_usb_48mhz_i, en=$abc$37298$abc$31683$abc$22233$auto$opt_dff.cc:219:make_patterns_logic$7434, arst={ }, srst={ }
  16 cells in clk=\clk_usb_48mhz_i, en=$abc$37335$abc$31711$abc$22259$memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308, arst={ }, srst={ }
  14 cells in clk=\clk_usb_48mhz_i, en=$abc$37362$abc$31738$abc$22286$memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302, arst={ }, srst={ }
  410 cells in clk=\clk_i, en=$abc$36129$abc$30560$abc$21134$u_reg.u_reg_if.a_ack, arst=!\rst_ni, srst={ }
  125 cells in clk=\clk_usb_48mhz_i, en=$abc$37389$abc$30388$abc$25938$auto$opt_dff.cc:219:make_patterns_logic$7643, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  26 cells in clk=\clk_usb_48mhz_i, en=$abc$32853$abc$27180$abc$24970$auto$opt_dff.cc:194:make_patterns_logic$7576, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }
  455 cells in clk=\clk_usb_48mhz_i, en={ }, arst=!$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni, srst={ }

3.36.2. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37515$abc$26561$abc$24250$auto$opt_dff.cc:219:make_patterns_logic$7532
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32283$abc$26516$abc$24198$auto$opt_dff.cc:219:make_patterns_logic$7619, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 2 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32295$abc$26571$abc$26065$usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.setup_stage_end, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 3 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32301$abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by $abc$32301$abc$26604$abc$23625$auto$opt_dff.cc:253:combine_resets$17915
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$32309$abc$26476$abc$24076$auto$opt_dff.cc:219:make_patterns_logic$17048, asynchronously reset by !\rst_ni
Extracted 36 gates and 46 wires to a netlist network with 10 inputs and 12 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32345$abc$26613$abc$23920$auto$opt_dff.cc:219:make_patterns_logic$17458, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 3 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32352$abc$26620$abc$24322$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_in_pe.in_token_received, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 23 gates and 42 wires to a netlist network with 19 inputs and 13 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32377$abc$26697$abc$25320$auto$opt_dff.cc:219:make_patterns_logic$7557, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 10 wires to a netlist network with 5 inputs and 5 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $abc$36006$lo0
Extracted 16 gates and 23 wires to a netlist network with 7 inputs and 11 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32423$abc$26745$abc$25173$auto$opt_dff.cc:194:make_patterns_logic$7579, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 12 gates and 15 wires to a netlist network with 3 inputs and 5 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32438$abc$26761$abc$25727$auto$opt_dff.cc:219:make_patterns_logic$7496, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 2 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$35141$lo15, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.36.13.1. Executing ABC.

3.36.14. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32445$abc$26769$abc$25590$auto$opt_dff.cc:219:make_patterns_logic$7442
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.36.14.1. Executing ABC.

3.36.15. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32454$abc$26779$abc$25490$auto$opt_dff.cc:194:make_patterns_logic$7482, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 18 gates and 28 wires to a netlist network with 10 inputs and 9 outputs.

3.36.15.1. Executing ABC.

3.36.16. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32474$abc$26802$abc$23316$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[10][0][0]$y$19432
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 9 outputs.

3.36.16.1. Executing ABC.

3.36.17. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32501$abc$26829$abc$23289$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[11][0][0]$y$19438
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 10 outputs.

3.36.17.1. Executing ABC.

3.36.18. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32529$abc$26857$abc$23262$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[13][0][0]$y$19452
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 9 outputs.

3.36.18.1. Executing ABC.

3.36.19. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32556$abc$26884$abc$23235$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[14][0][0]$y$19458
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 9 outputs.

3.36.19.1. Executing ABC.

3.36.20. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32583$abc$26911$abc$23343$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[0][0][0]$y$19352
Extracted 13 gates and 27 wires to a netlist network with 14 inputs and 9 outputs.

3.36.20.1. Executing ABC.

3.36.21. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32610$abc$26938$abc$22695$memory\usbuart_core.usbuart_rxfifo.storage$wren[19][0][0]$y$18288
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 10 outputs.

3.36.21.1. Executing ABC.

3.36.22. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32638$abc$26966$abc$22614$memory\usbuart_core.usbuart_rxfifo.storage$wren[13][0][0]$y$18246
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.36.22.1. Executing ABC.

3.36.23. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32665$abc$26993$abc$23154$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[17][0][0]$y$19482
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.36.23.1. Executing ABC.

3.36.24. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32692$abc$27020$abc$23127$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[20][0][0]$y$19502
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 9 outputs.

3.36.24.1. Executing ABC.

3.36.25. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32719$abc$27047$abc$23100$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[23][0][0]$y$19520
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 9 outputs.

3.36.25.1. Executing ABC.

3.36.26. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32746$abc$26670$abc$23019$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[27][0][0]$y$19548
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.36.26.1. Executing ABC.

3.36.27. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32800$abc$27128$abc$25013$auto$opt_dff.cc:219:make_patterns_logic$7610, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 15 wires to a netlist network with 8 inputs and 3 outputs.

3.36.27.1. Executing ABC.

3.36.28. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32811$abc$27140$abc$25063$auto$opt_dff.cc:194:make_patterns_logic$7588, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 11 gates and 16 wires to a netlist network with 5 inputs and 7 outputs.

3.36.28.1. Executing ABC.

3.36.29. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32826$abc$27153$abc$22641$memory\usbuart_core.usbuart_rxfifo.storage$wren[17][0][0]$y$18276
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.36.29.1. Executing ABC.

3.36.30. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32888$abc$27214$abc$25348$auto$opt_dff.cc:194:make_patterns_logic$7475, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 352 gates and 604 wires to a netlist network with 252 inputs and 42 outputs.

3.36.30.1. Executing ABC.

3.36.31. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33235$abc$27651$abc$22533$memory\usbuart_core.usbuart_rxfifo.storage$wren[30][0][0]$y$18362
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.36.31.1. Executing ABC.

3.36.32. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33262$abc$27678$abc$22396$memory\usbuart_core.usbuart_rxfifo.storage$wren[3][0][0]$y$18174
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.36.32.1. Executing ABC.

3.36.33. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33316$abc$27759$abc$24806$auto$opt_dff.cc:194:make_patterns_logic$7627, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.36.33.1. Executing ABC.

3.36.34. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32773$abc$27074$abc$23208$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[15][0][0]$y$19464
Extracted 17 gates and 31 wires to a netlist network with 14 inputs and 9 outputs.

3.36.34.1. Executing ABC.

3.36.35. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33324$abc$27766$abc$25003$auto$opt_dff.cc:194:make_patterns_logic$7600, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 13 gates and 24 wires to a netlist network with 11 inputs and 6 outputs.

3.36.35.1. Executing ABC.

3.36.36. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33338$abc$27781$abc$24844$auto$opt_dff.cc:194:make_patterns_logic$7622, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 40 gates and 43 wires to a netlist network with 3 inputs and 24 outputs.

3.36.36.1. Executing ABC.

3.36.37. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33409$abc$27870$abc$23910$auto$opt_dff.cc:219:make_patterns_logic$17495, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 2 outputs.

3.36.37.1. Executing ABC.

3.36.38. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33418$abc$27878$abc$23998$auto$opt_dff.cc:219:make_patterns_logic$17376, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 11 gates and 20 wires to a netlist network with 9 inputs and 6 outputs.

3.36.38.1. Executing ABC.

3.36.39. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33428$abc$27891$abc$24054$auto$opt_dff.cc:194:make_patterns_logic$17031, asynchronously reset by !\rst_ni
Extracted 19 gates and 35 wires to a netlist network with 16 inputs and 12 outputs.

3.36.39.1. Executing ABC.

3.36.40. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33449$abc$27912$abc$25711$auto$opt_dff.cc:194:make_patterns_logic$7472, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 22 gates and 41 wires to a netlist network with 19 inputs and 12 outputs.

3.36.40.1. Executing ABC.

3.36.41. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33472$abc$27936$abc$24012$auto$opt_dff.cc:219:make_patterns_logic$17339, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 4 outputs.

3.36.41.1. Executing ABC.

3.36.42. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33482$abc$27945$abc$23903$auto$opt_dff.cc:219:make_patterns_logic$17504, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

3.36.42.1. Executing ABC.

3.36.43. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32406$abc$26728$abc$25242$auto$opt_dff.cc:194:make_patterns_logic$7563, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 16 gates and 19 wires to a netlist network with 3 inputs and 6 outputs.

3.36.43.1. Executing ABC.

3.36.44. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33488$abc$27951$abc$23809$auto$opt_dff.cc:219:make_patterns_logic$17641, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 67 gates and 158 wires to a netlist network with 91 inputs and 58 outputs.

3.36.44.1. Executing ABC.

3.36.45. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33587$abc$28019$abc$23866$auto$opt_dff.cc:219:make_patterns_logic$17577, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 66 gates and 144 wires to a netlist network with 78 inputs and 26 outputs.

3.36.45.1. Executing ABC.

3.36.46. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33626$abc$28050$abc$23896$auto$opt_dff.cc:219:make_patterns_logic$17513, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 20 gates and 37 wires to a netlist network with 17 inputs and 5 outputs.

3.36.46.1. Executing ABC.

3.36.47. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$33647$abc$28070$abc$24021$auto$opt_dff.cc:219:make_patterns_logic$17262, asynchronously reset by !\rst_ni
Extracted 14 gates and 18 wires to a netlist network with 4 inputs and 6 outputs.

3.36.47.1. Executing ABC.

3.36.48. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37523$lo13, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 24 gates and 28 wires to a netlist network with 4 inputs and 9 outputs.

3.36.48.1. Executing ABC.

3.36.49. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33690$abc$28110$abc$23735$auto$opt_dff.cc:219:make_patterns_logic$17677, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 77 gates and 160 wires to a netlist network with 83 inputs and 72 outputs.

3.36.49.1. Executing ABC.

3.36.50. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33799$abc$28211$abc$25735$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_tx.pkt_start_i, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 23 gates and 37 wires to a netlist network with 14 inputs and 10 outputs.

3.36.50.1. Executing ABC.

3.36.51. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by !$abc$35141$lo14, asynchronously reset by !\rst_ni
Extracted 5 gates and 5 wires to a netlist network with 0 inputs and 1 outputs.

3.36.51.1. Executing ABC.

3.36.52. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33830$abc$28240$abc$24299$usbuart_core.usbuart_txfifo.fifo_incr_rptr, asynchronously reset by !$abc$33830$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 22 gates and 23 wires to a netlist network with 1 inputs and 2 outputs.

3.36.52.1. Executing ABC.

3.36.53. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33854$abc$27101$abc$22451$memory\usbuart_core.usbuart_rxfifo.storage$wren[27][0][0]$y$18342
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.36.53.1. Executing ABC.

3.36.54. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33881$abc$28262$abc$24264$usbuart_core.usbuart_rxfifo.fifo_incr_wptr, asynchronously reset by !$abc$34264$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 34 gates and 36 wires to a netlist network with 2 inputs and 18 outputs.

3.36.54.1. Executing ABC.

3.36.55. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33916$abc$28326$abc$25572$auto$opt_dff.cc:219:make_patterns_logic$7469, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 7 outputs.

3.36.55.1. Executing ABC.

3.36.56. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33932$abc$28343$abc$22749$memory\usbuart_core.usbuart_rxfifo.storage$wren[12][0][0]$y$18240
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.36.56.1. Executing ABC.

3.36.57. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33959$abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508, synchronously reset by $abc$33959$abc$28370$abc$23635$auto$opt_dff.cc:194:make_patterns_logic$7492
Extracted 64 gates and 84 wires to a netlist network with 20 inputs and 40 outputs.

3.36.57.1. Executing ABC.

3.36.58. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34032$abc$28443$abc$23720$auto$opt_dff.cc:219:make_patterns_logic$17718, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 11 gates and 15 wires to a netlist network with 4 inputs and 3 outputs.

3.36.58.1. Executing ABC.

3.36.59. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34046$abc$28457$abc$23181$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[16][0][0]$y$19476
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.36.59.1. Executing ABC.

3.36.60. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34073$abc$27826$abc$25260$auto$opt_dff.cc:194:make_patterns_logic$7573, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 27 gates and 31 wires to a netlist network with 4 inputs and 13 outputs.

3.36.60.1. Executing ABC.

3.36.61. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34116$abc$28484$abc$23926$auto$opt_dff.cc:194:make_patterns_logic$17383, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 44 gates and 61 wires to a netlist network with 17 inputs and 9 outputs.

3.36.61.1. Executing ABC.

3.36.62. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$34162$abc$28530$abc$24034$auto$opt_dff.cc:219:make_patterns_logic$17182, asynchronously reset by !\rst_ni
Extracted 14 gates and 17 wires to a netlist network with 3 inputs and 5 outputs.

3.36.62.1. Executing ABC.

3.36.63. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34179$abc$28548$abc$24777$auto$opt_dff.cc:194:make_patterns_logic$7631, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 26 gates and 30 wires to a netlist network with 4 inputs and 8 outputs.

3.36.63.1. Executing ABC.

3.36.64. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34210$abc$28579$abc$22506$memory\usbuart_core.usbuart_rxfifo.storage$wren[16][0][0]$y$18270
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.36.64.1. Executing ABC.

3.36.65. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33289$abc$27705$abc$22479$memory\usbuart_core.usbuart_rxfifo.storage$wren[26][0][0]$y$18336
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.36.65.1. Executing ABC.

3.36.66. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$34264$abc$28633$abc$24513$usbuart_core.usbuart_rxfifo.fifo_incr_rptr, asynchronously reset by !$abc$34264$abc$28633$abc$24115$usbuart_core.usbuart_rxfifo.rst_rd_ni
Extracted 166 gates and 309 wires to a netlist network with 143 inputs and 89 outputs.

3.36.66.1. Executing ABC.

3.36.67. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32853$lo1, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 24 gates and 32 wires to a netlist network with 8 inputs and 23 outputs.

3.36.67.1. Executing ABC.

3.36.68. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34549$abc$29008$abc$25305$auto$opt_dff.cc:219:make_patterns_logic$7570, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 15 gates and 19 wires to a netlist network with 4 inputs and 2 outputs.

3.36.68.1. Executing ABC.

3.36.69. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34564$abc$29023$abc$23587$auto$opt_dff.cc:219:make_patterns_logic$7537, synchronously reset by $abc$36075$abc$29023$abc$23587$auto$simplemap.cc:257:simplemap_eqne$11083
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 9 outputs.

3.36.69.1. Executing ABC.

3.36.70. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34590$abc$29051$abc$22722$memory\usbuart_core.usbuart_rxfifo.storage$wren[24][0][0]$y$18324
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 10 outputs.

3.36.70.1. Executing ABC.

3.36.71. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34618$abc$29079$abc$22560$memory\usbuart_core.usbuart_rxfifo.storage$wren[0][0][0]$y$18146
Extracted 16 gates and 34 wires to a netlist network with 18 inputs and 9 outputs.

3.36.71.1. Executing ABC.

3.36.72. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34645$abc$29106$abc$22423$memory\usbuart_core.usbuart_rxfifo.storage$wren[8][0][0]$y$18214
Extracted 17 gates and 36 wires to a netlist network with 19 inputs and 9 outputs.

3.36.72.1. Executing ABC.

3.36.73. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34672$abc$29133$abc$23046$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[26][0][0]$y$19542
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.36.73.1. Executing ABC.

3.36.74. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34699$abc$29187$abc$25753$auto$opt_dff.cc:219:make_patterns_logic$7545, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 50 gates and 94 wires to a netlist network with 44 inputs and 22 outputs.

3.36.74.1. Executing ABC.

3.36.75. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34761$abc$29160$abc$22965$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[2][0][0]$y$19372
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 9 outputs.

3.36.75.1. Executing ABC.

3.36.76. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34788$abc$29232$abc$25519$auto$opt_dff.cc:219:make_patterns_logic$7439, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 39 gates and 63 wires to a netlist network with 24 inputs and 11 outputs.

3.36.76.1. Executing ABC.

3.36.77. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34831$abc$29279$abc$22938$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[30][0][0]$y$19568
Extracted 11 gates and 24 wires to a netlist network with 13 inputs and 9 outputs.

3.36.77.1. Executing ABC.

3.36.78. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34858$abc$29306$abc$22884$memory\usbuart_core.usbuart_rxfifo.storage$wren[29][0][0]$y$18356
Extracted 18 gates and 38 wires to a netlist network with 20 inputs and 9 outputs.

3.36.78.1. Executing ABC.

3.36.79. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34522$abc$28953$abc$22341$memory\usbuart_core.usbuart_rxfifo.storage$wren[14][0][0]$y$18252
Extracted 17 gates and 35 wires to a netlist network with 18 inputs and 9 outputs.

3.36.79.1. Executing ABC.

3.36.80. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34885$abc$29333$abc$22776$memory\usbuart_core.usbuart_rxfifo.storage$wren[2][0][0]$y$18166
Extracted 14 gates and 30 wires to a netlist network with 16 inputs and 9 outputs.

3.36.80.1. Executing ABC.

3.36.81. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34912$abc$26577$abc$24750$usbuart_core.usbuart_usbif.u_usb_fs_nb_pe.u_usb_fs_nb_out_pe.out_xact_start, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 24 gates and 45 wires to a netlist network with 21 inputs and 15 outputs.

3.36.81.1. Executing ABC.

3.36.82. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34940$abc$28297$abc$24942$auto$opt_dff.cc:194:make_patterns_logic$7597, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 27 gates and 34 wires to a netlist network with 7 inputs and 9 outputs.

3.36.82.1. Executing ABC.

3.36.83. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34968$abc$29360$abc$23559$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[19][0][0]$y$19494
Extracted 18 gates and 32 wires to a netlist network with 14 inputs and 9 outputs.

3.36.83.1. Executing ABC.

3.36.84. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$38034$abc$32301$abc$26604$abc$23617$auto$opt_dff.cc:219:make_patterns_logic$7503, synchronously reset by !$abc$34996$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 6 outputs.

3.36.84.1. Executing ABC.

3.36.85. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35006$abc$29420$abc$23424$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[5][0][0]$y$19396
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 9 outputs.

3.36.85.1. Executing ABC.

3.36.86. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35033$abc$29447$abc$23478$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[3][0][0]$y$19380
Extracted 14 gates and 26 wires to a netlist network with 12 inputs and 9 outputs.

3.36.86.1. Executing ABC.

3.36.87. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35060$abc$29474$abc$23505$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[31][0][0]$y$19574
Extracted 12 gates and 26 wires to a netlist network with 14 inputs and 9 outputs.

3.36.87.1. Executing ABC.

3.36.88. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33382$abc$31765$abc$22313$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[9][0][0]$y$19426
Extracted 12 gates and 25 wires to a netlist network with 13 inputs and 9 outputs.

3.36.88.1. Executing ABC.

3.36.89. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35087$abc$29501$abc$23532$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[29][0][0]$y$19562
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.36.89.1. Executing ABC.

3.36.90. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35114$abc$29528$abc$23397$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[8][0][0]$y$19420
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 9 outputs.

3.36.90.1. Executing ABC.

3.36.91. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, asynchronously reset by !\rst_ni
Extracted 95 gates and 143 wires to a netlist network with 48 inputs and 26 outputs.

3.36.91.1. Executing ABC.

3.36.92. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35246$abc$29635$abc$25632$auto$opt_dff.cc:219:make_patterns_logic$7487, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 60 gates and 87 wires to a netlist network with 27 inputs and 37 outputs.

3.36.92.1. Executing ABC.

3.36.93. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35319$abc$29705$abc$22857$memory\usbuart_core.usbuart_rxfifo.storage$wren[11][0][0]$y$18232
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.36.93.1. Executing ABC.

3.36.94. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35346$abc$29732$abc$24720$auto$opt_dff.cc:194:make_patterns_logic$7635, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 40 gates and 70 wires to a netlist network with 30 inputs and 12 outputs.

3.36.94.1. Executing ABC.

3.36.95. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35375$abc$29761$abc$23073$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[24][0][0]$y$19530
Extracted 17 gates and 32 wires to a netlist network with 15 inputs and 9 outputs.

3.36.95.1. Executing ABC.

3.36.96. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35402$abc$29843$abc$25021$auto$opt_dff.cc:194:make_patterns_logic$7583, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 37 gates and 43 wires to a netlist network with 6 inputs and 16 outputs.

3.36.96.1. Executing ABC.

3.36.97. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$33768$abc$26530$abc$24217$auto$opt_dff.cc:219:make_patterns_logic$7529
Extracted 22 gates and 34 wires to a netlist network with 12 inputs and 14 outputs.

3.36.97.1. Executing ABC.

3.36.98. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35440$abc$29881$abc$22587$memory\usbuart_core.usbuart_rxfifo.storage$wren[4][0][0]$y$18184
Extracted 17 gates and 34 wires to a netlist network with 17 inputs and 9 outputs.

3.36.98.1. Executing ABC.

3.36.99. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by !$abc$35467$abc$29908$abc$26065$auto$simplemap.cc:257:simplemap_eqne$12809, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 23 gates and 26 wires to a netlist network with 3 inputs and 10 outputs.

3.36.99.1. Executing ABC.

3.36.100. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35500$abc$27732$abc$22368$memory\usbuart_core.usbuart_rxfifo.storage$wren[18][0][0]$y$18282
Extracted 13 gates and 28 wires to a netlist network with 15 inputs and 9 outputs.

3.36.100.1. Executing ABC.

3.36.101. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35527$abc$29943$abc$24895$flatten\usbuart_core.\usbuart_usbif.\u_usb_fs_nb_pe.\u_usb_fs_rx.$verific$n679$5966, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 26 gates and 44 wires to a netlist network with 18 inputs and 20 outputs.

3.36.101.1. Executing ABC.

3.36.102. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$34237$abc$28606$abc$22830$memory\usbuart_core.usbuart_rxfifo.storage$wren[10][0][0]$y$18226
Extracted 15 gates and 32 wires to a netlist network with 17 inputs and 9 outputs.

3.36.102.1. Executing ABC.

3.36.103. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35572$abc$28980$abc$22668$memory\usbuart_core.usbuart_rxfifo.storage$wren[9][0][0]$y$18220
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.36.103.1. Executing ABC.

3.36.104. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35600$abc$29986$abc$22803$memory\usbuart_core.usbuart_rxfifo.storage$wren[20][0][0]$y$18296
Extracted 18 gates and 36 wires to a netlist network with 18 inputs and 9 outputs.

3.36.104.1. Executing ABC.

3.36.105. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35627$abc$30013$abc$25871$usbuart_core.usbuart_usbif.sof_valid, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 42 gates and 81 wires to a netlist network with 39 inputs and 14 outputs.

3.36.105.1. Executing ABC.

3.36.106. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35694$abc$30081$abc$22992$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[28][0][0]$y$19556
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.36.106.1. Executing ABC.

3.36.107. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35721$abc$29788$abc$25187$auto$opt_dff.cc:194:make_patterns_logic$7560, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 55 gates and 59 wires to a netlist network with 4 inputs and 18 outputs.

3.36.107.1. Executing ABC.

3.36.108. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35776$abc$30108$abc$22911$memory\usbuart_core.usbuart_rxfifo.storage$wren[25][0][0]$y$18330
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.36.108.1. Executing ABC.

3.36.109. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35803$abc$29388$abc$23451$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[4][0][0]$y$19390
Extracted 18 gates and 31 wires to a netlist network with 13 inputs and 9 outputs.

3.36.109.1. Executing ABC.

3.36.110. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35830$abc$30196$abc$23370$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[7][0][0]$y$19408
Extracted 18 gates and 30 wires to a netlist network with 12 inputs and 9 outputs.

3.36.110.1. Executing ABC.

3.36.111. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35857$abc$30135$abc$25079$auto$opt_dff.cc:194:make_patterns_logic$7591, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 64 gates and 70 wires to a netlist network with 6 inputs and 15 outputs.

3.36.111.1. Executing ABC.

3.36.112. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35919$abc$30223$abc$20976$auto$opt_dff.cc:219:make_patterns_logic$7517
Extracted 8 gates and 17 wires to a netlist network with 9 inputs and 8 outputs.

3.36.112.1. Executing ABC.

3.36.113. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35942$abc$30246$abc$20999$auto$opt_dff.cc:219:make_patterns_logic$7460
Extracted 16 gates and 27 wires to a netlist network with 11 inputs and 9 outputs.

3.36.113.1. Executing ABC.

3.36.114. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35964$abc$30267$abc$21023$auto$opt_dff.cc:219:make_patterns_logic$7463
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 3 outputs.

3.36.114.1. Executing ABC.

3.36.115. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$38116$abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062, synchronously reset by $abc$35972$abc$30275$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n24$7065
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 3 outputs.

3.36.115.1. Executing ABC.

3.36.116. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$35978$abc$30280$abc$21037$auto$opt_dff.cc:219:make_patterns_logic$7451
Extracted 13 gates and 24 wires to a netlist network with 11 inputs and 9 outputs.

3.36.116.1. Executing ABC.

3.36.117. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$38116$abc$32385$abc$26706$abc$21063$flatten\usbuart_core.\usbuart_usbif.\u_usb_serial_fifo_ep.$verific$n11$7062
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

3.36.117.1. Executing ABC.

3.36.118. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36012$abc$30313$abc$21076$auto$opt_dff.cc:219:make_patterns_logic$7520
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 6 outputs.

3.36.118.1. Executing ABC.

3.36.119. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36027$abc$30331$abc$25805$auto$opt_dff.cc:219:make_patterns_logic$7511
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 5 outputs.

3.36.119.1. Executing ABC.

3.36.120. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36039$abc$30360$abc$21116$u_reg.u_intr_state_tx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 7 gates and 13 wires to a netlist network with 6 inputs and 2 outputs.

3.36.120.1. Executing ABC.

3.36.121. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$39667$abc$33959$abc$28370$abc$23635$auto$opt_dff.cc:219:make_patterns_logic$7508
Extracted 18 gates and 27 wires to a netlist network with 9 inputs and 8 outputs.

3.36.121.1. Executing ABC.

3.36.122. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$40652$abc$34996$abc$26761$abc$23617$usbuart_core.usbuart_usbif.u_usb_serial_ctrl_ep.setup_stage_end, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 6 gates and 11 wires to a netlist network with 5 inputs and 4 outputs.

3.36.122.1. Executing ABC.

3.36.123. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36075$abc$30343$abc$21096$auto$opt_dff.cc:219:make_patterns_logic$7514
Extracted 12 gates and 21 wires to a netlist network with 9 inputs and 7 outputs.

3.36.123.1. Executing ABC.

3.36.124. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$40824$abc$36092$abc$29555$abc$24115$usbuart_core.usbuart_txfifo.fifo_incr_wptr, asynchronously reset by !$abc$40824$abc$33830$abc$28240$abc$24115$usbuart_core.usbuart_txfifo.rst_rd_ni
Extracted 23 gates and 25 wires to a netlist network with 2 inputs and 12 outputs.

3.36.124.1. Executing ABC.

3.36.125. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36122$abc$30553$abc$21127$auto$opt_dff.cc:194:make_patterns_logic$7662, asynchronously reset by !\rst_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

3.36.125.1. Executing ABC.

3.36.126. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36556$abc$30942$abc$21485$u_reg.u_intr_state_tx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 5 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

3.36.126.1. Executing ABC.

3.36.127. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36562$abc$30948$abc$21491$u_reg.u_intr_state_rx_timeout.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.127.1. Executing ABC.

3.36.128. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36567$abc$30953$abc$21496$u_reg.u_intr_state_rx_watermark.wr_en, asynchronously reset by !\rst_ni
Extracted 10 gates and 19 wires to a netlist network with 9 inputs and 2 outputs.

3.36.128.1. Executing ABC.

3.36.129. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36578$abc$30963$abc$21507$u_reg.u_intr_state_rx_frame_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.129.1. Executing ABC.

3.36.130. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36583$abc$30968$abc$21512$u_reg.u_intr_state_rx_break_err.wr_en, asynchronously reset by !\rst_ni
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 3 outputs.

3.36.130.1. Executing ABC.

3.36.131. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36592$abc$30977$abc$21521$u_reg.intg_err, asynchronously reset by !\rst_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

3.36.131.1. Executing ABC.

3.36.132. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36822$abc$31203$abc$21748$u_reg.u_intr_state_rx_parity_err.wr_en, asynchronously reset by !\rst_ni
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.36.132.1. Executing ABC.

3.36.133. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36827$abc$31208$abc$21753$u_reg.u_intr_state_rx_overflow.wr_en, asynchronously reset by !\rst_ni
Extracted 12 gates and 19 wires to a netlist network with 7 inputs and 8 outputs.

3.36.133.1. Executing ABC.

3.36.134. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36840$abc$31221$abc$21765$auto$opt_dff.cc:219:make_patterns_logic$7445
Extracted 13 gates and 21 wires to a netlist network with 8 inputs and 8 outputs.

3.36.134.1. Executing ABC.

3.36.135. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36857$abc$31241$abc$21785$auto$opt_dff.cc:219:make_patterns_logic$7448
Extracted 14 gates and 29 wires to a netlist network with 15 inputs and 12 outputs.

3.36.135.1. Executing ABC.

3.36.136. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36887$abc$31272$abc$21822$memory\usbuart_core.usbuart_rxfifo.storage$wren[7][0][0]$y$18202
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 9 outputs.

3.36.136.1. Executing ABC.

3.36.137. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36914$abc$31299$abc$21849$memory\usbuart_core.usbuart_rxfifo.storage$wren[5][0][0]$y$18190
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 10 outputs.

3.36.137.1. Executing ABC.

3.36.138. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36941$abc$31326$abc$21876$memory\usbuart_core.usbuart_rxfifo.storage$wren[28][0][0]$y$18350
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 11 outputs.

3.36.138.1. Executing ABC.

3.36.139. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36969$abc$31354$abc$21904$memory\usbuart_core.usbuart_rxfifo.storage$wren[23][0][0]$y$18314
Extracted 15 gates and 28 wires to a netlist network with 13 inputs and 9 outputs.

3.36.139.1. Executing ABC.

3.36.140. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$36996$abc$31381$abc$21931$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[6][0][0]$y$19402
Extracted 19 gates and 31 wires to a netlist network with 12 inputs and 10 outputs.

3.36.140.1. Executing ABC.

3.36.141. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37023$abc$31408$abc$21958$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[12][0][0]$y$19446
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 11 outputs.

3.36.141.1. Executing ABC.

3.36.142. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37051$abc$31436$abc$21986$memory\usbuart_core.usbuart_rxfifo.storage$wren[6][0][0]$y$18196
Extracted 12 gates and 24 wires to a netlist network with 12 inputs and 9 outputs.

3.36.142.1. Executing ABC.

3.36.143. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37078$abc$31463$abc$22013$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[18][0][0]$y$19488
Extracted 18 gates and 31 wires to a netlist network with 13 inputs and 10 outputs.

3.36.143.1. Executing ABC.

3.36.144. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37106$abc$31491$abc$22041$memory\usbuart_core.usbuart_rxfifo.storage$wren[1][0][0]$y$18156
Extracted 11 gates and 23 wires to a netlist network with 12 inputs and 10 outputs.

3.36.144.1. Executing ABC.

3.36.145. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37134$abc$31519$abc$22069$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[1][0][0]$y$19362
Extracted 13 gates and 26 wires to a netlist network with 13 inputs and 10 outputs.

3.36.145.1. Executing ABC.

3.36.146. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37162$abc$31547$abc$22097$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[21][0][0]$y$19508
Extracted 15 gates and 27 wires to a netlist network with 12 inputs and 9 outputs.

3.36.146.1. Executing ABC.

3.36.147. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37189$abc$31574$abc$22124$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[22][0][0]$y$19514
Extracted 17 gates and 30 wires to a netlist network with 13 inputs and 10 outputs.

3.36.147.1. Executing ABC.

3.36.148. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37216$abc$31601$abc$22151$memory\usbuart_core.usbuart_usbif.u_usb_serial_fifo_ep.out_pkt_buffer$wren[25][0][0]$y$19536
Extracted 16 gates and 29 wires to a netlist network with 13 inputs and 10 outputs.

3.36.148.1. Executing ABC.

3.36.149. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37244$abc$31629$abc$22179$memory\usbuart_core.usbuart_rxfifo.storage$wren[15][0][0]$y$18258
Extracted 13 gates and 25 wires to a netlist network with 12 inputs and 10 outputs.

3.36.149.1. Executing ABC.

3.36.150. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37271$abc$31656$abc$22206$memory\usbuart_core.usbuart_rxfifo.storage$wren[31][0][0]$y$18368
Extracted 10 gates and 21 wires to a netlist network with 11 inputs and 9 outputs.

3.36.150.1. Executing ABC.

3.36.151. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37298$abc$31683$abc$22233$auto$opt_dff.cc:219:make_patterns_logic$7434
Extracted 34 gates and 69 wires to a netlist network with 35 inputs and 10 outputs.

3.36.151.1. Executing ABC.

3.36.152. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37335$abc$31711$abc$22259$memory\usbuart_core.usbuart_rxfifo.storage$wren[22][0][0]$y$18308
Extracted 16 gates and 28 wires to a netlist network with 12 inputs and 10 outputs.

3.36.152.1. Executing ABC.

3.36.153. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37362$abc$31738$abc$22286$memory\usbuart_core.usbuart_rxfifo.storage$wren[21][0][0]$y$18302
Extracted 14 gates and 27 wires to a netlist network with 13 inputs and 9 outputs.

3.36.153.1. Executing ABC.

3.36.154. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_i, enabled by $abc$36129$abc$30560$abc$21134$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ni
Extracted 410 gates and 601 wires to a netlist network with 191 inputs and 57 outputs.

3.36.154.1. Executing ABC.

3.36.155. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$37389$abc$30388$abc$25938$auto$opt_dff.cc:219:make_patterns_logic$7643, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 125 gates and 128 wires to a netlist network with 3 inputs and 25 outputs.

3.36.155.1. Executing ABC.

3.36.156. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, enabled by $abc$32853$abc$27180$abc$24970$auto$opt_dff.cc:194:make_patterns_logic$7576, asynchronously reset by !$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 26 gates and 34 wires to a netlist network with 8 inputs and 15 outputs.

3.36.156.1. Executing ABC.

3.36.157. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_usb_48mhz_i, asynchronously reset by !$abc$43313$abc$33799$abc$29908$abc$23720$usbuart_core.usbuart_usbif.rst_ni
Extracted 455 gates and 591 wires to a netlist network with 136 inputs and 127 outputs.

3.36.157.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 2 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~41 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~273 debug messages>
Removed a total of 91 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43409 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li59_li59, Q = $abc$43349$lo59).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43408 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li58_li58, Q = $abc$43349$lo58).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43383 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li33_li33, Q = $abc$43349$lo33).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43382 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li32_li32, Q = $abc$43349$lo32).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43381 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li31_li31, Q = $abc$43349$lo31).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43380 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li30_li30, Q = $abc$43349$lo30).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43379 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li29_li29, Q = $abc$43349$lo29).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43378 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li28_li28, Q = $abc$43349$lo28).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43377 ($_DFF_PN0_) from module usbuart (D = $abc$43349$li27_li27, Q = $abc$43349$lo27).
Adding EN signal on $abc$43349$auto$blifparse.cc:362:parse_blif$43355 ($_DFF_PN0_) from module usbuart (D = $abc$43349$new_n609_, Q = $abc$43349$lo05).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 3 unused cells and 30947 unused wires.
<suppressed ~318 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~70 debug messages>

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~228 debug messages>
Removed a total of 76 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 80 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.38.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_3mG5aC/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Extracted 3463 gates and 4536 wires to a netlist network with 1072 inputs and 539 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 1072  #Luts =  1115  Max Lvl =  18  Avg Lvl =   5.36  [   0.45 sec. at Pass 0]
DE:   #PIs = 1072  #Luts =   993  Max Lvl =  11  Avg Lvl =   4.37  [   8.53 sec. at Pass 1]
DE:   #PIs = 1072  #Luts =   972  Max Lvl =  13  Avg Lvl =   4.24  [   2.60 sec. at Pass 2]
DE:   #PIs = 1072  #Luts =   971  Max Lvl =  11  Avg Lvl =   4.19  [   3.76 sec. at Pass 3]
DE:   #PIs = 1072  #Luts =   956  Max Lvl =  11  Avg Lvl =   4.40  [   3.26 sec. at Pass 4]
DE:   #PIs = 1072  #Luts =   948  Max Lvl =  11  Avg Lvl =   4.33  [   3.71 sec. at Pass 5]
DE:   #PIs = 1072  #Luts =   939  Max Lvl =  12  Avg Lvl =   4.60  [   2.77 sec. at Pass 6]
DE:   #PIs = 1072  #Luts =   939  Max Lvl =  12  Avg Lvl =   4.60  [   3.81 sec. at Pass 7]
DE:   #PIs = 1072  #Luts =   933  Max Lvl =  11  Avg Lvl =   4.29  [   3.24 sec. at Pass 8]
DE:   #PIs = 1072  #Luts =   933  Max Lvl =  11  Avg Lvl =   4.29  [   4.62 sec. at Pass 9]
DE:   #PIs = 1072  #Luts =   933  Max Lvl =  11  Avg Lvl =   4.29  [   3.48 sec. at Pass 10]
DE:   #PIs = 1072  #Luts =   933  Max Lvl =  11  Avg Lvl =   4.29  [   4.77 sec. at Pass 11]
DE:   #PIs = 1072  #Luts =   933  Max Lvl =  11  Avg Lvl =   4.29  [   1.01 sec. at Pass 12]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 1 unused cells and 4530 unused wires.
<suppressed ~104 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 11 inverters.

yosys> stat

3.42. Printing statistics.

=== usbuart ===

   Number of wires:               3530
   Number of wire bits:           7968
   Number of public wires:        1852
   Number of public wire bits:    6235
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1946
     $_DFFE_PN0N_                    2
     $_DFFE_PN0P_                  322
     $_DFFE_PN1N_                    2
     $_DFFE_PN1P_                    9
     $_DFFE_PP_                    578
     $_DFF_PN0_                     70
     $_DFF_PN1_                      1
     $_SDFFE_PN0P_                   1
     $_SDFFE_PP0P_                  23
     $_SDFFE_PP1P_                   1
     $lut                          922
     adder_carry                    15


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== usbuart ===

   Number of wires:               3580
   Number of wire bits:           8018
   Number of public wires:        1852
   Number of public wire bits:    6235
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1996
     $_DFFE_PN0N_                    2
     $_DFFE_PN0P_                  322
     $_DFFE_PN1N_                    2
     $_DFFE_PN1P_                    9
     $_DFFE_PP0P_                  578
     $_DFF_PN0_                     70
     $_DFF_PN1_                      1
     $_DFF_P_                       25
     $_MUX_                         50
     $lut                          922
     adder_carry                    15


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using template \$_DFFE_PN1N_ for cells of type $_DFFE_PN1N_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~2649 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~23726 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
<suppressed ~13521 debug messages>
Removed a total of 4507 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 7175 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.
<suppressed ~954 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 44 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_3mG5aC/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\usbuart' to `<abc-temp-dir>/input.blif'..
Extracted 4371 gates and 5457 wires to a netlist network with 1084 inputs and 534 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 1084  #Luts =   939  Max Lvl =  12  Avg Lvl =   4.61  [   0.82 sec. at Pass 0]
DE:   #PIs = 1084  #Luts =   939  Max Lvl =  12  Avg Lvl =   4.61  [  11.33 sec. at Pass 1]
DE:   #PIs = 1084  #Luts =   939  Max Lvl =  12  Avg Lvl =   4.61  [   2.50 sec. at Pass 2]
DE:   #PIs = 1084  #Luts =   936  Max Lvl =  12  Avg Lvl =   4.74  [   4.00 sec. at Pass 3]
DE:   #PIs = 1084  #Luts =   933  Max Lvl =  12  Avg Lvl =   4.76  [   3.97 sec. at Pass 4]
DE:   #PIs = 1084  #Luts =   933  Max Lvl =  12  Avg Lvl =   4.76  [   4.42 sec. at Pass 5]
DE:   #PIs = 1084  #Luts =   930  Max Lvl =  13  Avg Lvl =   4.87  [   4.03 sec. at Pass 6]
DE:   #PIs = 1084  #Luts =   930  Max Lvl =  13  Avg Lvl =   4.87  [   4.22 sec. at Pass 7]
DE:   #PIs = 1084  #Luts =   930  Max Lvl =  13  Avg Lvl =   4.87  [   3.48 sec. at Pass 8]
DE:   #PIs = 1084  #Luts =   930  Max Lvl =  13  Avg Lvl =   4.87  [   4.14 sec. at Pass 9]
DE:   #PIs = 1084  #Luts =   930  Max Lvl =  13  Avg Lvl =   4.87  [   1.06 sec. at Pass 10]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 4569 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \usbuart..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \usbuart.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\usbuart'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module usbuart.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \usbuart

3.56.2. Analyzing design hierarchy..
Top module:  \usbuart
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== usbuart ===

   Number of wires:               3528
   Number of wire bits:           7957
   Number of public wires:        1850
   Number of public wire bits:    6233
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1954
     $lut                          930
     adder_carry                    15
     dffsre                       1009


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \usbuart..
Removed 0 unused cells and 1713 unused wires.
<suppressed ~1713 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\usbuart'.

Warnings: 281 unique messages, 282 total
End of script. Logfile hash: 9869e6c5b4, CPU: user 63.89s system 3.72s, MEM: 98.38 MB peak
Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)
Time spent: 92% 6x abc (523 sec), 2% 67x opt_expr (13 sec), ...
real 329.69
user 516.92
sys 50.37
