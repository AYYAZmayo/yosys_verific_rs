
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.32
 Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k des.v desround.v key_gen.v s1.v s2.v s3.v s4.v s5.v s6.v s7.v s8.v wb_descontroller_top.v

yosys> verific -vlog2k des.v desround.v key_gen.v s1.v s2.v s3.v s4.v s5.v s6.v s7.v s8.v wb_descontroller_top.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'des.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'desround.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'key_gen.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's1.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's2.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's3.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's4.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's5.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's6.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's7.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 's8.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wb_descontroller_top.v'

yosys> synth_rs -top des_top -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.50

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top des_top

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] wb_descontroller_top.v:46: compiling module 'des_top'
VERIFIC-INFO [VERI-1018] des.v:52: compiling module 'des'
VERIFIC-INFO [VERI-1018] desround.v:57: compiling module 'desround'
VERIFIC-INFO [VERI-1018] key_gen.v:53: compiling module 'key_gen'
VERIFIC-WARNING [VERI-2580] key_gen.v:194: latch inferred for net 'prev0'
VERIFIC-INFO [VERI-1018] s1.v:53: compiling module 's1'
VERIFIC-INFO [VERI-1018] s2.v:53: compiling module 's2'
VERIFIC-INFO [VERI-1018] s3.v:53: compiling module 's3'
VERIFIC-INFO [VERI-1018] s4.v:53: compiling module 's4'
VERIFIC-INFO [VERI-1018] s5.v:53: compiling module 's5'
VERIFIC-INFO [VERI-1018] s6.v:53: compiling module 's6'
VERIFIC-INFO [VERI-1018] s7.v:52: compiling module 's7'
VERIFIC-INFO [VERI-1018] s8.v:52: compiling module 's8'
VERIFIC-WARNING [VERI-1209] des.v:275: expression size 5 truncated to fit in target size 4
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:86: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:87: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:88: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:89: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:90: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:91: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:96: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:100: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:101: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:106: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:111: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:115: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:119: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:123: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:127: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:133: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:137: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:142: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:146: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:152: delay control is not supported for synthesis
VERIFIC-WARNING [VERI-2371] wb_descontroller_top.v:153: delay control is not supported for synthesis
Importing module des_top.
Importing module des.
Importing module desround.
Importing module key_gen.
Importing module s1.
Importing module s2.
Importing module s3.
Importing module s4.
Importing module s5.
Importing module s6.
Importing module s7.
Importing module s8.

3.3.1. Analyzing design hierarchy..
Top module:  \des_top
Used module:     \des
Used module:         \s8
Used module:         \s7
Used module:         \s6
Used module:         \s5
Used module:         \s4
Used module:         \s3
Used module:         \s2
Used module:         \s1
Used module:         \desround
Used module:             \key_gen

3.3.2. Analyzing design hierarchy..
Top module:  \des_top
Used module:     \des
Used module:         \s8
Used module:         \s7
Used module:         \s6
Used module:         \s5
Used module:         \s4
Used module:         \s3
Used module:         \s2
Used module:         \s1
Used module:         \desround
Used module:             \key_gen
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

3.4.6. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.7. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.8. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module s8.
Optimizing module s7.
Optimizing module s6.
Optimizing module s5.
Optimizing module s4.
Optimizing module s3.
Optimizing module s2.
Optimizing module s1.
Optimizing module key_gen.
<suppressed ~7 debug messages>
Optimizing module desround.
<suppressed ~3 debug messages>
Optimizing module des.
<suppressed ~7 debug messages>
Optimizing module des_top.
<suppressed ~5 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module s8.
Deleting now unused module s7.
Deleting now unused module s6.
Deleting now unused module s5.
Deleting now unused module s4.
Deleting now unused module s3.
Deleting now unused module s2.
Deleting now unused module s1.
Deleting now unused module key_gen.
Deleting now unused module desround.
Deleting now unused module des.
<suppressed ~11 debug messages>

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~9 debug messages>

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 13 unused cells and 983 unused wires.
<suppressed ~79 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module des_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\des.$verific$i216$des.v:268$761: \des.data_ready -> 1'1
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
    New ctrl vector for $pmux cell $flatten\des.$verific$select_227$des.v:277$775: { $flatten\des.$verific$n1202$309 $flatten\des.$verific$n1204$311 }
    New ctrl vector for $pmux cell $flatten\des.$verific$select_228$des.v:277$776: { $flatten\des.$verific$n1202$309 $auto$opt_reduce.cc:134:opt_pmux$1222 }
    New ctrl vector for $pmux cell $flatten\des.$verific$select_229$des.v:277$777: { $flatten\des.$verific$n1202$309 $auto$opt_reduce.cc:134:opt_pmux$1224 }
    New ctrl vector for $pmux cell $flatten\des.$verific$select_230$des.v:277$778: { $flatten\des.$verific$n1202$309 $auto$opt_reduce.cc:134:opt_pmux$1226 }
    New ctrl vector for $pmux cell $flatten\des.\rd1.\kg1.$verific$select_350$key_gen.v:165$1178: { $flatten\des.$verific$n1202$309 $auto$opt_reduce.cc:134:opt_pmux$1228 $flatten\des.\rd1.\kg1.$verific$n975$1114 }
    New ctrl vector for $pmux cell $verific$select_41$wb_descontroller_top.v:129$272: { $verific$n638$12 $verific$n639$13 $auto$opt_reduce.cc:134:opt_pmux$1230 }
    New ctrl vector for $pmux cell $verific$select_42$wb_descontroller_top.v:129$273: { $verific$n640$14 $verific$n641$15 $auto$opt_reduce.cc:134:opt_pmux$1232 }
  Optimizing cells in module \des_top.
Performed a total of 8 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$wb_dat_o_reg$wb_descontroller_top.v:156$293 ($aldff) from module des_top.
Changing const-value async load to async reset on $verific$wb_ack_o_reg$wb_descontroller_top.v:156$292 ($aldff) from module des_top.
Changing const-value async load to async reset on $verific$key_o_reg$wb_descontroller_top.v:156$296 ($aldff) from module des_top.
Changing const-value async load to async reset on $verific$data_o_reg$wb_descontroller_top.v:156$297 ($aldff) from module des_top.
Changing const-value async load to async reset on $verific$cypher_data_reg_reg$wb_descontroller_top.v:156$295 ($aldff) from module des_top.
Changing const-value async load to async reset on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($aldff) from module des_top.
Changing const-value async load to async reset on $flatten\des.$verific$data_o_reg$des.v:141$743 ($aldff) from module des_top.
Changing const-value async load to async reset on $flatten\des.\rd1.$verific$R_o_reg$desround.v:146$960 ($aldff) from module des_top.
Changing const-value async load to async reset on $flatten\des.\rd1.$verific$L_o_reg$desround.v:146$959 ($aldff) from module des_top.
Changing const-value async load to async reset on $flatten\des.\rd1.$verific$Key_o_reg$desround.v:146$961 ($aldff) from module des_top.
Changing const-value async load to async reset on $flatten\des.$verific$stage1_iter_reg$des.v:141$744 ($aldff) from module des_top.
Changing const-value async load to async reset on $flatten\des.$verific$ready_o_reg$des.v:141$742 ($aldff) from module des_top.
Changing const-value async load to async reset on $flatten\des.$verific$data_ready_reg$des.v:141$745 ($aldff) from module des_top.
Setting constant 0-bit at position 4 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 1-bit at position 5 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 1-bit at position 6 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 7 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 8 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 9 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 10 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 11 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 12 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 13 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 14 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 15 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 16 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 17 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 18 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 19 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 20 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 21 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 22 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 23 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 24 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 25 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 26 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 27 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 28 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 29 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 30 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.
Setting constant 0-bit at position 31 on $verific$control_reg_reg$wb_descontroller_top.v:156$294 ($adff) from module des_top.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$wb_dat_o_reg$wb_descontroller_top.v:156$293 ($adff) from module des_top (D = $verific$n891$40, Q = \wb_dat_o).
Adding EN signal on $verific$key_o_reg$wb_descontroller_top.v:156$296 ($adff) from module des_top (D = $verific$n716$36 [31:0], Q = \key_o [31:0]).
Adding EN signal on $verific$key_o_reg$wb_descontroller_top.v:156$296 ($adff) from module des_top (D = $verific$n716$36 [63:32], Q = \key_o [63:32]).
Adding EN signal on $verific$data_o_reg$wb_descontroller_top.v:156$297 ($adff) from module des_top (D = $verific$n651$35 [31:0], Q = \data_o [31:0]).
Adding EN signal on $verific$data_o_reg$wb_descontroller_top.v:156$297 ($adff) from module des_top (D = $verific$n651$35 [63:32], Q = \data_o [63:32]).
Adding EN signal on $verific$cypher_data_reg_reg$wb_descontroller_top.v:156$295 ($adff) from module des_top (D = \des.data_o, Q = \cypher_data_reg).
Adding EN signal on $flatten\des.$verific$stage1_iter_reg$des.v:141$744 ($adff) from module des_top (D = \des.next_stage1_iter, Q = \des.stage1_iter).
Adding EN signal on $flatten\des.$verific$data_ready_reg$des.v:141$745 ($adff) from module des_top (D = $flatten\des.$verific$n1189$307, Q = \des.data_ready).
Adding EN signal on $auto$ff.cc:262:slice$1233 ($adff) from module des_top (D = { \wb_dat_i [3] \wb_dat_i [0] }, Q = { \control_reg [3] \control_reg [0] }).
Adding EN signal on $auto$ff.cc:262:slice$1233 ($adff) from module des_top (D = $verific$n1397$45 [1], Q = \control_reg [1]).

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 6 unused cells and 6 unused wires.
<suppressed ~8 debug messages>

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~10 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

yosys> opt_reduce

3.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.13.23. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from mux cell des_top.$verific$mux_83$wb_descontroller_top.v:154$263 ($mux).
Removed top 5 bits (of 8) from port B of cell des_top.$verific$equal_28$wb_descontroller_top.v:113$265 ($eq).
Removed top 4 bits (of 8) from port B of cell des_top.$verific$equal_29$wb_descontroller_top.v:117$266 ($eq).
Removed top 4 bits (of 8) from port B of cell des_top.$verific$equal_30$wb_descontroller_top.v:121$267 ($eq).
Removed top 3 bits (of 8) from port B of cell des_top.$verific$equal_31$wb_descontroller_top.v:125$268 ($eq).
Removed top 3 bits (of 8) from port B of cell des_top.$verific$equal_54$wb_descontroller_top.v:140$277 ($eq).
Removed top 3 bits (of 8) from port B of cell des_top.$verific$equal_55$wb_descontroller_top.v:144$278 ($eq).
Removed top 1 bits (of 4) from mux cell des_top.$verific$mux_85$wb_descontroller_top.v:129$286 ($mux).
Removed top 1 bits (of 2) from port B of cell des_top.$auto$opt_dff.cc:195:make_patterns_logic$1281 ($ne).
Removed top 3 bits (of 4) from port B of cell des_top.$flatten\des.\rd1.\kg1.$verific$equal_132$key_gen.v:86$1154 ($eq).
Removed top 3 bits (of 4) from port B of cell des_top.$flatten\des.$verific$add_222$des.v:275$768 ($add).
Removed top 1 bits (of 4) from wire des_top.$verific$n1397$45.
Removed top 1 bits (of 4) from wire des_top.$verific$n1399$47.
Removed top 28 bits (of 32) from wire des_top.control_reg.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 16 unused cells and 28 unused wires.
<suppressed ~17 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module des_top:
  creating $macc model for $flatten\des.$verific$add_222$des.v:275$768 ($add).
  creating $alu model for $macc $flatten\des.$verific$add_222$des.v:275$768.
  creating $alu cell for $flatten\des.$verific$add_222$des.v:275$768: $auto$alumacc.cc:485:replace_alu$1370
  created 1 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~13 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.19.9. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== des_top ===

   Number of wires:                206
   Number of wire bits:           3693
   Number of public wires:         120
   Number of public wire bits:    2513
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                117
     $adff                           7
     $adffe                         10
     $alu                            1
     $and                            5
     $bmux                           8
     $eq                             9
     $logic_not                      2
     $mux                           37
     $ne                             3
     $not                           14
     $or                             4
     $reduce_and                     7
     $reduce_or                      8
     $xor                            2


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_dff

3.21.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> memory_share

3.21.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> memory_collect

3.21.9. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== des_top ===

   Number of wires:                206
   Number of wire bits:           3693
   Number of public wires:         120
   Number of public wire bits:    2513
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                117
     $adff                           7
     $adffe                         10
     $alu                            1
     $and                            5
     $bmux                           8
     $eq                             9
     $logic_not                      2
     $mux                           37
     $ne                             3
     $not                           14
     $or                             4
     $reduce_and                     7
     $reduce_or                      8
     $xor                            2


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> stat

3.24. Printing statistics.

=== des_top ===

   Number of wires:                206
   Number of wire bits:           3693
   Number of public wires:         120
   Number of public wire bits:    2513
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                117
     $adff                           7
     $adffe                         10
     $alu                            1
     $and                            5
     $bmux                           8
     $eq                             9
     $logic_not                      2
     $mux                           37
     $ne                             3
     $not                           14
     $or                             4
     $reduce_and                     7
     $reduce_or                      8
     $xor                            2


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $or.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
No more expansions possible.
<suppressed ~412 debug messages>

yosys> stat

3.26. Printing statistics.

=== des_top ===

   Number of wires:                367
   Number of wire bits:           7053
   Number of public wires:         120
   Number of public wire bits:    2513
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4039
     $_AND_                         27
     $_DFFE_PP0P_                  231
     $_DFFE_PP1P_                    1
     $_DFF_PP0_                    187
     $_MUX_                       3315
     $_NOT_                         29
     $_OR_                          93
     $_XOR_                        156


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~1430 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
<suppressed ~2487 debug messages>
Removed a total of 829 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 28 unused cells and 106 unused wires.
<suppressed ~29 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~11 debug messages>

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.27.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~211 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

3.28.5. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~61 debug messages>

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.30.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=!$auto$rtlil.cc:2547:NotGate$5718, arst=\control_reg [0], srst={ }
  350 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1275, arst=\reset, srst={ }
  1172 cells in clk=\clk, en={ }, arst=\control_reg [0], srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1239, arst=\reset, srst={ }
  68 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1253, arst=\reset, srst={ }
  74 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1267, arst=\reset, srst={ }
  10 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1282, arst=\reset, srst={ }
  105 cells in clk=\clk, en=\des.ready_o, arst=\reset, srst={ }
  69 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1260, arst=\reset, srst={ }
  24 cells in clk=\clk, en=$auto$opt_dff.cc:194:make_patterns_logic$1271, arst=\control_reg [0], srst={ }
  65 cells in clk=\clk, en=$auto$opt_dff.cc:219:make_patterns_logic$1246, arst=\reset, srst={ }
  20 cells in clk=\clk, en={ }, arst=\reset, srst={ }

3.33.2. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$auto$rtlil.cc:2547:NotGate$5718, asynchronously reset by \control_reg [0]
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1275, asynchronously reset by \reset
Extracted 350 gates and 419 wires to a netlist network with 68 inputs and 60 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by $abc$5807$lo0
Extracted 1172 gates and 1359 wires to a netlist network with 185 inputs and 123 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1239, asynchronously reset by \reset
Extracted 74 gates and 144 wires to a netlist network with 70 inputs and 34 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1253, asynchronously reset by \reset
Extracted 68 gates and 106 wires to a netlist network with 37 inputs and 33 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1267, asynchronously reset by \reset
Extracted 74 gates and 117 wires to a netlist network with 42 inputs and 38 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1282, asynchronously reset by \reset
Extracted 10 gates and 19 wires to a netlist network with 8 inputs and 6 outputs.

3.33.8.1. Executing ABC.

3.33.9. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6440$lo184, asynchronously reset by \reset
Extracted 105 gates and 182 wires to a netlist network with 76 inputs and 70 outputs.

3.33.9.1. Executing ABC.

3.33.10. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1260, asynchronously reset by \reset
Extracted 69 gates and 107 wires to a netlist network with 38 inputs and 35 outputs.

3.33.10.1. Executing ABC.

3.33.11. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:194:make_patterns_logic$1271, asynchronously reset by $abc$5807$lo0
Extracted 24 gates and 30 wires to a netlist network with 5 inputs and 10 outputs.

3.33.11.1. Executing ABC.

3.33.12. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $auto$opt_dff.cc:219:make_patterns_logic$1246, asynchronously reset by \reset
Extracted 65 gates and 102 wires to a netlist network with 37 inputs and 33 outputs.

3.33.12.1. Executing ABC.

3.33.13. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \reset
Extracted 20 gates and 32 wires to a netlist network with 11 inputs and 8 outputs.

3.33.13.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  13 cells in clk=\clk, en=$abc$8213$auto$opt_dff.cc:219:make_patterns_logic$1282, arst=\reset, srst={ }
  90 cells in clk=\clk, en=$abc$8012$auto$opt_dff.cc:219:make_patterns_logic$1253, arst=\reset, srst={ }
  27 cells in clk=\clk, en=$abc$8530$auto$opt_dff.cc:194:make_patterns_logic$1271, arst=$abc$5807$lo0, srst={ }
  101 cells in clk=\clk, en=$abc$8106$auto$opt_dff.cc:219:make_patterns_logic$1267, arst=\reset, srst={ }
  97 cells in clk=\clk, en=$abc$8428$auto$opt_dff.cc:219:make_patterns_logic$1260, arst=\reset, srst={ }
  118 cells in clk=\clk, en=$abc$6440$lo184, arst=\reset, srst={ }
  2 cells in clk=\clk, en=!$abc$5802$auto$rtlil.cc:2547:NotGate$5718, arst=$abc$5807$lo0, srst={ }
  57 cells in clk=\clk, en=$abc$7908$auto$opt_dff.cc:219:make_patterns_logic$1239, arst=\reset, srst={ }
  293 cells in clk=\clk, en=$abc$5807$auto$opt_dff.cc:219:make_patterns_logic$1275, arst=\reset, srst={ }
  1530 cells in clk=\clk, en={ }, arst=$abc$5807$lo0, srst={ }
  75 cells in clk=\clk, en=$abc$8556$auto$opt_dff.cc:219:make_patterns_logic$1246, arst=\reset, srst={ }
  15 cells in clk=\clk, en={ }, arst=\reset, srst={ }

3.34.2. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8213$auto$opt_dff.cc:219:make_patterns_logic$1282, asynchronously reset by \reset
Extracted 13 gates and 22 wires to a netlist network with 9 inputs and 9 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8012$auto$opt_dff.cc:219:make_patterns_logic$1253, asynchronously reset by \reset
Extracted 90 gates and 148 wires to a netlist network with 58 inputs and 36 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8530$auto$opt_dff.cc:194:make_patterns_logic$1271, asynchronously reset by $abc$5807$lo0
Extracted 27 gates and 31 wires to a netlist network with 4 inputs and 7 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8106$auto$opt_dff.cc:219:make_patterns_logic$1267, asynchronously reset by \reset
Extracted 101 gates and 169 wires to a netlist network with 68 inputs and 37 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8428$auto$opt_dff.cc:219:make_patterns_logic$1260, asynchronously reset by \reset
Extracted 97 gates and 163 wires to a netlist network with 66 inputs and 34 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$6440$lo184, asynchronously reset by \reset
Extracted 118 gates and 196 wires to a netlist network with 78 inputs and 54 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$5802$auto$rtlil.cc:2547:NotGate$5718, asynchronously reset by $abc$5807$lo0
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

3.34.8.1. Executing ABC.

3.34.9. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$7908$auto$opt_dff.cc:219:make_patterns_logic$1239, asynchronously reset by \reset
Extracted 57 gates and 114 wires to a netlist network with 57 inputs and 37 outputs.

3.34.9.1. Executing ABC.

3.34.10. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$5807$auto$opt_dff.cc:219:make_patterns_logic$1275, asynchronously reset by \reset
Extracted 293 gates and 362 wires to a netlist network with 69 inputs and 177 outputs.

3.34.10.1. Executing ABC.

3.34.11. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by $abc$9355$lo0
Extracted 1530 gates and 1793 wires to a netlist network with 263 inputs and 176 outputs.

3.34.11.1. Executing ABC.

3.34.12. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8556$auto$opt_dff.cc:219:make_patterns_logic$1246, asynchronously reset by \reset
Extracted 75 gates and 123 wires to a netlist network with 48 inputs and 29 outputs.

3.34.12.1. Executing ABC.

3.34.13. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \reset
Extracted 15 gates and 26 wires to a netlist network with 11 inputs and 7 outputs.

3.34.13.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=!$abc$9246$abc$5802$auto$rtlil.cc:2547:NotGate$5718, arst=$abc$9355$lo0, srst={ }
  181 cells in clk=\clk, en=$abc$9355$abc$5807$auto$opt_dff.cc:219:make_patterns_logic$1275, arst=\reset, srst={ }
  11 cells in clk=\clk, en=$abc$8673$abc$8213$auto$opt_dff.cc:219:make_patterns_logic$1282, arst=\reset, srst={ }
  21 cells in clk=\clk, en=$abc$8784$abc$8530$auto$opt_dff.cc:194:make_patterns_logic$1271, arst=$abc$9355$lo0, srst={ }
  105 cells in clk=\clk, en=$abc$8807$abc$8106$auto$opt_dff.cc:219:make_patterns_logic$1267, arst=\reset, srst={ }
  76 cells in clk=\clk, en=$abc$8912$abc$8428$auto$opt_dff.cc:219:make_patterns_logic$1260, arst=\reset, srst={ }
  82 cells in clk=\clk, en=$abc$9251$abc$7908$auto$opt_dff.cc:219:make_patterns_logic$1239, arst=\reset, srst={ }
  91 cells in clk=\clk, en=$abc$8686$abc$8012$auto$opt_dff.cc:219:make_patterns_logic$1253, arst=\reset, srst={ }
  121 cells in clk=\clk, en=$abc$9598$lo136, arst=\reset, srst={ }
  1658 cells in clk=\clk, en={ }, arst=$abc$9355$lo0, srst={ }
  72 cells in clk=\clk, en=$abc$11400$abc$8556$auto$opt_dff.cc:219:make_patterns_logic$1246, arst=\reset, srst={ }
  14 cells in clk=\clk, en={ }, arst=\reset, srst={ }

3.35.2. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$9246$abc$5802$auto$rtlil.cc:2547:NotGate$5718, asynchronously reset by $abc$9355$lo0
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9355$abc$5807$auto$opt_dff.cc:219:make_patterns_logic$1275, asynchronously reset by \reset
Extracted 181 gates and 249 wires to a netlist network with 68 inputs and 175 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8673$abc$8213$auto$opt_dff.cc:219:make_patterns_logic$1282, asynchronously reset by \reset
Extracted 11 gates and 19 wires to a netlist network with 8 inputs and 8 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11507$abc$8784$abc$8530$auto$opt_dff.cc:194:make_patterns_logic$1271, asynchronously reset by $abc$11513$lo0
Extracted 21 gates and 23 wires to a netlist network with 2 inputs and 6 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8807$abc$8106$auto$opt_dff.cc:219:make_patterns_logic$1267, asynchronously reset by \reset
Extracted 105 gates and 179 wires to a netlist network with 74 inputs and 38 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8912$abc$8428$auto$opt_dff.cc:219:make_patterns_logic$1260, asynchronously reset by \reset
Extracted 76 gates and 120 wires to a netlist network with 44 inputs and 36 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9251$abc$7908$auto$opt_dff.cc:219:make_patterns_logic$1239, asynchronously reset by \reset
Extracted 82 gates and 151 wires to a netlist network with 69 inputs and 36 outputs.

3.35.8.1. Executing ABC.

3.35.9. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$8686$abc$8012$auto$opt_dff.cc:219:make_patterns_logic$1253, asynchronously reset by \reset
Extracted 91 gates and 154 wires to a netlist network with 63 inputs and 35 outputs.

3.35.9.1. Executing ABC.

3.35.10. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$9598$lo136, asynchronously reset by \reset
Extracted 121 gates and 199 wires to a netlist network with 78 inputs and 66 outputs.

3.35.10.1. Executing ABC.

3.35.11. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by $abc$11513$lo0
Extracted 1658 gates and 1919 wires to a netlist network with 261 inputs and 158 outputs.

3.35.11.1. Executing ABC.

3.35.12. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11400$abc$8556$auto$opt_dff.cc:219:make_patterns_logic$1246, asynchronously reset by \reset
Extracted 72 gates and 117 wires to a netlist network with 45 inputs and 30 outputs.

3.35.12.1. Executing ABC.

3.35.13. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \reset
Extracted 14 gates and 23 wires to a netlist network with 9 inputs and 6 outputs.

3.35.13.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  4 cells in clk=\clk, en=!$abc$11507$abc$9246$abc$5802$auto$rtlil.cc:2547:NotGate$5718, arst=$abc$11513$lo0, srst={ }
  181 cells in clk=\clk, en=$abc$11513$abc$9355$abc$5807$auto$opt_dff.cc:219:make_patterns_logic$1275, arst=\reset, srst={ }
  92 cells in clk=\clk, en=$abc$11732$abc$8807$abc$8106$auto$opt_dff.cc:219:make_patterns_logic$1267, arst=\reset, srst={ }
  21 cells in clk=\clk, en=$abc$11507$abc$8784$abc$8530$auto$opt_dff.cc:194:make_patterns_logic$1271, arst=$abc$11513$lo0, srst={ }
  93 cells in clk=\clk, en=$abc$12063$abc$8686$abc$8012$auto$opt_dff.cc:219:make_patterns_logic$1253, arst=\reset, srst={ }
  104 cells in clk=\clk, en=$abc$11839$abc$8912$abc$8428$auto$opt_dff.cc:219:make_patterns_logic$1260, arst=\reset, srst={ }
  129 cells in clk=\clk, en=$abc$12360$lo062, arst=\reset, srst={ }
  10 cells in clk=\clk, en=$abc$11698$abc$8673$abc$8213$auto$opt_dff.cc:219:make_patterns_logic$1282, arst=\reset, srst={ }
  74 cells in clk=\clk, en=$abc$11945$abc$9251$abc$7908$auto$opt_dff.cc:219:make_patterns_logic$1239, arst=\reset, srst={ }
  1645 cells in clk=\clk, en={ }, arst=$abc$11513$lo0, srst={ }
  74 cells in clk=\clk, en=$abc$14223$abc$11400$abc$8556$auto$opt_dff.cc:219:make_patterns_logic$1246, arst=\reset, srst={ }
  14 cells in clk=\clk, en={ }, arst=\reset, srst={ }

3.36.2. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by !$abc$11507$abc$9246$abc$5802$auto$rtlil.cc:2547:NotGate$5718, asynchronously reset by $abc$11513$lo0
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11513$abc$9355$abc$5807$auto$opt_dff.cc:219:make_patterns_logic$1275, asynchronously reset by \reset
Extracted 181 gates and 249 wires to a netlist network with 68 inputs and 175 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11732$abc$8807$abc$8106$auto$opt_dff.cc:219:make_patterns_logic$1267, asynchronously reset by \reset
Extracted 92 gates and 151 wires to a netlist network with 59 inputs and 38 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14329$abc$11507$abc$8784$abc$8530$auto$opt_dff.cc:194:make_patterns_logic$1271, asynchronously reset by $abc$14335$lo0
Extracted 21 gates and 23 wires to a netlist network with 2 inputs and 6 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12063$abc$8686$abc$8012$auto$opt_dff.cc:219:make_patterns_logic$1253, asynchronously reset by \reset
Extracted 93 gates and 157 wires to a netlist network with 64 inputs and 34 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11839$abc$8912$abc$8428$auto$opt_dff.cc:219:make_patterns_logic$1260, asynchronously reset by \reset
Extracted 104 gates and 178 wires to a netlist network with 74 inputs and 35 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$12360$lo062, asynchronously reset by \reset
Extracted 129 gates and 205 wires to a netlist network with 76 inputs and 57 outputs.

3.36.8.1. Executing ABC.

3.36.9. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11698$abc$8673$abc$8213$auto$opt_dff.cc:219:make_patterns_logic$1282, asynchronously reset by \reset
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 8 outputs.

3.36.9.1. Executing ABC.

3.36.10. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$11945$abc$9251$abc$7908$auto$opt_dff.cc:219:make_patterns_logic$1239, asynchronously reset by \reset
Extracted 74 gates and 135 wires to a netlist network with 61 inputs and 36 outputs.

3.36.10.1. Executing ABC.

3.36.11. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by $abc$14335$lo0
Extracted 1645 gates and 1904 wires to a netlist network with 259 inputs and 173 outputs.

3.36.11.1. Executing ABC.

3.36.12. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, enabled by $abc$14223$abc$11400$abc$8556$auto$opt_dff.cc:219:make_patterns_logic$1246, asynchronously reset by \reset
Extracted 74 gates and 120 wires to a netlist network with 46 inputs and 30 outputs.

3.36.12.1. Executing ABC.

3.36.13. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk, asynchronously reset by \reset
Extracted 14 gates and 23 wires to a netlist network with 9 inputs and 6 outputs.

3.36.13.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~8 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 1 unused cells and 12033 unused wires.
<suppressed ~85 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_7jjMyL/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Extracted 2008 gates and 2366 wires to a netlist network with 358 inputs and 289 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs = 358  #Luts =   556  Max Lvl =   7  Avg Lvl =   3.91  [   0.35 sec. at Pass 0]
DE:   #PIs = 358  #Luts =   503  Max Lvl =   9  Avg Lvl =   4.11  [   9.51 sec. at Pass 1]
DE:   #PIs = 358  #Luts =   497  Max Lvl =   9  Avg Lvl =   3.82  [   2.29 sec. at Pass 2]
DE:   #PIs = 358  #Luts =   495  Max Lvl =   9  Avg Lvl =   3.79  [   4.79 sec. at Pass 3]
DE:   #PIs = 358  #Luts =   491  Max Lvl =   9  Avg Lvl =   3.79  [   3.42 sec. at Pass 4]
DE:   #PIs = 358  #Luts =   490  Max Lvl =   8  Avg Lvl =   3.75  [   4.16 sec. at Pass 5]
DE:   #PIs = 358  #Luts =   488  Max Lvl =   8  Avg Lvl =   3.62  [   2.17 sec. at Pass 6]
DE:   #PIs = 358  #Luts =   488  Max Lvl =   8  Avg Lvl =   3.62  [   4.10 sec. at Pass 7]
DE:   #PIs = 358  #Luts =   488  Max Lvl =   8  Avg Lvl =   3.62  [   2.30 sec. at Pass 8]
DE:   #PIs = 358  #Luts =   488  Max Lvl =   8  Avg Lvl =   3.62  [   4.80 sec. at Pass 9]
DE:   #PIs = 358  #Luts =   479  Max Lvl =   8  Avg Lvl =   3.54  [  33.01 sec. at Pass 10]
DE:   #PIs = 358  #Luts =   479  Max Lvl =   8  Avg Lvl =   3.54  [   3.02 sec. at Pass 11]
DE:   #PIs = 358  #Luts =   479  Max Lvl =   8  Avg Lvl =   3.54  [   4.71 sec. at Pass 12]
DE:   #PIs = 358  #Luts =   479  Max Lvl =   8  Avg Lvl =   3.54  [   3.65 sec. at Pass 13]
DE:   #PIs = 358  #Luts =   478  Max Lvl =   8  Avg Lvl =   3.55  [  33.89 sec. at Pass 14]
DE:   #PIs = 358  #Luts =   478  Max Lvl =   8  Avg Lvl =   3.55  [   7.70 sec. at Pass 15]
DE:   #PIs = 358  #Luts =   478  Max Lvl =   8  Avg Lvl =   3.55  [   2.51 sec. at Pass 16]
DE:   #PIs = 358  #Luts =   478  Max Lvl =   8  Avg Lvl =   3.55  [   5.66 sec. at Pass 17]
DE:   #PIs = 358  #Luts =   478  Max Lvl =   8  Avg Lvl =   3.55  [  40.69 sec. at Pass 18]
DE:   #PIs = 358  #Luts =   478  Max Lvl =   8  Avg Lvl =   3.55  [   0.57 sec. at Pass 19]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 2315 unused wires.
<suppressed ~6 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== des_top ===

   Number of wires:                815
   Number of wire bits:           1574
   Number of public wires:          32
   Number of public wire bits:     791
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                889
     $_DFFE_PP0N_                    1
     $_DFFE_PP0P_                  223
     $_DFF_PP0_                    187
     $lut                          478


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== des_top ===

   Number of wires:                815
   Number of wire bits:           1574
   Number of public wires:          32
   Number of public wire bits:     791
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                889
     $_DFFE_PP0N_                    1
     $_DFFE_PP0P_                  223
     $_DFF_PP0_                    187
     $lut                          478


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.46.2. Executing Verilog-2005 frontend: /home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/meri/Documents/workspace/de-issue/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP0N_ for cells of type $_DFFE_PP0N_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~1437 debug messages>

yosys> opt_expr -mux_undef

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~7963 debug messages>

yosys> simplemap

3.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

yosys> opt_merge

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
<suppressed ~5331 debug messages>
Removed a total of 1777 cells.

yosys> opt_dff -nodffe -nosdff

3.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 3196 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.
<suppressed ~358 debug messages>

yosys> opt_merge -nomux

3.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

3.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 103 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /tmp/yosys_7jjMyL/abc_tmp_2.scr

3.54. Executing ABC pass (technology mapping using ABC).

3.54.1. Extracting gate netlist of module `\des_top' to `<abc-temp-dir>/input.blif'..
Extracted 2021 gates and 2382 wires to a netlist network with 359 inputs and 291 outputs.

3.54.1.1. Executing ABC.
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [   0.37 sec. at Pass 0]
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [  11.94 sec. at Pass 1]
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [   2.14 sec. at Pass 2]
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [   4.79 sec. at Pass 3]
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [   2.08 sec. at Pass 4]
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [   4.42 sec. at Pass 5]
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [  32.18 sec. at Pass 6]
DE:   #PIs = 359  #Luts =   480  Max Lvl =   8  Avg Lvl =   3.53  [   0.59 sec. at Pass 7]

yosys> opt

3.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

yosys> opt_merge -nomux

3.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 1623 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \des_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \des_top.
Performed a total of 0 changes.

yosys> opt_merge

3.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\des_top'.
Removed a total of 0 cells.

yosys> opt_dff

3.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..

yosys> opt_expr

3.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module des_top.

3.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.56. Executing HIERARCHY pass (managing design hierarchy).

3.56.1. Analyzing design hierarchy..
Top module:  \des_top

3.56.2. Analyzing design hierarchy..
Top module:  \des_top
Removed 0 unused modules.

yosys> stat

3.57. Printing statistics.

=== des_top ===

   Number of wires:                817
   Number of wire bits:           1576
   Number of public wires:          32
   Number of public wire bits:     791
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                891
     $lut                          480
     dffsre                        411


yosys> opt_clean -purge

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \des_top..
Removed 0 unused cells and 16 unused wires.
<suppressed ~16 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.59. Executing Verilog backend.

yosys> bmuxmap

3.59.1. Executing BMUXMAP pass.

yosys> demuxmap

3.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\des_top'.

Warnings: 23 unique messages, 23 total
End of script. Logfile hash: d8bf3f9aef, CPU: user 13.96s system 0.33s, MEM: 47.59 MB peak
Yosys 0.16+65 (git sha1 7987105a9, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 6x abc (1474 sec), 0% 21x opt_dff (3 sec), ...
real 274.75
user 1432.14
sys 55.43
