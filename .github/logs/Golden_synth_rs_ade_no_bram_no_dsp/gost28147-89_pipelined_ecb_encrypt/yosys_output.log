
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.50
 Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.

yosys> verilog_defaults -add -I.

yosys> read -vlog2k gost89_pipelined_ecb_encrypt.v gost89_round.v gost89_sbox.v

yosys> verific -vlog2k gost89_pipelined_ecb_encrypt.v gost89_round.v gost89_sbox.v

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific May22_SW_Release, released at Tue May 31 17:39:28 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_pipelined_ecb_encrypt.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_round.v'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gost89_sbox.v'

yosys> synth_rs -top gost89_pipelined_ecb_encrypt -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.59

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top gost89_pipelined_ecb_encrypt

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VERI-1018] gost89_pipelined_ecb_encrypt.v:1: compiling module 'gost89_pipelined_ecb_encrypt'
VERIFIC-INFO [VERI-1018] gost89_round.v:1: compiling module 'gost89_round'
VERIFIC-INFO [VERI-1018] gost89_sbox.v:1: compiling module 'gost89_sbox'
Importing module gost89_pipelined_ecb_encrypt.
Importing module gost89_round.
Importing module gost89_sbox.

3.3.1. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_encrypt
Used module:     \gost89_round
Used module:         \gost89_sbox

3.3.2. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_encrypt
Used module:     \gost89_round
Used module:         \gost89_sbox
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_sbox.
Optimizing module gost89_round.
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> bmuxmap

3.5. Executing BMUXMAP pass.

yosys> demuxmap

3.6. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> flatten

3.7. Executing FLATTEN pass (flatten design).
Deleting now unused module gost89_round.
Deleting now unused module gost89_sbox.
<suppressed ~40 debug messages>

yosys> bmuxmap

3.8. Executing BMUXMAP pass.

yosys> demuxmap

3.9. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> tribuf -logic

3.10. Executing TRIBUF pass.

yosys> deminout

3.11. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_clean

3.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 0 unused cells and 44514 unused wires.
<suppressed ~356 debug messages>

yosys> check

3.14. Executing CHECK pass (checking for obvious problems).
Checking module gost89_pipelined_ecb_encrypt...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge -nomux

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~256 debug messages>

yosys> opt_reduce

3.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active async load on $verific$n2_reg$gost89_pipelined_ecb_encrypt.v:44$71 ($aldff) from module gost89_pipelined_ecb_encrypt.
Removing never-active async load on $verific$n1_reg$gost89_pipelined_ecb_encrypt.v:44$70 ($aldff) from module gost89_pipelined_ecb_encrypt.

yosys> opt_clean

3.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~256 debug messages>

yosys> opt_reduce

3.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.16. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.16.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.16.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.16.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> fsm_opt

3.16.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.16.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.16.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.16.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat -nosdff

3.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge -nomux

3.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.17.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~256 debug messages>

yosys> opt_reduce

3.17.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.17.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.17.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.17.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.17.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.17.9. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.18. Executing WREDUCE pass (reducing word size of cells).

yosys> peepopt

3.19. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

3.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> bmuxmap

3.21. Executing BMUXMAP pass.

yosys> demuxmap

3.22. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> alumacc

3.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module gost89_pipelined_ecb_encrypt:
  creating $macc model for $flatten\r1.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r10.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r11.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r12.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r13.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r14.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r15.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r16.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r17.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r18.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r19.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r2.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r20.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r21.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r22.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r23.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r24.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r25.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r26.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r27.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r28.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r29.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r3.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r30.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r31.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r32.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r4.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r5.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r6.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r7.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r8.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $macc model for $flatten\r9.$verific$add_3$gost89_round.v:12$21615 ($add).
  creating $alu model for $macc $flatten\r9.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r8.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r7.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r6.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r5.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r4.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r32.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r31.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r30.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r3.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r29.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r28.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r27.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r26.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r25.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r24.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r23.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r22.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r21.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r20.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r2.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r19.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r18.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r17.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r16.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r15.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r14.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r13.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r12.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r11.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r10.$verific$add_3$gost89_round.v:12$21615.
  creating $alu model for $macc $flatten\r1.$verific$add_3$gost89_round.v:12$21615.
  creating $alu cell for $flatten\r1.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22233
  creating $alu cell for $flatten\r10.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22236
  creating $alu cell for $flatten\r11.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22239
  creating $alu cell for $flatten\r12.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22242
  creating $alu cell for $flatten\r13.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22245
  creating $alu cell for $flatten\r14.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22248
  creating $alu cell for $flatten\r15.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22251
  creating $alu cell for $flatten\r16.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22254
  creating $alu cell for $flatten\r17.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22257
  creating $alu cell for $flatten\r18.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22260
  creating $alu cell for $flatten\r19.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22263
  creating $alu cell for $flatten\r2.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22266
  creating $alu cell for $flatten\r20.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22269
  creating $alu cell for $flatten\r21.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22272
  creating $alu cell for $flatten\r22.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22275
  creating $alu cell for $flatten\r23.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22278
  creating $alu cell for $flatten\r24.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22281
  creating $alu cell for $flatten\r25.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22284
  creating $alu cell for $flatten\r26.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22287
  creating $alu cell for $flatten\r27.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22290
  creating $alu cell for $flatten\r28.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22293
  creating $alu cell for $flatten\r29.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22296
  creating $alu cell for $flatten\r3.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22299
  creating $alu cell for $flatten\r30.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22302
  creating $alu cell for $flatten\r31.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22305
  creating $alu cell for $flatten\r32.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22308
  creating $alu cell for $flatten\r4.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22311
  creating $alu cell for $flatten\r5.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22314
  creating $alu cell for $flatten\r6.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22317
  creating $alu cell for $flatten\r7.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22320
  creating $alu cell for $flatten\r8.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22323
  creating $alu cell for $flatten\r9.$verific$add_3$gost89_round.v:12$21615: $auto$alumacc.cc:485:replace_alu$22326
  created 32 $alu and 0 $macc cells.

yosys> opt_expr

3.24. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge -nomux

3.25. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.26. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~256 debug messages>

yosys> opt_reduce

3.27. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.28. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.29. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.30. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
MAX OPT ITERATION = 1

yosys> stat

3.33. Printing statistics.

=== gost89_pipelined_ecb_encrypt ===

   Number of wires:               2021
   Number of wire bits:          63393
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3906
     $alu                           32
     $dff                            2
     $mux                         3840
     $xor                           32


yosys> memory -nomap

3.34. Executing MEMORY pass.

yosys> opt_mem

3.34.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.34.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.34.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.34.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.34.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.34.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> memory_share

3.34.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.34.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.34.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> memory_collect

3.34.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.35. Printing statistics.

=== gost89_pipelined_ecb_encrypt ===

   Number of wires:               2021
   Number of wire bits:          63393
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3906
     $alu                           32
     $dff                            2
     $mux                         3840
     $xor                           32


yosys> muxpack

3.36. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~1856 debug messages>

yosys> opt_clean

3.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> pmuxtree

3.38. Executing PMUXTREE pass.

yosys> muxpack

3.39. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~1856 debug messages>

yosys> memory_map

3.40. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> stat

3.41. Printing statistics.

=== gost89_pipelined_ecb_encrypt ===

   Number of wires:               2021
   Number of wire bits:          63393
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3906
     $alu                           32
     $dff                            2
     $mux                         3840
     $xor                           32


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.42. Executing TECHMAP pass (map to technology primitives).

3.42.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.42.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.42.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$be80489e44a49c29884f59fd81c31ed03229cfc1\_80_rs_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~4296 debug messages>

yosys> stat

3.43. Printing statistics.

=== gost89_pipelined_ecb_encrypt ===

   Number of wires:               2725
   Number of wire bits:          78017
   Number of public wires:        1189
   Number of public wire bits:   47009
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              22656
     $_DFF_P_                     2048
     $_MUX_                      16448
     $_NOT_                       1024
     $_XOR_                       2112
     adder_carry                  1024


yosys> opt_expr

3.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
<suppressed ~1024 debug messages>

yosys> opt_merge -nomux

3.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
<suppressed ~1824 debug messages>
Removed a total of 608 cells.

yosys> opt_muxtree

3.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.49. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.50. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 448 unused cells and 672 unused wires.
<suppressed ~449 debug messages>

yosys> opt_expr

3.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_muxtree

3.53. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.55. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.56. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.57. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.59. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
MAX OPT ITERATION = 2

yosys> opt -nodffe -fast -full -nosdff

3.60. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.60.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge

3.60.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.60.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.60.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

3.60.5. Finished fast OPT passes.

yosys> techmap -map +/techmap.v

3.61. Executing TECHMAP pass (map to technology primitives).

3.61.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.61.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

yosys> opt -nodffe -sat -nosdff

3.62. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.62.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge -nomux

3.62.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.62.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.62.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.62.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -sat -nosdff

3.62.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.62.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.62.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.62.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.63. Executing ABC pass (technology mapping using ABC).

3.63.1. Summary of detected clock domains:
  20576 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.63.2. Extracting gate netlist of module `\gost89_pipelined_ecb_encrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 19552 gates and 21376 wires to a netlist network with 1824 inputs and 1804 outputs.

3.63.2.1. Executing ABC.

yosys> abc -dff

3.64. Executing ABC pass (technology mapping using ABC).

3.64.1. Summary of detected clock domains:
  25903 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.64.2. Extracting gate netlist of module `\gost89_pipelined_ecb_encrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 24879 gates and 26703 wires to a netlist network with 1824 inputs and 1804 outputs.

3.64.2.1. Executing ABC.

yosys> abc -dff

3.65. Executing ABC pass (technology mapping using ABC).

3.65.1. Summary of detected clock domains:
  26059 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.65.2. Extracting gate netlist of module `\gost89_pipelined_ecb_encrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 25035 gates and 26859 wires to a netlist network with 1824 inputs and 1804 outputs.

3.65.2.1. Executing ABC.

yosys> abc -dff

3.66. Executing ABC pass (technology mapping using ABC).

3.66.1. Summary of detected clock domains:
  26004 cells in clk=\clk, en={ }, arst={ }, srst={ }

3.66.2. Extracting gate netlist of module `\gost89_pipelined_ecb_encrypt' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 24980 gates and 26804 wires to a netlist network with 1824 inputs and 1804 outputs.

3.66.2.1. Executing ABC.

yosys> opt_ffinv

3.67. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat -nosdff

3.68. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.68.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
<suppressed ~23 debug messages>

yosys> opt_merge -nomux

3.68.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.68.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.68.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.68.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 3 unused cells and 92525 unused wires.
<suppressed ~292 debug messages>

yosys> opt_expr

3.68.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.68.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.68.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.68.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.68.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -sat -nosdff

3.68.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.68.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.68.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.68.16. Finished OPT passes. (There is nothing left to do.)

yosys> bmuxmap

3.69. Executing BMUXMAP pass.

yosys> demuxmap

3.70. Executing DEMUXMAP pass.

yosys> clean_zerowidth

yosys> abc -script /home/users/temp_dir/yosys_A6f6QT/abc_tmp_1.scr

3.71. Executing ABC pass (technology mapping using ABC).

3.71.1. Extracting gate netlist of module `\gost89_pipelined_ecb_encrypt' to `<abc-temp-dir>/input.blif'..
Extracted 23370 gates and 27178 wires to a netlist network with 3808 inputs and 1984 outputs.

3.71.1.1. Executing ABC.
DE:   #PIs = 3808  #Luts =  8058  Max Lvl =   4  Avg Lvl =   2.26  [   0.59 sec. at Pass 0]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  21.68 sec. at Pass 1]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   7.75 sec. at Pass 2]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   8.65 sec. at Pass 3]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   9.46 sec. at Pass 4]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   9.32 sec. at Pass 5]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   1.15 sec. at Pass 6]

yosys> opt_expr

3.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge -nomux

3.73. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.74. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.75. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.76. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.77. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.78. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 0 unused cells and 27178 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
MAX OPT ITERATION = 1

yosys> opt_ffinv

3.81. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.82. Printing statistics.

=== gost89_pipelined_ecb_encrypt ===

   Number of wires:               8409
   Number of wire bits:          54485
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10240
     $_DFF_P_                     2048
     $lut                         7168
     adder_carry                  1024


yosys> shregmap -minlen 8 -maxlen 20

3.83. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.84. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.85. Printing statistics.

=== gost89_pipelined_ecb_encrypt ===

   Number of wires:               8409
   Number of wire bits:          54485
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10240
     $_DFF_P_                     2048
     $lut                         7168
     adder_carry                  1024


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

3.86. Executing TECHMAP pass (map to technology primitives).

3.86.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.86.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.86.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~9352 debug messages>

yosys> opt_expr -mux_undef

3.87. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
<suppressed ~303673 debug messages>

yosys> simplemap

3.88. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.89. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge

3.90. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
<suppressed ~14538 debug messages>
Removed a total of 4846 cells.

yosys> opt_dff -nodffe -nosdff

3.91. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.92. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 0 unused cells and 33282 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.93. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.93.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
<suppressed ~1488 debug messages>

yosys> opt_merge -nomux

3.93.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.93.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.93.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 0 unused cells and 76 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.93.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.93.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.93.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.93.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.93.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.93.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.93.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..

yosys> opt_expr

3.93.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

3.93.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_A6f6QT/abc_tmp_2.scr

3.94. Executing ABC pass (technology mapping using ABC).

3.94.1. Extracting gate netlist of module `\gost89_pipelined_ecb_encrypt' to `<abc-temp-dir>/input.blif'..
Extracted 21437 gates and 25247 wires to a netlist network with 3808 inputs and 1984 outputs.

3.94.1.1. Executing ABC.
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   0.47 sec. at Pass 0]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  21.17 sec. at Pass 1]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   6.79 sec. at Pass 2]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   9.46 sec. at Pass 3]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  10.94 sec. at Pass 4]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [  12.34 sec. at Pass 5]
DE:   #PIs = 3808  #Luts =  7168  Max Lvl =   3  Avg Lvl =   2.03  [   1.40 sec. at Pass 6]

yosys> opt_expr

3.95. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.

yosys> opt_merge -nomux

3.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.97. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \gost89_pipelined_ecb_encrypt..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.98. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \gost89_pipelined_ecb_encrypt.
Performed a total of 0 changes.

yosys> opt_merge

3.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\gost89_pipelined_ecb_encrypt'.
Removed a total of 0 cells.

yosys> opt_share

3.100. Executing OPT_SHARE pass.

yosys> opt_dff -nodffe -nosdff

3.101. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.102. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 0 unused cells and 18992 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.103. Executing OPT_EXPR pass (perform const folding).
Optimizing module gost89_pipelined_ecb_encrypt.
MAX OPT ITERATION = 1

yosys> hierarchy -check

3.104. Executing HIERARCHY pass (managing design hierarchy).

3.104.1. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_encrypt

3.104.2. Analyzing design hierarchy..
Top module:  \gost89_pipelined_ecb_encrypt
Removed 0 unused modules.

yosys> stat

3.105. Printing statistics.

=== gost89_pipelined_ecb_encrypt ===

   Number of wires:               8409
   Number of wire bits:          54485
   Number of public wires:         901
   Number of public wire bits:   44961
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10240
     $lut                         7168
     adder_carry                  1024
     dffsre                       2048


yosys> opt_clean -purge

3.106. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \gost89_pipelined_ecb_encrypt..
Removed 0 unused cells and 614 unused wires.
<suppressed ~614 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

3.107. Executing Verilog backend.
Dumping module `\gost89_pipelined_ecb_encrypt'.

End of script. Logfile hash: 92074df1dc, CPU: user 67.00s system 1.39s, MEM: 662.30 MB peak
Yosys 0.18+10 (git sha1 7a7a25778, gcc 9.1.0 -fPIC -Os)
Time spent: 91% 6x abc (619 sec), 3% 27x opt_expr (24 sec), ...
real 226.24
user 606.82
sys 73.28
