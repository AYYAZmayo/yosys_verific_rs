
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.40
 Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -sv prim_pkg.sv prim_cipher_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv prim_mubi_pkg.sv rstmgr_pkg.sv clkmgr_pkg.sv lc_ctrl_pkg.sv pinmux_pkg.sv ast_reg_pkg.sv ast_pkg.sv ast_bhv_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv

yosys> verific -sv prim_pkg.sv prim_cipher_pkg.sv prim_secded_pkg.sv prim_subreg_pkg.sv prim_util_pkg.sv prim_mubi_pkg.sv rstmgr_pkg.sv clkmgr_pkg.sv lc_ctrl_pkg.sv pinmux_pkg.sv ast_reg_pkg.sv ast_pkg.sv ast_bhv_pkg.sv edn_pkg.sv top_pkg.sv tlul_pkg.sv

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_cipher_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:23: parameter 'PRINCE_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:28: parameter 'PRINCE_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:33: parameter 'PRINCE_SHIFT_ROWS64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:38: parameter 'PRINCE_SHIFT_ROWS64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:44: parameter 'PRINCE_ROUND_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:58: parameter 'PRINCE_ALPHA_CONST' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:61: parameter 'PRINCE_SHIFT_ROWS_CONST0' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:62: parameter 'PRINCE_SHIFT_ROWS_CONST1' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:63: parameter 'PRINCE_SHIFT_ROWS_CONST2' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:64: parameter 'PRINCE_SHIFT_ROWS_CONST3' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:141: parameter 'PRESENT_SBOX4' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:146: parameter 'PRESENT_SBOX4_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:153: parameter 'PRESENT_PERM32' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:162: parameter 'PRESENT_PERM32_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:172: parameter 'PRESENT_PERM64' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_cipher_pkg.sv:189: parameter 'PRESENT_PERM64_INV' declared inside package 'prim_cipher_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:81: parameter 'Secded2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:82: parameter 'Secded2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:90: parameter 'Secded2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:91: parameter 'Secded2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:99: parameter 'Secded3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:100: parameter 'Secded3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:108: parameter 'Secded6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:109: parameter 'Secded6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:117: parameter 'Secded7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:118: parameter 'Secded7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:126: parameter 'SecdedHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:127: parameter 'SecdedHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:135: parameter 'SecdedHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:136: parameter 'SecdedHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:144: parameter 'SecdedHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:145: parameter 'SecdedHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:153: parameter 'SecdedHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:154: parameter 'SecdedHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:162: parameter 'SecdedInv2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:163: parameter 'SecdedInv2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:171: parameter 'SecdedInv2822ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:172: parameter 'SecdedInv2822ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:180: parameter 'SecdedInv3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:181: parameter 'SecdedInv3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:189: parameter 'SecdedInv6457ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:190: parameter 'SecdedInv6457ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:198: parameter 'SecdedInv7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:199: parameter 'SecdedInv7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:207: parameter 'SecdedInvHamming2216ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:208: parameter 'SecdedInvHamming2216ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:216: parameter 'SecdedInvHamming3932ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:217: parameter 'SecdedInvHamming3932ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:225: parameter 'SecdedInvHamming7264ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:226: parameter 'SecdedInvHamming7264ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:234: parameter 'SecdedInvHamming7668ZeroEcc' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_secded_pkg.sv:235: parameter 'SecdedInvHamming7668ZeroWord' declared inside package 'prim_secded_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_util_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi_pkg.sv'
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:19: parameter 'MuBi4Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:148: parameter 'MuBi8Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:277: parameter 'MuBi12Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] prim_mubi_pkg.sv:406: parameter 'MuBi16Width' declared inside package 'prim_mubi_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'rstmgr_pkg.sv'
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:18: parameter 'PowerDomains' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:19: parameter 'DomainAonSel' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:20: parameter 'Domain0Sel' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:23: parameter 'OffDomains' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:26: parameter 'SPI_DEVICE' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:27: parameter 'USB' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:35: parameter 'RSTMGR_AST_DEFAULT' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] rstmgr_pkg.sv:71: parameter 'RSTMGR_CPU_DEFAULT' declared inside package 'rstmgr_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'clkmgr_pkg.sv'
VERIFIC-WARNING [VERI-2418] clkmgr_pkg.sv:56: parameter 'CLK_HINT_STATUS_DEFAULT' declared inside package 'clkmgr_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'lc_ctrl_pkg.sv'
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:13: parameter 'A0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:14: parameter 'A1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:15: parameter 'A2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:16: parameter 'A3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:17: parameter 'A4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:18: parameter 'A5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:19: parameter 'A6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:20: parameter 'A7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:21: parameter 'A8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:22: parameter 'A9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:23: parameter 'A10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:24: parameter 'A11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:26: parameter 'B0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:27: parameter 'B1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:28: parameter 'B2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:29: parameter 'B3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:30: parameter 'B4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:31: parameter 'B5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:32: parameter 'B6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:33: parameter 'B7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:34: parameter 'B8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:35: parameter 'B9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:36: parameter 'B10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:37: parameter 'B11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:40: parameter 'C0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:41: parameter 'C1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:42: parameter 'C2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:43: parameter 'C3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:44: parameter 'C4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:45: parameter 'C5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:46: parameter 'C6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:47: parameter 'C7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:48: parameter 'C8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:49: parameter 'C9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:50: parameter 'C10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:51: parameter 'C11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:52: parameter 'C12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:53: parameter 'C13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:54: parameter 'C14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:55: parameter 'C15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:57: parameter 'D0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:58: parameter 'D1' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:59: parameter 'D2' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:60: parameter 'D3' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:61: parameter 'D4' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:62: parameter 'D5' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:63: parameter 'D6' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:64: parameter 'D7' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:65: parameter 'D8' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:66: parameter 'D9' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:67: parameter 'D10' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:68: parameter 'D11' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:69: parameter 'D12' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:70: parameter 'D13' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:71: parameter 'D14' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:72: parameter 'D15' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:75: parameter 'E0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:76: parameter 'F0' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:82: parameter 'LcValueWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:83: parameter 'LcTokenWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:84: parameter 'NumLcStateValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:85: parameter 'LcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:86: parameter 'NumLcCountValues' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:87: parameter 'LcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:88: parameter 'NumLcStates' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:89: parameter 'DecLcStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:90: parameter 'DecLcCountWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:91: parameter 'LcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:92: parameter 'DecLcIdStateWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:172: parameter 'NumTokens' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:173: parameter 'TokenIdxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:191: parameter 'TxWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:199: parameter 'LC_TX_DEFAULT' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:201: parameter 'RmaSeedWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:204: parameter 'LcKeymgrDivWidth' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] lc_ctrl_pkg.sv:263: parameter 'TransTokenIdxMatrix' declared inside package 'lc_ctrl_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'pinmux_pkg.sv'
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:18: parameter 'NIOPokSignals' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:25: parameter 'NDFTStraps' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:27: parameter 'DftStrapPos' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:36: parameter 'NLcStraps' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] pinmux_pkg.sv:38: parameter 'LcStrapPos' declared inside package 'pinmux_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_reg_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:10: parameter 'NumRegsA' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:11: parameter 'NumRegsB' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:14: parameter 'BlockAw' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:50: parameter 'AST_REGA_0_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:51: parameter 'AST_REGA_1_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:52: parameter 'AST_REGA_2_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:53: parameter 'AST_REGA_3_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:54: parameter 'AST_REGA_4_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:55: parameter 'AST_REGA_5_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:56: parameter 'AST_REGA_6_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:57: parameter 'AST_REGA_7_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:58: parameter 'AST_REGA_8_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:59: parameter 'AST_REGA_9_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:60: parameter 'AST_REGA_10_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:61: parameter 'AST_REGA_11_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:62: parameter 'AST_REGA_12_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:63: parameter 'AST_REGA_13_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:64: parameter 'AST_REGA_14_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:65: parameter 'AST_REGA_15_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:66: parameter 'AST_REGA_16_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:67: parameter 'AST_REGA_17_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:68: parameter 'AST_REGA_18_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:69: parameter 'AST_REGA_19_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:70: parameter 'AST_REGA_20_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:71: parameter 'AST_REGA_21_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:72: parameter 'AST_REGA_22_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:73: parameter 'AST_REGA_23_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:74: parameter 'AST_REGA_24_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:75: parameter 'AST_REGA_25_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:76: parameter 'AST_REGA_26_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:77: parameter 'AST_REGA_27_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:78: parameter 'AST_REGA_28_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:79: parameter 'AST_REGA_29_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:80: parameter 'AST_REGA_30_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:81: parameter 'AST_REGAL_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:82: parameter 'AST_REGB_0_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:83: parameter 'AST_REGB_1_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:84: parameter 'AST_REGB_2_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:85: parameter 'AST_REGB_3_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:86: parameter 'AST_REGB_4_OFFSET' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:89: parameter 'AST_REGAL_RESVAL' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:90: parameter 'AST_REGAL_REG32_RESVAL' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_reg_pkg.sv:134: parameter 'AST_PERMIT' declared inside package 'ast_reg_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:15: parameter 'NumAlerts' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:16: parameter 'NumIoRails' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:17: parameter 'AsSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:18: parameter 'CgSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:19: parameter 'GdSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:20: parameter 'TsHiSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:21: parameter 'TsLoSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:22: parameter 'FlaSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:23: parameter 'OtpSel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:24: parameter 'Ot0Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:25: parameter 'Ot1Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:26: parameter 'Ot2Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:27: parameter 'Ot3Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:28: parameter 'Ot4Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:29: parameter 'Ot5Sel' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:31: parameter 'Lc2HcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:32: parameter 'Hc2LcTrCyc' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:34: parameter 'EntropyStreams' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:35: parameter 'AdcChannels' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:36: parameter 'AdcDataWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:37: parameter 'UsbCalibWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:38: parameter 'Ast2PadOutWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:39: parameter 'Pad2AstInWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:43: parameter 'LfsrWidth' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:46: parameter 'RndCnstLfsrSeedDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:47: parameter 'RndCnstLfsrPermDefault' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] ast_pkg.sv:95: parameter 'AST_RST_DEFAULT' declared inside package 'ast_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_bhv_pkg.sv'
VERIFIC-WARNING [VERI-2418] ast_bhv_pkg.sv:43: parameter 'AdcCnvtClks' declared inside package 'ast_bhv_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'edn_pkg.sv'
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:12: parameter 'ENDPOINT_BUS_WIDTH' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:24: parameter 'EDN_REQ_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] edn_pkg.sv:25: parameter 'EDN_RSP_DEFAULT' declared inside package 'edn_pkg' shall be treated as localparam
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'top_pkg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_pkg.sv'
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:14: parameter 'ArbiterImpl' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:27: parameter 'H2DCmdMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:28: parameter 'H2DCmdIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:29: parameter 'H2DCmdFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:30: parameter 'D2HRspMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:31: parameter 'D2HRspIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:32: parameter 'D2HRspFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:33: parameter 'DataMaxWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:34: parameter 'DataIntgWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:35: parameter 'DataFullWidth' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:44: parameter 'TL_A_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam
VERIFIC-WARNING [VERI-2418] tlul_pkg.sv:84: parameter 'TL_D_USER_DEFAULT' declared inside package 'tlul_pkg' shall be treated as localparam

yosys> read -vlog2k BUFGMUX.v

yosys> verific -vlog2k BUFGMUX.v

3. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'BUFGMUX.v'

yosys> read -sv adc.sv adc_ana.sv aon_clk.sv aon_osc.sv ast.sv ast_alert.sv ast_clks_byp.sv ast_dft.sv ast_entropy.sv ast_pulse_sync.sv ast_reg_top.sv dev_entropy.sv gfr_clk_mux2.sv io_clk.sv io_osc.sv prim_buf.sv prim_clock_buf.sv prim_clock_div.sv prim_clock_gating.sv prim_clock_inv.sv prim_clock_mux2.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_xor2.sv prim_lfsr.sv prim_mubi4_dec.sv prim_mubi4_sender.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_xilinx_clock_mux2.sv prim_xilinx_xor2.sv prim_xor2.sv rglts_pdm_3p3v.sv rng.sv sys_clk.sv sys_osc.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv usb_clk.sv usb_osc.sv vcaon_pgd.sv vcc_pgd.sv vcmain_pgd.sv vio_pgd.sv wav_cgc_rl.sv

yosys> verific -sv adc.sv adc_ana.sv aon_clk.sv aon_osc.sv ast.sv ast_alert.sv ast_clks_byp.sv ast_dft.sv ast_entropy.sv ast_pulse_sync.sv ast_reg_top.sv dev_entropy.sv gfr_clk_mux2.sv io_clk.sv io_osc.sv prim_buf.sv prim_clock_buf.sv prim_clock_div.sv prim_clock_gating.sv prim_clock_inv.sv prim_clock_mux2.sv prim_flop.sv prim_flop_2sync.sv prim_generic_buf.sv prim_generic_clock_buf.sv prim_generic_clock_inv.sv prim_generic_clock_mux2.sv prim_generic_flop.sv prim_generic_xor2.sv prim_lfsr.sv prim_mubi4_dec.sv prim_mubi4_sender.sv prim_mubi4_sync.sv prim_packer_fifo.sv prim_sec_anchor_buf.sv prim_secded_inv_39_32_dec.sv prim_secded_inv_39_32_enc.sv prim_secded_inv_64_57_dec.sv prim_secded_inv_64_57_enc.sv prim_subreg.sv prim_subreg_ext.sv prim_xilinx_clock_mux2.sv prim_xilinx_xor2.sv prim_xor2.sv rglts_pdm_3p3v.sv rng.sv sys_clk.sv sys_osc.sv tlul_adapter_reg.sv tlul_cmd_intg_chk.sv tlul_data_integ_dec.sv tlul_data_integ_enc.sv tlul_err.sv tlul_rsp_intg_gen.sv usb_clk.sv usb_osc.sv vcaon_pgd.sv vcc_pgd.sv vcmain_pgd.sv vio_pgd.sv wav_cgc_rl.sv

4. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 08:08:21 2022.
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'adc_ana.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'aon_clk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'aon_osc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_alert.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_clks_byp.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_dft.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_entropy.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_pulse_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'ast_reg_top.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'dev_entropy.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'gfr_clk_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'io_clk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'io_osc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_buf.sv'
VERIFIC-WARNING [VERI-1199] prim_clock_buf.sv:24: parameter 'Impl' becomes localparam in 'prim_clock_buf' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_div.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_gating.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop.sv'
VERIFIC-WARNING [VERI-1199] prim_flop.sv:30: parameter 'Impl' becomes localparam in 'prim_flop' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_flop_2sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_inv.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_flop.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_generic_xor2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_lfsr.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sender.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_mubi4_sync.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_packer_fifo.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_sec_anchor_buf.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_39_32_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_secded_inv_64_57_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_subreg_ext.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xilinx_clock_mux2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xilinx_xor2.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'prim_xor2.sv'
VERIFIC-WARNING [VERI-1199] prim_xor2.sv:27: parameter 'Impl' becomes localparam in 'prim_xor2' with formal parameter declaration list
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'rglts_pdm_3p3v.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'rng.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sys_clk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'sys_osc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_adapter_reg.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_cmd_intg_chk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_dec.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_data_integ_enc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_err.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'tlul_rsp_intg_gen.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_clk.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'usb_osc.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'vcaon_pgd.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'vcc_pgd.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'vcmain_pgd.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'vio_pgd.sv'
VERIFIC-COMMENT [VERI-1482] Analyzing Verilog file 'wav_cgc_rl.sv'

yosys> synth_rs -top ast -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

5. Executing synth_rs pass: v0.4.55

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

5.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top ast

5.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-WARNING [VERI-1927] ast_clks_byp.sv:202: port 'mubi_o' remains unconnected for this instance
VERIFIC-WARNING [VERI-1927] ast_clks_byp.sv:211: port 'mubi_o' remains unconnected for this instance
VERIFIC-INFO [VERI-1018] ast.sv:10: compiling module 'ast'
VERIFIC-INFO [VERI-1018] prim_clock_buf.sv:16: compiling module 'prim_clock_buf'
VERIFIC-INFO [VERI-1018] prim_generic_clock_buf.sv:6: compiling module 'prim_generic_clock_buf'
VERIFIC-INFO [VERI-1018] vcc_pgd.sv:14: compiling module 'vcc_pgd'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=1)'
VERIFIC-INFO [VERI-1018] vio_pgd.sv:14: compiling module 'vio_pgd'
VERIFIC-INFO [VERI-1018] prim_buf.sv:16: compiling module 'prim_buf'
VERIFIC-INFO [VERI-1018] prim_generic_buf.sv:6: compiling module 'prim_generic_buf'
VERIFIC-INFO [VERI-1018] rglts_pdm_3p3v.sv:9: compiling module 'rglts_pdm_3p3v'
VERIFIC-WARNING [VERI-1209] rglts_pdm_3p3v.sv:47: expression size 32 truncated to fit in target size 9
VERIFIC-WARNING [VERI-1209] rglts_pdm_3p3v.sv:52: expression size 32 truncated to fit in target size 9
VERIFIC-INFO [VERI-1018] sys_clk.sv:9: compiling module 'sys_clk'
VERIFIC-INFO [VERI-1018] sys_osc.sv:9: compiling module 'sys_osc'
VERIFIC-INFO [VERI-1018] usb_clk.sv:9: compiling module 'usb_clk'
VERIFIC-INFO [VERI-1018] usb_osc.sv:9: compiling module 'usb_osc'
VERIFIC-INFO [VERI-1018] aon_clk.sv:9: compiling module 'aon_clk'
VERIFIC-INFO [VERI-1018] aon_osc.sv:9: compiling module 'aon_osc'
VERIFIC-INFO [VERI-1018] io_clk.sv:9: compiling module 'io_clk'
VERIFIC-INFO [VERI-1018] io_osc.sv:9: compiling module 'io_osc'
VERIFIC-INFO [VERI-1018] ast_clks_byp.sv:10: compiling module 'ast_clks_byp'
VERIFIC-INFO [VERI-1018] prim_clock_div.sv:5: compiling module 'prim_clock_div'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_clock_inv.sv:13: compiling module 'prim_clock_inv(HasScanMode=1'b0)'
VERIFIC-INFO [VERI-1018] prim_generic_clock_inv.sv:8: compiling module 'prim_generic_clock_inv(HasScanMode=1'b0)'
VERIFIC-INFO [VERI-1018] prim_clock_mux2.sv:12: compiling module 'prim_clock_mux2'
VERIFIC-INFO [VERI-1018] prim_generic_clock_mux2.sv:6: compiling module 'prim_generic_clock_mux2'
VERIFIC-INFO [VERI-1018] prim_clock_div.sv:5: compiling module 'prim_clock_div(Divisor=240)'
VERIFIC-INFO [VERI-1018] prim_clock_gating.sv:22: compiling module 'prim_clock_gating'
VERIFIC-INFO [VERI-1018] wav_cgc_rl.sv:134: compiling module 'wav_cgc_rl'
VERIFIC-INFO [VERI-1018] wav_cgc_rl.sv:101: compiling module 'wav_or'
VERIFIC-INFO [VERI-1018] wav_cgc_rl.sv:1: compiling module 'wav_inv'
VERIFIC-INFO [VERI-1018] wav_cgc_rl.sv:30: compiling module 'wav_latch'
VERIFIC-WARNING [VERI-2580] wav_cgc_rl.sv:61: latch inferred for net 'o_q[0]'
VERIFIC-INFO [VERI-1018] wav_cgc_rl.sv:66: compiling module 'wav_and'
VERIFIC-INFO [VERI-1018] prim_mubi4_sync.sv:13: compiling module 'prim_mubi4_sync(StabilityCheck=1'b1,ResetValue=MuBi4False_prim_mubi_pkg)'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=4,ResetValue=1'b1)'
VERIFIC-INFO [VERI-1018] prim_flop.sv:16: compiling module 'prim_flop(Width=4,ResetValue=4'b0101)'
VERIFIC-INFO [VERI-1018] prim_generic_flop.sv:7: compiling module 'prim_generic_flop(Width=4,ResetValue=4'b0101)'
VERIFIC-INFO [VERI-1018] prim_xor2.sv:16: compiling module 'prim_xor2(Width=4)'
VERIFIC-INFO [VERI-1018] prim_generic_xor2.sv:6: compiling module 'prim_generic_xor2(Width=4)'
VERIFIC-INFO [VERI-1018] prim_sec_anchor_buf.sv:6: compiling module 'prim_sec_anchor_buf(Width=4)'
VERIFIC-WARNING [VERI-1330] prim_sec_anchor_buf.sv:14: actual bit length 4 differs from formal bit length 1 for port 'in_i'
VERIFIC-WARNING [VERI-1330] prim_sec_anchor_buf.sv:15: actual bit length 4 differs from formal bit length 1 for port 'out_o'
VERIFIC-INFO [VERI-1018] prim_mubi4_dec.sv:13: compiling module 'prim_mubi4_dec'
VERIFIC-INFO [VERI-1018] gfr_clk_mux2.sv:10: compiling module 'gfr_clk_mux2'
VERIFIC-INFO [VERI-1018] prim_mubi4_sender.sv:14: compiling module 'prim_mubi4_sender(ResetValue=MuBi4False_prim_mubi_pkg)'
VERIFIC-INFO [VERI-1018] adc.sv:9: compiling module 'adc(AdcCnvtClks=32'b010110)'
VERIFIC-INFO [VERI-1018] adc_ana.sv:9: compiling module 'adc_ana'
VERIFIC-INFO [VERI-1018] ast_entropy.sv:9: compiling module 'ast_entropy'
VERIFIC-INFO [VERI-1018] dev_entropy.sv:9: compiling module 'dev_entropy'
VERIFIC-INFO [VERI-1018] prim_flop_2sync.sv:7: compiling module 'prim_flop_2sync(Width=4,ResetValue=1'b0)'
VERIFIC-INFO [VERI-1018] prim_packer_fifo.sv:42: compiling module 'prim_packer_fifo(OutW=1)'
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:142: expression size 32 truncated to fit in target size 6
VERIFIC-WARNING [VERI-1209] prim_packer_fifo.sv:146: expression size 7 truncated to fit in target size 6
VERIFIC-INFO [VERI-1018] rng.sv:9: compiling module 'rng'
VERIFIC-INFO [VERI-1018] prim_lfsr.sv:28: compiling module 'prim_lfsr(LfsrDw=32'b01000000,EntropyDw=32'b01,StateOutDw=32'b0100,DefaultSeed=64'b010001011010011001001100010010101011011110100100100001100100000,StatePermEn=1'b1,StatePerm=384'b0101100001000010001100100111111001000000001000101010100011011111100101000100011000110100011110110000011101111101100100101001110010010011110011111100011011011100110101001101111111010000101101001110000011100000111110111010001111100010010111001010000110110111111000000111010100100110101011010101001011011010111011101110110110011001101100101111010001101000010110110001000001001001010010,ExtSeedSVA=1'b0)'
VERIFIC-INFO [VERI-1018] ast_pulse_sync.sv:17: compiling module 'ast_pulse_sync'
VERIFIC-INFO [VERI-1018] ast_alert.sv:9: compiling module 'ast_alert'
VERIFIC-INFO [VERI-1018] ast_reg_top.sv:8: compiling module 'ast_reg_top'
VERIFIC-INFO [VERI-1018] tlul_cmd_intg_chk.sv:10: compiling module 'tlul_cmd_intg_chk'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_dec.sv:7: compiling module 'prim_secded_inv_64_57_dec'
VERIFIC-INFO [VERI-1018] tlul_data_integ_dec.sv:10: compiling module 'tlul_data_integ_dec'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_dec.sv:7: compiling module 'prim_secded_inv_39_32_dec'
VERIFIC-INFO [VERI-1018] tlul_rsp_intg_gen.sv:10: compiling module 'tlul_rsp_intg_gen'
VERIFIC-INFO [VERI-1018] prim_secded_inv_64_57_enc.sv:7: compiling module 'prim_secded_inv_64_57_enc'
VERIFIC-INFO [VERI-1018] tlul_data_integ_enc.sv:10: compiling module 'tlul_data_integ_enc'
VERIFIC-INFO [VERI-1018] prim_secded_inv_39_32_enc.sv:7: compiling module 'prim_secded_inv_39_32_enc'
VERIFIC-INFO [VERI-1018] tlul_adapter_reg.sv:10: compiling module 'tlul_adapter_reg(RegAw=10)'
VERIFIC-INFO [VERI-1018] tlul_err.sv:7: compiling module 'tlul_err'
VERIFIC-WARNING [VERI-1209] tlul_err.sv:49: expression size 32 truncated to fit in target size 4
VERIFIC-INFO [VERI-1018] prim_subreg.sv:7: compiling module 'prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)'
VERIFIC-INFO [VERI-1018] prim_subreg_ext.sv:7: compiling module 'prim_subreg_ext'
VERIFIC-INFO [VERI-1018] ast_dft.sv:10: compiling module 'ast_dft'
Importing module ast.
Importing module adc(AdcCnvtClks=32'b010110).
Importing module adc_ana.
Importing module aon_clk.
Importing module aon_osc.
Importing module ast_alert.
Importing module ast_clks_byp.
Importing module ast_dft.
Importing module ast_entropy.
Importing module ast_reg_top.
Importing module dev_entropy.
Importing module gfr_clk_mux2.
Importing module io_clk.
Importing module io_osc.
Importing module prim_buf.
Importing module prim_clock_buf.
Importing module prim_clock_div.
Importing module prim_clock_div(Divisor=240).
Importing module prim_clock_gating.
Importing module prim_clock_inv(HasScanMode=1'b0).
Importing module prim_clock_mux2.
Importing module prim_flop(ResetValue=1'b0).
Importing module prim_flop_2sync(Width=1).
Importing module prim_flop_2sync(Width=4,ResetValue=1'b0).
Importing module prim_generic_buf.
Importing module prim_generic_clock_buf.
Importing module prim_generic_clock_inv(HasScanMode=1'b0).
Importing module prim_generic_clock_mux2.
Importing module prim_generic_flop(ResetValue=1'b0).
Importing module prim_mubi4_dec.
Importing module prim_mubi4_sender(ResetValue=MuBi4False_prim_mubi_pkg).
Importing module prim_flop(Width=4,ResetValue=4'b0101).
Importing module prim_generic_flop(Width=4,ResetValue=4'b0101).
Importing module prim_mubi4_sync(StabilityCheck=1'b1,ResetValue=MuBi4False_prim_mubi_pkg).
Importing module prim_flop_2sync(Width=4,ResetValue=1'b1).
Importing module prim_packer_fifo(OutW=1).
Importing module prim_sec_anchor_buf(Width=4).
Importing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
Importing module prim_subreg_ext.
Importing module prim_xor2(Width=4).
Importing module prim_generic_xor2(Width=4).
Importing module rglts_pdm_3p3v.
Importing module rng.
Importing module ast_pulse_sync.
Importing module prim_lfsr(LfsrDw=32'b01000000,EntropyDw=32'b01,StateOutDw=32'b0100,DefaultSeed=64'b010001011010011001001100010010101011011110100100100001100100000,StatePermEn=1'b1,StatePerm=384'b0101100001000010001100100111111001000000001000101010100011011111100101000100011000110100011110110000011101111101100100101001110010010011110011111100011011011100110101001101111111010000101101001110000011100000111110111010001111100010010111001010000110110111111000000111010100100110101011010101001011011010111011101110110110011001101100101111010001101000010110110001000001001001010010,ExtSeedSVA=1'b0).
Importing module sys_clk.
Importing module sys_osc.
Importing module tlul_adapter_reg(RegAw=10).
Importing module tlul_cmd_intg_chk.
Importing module prim_secded_inv_64_57_dec.
Importing module tlul_data_integ_dec.
Importing module prim_secded_inv_39_32_dec.
Importing module tlul_err.
Importing module tlul_rsp_intg_gen.
Importing module prim_secded_inv_64_57_enc.
Importing module tlul_data_integ_enc.
Importing module prim_secded_inv_39_32_enc.
Importing module usb_clk.
Importing module usb_osc.
Importing module vcc_pgd.
Importing module vio_pgd.
Importing module wav_cgc_rl.
Importing module wav_and.
Importing module wav_inv.
Importing module wav_latch.
Importing module wav_or.

5.3.1. Analyzing design hierarchy..
Top module:  \ast
Used module:     \ast_dft
Used module:     \ast_reg_top
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)
Used module:         \prim_subreg_ext
Used module:         \tlul_adapter_reg(RegAw=10)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \ast_alert
Used module:     \rng
Used module:         \ast_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \prim_lfsr(LfsrDw=32'b01000000,EntropyDw=32'b01,StateOutDw=32'b0100,DefaultSeed=64'b010001011010011001001100010010101011011110100100100001100100000,StatePermEn=1'b1,StatePerm=384'b0101100001000010001100100111111001000000001000101010100011011111100101000100011000110100011110110000011101111101100100101001110010010011110011111100011011011100110101001101111111010000101101001110000011100000111110111010001111100010010111001010000110110111111000000111010100100110101011010101001011011010111011101110110110011001101100101111010001101000010110110001000001001001010010,ExtSeedSVA=1'b0)
Used module:     \ast_entropy
Used module:         \dev_entropy
Used module:             \prim_packer_fifo(OutW=1)
Used module:             \prim_flop_2sync(Width=4,ResetValue=1'b0)
Used module:     \adc(AdcCnvtClks=32'b010110)
Used module:         \adc_ana
Used module:     \prim_clock_buf
Used module:         \prim_generic_clock_buf
Used module:     \ast_clks_byp
Used module:         \prim_mubi4_sender(ResetValue=MuBi4False_prim_mubi_pkg)
Used module:             \prim_flop(Width=4,ResetValue=4'b0101)
Used module:                 \prim_generic_flop(Width=4,ResetValue=4'b0101)
Used module:         \gfr_clk_mux2
Used module:             \prim_clock_gating
Used module:                 \wav_cgc_rl
Used module:                     \wav_and
Used module:                     \wav_latch
Used module:                     \wav_inv
Used module:                     \wav_or
Used module:         \prim_mubi4_dec
Used module:             \prim_buf
Used module:                 \prim_generic_buf
Used module:         \prim_mubi4_sync(StabilityCheck=1'b1,ResetValue=MuBi4False_prim_mubi_pkg)
Used module:             \prim_clock_mux2
Used module:                 \prim_generic_clock_mux2
Used module:             \prim_sec_anchor_buf(Width=4)
Used module:             \prim_xor2(Width=4)
Used module:                 \prim_generic_xor2(Width=4)
Used module:             \prim_flop_2sync(Width=4,ResetValue=1'b1)
Used module:         \prim_clock_div(Divisor=240)
Used module:         \prim_clock_div
Used module:             \prim_clock_inv(HasScanMode=1'b0)
Used module:                 \prim_generic_clock_inv(HasScanMode=1'b0)
Used module:             \prim_flop(ResetValue=1'b0)
Used module:                 \prim_generic_flop(ResetValue=1'b0)
Used module:     \io_clk
Used module:         \io_osc
Used module:     \aon_clk
Used module:         \aon_osc
Used module:     \usb_clk
Used module:         \usb_osc
Used module:     \sys_clk
Used module:         \sys_osc
Used module:     \rglts_pdm_3p3v
Used module:     \vio_pgd
Used module:     \vcc_pgd

5.3.2. Analyzing design hierarchy..
Top module:  \ast
Used module:     \ast_dft
Used module:     \ast_reg_top
Used module:         \prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0)
Used module:         \prim_subreg_ext
Used module:         \tlul_adapter_reg(RegAw=10)
Used module:             \tlul_err
Used module:         \tlul_rsp_intg_gen
Used module:             \tlul_data_integ_enc
Used module:                 \prim_secded_inv_39_32_enc
Used module:             \prim_secded_inv_64_57_enc
Used module:         \tlul_cmd_intg_chk
Used module:             \tlul_data_integ_dec
Used module:                 \prim_secded_inv_39_32_dec
Used module:             \prim_secded_inv_64_57_dec
Used module:     \ast_alert
Used module:     \rng
Used module:         \ast_pulse_sync
Used module:             \prim_flop_2sync(Width=1)
Used module:         \prim_lfsr(LfsrDw=32'b01000000,EntropyDw=32'b01,StateOutDw=32'b0100,DefaultSeed=64'b010001011010011001001100010010101011011110100100100001100100000,StatePermEn=1'b1,StatePerm=384'b0101100001000010001100100111111001000000001000101010100011011111100101000100011000110100011110110000011101111101100100101001110010010011110011111100011011011100110101001101111111010000101101001110000011100000111110111010001111100010010111001010000110110111111000000111010100100110101011010101001011011010111011101110110110011001101100101111010001101000010110110001000001001001010010,ExtSeedSVA=1'b0)
Used module:     \ast_entropy
Used module:         \dev_entropy
Used module:             \prim_packer_fifo(OutW=1)
Used module:             \prim_flop_2sync(Width=4,ResetValue=1'b0)
Used module:     \adc(AdcCnvtClks=32'b010110)
Used module:         \adc_ana
Used module:     \prim_clock_buf
Used module:         \prim_generic_clock_buf
Used module:     \ast_clks_byp
Used module:         \prim_mubi4_sender(ResetValue=MuBi4False_prim_mubi_pkg)
Used module:             \prim_flop(Width=4,ResetValue=4'b0101)
Used module:                 \prim_generic_flop(Width=4,ResetValue=4'b0101)
Used module:         \gfr_clk_mux2
Used module:             \prim_clock_gating
Used module:                 \wav_cgc_rl
Used module:                     \wav_and
Used module:                     \wav_latch
Used module:                     \wav_inv
Used module:                     \wav_or
Used module:         \prim_mubi4_dec
Used module:             \prim_buf
Used module:                 \prim_generic_buf
Used module:         \prim_mubi4_sync(StabilityCheck=1'b1,ResetValue=MuBi4False_prim_mubi_pkg)
Used module:             \prim_clock_mux2
Used module:                 \prim_generic_clock_mux2
Used module:             \prim_sec_anchor_buf(Width=4)
Used module:             \prim_xor2(Width=4)
Used module:                 \prim_generic_xor2(Width=4)
Used module:             \prim_flop_2sync(Width=4,ResetValue=1'b1)
Used module:         \prim_clock_div(Divisor=240)
Used module:         \prim_clock_div
Used module:             \prim_clock_inv(HasScanMode=1'b0)
Used module:                 \prim_generic_clock_inv(HasScanMode=1'b0)
Used module:             \prim_flop(ResetValue=1'b0)
Used module:                 \prim_generic_flop(ResetValue=1'b0)
Used module:     \io_clk
Used module:         \io_osc
Used module:     \aon_clk
Used module:         \aon_osc
Used module:     \usb_clk
Used module:         \usb_osc
Used module:     \sys_clk
Used module:         \sys_osc
Used module:     \rglts_pdm_3p3v
Used module:     \vio_pgd
Used module:     \vcc_pgd
Removed 0 unused modules.

yosys> proc

5.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

5.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

5.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

5.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

5.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

5.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

5.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

5.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

5.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

5.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

5.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

5.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

5.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module wav_or.
Optimizing module wav_latch.
Optimizing module wav_inv.
Optimizing module wav_and.
Optimizing module wav_cgc_rl.
Optimizing module vio_pgd.
Optimizing module vcc_pgd.
Optimizing module usb_osc.
<suppressed ~1 debug messages>
Optimizing module usb_clk.
Optimizing module prim_secded_inv_39_32_enc.
Optimizing module tlul_data_integ_enc.
Optimizing module prim_secded_inv_64_57_enc.
Optimizing module tlul_rsp_intg_gen.
Optimizing module tlul_err.
<suppressed ~1 debug messages>
Optimizing module prim_secded_inv_39_32_dec.
Optimizing module tlul_data_integ_dec.
Optimizing module prim_secded_inv_64_57_dec.
Optimizing module tlul_cmd_intg_chk.
<suppressed ~1 debug messages>
Optimizing module tlul_adapter_reg(RegAw=10).
<suppressed ~12 debug messages>
Optimizing module sys_osc.
<suppressed ~1 debug messages>
Optimizing module sys_clk.
Optimizing module prim_lfsr(LfsrDw=32'b01000000,EntropyDw=32'b01,StateOutDw=32'b0100,DefaultSeed=64'b010001011010011001001100010010101011011110100100100001100100000,StatePermEn=1'b1,StatePerm=384'b0101100001000010001100100111111001000000001000101010100011011111100101000100011000110100011110110000011101111101100100101001110010010011110011111100011011011100110101001101111111010000101101001110000011100000111110111010001111100010010111001010000110110111111000000111010100100110101011010101001011011010111011101110110110011001101100101111010001101000010110110001000001001001010010,ExtSeedSVA=1'b0).
<suppressed ~3 debug messages>
Optimizing module ast_pulse_sync.
<suppressed ~3 debug messages>
Optimizing module rng.
<suppressed ~8 debug messages>
Optimizing module rglts_pdm_3p3v.
<suppressed ~43 debug messages>
Optimizing module prim_generic_xor2(Width=4).
Optimizing module prim_xor2(Width=4).
Optimizing module prim_subreg_ext.
Optimizing module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
<suppressed ~3 debug messages>
Optimizing module prim_sec_anchor_buf(Width=4).
<suppressed ~1 debug messages>
Optimizing module prim_packer_fifo(OutW=1).
<suppressed ~9 debug messages>
Optimizing module prim_flop_2sync(Width=4,ResetValue=1'b1).
<suppressed ~3 debug messages>
Optimizing module prim_mubi4_sync(StabilityCheck=1'b1,ResetValue=MuBi4False_prim_mubi_pkg).
<suppressed ~1 debug messages>
Optimizing module prim_generic_flop(Width=4,ResetValue=4'b0101).
<suppressed ~2 debug messages>
Optimizing module prim_flop(Width=4,ResetValue=4'b0101).
Optimizing module prim_mubi4_sender(ResetValue=MuBi4False_prim_mubi_pkg).
Optimizing module prim_mubi4_dec.
Optimizing module prim_generic_flop(ResetValue=1'b0).
<suppressed ~1 debug messages>
Optimizing module prim_generic_clock_mux2.
Optimizing module prim_generic_clock_inv(HasScanMode=1'b0).
Optimizing module prim_generic_clock_buf.
Optimizing module prim_generic_buf.
Optimizing module prim_flop_2sync(Width=4,ResetValue=1'b0).
<suppressed ~3 debug messages>
Optimizing module prim_flop_2sync(Width=1).
<suppressed ~2 debug messages>
Optimizing module prim_flop(ResetValue=1'b0).
Optimizing module prim_clock_mux2.
Optimizing module prim_clock_inv(HasScanMode=1'b0).
Optimizing module prim_clock_gating.
Optimizing module prim_clock_div(Divisor=240).
<suppressed ~4 debug messages>
Optimizing module prim_clock_div.
<suppressed ~1 debug messages>
Optimizing module prim_clock_buf.
Optimizing module prim_buf.
Optimizing module io_osc.
<suppressed ~1 debug messages>
Optimizing module io_clk.
Optimizing module gfr_clk_mux2.
<suppressed ~6 debug messages>
Optimizing module dev_entropy.
<suppressed ~13 debug messages>
Optimizing module ast_reg_top.
<suppressed ~2 debug messages>
Optimizing module ast_entropy.
<suppressed ~5 debug messages>
Optimizing module ast_dft.
<suppressed ~7 debug messages>
Optimizing module ast_clks_byp.
<suppressed ~6 debug messages>
Optimizing module ast_alert.
<suppressed ~2 debug messages>
Optimizing module aon_osc.
<suppressed ~1 debug messages>
Optimizing module aon_clk.
Optimizing module adc_ana.
Optimizing module adc(AdcCnvtClks=32'b010110).
<suppressed ~14 debug messages>
Optimizing module ast.
<suppressed ~20 debug messages>

yosys> flatten

5.5. Executing FLATTEN pass (flatten design).
Deleting now unused module wav_or.
Deleting now unused module wav_latch.
Deleting now unused module wav_inv.
Deleting now unused module wav_and.
Deleting now unused module wav_cgc_rl.
Deleting now unused module vio_pgd.
Deleting now unused module vcc_pgd.
Deleting now unused module usb_osc.
Deleting now unused module usb_clk.
Deleting now unused module prim_secded_inv_39_32_enc.
Deleting now unused module tlul_data_integ_enc.
Deleting now unused module prim_secded_inv_64_57_enc.
Deleting now unused module tlul_rsp_intg_gen.
Deleting now unused module tlul_err.
Deleting now unused module prim_secded_inv_39_32_dec.
Deleting now unused module tlul_data_integ_dec.
Deleting now unused module prim_secded_inv_64_57_dec.
Deleting now unused module tlul_cmd_intg_chk.
Deleting now unused module tlul_adapter_reg(RegAw=10).
Deleting now unused module sys_osc.
Deleting now unused module sys_clk.
Deleting now unused module prim_lfsr(LfsrDw=32'b01000000,EntropyDw=32'b01,StateOutDw=32'b0100,DefaultSeed=64'b010001011010011001001100010010101011011110100100100001100100000,StatePermEn=1'b1,StatePerm=384'b0101100001000010001100100111111001000000001000101010100011011111100101000100011000110100011110110000011101111101100100101001110010010011110011111100011011011100110101001101111111010000101101001110000011100000111110111010001111100010010111001010000110110111111000000111010100100110101011010101001011011010111011101110110110011001101100101111010001101000010110110001000001001001010010,ExtSeedSVA=1'b0).
Deleting now unused module ast_pulse_sync.
Deleting now unused module rng.
Deleting now unused module rglts_pdm_3p3v.
Deleting now unused module prim_generic_xor2(Width=4).
Deleting now unused module prim_xor2(Width=4).
Deleting now unused module prim_subreg_ext.
Deleting now unused module prim_subreg(SWACCESS=SwAccessRW_prim_subreg_pkg,RESVAL=32'b0).
Deleting now unused module prim_sec_anchor_buf(Width=4).
Deleting now unused module prim_packer_fifo(OutW=1).
Deleting now unused module prim_flop_2sync(Width=4,ResetValue=1'b1).
Deleting now unused module prim_mubi4_sync(StabilityCheck=1'b1,ResetValue=MuBi4False_prim_mubi_pkg).
Deleting now unused module prim_generic_flop(Width=4,ResetValue=4'b0101).
Deleting now unused module prim_flop(Width=4,ResetValue=4'b0101).
Deleting now unused module prim_mubi4_sender(ResetValue=MuBi4False_prim_mubi_pkg).
Deleting now unused module prim_mubi4_dec.
Deleting now unused module prim_generic_flop(ResetValue=1'b0).
Deleting now unused module prim_generic_clock_mux2.
Deleting now unused module prim_generic_clock_inv(HasScanMode=1'b0).
Deleting now unused module prim_generic_clock_buf.
Deleting now unused module prim_generic_buf.
Deleting now unused module prim_flop_2sync(Width=4,ResetValue=1'b0).
Deleting now unused module prim_flop_2sync(Width=1).
Deleting now unused module prim_flop(ResetValue=1'b0).
Deleting now unused module prim_clock_mux2.
Deleting now unused module prim_clock_inv(HasScanMode=1'b0).
Deleting now unused module prim_clock_gating.
Deleting now unused module prim_clock_div(Divisor=240).
Deleting now unused module prim_clock_div.
Deleting now unused module prim_clock_buf.
Deleting now unused module prim_buf.
Deleting now unused module io_osc.
Deleting now unused module io_clk.
Deleting now unused module gfr_clk_mux2.
Deleting now unused module dev_entropy.
Deleting now unused module ast_reg_top.
Deleting now unused module ast_entropy.
Deleting now unused module ast_dft.
Deleting now unused module ast_clks_byp.
Deleting now unused module ast_alert.
Deleting now unused module aon_osc.
Deleting now unused module aon_clk.
Deleting now unused module adc_ana.
Deleting now unused module adc(AdcCnvtClks=32'b010110).
<suppressed ~180 debug messages>

yosys> tribuf -logic

5.6. Executing TRIBUF pass.

yosys> deminout

5.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~98 debug messages>

yosys> opt_clean

5.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 376 unused cells and 10270 unused wires.
<suppressed ~1538 debug messages>

yosys> check

5.10. Executing CHECK pass (checking for obvious problems).
Checking module ast...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

5.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~147 debug messages>

yosys> opt_merge -nomux

5.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

yosys> opt_muxtree

5.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\u_entropy.\u_dev0_entropy.$verific$i99$dev_entropy.sv:220$8781: \u_entropy.u_dev0_entropy.wvalid -> 1'0
      Replacing known input bits on port A of cell $flatten\u_adc.$verific$i52$adc.sv:100$2021: \u_adc.adc_busy -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~84 debug messages>

yosys> opt_reduce

5.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
  Optimizing cells in module \ast.
Performed a total of 2 changes.

yosys> opt_merge

5.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$regal_reg$ast.sv:825$1851 ($aldff) from module ast.
Changing const-value async load to async reset on $verific$por_sync_n_reg$ast.sv:247$78 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_adc.$verific$cnv_cyc_reg$adc.sv:100$2036 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_adc.$verific$adc_d_val_o_reg$adc.sv:100$2038 ($aldff) from module ast.
Changing const-value async load to async reset on $verific$ast_init_done_o_reg$ast.sv:825$1852 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_usb_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Handling const CLK on $flatten\u_usb_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_usb_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Handling const CLK on $flatten\u_usb_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_sys_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Handling const CLK on $flatten\u_sys_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_sys_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Handling const CLK on $flatten\u_sys_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_rst_sys_dasrt.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rst_sys_dasrt.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_sync2_ack.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_sync2_ack.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_rst_src_da.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_rst_src_da.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_rst_dst_da.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_rst_dst_da.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_dst_req.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.\u_dst_req.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.$verific$src_req_reg$ast_pulse_sync.sv:86$9737 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.$verific$src_pulse_d_reg$ast_pulse_sync.sv:70$9729 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_val_pulse_sync.$verific$dst_req_d_reg$ast_pulse_sync.sv:132$9750 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.\u_rng_lfsr.$verific$lfsr_q_reg$prim_lfsr.sv:489$9789 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.$verific$srate_rng_val_reg$rng.sv:65$9667 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.$verific$srate_cnt_reg$rng.sv:65$9666 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.$verific$rng_val_o_reg$rng.sv:108$9687 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.$verific$rng_b_reg$rng.sv:95$9681 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rng.$verific$rng_b_o_reg$rng.sv:108$9686 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$vcmain_pok_h_reg$rglts_pdm_3p3v.sv:212$9518 ($aldff) from module ast.
Handling always-active async load on $flatten\u_rglts_pdm_3p3v.$verific$vcc_pok_str_h_reg$rglts_pdm_3p3v.sv:255$9536 ($aldff) from module ast (changing to combinatorial circuit).
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$vcc_pok_s_h_reg$rglts_pdm_3p3v.sv:101$9487 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$vcc_pok_fe_h_reg$rglts_pdm_3p3v.sv:93$9485 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$rglssm_vcaon_h_o_reg$rglts_pdm_3p3v.sv:212$9520 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$rgls_sm_reg$rglts_pdm_3p3v.sv:212$9522 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$main_pd_str_h_reg$rglts_pdm_3p3v.sv:212$9519 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$dly_cnt_reg$rglts_pdm_3p3v.sv:212$9521 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_rglts_pdm_3p3v.$verific$deep_sleep_h_o_reg$rglts_pdm_3p3v.sv:275$9545 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_fla.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_fla.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot0.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot0.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_gd.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_gd.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$9921 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$9920 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$9919 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$9930 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$9909 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$9931 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_reg.$verific$intg_err_q_reg$ast_reg_top.sv:61$2953 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_poks_por_dasrt.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_poks_por_dasrt.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_io_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Handling const CLK on $flatten\u_io_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_io_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Handling const CLK on $flatten\u_io_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_wvalid_es_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_wvalid_es_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_wvalid_dev_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_wvalid_dev_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_wready_es_dev_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_wready_es_dev_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_rst_es_n_da.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_rst_es_n_da.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_erate_sync.$verific$q_reg$prim_flop_2sync.sv:26$9058 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_erate_sync.$verific$intq_reg$prim_flop_2sync.sv:26$9057 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$depth_q_reg$prim_packer_fifo.sv:87$9281 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$clr_q_reg$prim_packer_fifo.sv:87$9283 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_dev_en_dev_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.\u_dev_en_dev_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.$verific$wvalid_reg$dev_entropy.sv:220$8783 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.$verific$wready_es_d_reg$dev_entropy.sv:126$8737 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.$verific$wready_dev_reg$dev_entropy.sv:192$8771 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.$verific$wdata_val_reg$dev_entropy.sv:142$8748 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.$verific$fast_start_reg$dev_entropy.sv:72$8710 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.$verific$fast_cnt_reg$dev_entropy.sv:72$8711 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.\u_dev0_entropy.$verific$erate_cnt_reg$dev_entropy.sv:84$8723 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.$verific$erq_sm_reg$ast_entropy.sv:83$2430 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_entropy.$verific$edn_req_reg$ast_entropy.sv:83$2429 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot1.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot1.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_sw_ext_freq_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_sw_ext_freq_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_io_clk_byp_ack.\gen_flops.u_prim_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$9125 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_deep_sleep_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_deep_sleep_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$gen_div.cnt_reg$prim_clock_div.sv:85$9009 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$clk_int_reg$prim_clock_div.sv:85$9010 ($aldff) from module ast.
Handling always-active async load on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.\u_clk_osc_ckgt.\u_cgc.\u_latch.$verific$o_q_reg[0]$wav_cgc_rl.sv:61$10997 ($dlatch) from module ast (changing to combinatorial circuit).
Changing const-value async load to async reset on $flatten\u_alert_ot2.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_ext_sel_reg$gfr_clk_mux2.sv:69$8881 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_ext_aoff_reg$gfr_clk_mux2.sv:69$8882 ($aldff) from module ast.
Handling always-active async load on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.\u_clk_osc_ckgt.\u_cgc.\u_latch.$verific$o_q_reg[0]$wav_cgc_rl.sv:61$10997 ($dlatch) from module ast (changing to combinatorial circuit).
Changing const-value async load to async reset on $flatten\u_adc.$verific$adc_d_o_reg$adc.sv:100$2039 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot2.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_ext_sel_reg$gfr_clk_mux2.sv:69$8881 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_ext_aoff_reg$gfr_clk_mux2.sv:69$8882 ($aldff) from module ast.
Handling always-active async load on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.\u_clk_osc_ckgt.\u_cgc.\u_latch.$verific$o_q_reg[0]$wav_cgc_rl.sv:61$10997 ($dlatch) from module ast (changing to combinatorial circuit).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_sel_reg$gfr_clk_mux2.sv:41$8869 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_sel_reg$gfr_clk_mux2.sv:41$8869 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_ext_sel_reg$gfr_clk_mux2.sv:69$8881 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_ext_aoff_reg$gfr_clk_mux2.sv:69$8882 ($aldff) from module ast.
Handling always-active async load on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.\u_clk_osc_ckgt.\u_cgc.\u_latch.$verific$o_q_reg[0]$wav_cgc_rl.sv:61$10997 ($dlatch) from module ast (changing to combinatorial circuit).
Changing const-value async load to async reset on $flatten\u_adc.$verific$adc_en_reg$adc.sv:34$1971 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_sel_reg$gfr_clk_mux2.sv:41$8869 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_sel_reg$gfr_clk_mux2.sv:41$8869 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast.
Handling const CLK on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_ext_sel_reg$gfr_clk_mux2.sv:69$8881 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_ext_aoff_reg$gfr_clk_mux2.sv:69$8882 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_ext_d1ord2.\gen_div2.u_div2.\gen_generic.u_impl_generic.$verific$q_o_reg[0]$prim_generic_flop.sv:23$9076 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_clk_ext_d1ord2.$verific$gen_div2.step_down_nq_reg$prim_clock_div.sv:53$8966 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.\u_all_clk_byp_ack.\gen_flops.u_prim_flop.\gen_generic.u_impl_generic.$verific$q_o_reg$prim_generic_flop.sv:23$9125 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.$verific$sw_io_clk_byp_reg$ast_clks_byp.sv:248$2290 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.$verific$sw_clk_byp_en_reg$ast_clks_byp.sv:77$2194 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_ast_clks_byp.$verific$sw_all_clk_byp_reg$ast_clks_byp.sv:248$2288 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_as.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_adc.$verific$adc_busy_reg$adc.sv:100$2037 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_as.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_aon_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast.
Handling const CLK on $flatten\u_aon_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_aon_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast.
Handling const CLK on $flatten\u_aon_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($aldff) from module ast (removing D path).
Changing const-value async load to async reset on $flatten\u_alert_ts_lo.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ts_lo.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_cg.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_cg.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ts_hi.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ts_hi.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_otp.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_otp.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot5.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot5.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot4.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot4.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot3.$verific$p_alert_reg$ast_alert.sv:50$2124 ($aldff) from module ast.
Changing const-value async load to async reset on $flatten\u_alert_ot3.$verific$n_alert_reg$ast_alert.sv:68$2134 ($aldff) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_aon_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_aon_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_osc_sel_reg$gfr_clk_mux2.sv:41$8869 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_osc_sel_reg$gfr_clk_mux2.sv:41$8869 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_osc_aoff_reg$gfr_clk_mux2.sv:41$8870 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_osc_en_q_reg$gfr_clk_mux2.sv:51$8875 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_entropy.\u_dev0_entropy.\u_erate_sync.$verific$intq_reg$prim_flop_2sync.sv:26$9057 ($adff) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_entropy.\u_dev0_entropy.\u_erate_sync.$verific$intq_reg$prim_flop_2sync.sv:26$9057 ($adff) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_io_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_io_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_sys_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_sys_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_usb_clk.\u_val_sync.$verific$intq_reg[0]$prim_flop_2sync.sv:26$9045 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_usb_clk.\u_val_sync.$verific$q_reg[0]$prim_flop_2sync.sv:26$9046 ($dlatch) from module ast.

yosys> opt_clean

5.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 42 unused cells and 208 unused wires.
<suppressed ~159 debug messages>

yosys> opt_expr

5.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~16 debug messages>

5.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

yosys> opt_reduce

5.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling D = Q on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Handling D = Q on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($adff) from module ast (removing D path).
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_entropy.\u_dev0_entropy.\u_erate_sync.$verific$q_reg$prim_flop_2sync.sv:26$9058 ($adff) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_entropy.\u_dev0_entropy.\u_erate_sync.$verific$q_reg$prim_flop_2sync.sv:26$9058 ($adff) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_10.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_11.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_12.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_13.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_14.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_15.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_16.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_17.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_18.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_19.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_20.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_21.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_22.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_23.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_24.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_25.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_26.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_27.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_28.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_29.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_30.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_5.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_6.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_7.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_8.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_rega_9.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_regb_0.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_regb_1.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_regb_2.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_regb_3.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 0 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 1 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 2 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 3 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 4 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 5 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 6 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 7 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 8 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 9 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 10 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 11 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 12 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 13 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 14 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 15 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 16 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 17 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 18 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 19 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 20 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 21 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 22 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 23 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 24 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 25 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 26 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 27 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 28 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 29 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 30 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.
Setting constant 0-bit at position 31 on $flatten\u_reg.\u_regb_4.$verific$q_reg$prim_subreg.sv:72$9347 ($dlatch) from module ast.

yosys> opt_clean

5.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.11.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

yosys> opt_reduce

5.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
    New ctrl vector for $pmux cell $flatten\u_reg.$verific$select_618$ast_reg_top.sv:1565$8619: { $flatten\u_reg.$verific$n5911$2778 $flatten\u_reg.$verific$n5928$2795 }
  Optimizing cells in module \ast.
Performed a total of 1 changes.

yosys> opt_merge

5.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 70 unused cells and 70 unused wires.
<suppressed ~71 debug messages>

yosys> opt_expr

5.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.11.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.11.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

yosys> opt_reduce

5.11.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.11.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.11.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.11.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.11.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.11.30. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

5.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

5.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

5.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

5.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

5.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> fsm_opt

5.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

5.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

5.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

5.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

5.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

yosys> opt_merge -nomux

5.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~80 debug messages>

yosys> opt_reduce

5.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $verific$regal_reg$ast.sv:825$1851 ($adff) from module ast (D = \tl_i.a_data, Q = \regal).
Adding EN signal on $verific$ast_init_done_o_reg$ast.sv:825$1852 ($adff) from module ast (D = 1'1, Q = \ast_init_done_o).
Adding EN signal on $flatten\u_rng.\u_rng_lfsr.$verific$lfsr_q_reg$prim_lfsr.sv:489$9789 ($adff) from module ast (D = \u_rng.u_rng_lfsr.lfsr_d, Q = \u_rng.u_rng_lfsr.lfsr_q).
Adding EN signal on $flatten\u_rng.$verific$rng_b_reg$rng.sv:95$9681 ($adff) from module ast (D = { \u_rng.u_rng_lfsr.lfsr_q [49] \u_rng.u_rng_lfsr.lfsr_q [1] \u_rng.u_rng_lfsr.lfsr_q [9] \u_rng.u_rng_lfsr.lfsr_q [18] }, Q = \u_rng.rng_b).
Adding EN signal on $flatten\u_rng.$verific$rng_b_o_reg$rng.sv:108$9686 ($adff) from module ast (D = \u_rng.rng_b, Q = \u_rng.rng_b_o).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rspop_reg$tlul_adapter_reg.sv:86$9921 ($adff) from module ast (D = { 2'00 \u_reg.u_reg_if.rd_req }, Q = \u_reg.u_reg_if.rspop).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqsz_reg$tlul_adapter_reg.sv:86$9920 ($adff) from module ast (D = \tl_i.a_size, Q = \u_reg.u_reg_if.reqsz).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$reqid_reg$tlul_adapter_reg.sv:86$9919 ($adff) from module ast (D = \tl_i.a_source, Q = \u_reg.u_reg_if.reqid).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$rdata_reg$tlul_adapter_reg.sv:96$9930 ($adff) from module ast (D = $flatten\u_reg.\u_reg_if.$verific$n187$9879, Q = \u_reg.u_reg_if.rdata).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$outstanding_reg$tlul_adapter_reg.sv:73$9909 ($adff) from module ast (D = $flatten\u_reg.\u_reg_if.$verific$n78$9851, Q = \u_reg.u_reg_if.outstanding).
Adding EN signal on $flatten\u_reg.\u_reg_if.$verific$error_reg$tlul_adapter_reg.sv:96$9931 ($adff) from module ast (D = $flatten\u_reg.\u_reg_if.$verific$n185$9853, Q = \u_reg.u_reg_if.error).
Adding EN signal on $flatten\u_reg.$verific$intg_err_q_reg$ast_reg_top.sv:61$2953 ($adff) from module ast (D = 1'1, Q = \u_reg.intg_err_q).
Adding EN signal on $flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$depth_q_reg$prim_packer_fifo.sv:87$9281 ($adff) from module ast (D = \u_entropy.u_dev0_entropy.u_dev_fifo.depth_d, Q = \u_entropy.u_dev0_entropy.u_dev_fifo.depth_q).
Adding EN signal on $flatten\u_entropy.\u_dev0_entropy.$verific$wready_dev_reg$dev_entropy.sv:192$8771 ($adff) from module ast (D = $flatten\u_entropy.\u_dev0_entropy.$verific$n505$8657, Q = \u_entropy.u_dev0_entropy.wready_dev).
Adding EN signal on $flatten\u_entropy.\u_dev0_entropy.$verific$wdata_val_reg$dev_entropy.sv:142$8748 ($adff) from module ast (D = $flatten\u_entropy.\u_dev0_entropy.$verific$n482$8648, Q = \u_entropy.u_dev0_entropy.wdata_val).
Adding EN signal on $flatten\u_entropy.\u_dev0_entropy.$verific$fast_start_reg$dev_entropy.sv:72$8710 ($adff) from module ast (D = 1'0, Q = \u_entropy.u_dev0_entropy.fast_start).
Adding EN signal on $flatten\u_entropy.\u_dev0_entropy.$verific$fast_cnt_reg$dev_entropy.sv:72$8711 ($adff) from module ast (D = $flatten\u_entropy.\u_dev0_entropy.$verific$n25$8667, Q = \u_entropy.u_dev0_entropy.fast_cnt).
Adding EN signal on $flatten\u_entropy.\u_dev0_entropy.$verific$erate_cnt_reg$dev_entropy.sv:84$8723 ($adff) from module ast (D = $flatten\u_entropy.\u_dev0_entropy.$verific$n288$8679, Q = \u_entropy.u_dev0_entropy.erate_cnt).
Adding EN signal on $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$clk_int_reg$prim_clock_div.sv:85$9010 ($adff) from module ast (D = \u_ast_clks_byp.u_clk_src_aon_sel.u_clk_byp_ckgt.u_cgc.u_latch.i_clk, Q = \u_ast_clks_byp.u_clk_usb_div240_div.clk_int).
Adding EN signal on $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($adff) from module ast (D = $flatten\u_ast_clks_byp.\u_clk_src_usb_sel.$verific$n49$8855, Q = \u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_en_q).
Adding EN signal on $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($adff) from module ast (D = $flatten\u_ast_clks_byp.\u_clk_src_sys_sel.$verific$n49$8855, Q = \u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_en_q).
Adding EN signal on $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($adff) from module ast (D = $flatten\u_ast_clks_byp.\u_clk_src_io_sel.$verific$n49$8855, Q = \u_ast_clks_byp.u_clk_src_io_sel.clk_ext_en_q).
Adding EN signal on $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$clk_ext_en_q_reg$gfr_clk_mux2.sv:79$8886 ($adff) from module ast (D = $flatten\u_ast_clks_byp.\u_clk_src_aon_sel.$verific$n49$8855, Q = \u_ast_clks_byp.u_clk_src_aon_sel.clk_ext_en_q).
Adding EN signal on $flatten\u_ast_clks_byp.$verific$sw_clk_byp_en_reg$ast_clks_byp.sv:77$2194 ($adff) from module ast (D = 1'1, Q = \u_ast_clks_byp.sw_clk_byp_en).
Adding EN signal on $flatten\u_alert_ts_lo.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ts_lo.$verific$n24$2097, Q = \u_alert_ts_lo.p_alert).
Adding EN signal on $flatten\u_alert_ts_lo.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ts_lo.$verific$n40$2103, Q = \u_alert_ts_lo.n_alert).
Adding EN signal on $flatten\u_alert_ts_hi.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ts_hi.$verific$n24$2097, Q = \u_alert_ts_hi.p_alert).
Adding EN signal on $flatten\u_alert_ts_hi.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ts_hi.$verific$n40$2103, Q = \u_alert_ts_hi.n_alert).
Adding EN signal on $flatten\u_alert_otp.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_otp.$verific$n24$2097, Q = \u_alert_otp.p_alert).
Adding EN signal on $flatten\u_alert_otp.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_otp.$verific$n40$2103, Q = \u_alert_otp.n_alert).
Adding EN signal on $flatten\u_alert_ot5.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ot5.$verific$n24$2097, Q = \u_alert_ot5.p_alert).
Adding EN signal on $flatten\u_alert_ot5.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ot5.$verific$n40$2103, Q = \u_alert_ot5.n_alert).
Adding EN signal on $flatten\u_alert_ot4.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ot4.$verific$n24$2097, Q = \u_alert_ot4.p_alert).
Adding EN signal on $flatten\u_alert_ot4.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ot4.$verific$n40$2103, Q = \u_alert_ot4.n_alert).
Adding EN signal on $flatten\u_alert_ot3.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ot3.$verific$n24$2097, Q = \u_alert_ot3.p_alert).
Adding EN signal on $flatten\u_alert_ot3.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ot3.$verific$n40$2103, Q = \u_alert_ot3.n_alert).
Adding EN signal on $flatten\u_alert_ot2.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ot2.$verific$n24$2097, Q = \u_alert_ot2.p_alert).
Adding EN signal on $flatten\u_alert_ot2.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ot2.$verific$n40$2103, Q = \u_alert_ot2.n_alert).
Adding EN signal on $flatten\u_alert_ot1.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ot1.$verific$n24$2097, Q = \u_alert_ot1.p_alert).
Adding EN signal on $flatten\u_alert_ot1.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ot1.$verific$n40$2103, Q = \u_alert_ot1.n_alert).
Adding EN signal on $flatten\u_alert_ot0.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_ot0.$verific$n24$2097, Q = \u_alert_ot0.p_alert).
Adding EN signal on $flatten\u_alert_ot0.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_ot0.$verific$n40$2103, Q = \u_alert_ot0.n_alert).
Adding EN signal on $flatten\u_alert_gd.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_gd.$verific$n24$2097, Q = \u_alert_gd.p_alert).
Adding EN signal on $flatten\u_alert_gd.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_gd.$verific$n40$2103, Q = \u_alert_gd.n_alert).
Adding EN signal on $flatten\u_alert_fla.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_fla.$verific$n24$2097, Q = \u_alert_fla.p_alert).
Adding EN signal on $flatten\u_alert_fla.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_fla.$verific$n40$2103, Q = \u_alert_fla.n_alert).
Adding EN signal on $flatten\u_alert_cg.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_cg.$verific$n24$2097, Q = \u_alert_cg.p_alert).
Adding EN signal on $flatten\u_alert_cg.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_cg.$verific$n40$2103, Q = \u_alert_cg.n_alert).
Adding EN signal on $flatten\u_alert_as.$verific$p_alert_reg$ast_alert.sv:50$2124 ($adff) from module ast (D = $flatten\u_alert_as.$verific$n24$2097, Q = \u_alert_as.p_alert).
Adding EN signal on $flatten\u_alert_as.$verific$n_alert_reg$ast_alert.sv:68$2134 ($adff) from module ast (D = $flatten\u_alert_as.$verific$n40$2103, Q = \u_alert_as.n_alert).
Adding EN signal on $flatten\u_adc.$verific$cnv_cyc_reg$adc.sv:100$2036 ($adff) from module ast (D = $flatten\u_adc.$verific$n227$1962, Q = \u_adc.cnv_cyc).
Adding EN signal on $flatten\u_adc.$verific$adc_d_val_o_reg$adc.sv:100$2038 ($adff) from module ast (D = $flatten\u_adc.$verific$n237$1947, Q = \u_adc.adc_d_val_o).
Adding EN signal on $flatten\u_adc.$verific$adc_d_o_reg$adc.sv:100$2039 ($adff) from module ast (D = $flatten\u_adc.$verific$n137$1954, Q = \u_adc.adc_d_o).
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$11129 ($adffe) from module ast.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$11010 ($adffe) from module ast.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$11010 ($adffe) from module ast.

yosys> opt_clean

5.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 20 unused cells and 20 unused wires.
<suppressed ~21 debug messages>

yosys> opt_expr

5.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~20 debug messages>

5.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

yosys> opt_reduce

5.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff -sat

5.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$11144 ($adffe) from module ast.

yosys> opt_clean

5.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.13.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

yosys> opt_reduce

5.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.13.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$11146 ($adffe) from module ast.

yosys> opt_clean

5.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.13.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.13.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

yosys> opt_reduce

5.13.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.13.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.13.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.13.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.13.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.13.30. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

5.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from mux cell ast.$flatten\u_rglts_pdm_3p3v.$verific$mux_95$rglts_pdm_3p3v.sv:175$9509 ($mux).
Removed top 1 bits (of 3) from mux cell ast.$flatten\u_rglts_pdm_3p3v.$verific$mux_72$rglts_pdm_3p3v.sv:145$9499 ($mux).
Removed top 8 bits (of 9) from port B of cell ast.$flatten\u_rglts_pdm_3p3v.$verific$sub_54$rglts_pdm_3p3v.sv:122$9490 ($sub).
Removed top 1 bits (of 2) from FF cell ast.$auto$ff.cc:262:slice$11001 ($adff).
Removed top 6 bits (of 7) from port B of cell ast.$flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$add_17$prim_clock_div.sv:84$9006 ($add).
Removed top 3 bits (of 8) from mux cell ast.$flatten\u_adc.$verific$mux_62$adc.sv:100$2032 ($mux).
Removed top 3 bits (of 8) from mux cell ast.$flatten\u_adc.$verific$mux_58$adc.sv:100$2028 ($mux).
Removed top 3 bits (of 8) from mux cell ast.$flatten\u_adc.$verific$mux_54$adc.sv:100$2024 ($mux).
Removed top 1 bits (of 10) from mux cell ast.$flatten\u_adc.$verific$mux_47$adc.sv:99$2017 ($mux).
Removed top 1 bits (of 2) from port B of cell ast.$flatten\u_adc.$verific$equal_45$adc.sv:97$2015 ($eq).
Removed top 3 bits (of 8) from port A of cell ast.$flatten\u_adc.$verific$sub_38$adc.sv:90$2012 ($sub).
Removed top 7 bits (of 8) from port B of cell ast.$flatten\u_adc.$verific$sub_38$adc.sv:90$2012 ($sub).
Removed top 3 bits (of 8) from port Y of cell ast.$flatten\u_adc.$verific$sub_38$adc.sv:90$2012 ($sub).
Removed top 7 bits (of 8) from port A of cell ast.$flatten\u_adc.$verific$LessThan_36$adc.sv:89$2010 ($lt).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_adc.$verific$LessThan_36$adc.sv:89$2010 ($lt).
Removed top 6 bits (of 7) from port B of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$add_11$dev_entropy.sv:71$8705 ($add).
Removed top 31 bits (of 32) from port A of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$shift_left_18$dev_entropy.sv:75$8712 ($shl).
Removed top 1 bits (of 4) from port B of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$shift_left_18$dev_entropy.sv:75$8712 ($shl).
Removed top 31 bits (of 32) from port B of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$sub_19$dev_entropy.sv:75$8713 ($sub).
Removed top 16 bits (of 32) from mux cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$mux_20$dev_entropy.sv:75$8714 ($mux).
Removed top 15 bits (of 16) from port B of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$sub_28$dev_entropy.sv:83$8719 ($sub).
Removed top 26 bits (of 32) from mux cell ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$mux_40$prim_packer_fifo.sv:142$9305 ($mux).
Removed top 26 bits (of 32) from mux cell ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$mux_39$prim_packer_fifo.sv:142$9304 ($mux).
Removed top 26 bits (of 32) from mux cell ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$mux_38$prim_packer_fifo.sv:142$9303 ($mux).
Removed top 1 bits (of 7) from port A of cell ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$sub_37$prim_packer_fifo.sv:141$9302 ($sub).
Removed top 6 bits (of 7) from port B of cell ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$sub_37$prim_packer_fifo.sv:141$9302 ($sub).
Removed top 1 bits (of 7) from port Y of cell ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$sub_37$prim_packer_fifo.sv:141$9302 ($sub).
Removed top 5 bits (of 6) from port B of cell ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$equal_27$prim_packer_fifo.sv:134$9292 ($eq).
Removed top 1 bits (of 2) from port B of cell ast.$flatten\u_entropy.$verific$equal_35$ast_entropy.sv:86$2431 ($eq).
Removed top 1 bits (of 64) from port B of cell ast.$flatten\u_rng.\u_rng_lfsr.$verific$xor_6$prim_lfsr.sv:327$9773 ($xor).
Removed top 11 bits (of 12) from port B of cell ast.$flatten\u_rng.$verific$add_15$rng.sv:63$9663 ($add).
Removed top 5 bits (of 12) from port B of cell ast.$flatten\u_rng.$verific$equal_12$rng.sv:59$9661 ($eq).
Removed top 1 bits (of 2) from port B of cell ast.$auto$opt_dff.cc:195:make_patterns_logic$11049 ($ne).
Removed top 1 bits (of 2) from port B of cell ast.$auto$opt_dff.cc:195:make_patterns_logic$11046 ($ne).
Removed top 1 bits (of 2) from port B of cell ast.$auto$opt_dff.cc:195:make_patterns_logic$11043 ($ne).
Removed top 1 bits (of 2) from port B of cell ast.$auto$opt_dff.cc:195:make_patterns_logic$11040 ($ne).
Removed top 1 bits (of 2) from FF cell ast.$auto$ff.cc:262:slice$11002 ($adff).
Removed top 2 bits (of 3) from port B of cell ast.$flatten\u_reg.\u_reg_if.$verific$equal_8$tlul_adapter_reg.sv:56$9889 ($eq).
Removed top 1 bits (of 4) from port B of cell ast.$flatten\u_reg.\u_reg_if.$verific$equal_76$prim_mubi_pkg.sv:27$9942 ($eq).
Removed top 31 bits (of 32) from port A of cell ast.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$10557 ($shl).
Removed top 28 bits (of 32) from port Y of cell ast.$flatten\u_reg.\u_reg_if.\u_err.$verific$shift_left_23$tlul_err.sv:49$10557 ($shl).
Removed top 2 bits (of 4) from port B of cell ast.$auto$opt_dff.cc:195:make_patterns_logic$11134 ($ne).
Removed top 1 bits (of 3) from port B of cell ast.$auto$opt_dff.cc:195:make_patterns_logic$11131 ($ne).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_81$ast_reg_top.sv:1246$8268 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_79$ast_reg_top.sv:1245$8267 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_77$ast_reg_top.sv:1244$8266 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_75$ast_reg_top.sv:1243$8265 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_73$ast_reg_top.sv:1242$8264 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_71$ast_reg_top.sv:1241$8263 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_69$ast_reg_top.sv:1240$8262 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_67$ast_reg_top.sv:1239$8261 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_65$ast_reg_top.sv:1238$8260 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_63$ast_reg_top.sv:1237$8259 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_61$ast_reg_top.sv:1236$8258 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_59$ast_reg_top.sv:1235$8257 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_57$ast_reg_top.sv:1234$8256 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_55$ast_reg_top.sv:1233$8255 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_53$ast_reg_top.sv:1232$8254 ($eq).
Removed top 3 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_51$ast_reg_top.sv:1231$8253 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_49$ast_reg_top.sv:1230$8252 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_47$ast_reg_top.sv:1229$8251 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_45$ast_reg_top.sv:1228$8250 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_43$ast_reg_top.sv:1227$8249 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_41$ast_reg_top.sv:1226$8248 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_39$ast_reg_top.sv:1225$8247 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_37$ast_reg_top.sv:1224$8246 ($eq).
Removed top 4 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_35$ast_reg_top.sv:1223$8245 ($eq).
Removed top 5 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_33$ast_reg_top.sv:1222$8244 ($eq).
Removed top 5 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_31$ast_reg_top.sv:1221$8243 ($eq).
Removed top 5 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_29$ast_reg_top.sv:1220$8242 ($eq).
Removed top 5 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_27$ast_reg_top.sv:1219$8241 ($eq).
Removed top 6 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_25$ast_reg_top.sv:1218$8240 ($eq).
Removed top 6 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_23$ast_reg_top.sv:1217$8239 ($eq).
Removed top 7 bits (of 8) from port B of cell ast.$flatten\u_reg.$verific$equal_21$ast_reg_top.sv:1216$8238 ($eq).
Removed top 16 bits (of 32) from port Y of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$sub_19$dev_entropy.sv:75$8713 ($sub).
Removed top 16 bits (of 32) from port A of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$sub_19$dev_entropy.sv:75$8713 ($sub).
Removed top 16 bits (of 32) from port Y of cell ast.$flatten\u_entropy.\u_dev0_entropy.$verific$shift_left_18$dev_entropy.sv:75$8712 ($shl).
Removed top 3 bits (of 8) from wire ast.$flatten\u_adc.$verific$n101$1951.
Removed top 1 bits (of 10) from wire ast.$flatten\u_adc.$verific$n126$1953.
Removed top 3 bits (of 8) from wire ast.$flatten\u_adc.$verific$n183$1958.
Removed top 3 bits (of 8) from wire ast.$flatten\u_adc.$verific$n205$1960.
Removed top 3 bits (of 8) from wire ast.$flatten\u_adc.$verific$n227$1962.
Removed top 16 bits (of 32) from wire ast.$flatten\u_entropy.\u_dev0_entropy.$verific$n100$8672.
Removed top 1 bits (of 7) from wire ast.$flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$n252$9263.
Removed top 1 bits (of 3) from wire ast.$flatten\u_rglts_pdm_3p3v.$verific$n404$9430.
Removed top 1 bits (of 3) from wire ast.$flatten\u_rglts_pdm_3p3v.$verific$n481$9441.

yosys> peepopt

5.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

5.16. Executing PMUXTREE pass.

yosys> opt_clean

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 2 unused cells and 14 unused wires.
<suppressed ~3 debug messages>

yosys> alumacc

5.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ast:
  creating $macc model for $flatten\u_adc.$verific$sub_38$adc.sv:90$2012 ($sub).
  creating $macc model for $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$add_17$prim_clock_div.sv:84$9006 ($add).
  creating $macc model for $flatten\u_entropy.\u_dev0_entropy.$verific$add_11$dev_entropy.sv:71$8705 ($add).
  creating $macc model for $flatten\u_entropy.\u_dev0_entropy.$verific$sub_19$dev_entropy.sv:75$8713 ($sub).
  creating $macc model for $flatten\u_entropy.\u_dev0_entropy.$verific$sub_28$dev_entropy.sv:83$8719 ($sub).
  creating $macc model for $flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$sub_37$prim_packer_fifo.sv:141$9302 ($sub).
  creating $macc model for $flatten\u_rglts_pdm_3p3v.$verific$sub_54$rglts_pdm_3p3v.sv:122$9490 ($sub).
  creating $macc model for $flatten\u_rng.$verific$add_15$rng.sv:63$9663 ($add).
  creating $alu model for $macc $flatten\u_rng.$verific$add_15$rng.sv:63$9663.
  creating $alu model for $macc $flatten\u_rglts_pdm_3p3v.$verific$sub_54$rglts_pdm_3p3v.sv:122$9490.
  creating $alu model for $macc $flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$sub_37$prim_packer_fifo.sv:141$9302.
  creating $alu model for $macc $flatten\u_entropy.\u_dev0_entropy.$verific$sub_28$dev_entropy.sv:83$8719.
  creating $alu model for $macc $flatten\u_entropy.\u_dev0_entropy.$verific$sub_19$dev_entropy.sv:75$8713.
  creating $alu model for $macc $flatten\u_entropy.\u_dev0_entropy.$verific$add_11$dev_entropy.sv:71$8705.
  creating $alu model for $macc $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$add_17$prim_clock_div.sv:84$9006.
  creating $alu model for $macc $flatten\u_adc.$verific$sub_38$adc.sv:90$2012.
  creating $alu model for $flatten\u_adc.$verific$LessThan_36$adc.sv:89$2010 ($lt): new $alu
  creating $alu model for $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$LessThan_13$prim_clock_div.sv:80$9003 ($le): new $alu
  creating $alu cell for $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$LessThan_13$prim_clock_div.sv:80$9003: $auto$alumacc.cc:485:replace_alu$11167
  creating $alu cell for $flatten\u_adc.$verific$LessThan_36$adc.sv:89$2010: $auto$alumacc.cc:485:replace_alu$11180
  creating $alu cell for $flatten\u_adc.$verific$sub_38$adc.sv:90$2012: $auto$alumacc.cc:485:replace_alu$11185
  creating $alu cell for $flatten\u_ast_clks_byp.\u_clk_usb_div240_div.$verific$add_17$prim_clock_div.sv:84$9006: $auto$alumacc.cc:485:replace_alu$11188
  creating $alu cell for $flatten\u_entropy.\u_dev0_entropy.$verific$add_11$dev_entropy.sv:71$8705: $auto$alumacc.cc:485:replace_alu$11191
  creating $alu cell for $flatten\u_entropy.\u_dev0_entropy.$verific$sub_19$dev_entropy.sv:75$8713: $auto$alumacc.cc:485:replace_alu$11194
  creating $alu cell for $flatten\u_entropy.\u_dev0_entropy.$verific$sub_28$dev_entropy.sv:83$8719: $auto$alumacc.cc:485:replace_alu$11197
  creating $alu cell for $flatten\u_entropy.\u_dev0_entropy.\u_dev_fifo.$verific$sub_37$prim_packer_fifo.sv:141$9302: $auto$alumacc.cc:485:replace_alu$11200
  creating $alu cell for $flatten\u_rglts_pdm_3p3v.$verific$sub_54$rglts_pdm_3p3v.sv:122$9490: $auto$alumacc.cc:485:replace_alu$11203
  creating $alu cell for $flatten\u_rng.$verific$add_15$rng.sv:63$9663: $auto$alumacc.cc:485:replace_alu$11206
  created 10 $alu and 0 $macc cells.

yosys> opt

5.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

5.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

yosys> opt_reduce

5.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 1 unused cells and 3 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

5.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

yosys> opt_reduce

5.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

5.20. Printing statistics.

=== ast ===

   Number of wires:               2883
   Number of wire bits:          16904
   Number of public wires:        2435
   Number of public wire bits:   15789
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                750
     $adff                          65
     $adffe                         53
     $alu                           10
     $and                          137
     $bmux                          10
     $dff                            1
     $dlatch                         7
     $eq                            50
     $logic_not                      6
     $mux                          118
     $ne                            19
     $not                           89
     $or                           112
     $reduce_and                     6
     $reduce_bool                   20
     $reduce_or                     13
     $reduce_xor                    28
     $shl                            2
     $xor                            4


yosys> memory -nomap

5.21. Executing MEMORY pass.

yosys> opt_mem

5.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

5.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

5.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

5.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

5.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11212'[0] in module `\ast': merging output FF to cell.
Checking read port `$auto$memory_bmux2rom.cc:63:execute$11209'[0] in module `\ast': merging output FF to cell.

yosys> opt_clean

5.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 2 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

yosys> memory_share

5.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

5.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

5.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> memory_collect

5.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

5.22. Printing statistics.

=== ast ===

   Number of wires:               2883
   Number of wire bits:          16904
   Number of public wires:        2435
   Number of public wire bits:   15789
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                750
     $adff                          63
     $adffe                         53
     $alu                           10
     $and                          137
     $bmux                           8
     $dff                            1
     $dlatch                         7
     $eq                            50
     $logic_not                      8
     $mem_v2                         2
     $mux                          118
     $ne                            19
     $not                           89
     $or                           112
     $reduce_and                     6
     $reduce_bool                   20
     $reduce_or                     13
     $reduce_xor                    28
     $shl                            2
     $xor                            4


yosys> opt_clean

5.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> stat

5.24. Printing statistics.

=== ast ===

   Number of wires:               2883
   Number of wire bits:          16904
   Number of public wires:        2435
   Number of public wire bits:   15789
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                750
     $adff                          63
     $adffe                         53
     $alu                           10
     $and                          137
     $bmux                           8
     $dff                            1
     $dlatch                         7
     $eq                            50
     $logic_not                      8
     $mem_v2                         2
     $mux                          118
     $ne                            19
     $not                           89
     $or                           112
     $reduce_and                     6
     $reduce_bool                   20
     $reduce_or                     13
     $reduce_xor                    28
     $shl                            2
     $xor                            4


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

5.25. Executing TECHMAP pass (map to technology primitives).

5.25.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.25.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

5.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_90_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_90_alu for cells of type $alu.
Using template $paramod$constmap:9d8c907470b4be31e9a933ddef199a1c2705d426$paramod$4bb46fcba5afaad42add84370357b73743697719\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$a1665ef28c749ebcdbe9aecd466e644647b56463\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_90_alu for cells of type $alu.
Using template $paramod$6f67705c43e5e94c02b6ebb52209ce5aa5ade4c1\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $reduce_xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
No more expansions possible.
<suppressed ~3109 debug messages>

yosys> stat

5.26. Printing statistics.

=== ast ===

   Number of wires:               3859
   Number of wire bits:          35434
   Number of public wires:        2435
   Number of public wire bits:   15789
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3678
     $_AND_                        489
     $_DFFE_PN0P_                  191
     $_DFFE_PN1P_                   40
     $_DFF_NN0_                      3
     $_DFF_PN0_                     86
     $_DFF_PN1_                      8
     $_DFF_P_                        1
     $_DLATCH_N_                     7
     $_MUX_                        667
     $_NOT_                        245
     $_OR_                         730
     $_XOR_                       1209
     $mem_v2                         2


yosys> opt

5.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~1329 debug messages>

yosys> opt_merge -nomux

5.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
<suppressed ~1257 debug messages>
Removed a total of 419 cells.

yosys> opt_muxtree

5.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 56 unused cells and 880 unused wires.
<suppressed ~57 debug messages>

yosys> opt_expr

5.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$12248 ($_DFF_PN0_) from module ast (D = $auto$simplemap.cc:309:simplemap_bmux$12251 [0], Q = \u_entropy.erq_sm [0]).
Adding EN signal on $auto$ff.cc:262:slice$11385 ($_DFF_PN0_) from module ast (D = $auto$simplemap.cc:309:simplemap_bmux$11398 [0], Q = \u_rglts_pdm_3p3v.rgls_sm [0]).

yosys> opt_clean

5.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 3 unused cells and 1 unused wires.
<suppressed ~4 debug messages>

yosys> opt_expr

5.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.27.23. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

5.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

5.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~332 debug messages>

yosys> opt_merge

5.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_dff

5.28.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 78 unused wires.
<suppressed ~1 debug messages>

5.28.5. Finished fast OPT passes.

yosys> memory_map

5.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11209 in module \ast:
  created 8 $dff cells and 0 static cells of width 1.
Extracted data FF from read port 0 of ast.$auto$memory_bmux2rom.cc:63:execute$11209: $$auto$memory_bmux2rom.cc:63:execute$11209$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory $auto$memory_bmux2rom.cc:63:execute$11212 in module \ast:
  created 8 $dff cells and 0 static cells of width 1.
Extracted data FF from read port 0 of ast.$auto$memory_bmux2rom.cc:63:execute$11212: $$auto$memory_bmux2rom.cc:63:execute$11212$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 0 write mux blocks.

yosys> opt -full

5.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

5.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~2 debug messages>

yosys> opt_merge -nomux

5.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

yosys> opt_reduce -full

5.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_share

5.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$11413 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$11403
        $auto$simplemap.cc:312:simplemap_bmux$11400

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$11414 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$11404
        $auto$simplemap.cc:312:simplemap_bmux$11401

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:312:simplemap_bmux$12258 in front of them:
        $auto$simplemap.cc:312:simplemap_bmux$12255
        $auto$simplemap.cc:312:simplemap_bmux$12253


yosys> opt_dff

5.30.7. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[0]$16564 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[1]$16566 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[2]$16568 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[3]$16570 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[4]$16572 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[5]$16574 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[6]$16576 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11209[7]$16578 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[0]$16601 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[1]$16603 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[2]$16605 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[3]$16607 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[4]$16609 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[5]$16611 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[6]$16613 ($dff) from module ast (removing D path).
Handling const CLK on $memory$auto$memory_bmux2rom.cc:63:execute$11212[7]$16615 ($dff) from module ast (removing D path).

yosys> opt_clean

5.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 1 unused cells and 49 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr -full

5.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~13 debug messages>

5.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

yosys> opt_reduce -full

5.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_share

5.30.14. Executing OPT_SHARE pass.

yosys> opt_dff

5.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

5.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~3 debug messages>

5.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

5.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_share

5.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

5.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr -full

5.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.30.26. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

5.31. Executing TECHMAP pass (map to technology primitives).

5.31.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
No more expansions possible.
<suppressed ~81 debug messages>

yosys> opt -sat

5.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

yosys> opt_merge -nomux

5.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_muxtree

5.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.32.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.32.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.32.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

5.33. Executing ABC pass (technology mapping using ABC).

5.33.1. Summary of detected clock domains:
  50 cells in clk=\clk_src_aon_o, en=$auto$opt_dff.cc:219:make_patterns_logic$16558, arst=!\vcc_supp_i, srst={ }
  7 cells in clk=\clk_ast_es_i, en=!\u_entropy.erq_sm [1], arst=!\rst_ast_es_ni, srst={ }
  49 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$auto$opt_dff.cc:194:make_patterns_logic$11020, arst=!\u_rst_sys_dasrt.q, srst={ }
  257 cells in clk=\clk_ast_tlul_i, en=\u_reg.intg_err, arst=!\rst_ast_tlul_ni, srst={ }
  5 cells in clk=\clk_ast_tlul_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ast_tlul_ni, srst={ }
  33 cells in clk=\clk_ast_adc_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11130, arst=!\rst_ast_adc_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11073, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11076, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11079, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11082, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11085, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11088, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11091, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11094, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11097, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11100, arst=!\rst_ast_alert_ni, srst={ }
  7 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11103, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11106, arst=!\rst_ast_alert_ni, srst={ }
  6 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11067, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11070, arst=!\rst_ast_alert_ni, srst={ }
  6 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11115, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11118, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11055, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11064, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11109, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11112, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11121, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11124, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11127, arst=!\rst_ast_alert_ni, srst={ }
  400 cells in clk=\clk_ast_tlul_i, en=\u_reg.u_reg_if.a_ack, arst=!\rst_ast_tlul_ni, srst={ }
  70 cells in clk=\clk_ast_tlul_i, en={ }, arst=!\u_rng.rst_n, srst={ }
  5 cells in clk=\clk_ast_rng_i, en=\u_rng.sync_rng_val, arst=!\rst_ast_rng_ni, srst={ }
  1 cells in clk=\clk_ast_rng_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  6 cells in clk=\clk_ast_tlul_i, en=\u_rng.srate_rng_val_en, arst=!\u_rng.rst_n, srst={ }
  2 cells in clk=\clk_ast_rng_i, en={ }, arst=!\u_rng.rst_n, srst={ }
  2 cells in clk=\clk_ast_tlul_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  4 cells in clk=\clk_ast_rng_i, en={ }, arst=!\u_rng.u_rng_val_pulse_sync.rst_dst_n, srst={ }
  8 cells in clk=\clk_ast_tlul_i, en={ }, arst=!\u_rng.u_rng_val_pulse_sync.rst_src_n, srst={ }
  6 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$auto$opt_dff.cc:194:make_patterns_logic$11023, arst=!\u_entropy.u_dev0_entropy.u_rst_es_n_da.q, srst={ }
  3 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!\u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni, srst={ }
  12 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!\u_entropy.u_dev0_entropy.u_rst_es_n_da.q, srst={ }
  10 cells in clk=\clk_ast_es_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11026, arst=!\rst_ast_es_ni, srst={ }
  20 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=!$auto$rtlil.cc:2367:Not$11031, arst=!\u_rst_sys_dasrt.q, srst={ }
  11 cells in clk=\clk_ast_es_i, en={ }, arst=!\rst_ast_es_ni, srst={ }
  9 cells in clk=\u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en=$auto$rtlil.cc:2371:ReduceOr$11179, arst=!\vcc_supp_i, srst={ }
  131 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$auto$opt_dff.cc:194:make_patterns_logic$11035, arst=!\u_rst_sys_dasrt.q, srst={ }
  26 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$auto$opt_dff.cc:219:make_patterns_logic$11032, arst=!\u_rst_sys_dasrt.q, srst={ }
  3 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!\u_rglts_pdm_3p3v.vcmain_pok_por_h_o, srst={ }
  3 cells in clk=\clk_ast_adc_i, en={ }, arst={ }, srst={ }
  17 cells in clk=\clk_ast_adc_i, en=$auto$opt_dff.cc:219:make_patterns_logic$11142, arst=!\rst_ast_adc_ni, srst={ }
  17 cells in clk=\clk_ast_adc_i, en={ }, arst=!\rst_ast_adc_ni, srst={ }
  7 cells in clk=\clk_ast_adc_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11133, arst=!\rst_ast_adc_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11052, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=!\u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  7 cells in clk=\u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\vcc_supp_i, srst={ }
  35 cells in clk=\u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en={ }, arst=!\vcc_supp_i, srst={ }
  8 cells in clk=\u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  8 cells in clk=\u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\vcc_supp_i, srst={ }
  9 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=\u_ast_clks_byp.u_clk_usb_div240_div.clk_int, en=$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\vcc_supp_i, srst={ }
  5 cells in clk=\u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\vcc_supp_i, srst={ }
  5 cells in clk=\u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  21 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!\u_rst_sys_dasrt.q, srst={ }
  2 cells in clk=\clk_src_aon_o, en=$flatten\u_ast_clks_byp.$verific$n17$2141, arst=!\vcc_supp_i, srst={ }
  5 cells in clk=\u_ast_clks_byp.u_clk_usb_div240_div.clk_int, en={ }, arst=!\vcc_supp_i, srst={ }
  136 cells in clk=\clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }
  5 cells in clk=\clk_src_aon_o, en={ }, arst=!\u_poks_por_dasrt.rst_ni, srst={ }
  197 cells in clk=\clk_ast_tlul_i, en=$auto$opt_dff.cc:194:make_patterns_logic$11006, arst=!\u_rng.rst_n, srst={ }
  193 cells in clk=\clk_ast_tlul_i, en=\regal_we, arst=!\rst_ast_tlul_ni, srst={ }
  7 cells in clk=!\clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }

5.33.2. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_src_aon_o, enabled by $auto$opt_dff.cc:219:make_patterns_logic$16558, asynchronously reset by !\vcc_supp_i
Extracted 50 gates and 79 wires to a netlist network with 27 inputs and 29 outputs.

5.33.2.1. Executing ABC.

5.33.3. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by !\u_entropy.erq_sm [1], asynchronously reset by !\rst_ast_es_ni
Extracted 7 gates and 10 wires to a netlist network with 3 inputs and 4 outputs.

5.33.3.1. Executing ABC.

5.33.4. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11020, asynchronously reset by !\u_rst_sys_dasrt.q
Extracted 48 gates and 55 wires to a netlist network with 6 inputs and 6 outputs.

5.33.4.1. Executing ABC.

5.33.5. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by \u_reg.intg_err, asynchronously reset by !\rst_ast_tlul_ni
Extracted 257 gates and 348 wires to a netlist network with 90 inputs and 2 outputs.

5.33.5.1. Executing ABC.

5.33.6. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ast_tlul_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 4 outputs.

5.33.6.1. Executing ABC.

5.33.7. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11130, asynchronously reset by !\rst_ast_adc_ni
Extracted 33 gates and 38 wires to a netlist network with 4 inputs and 6 outputs.

5.33.7.1. Executing ABC.

5.33.8. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11073, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.8.1. Executing ABC.

5.33.9. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11076, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.9.1. Executing ABC.

5.33.10. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11079, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.10.1. Executing ABC.

5.33.11. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11082, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.11.1. Executing ABC.

5.33.12. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11085, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.12.1. Executing ABC.

5.33.13. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11088, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.13.1. Executing ABC.

5.33.14. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11091, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.14.1. Executing ABC.

5.33.15. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11094, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.15.1. Executing ABC.

5.33.16. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11097, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.16.1. Executing ABC.

5.33.17. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11100, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.33.17.1. Executing ABC.

5.33.18. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11103, asynchronously reset by !\rst_ast_alert_ni
Extracted 7 gates and 10 wires to a netlist network with 3 inputs and 2 outputs.

5.33.18.1. Executing ABC.

5.33.19. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11106, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.19.1. Executing ABC.

5.33.20. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11067, asynchronously reset by !\rst_ast_alert_ni
Extracted 6 gates and 9 wires to a netlist network with 3 inputs and 2 outputs.

5.33.20.1. Executing ABC.

5.33.21. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11070, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.21.1. Executing ABC.

5.33.22. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11115, asynchronously reset by !\rst_ast_alert_ni
Extracted 6 gates and 9 wires to a netlist network with 3 inputs and 2 outputs.

5.33.22.1. Executing ABC.

5.33.23. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11118, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.23.1. Executing ABC.

5.33.24. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11055, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.24.1. Executing ABC.

5.33.25. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.25.1. Executing ABC.

5.33.26. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.26.1. Executing ABC.

5.33.27. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11064, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.33.27.1. Executing ABC.

5.33.28. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11109, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.28.1. Executing ABC.

5.33.29. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11112, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.33.29.1. Executing ABC.

5.33.30. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11121, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.30.1. Executing ABC.

5.33.31. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11124, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.31.1. Executing ABC.

5.33.32. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11127, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 7 wires to a netlist network with 2 inputs and 2 outputs.

5.33.32.1. Executing ABC.

5.33.33. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$17050$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ast_tlul_ni
Extracted 400 gates and 506 wires to a netlist network with 104 inputs and 67 outputs.

5.33.33.1. Executing ABC.

5.33.34. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !\u_rng.rst_n
Extracted 70 gates and 73 wires to a netlist network with 3 inputs and 3 outputs.

5.33.34.1. Executing ABC.

5.33.35. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, enabled by \u_rng.sync_rng_val, asynchronously reset by !\rst_ast_rng_ni
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

5.33.35.1. Executing ABC.

5.33.36. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

5.33.36.1. Executing ABC.

5.33.37. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by \u_rng.srate_rng_val_en, asynchronously reset by !$abc$17551$u_rng.rst_n
Extracted 6 gates and 12 wires to a netlist network with 6 inputs and 5 outputs.

5.33.37.1. Executing ABC.

5.33.38. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !$abc$17551$u_rng.rst_n
Extracted 2 gates and 3 wires to a netlist network with 0 inputs and 1 outputs.

5.33.38.1. Executing ABC.

5.33.39. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 2 gates and 3 wires to a netlist network with 0 inputs and 1 outputs.

5.33.39.1. Executing ABC.

5.33.40. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !\u_rng.u_rng_val_pulse_sync.rst_dst_n
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

5.33.40.1. Executing ABC.

5.33.41. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !\u_rng.u_rng_val_pulse_sync.rst_src_n
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 4 outputs.

5.33.41.1. Executing ABC.

5.33.42. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11023, asynchronously reset by !\u_entropy.u_dev0_entropy.u_rst_es_n_da.q
Extracted 6 gates and 8 wires to a netlist network with 2 inputs and 3 outputs.

5.33.42.1. Executing ABC.

5.33.43. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !\u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.43.1. Executing ABC.

5.33.44. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$17680$lo1
Extracted 12 gates and 17 wires to a netlist network with 5 inputs and 3 outputs.

5.33.44.1. Executing ABC.

5.33.45. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11026, asynchronously reset by !\rst_ast_es_ni
Extracted 10 gates and 15 wires to a netlist network with 5 inputs and 3 outputs.

5.33.45.1. Executing ABC.

5.33.46. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by !$auto$rtlil.cc:2367:Not$11031, asynchronously reset by !\u_rst_sys_dasrt.q
Extracted 20 gates and 35 wires to a netlist network with 14 inputs and 11 outputs.

5.33.46.1. Executing ABC.

5.33.47. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, asynchronously reset by !\rst_ast_es_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 7 outputs.

5.33.47.1. Executing ABC.

5.33.48. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, enabled by $auto$rtlil.cc:2371:ReduceOr$11179, asynchronously reset by !\vcc_supp_i
Extracted 8 gates and 14 wires to a netlist network with 6 inputs and 3 outputs.

5.33.48.1. Executing ABC.

5.33.49. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11035, asynchronously reset by !\u_rst_sys_dasrt.q
Extracted 131 gates and 137 wires to a netlist network with 6 inputs and 2 outputs.

5.33.49.1. Executing ABC.

5.33.50. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11032, asynchronously reset by !\u_rst_sys_dasrt.q
Extracted 26 gates and 28 wires to a netlist network with 2 inputs and 5 outputs.

5.33.50.1. Executing ABC.

5.33.51. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !\u_rglts_pdm_3p3v.vcmain_pok_por_h_o
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.51.1. Executing ABC.

5.33.52. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

5.33.52.1. Executing ABC.

5.33.53. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $auto$opt_dff.cc:219:make_patterns_logic$11142, asynchronously reset by !\rst_ast_adc_ni
Extracted 17 gates and 26 wires to a netlist network with 8 inputs and 6 outputs.

5.33.53.1. Executing ABC.

5.33.54. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, asynchronously reset by !\rst_ast_adc_ni
Extracted 17 gates and 25 wires to a netlist network with 8 inputs and 6 outputs.

5.33.54.1. Executing ABC.

5.33.55. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11133, asynchronously reset by !\rst_ast_adc_ni
Extracted 7 gates and 12 wires to a netlist network with 4 inputs and 4 outputs.

5.33.55.1. Executing ABC.

5.33.56. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11052, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.33.56.1. Executing ABC.

5.33.57. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: \u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 3 wires to a netlist network with 1 inputs and 1 outputs.

5.33.57.1. Executing ABC.

5.33.58. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\vcc_supp_i
Extracted 6 gates and 13 wires to a netlist network with 7 inputs and 5 outputs.

5.33.58.1. Executing ABC.

5.33.59. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, asynchronously reset by !\vcc_supp_i
Extracted 35 gates and 37 wires to a netlist network with 1 inputs and 3 outputs.

5.33.59.1. Executing ABC.

5.33.60. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 4 outputs.

5.33.60.1. Executing ABC.

5.33.61. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\vcc_supp_i
Extracted 7 gates and 16 wires to a netlist network with 9 inputs and 6 outputs.

5.33.61.1. Executing ABC.

5.33.62. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

5.33.62.1. Executing ABC.

5.33.63. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17748$lo0, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

5.33.63.1. Executing ABC.

5.33.64. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

5.33.64.1. Executing ABC.

5.33.65. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

5.33.65.1. Executing ABC.

5.33.66. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

5.33.66.1. Executing ABC.

5.33.67. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$17845$lo1
Extracted 21 gates and 31 wires to a netlist network with 8 inputs and 8 outputs.

5.33.67.1. Executing ABC.

5.33.68. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_src_aon_o, enabled by $flatten\u_ast_clks_byp.$verific$n17$2141, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 2 inputs and 2 outputs.

5.33.68.1. Executing ABC.

5.33.69. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17748$lo0, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

5.33.69.1. Executing ABC.

5.33.70. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 134 gates and 191 wires to a netlist network with 55 inputs and 45 outputs.

5.33.70.1. Executing ABC.

5.33.71. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18054$clk_src_aon_o, asynchronously reset by !\u_poks_por_dasrt.rst_ni
Extracted 5 gates and 10 wires to a netlist network with 4 inputs and 4 outputs.

5.33.71.1. Executing ABC.

5.33.72. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $auto$opt_dff.cc:194:make_patterns_logic$11006, asynchronously reset by !$abc$17551$u_rng.rst_n
Extracted 197 gates and 199 wires to a netlist network with 1 inputs and 5 outputs.

5.33.72.1. Executing ABC.

5.33.73. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by \regal_we, asynchronously reset by !\rst_ast_tlul_ni
Extracted 193 gates and 246 wires to a netlist network with 52 inputs and 72 outputs.

5.33.73.1. Executing ABC.

5.33.74. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: $abc$18054$clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 7 gates and 11 wires to a netlist network with 4 inputs and 6 outputs.

5.33.74.1. Executing ABC.

yosys> abc -dff

5.34. Executing ABC pass (technology mapping using ABC).

5.34.1. Summary of detected clock domains:
  32 cells in clk=\clk_src_aon_o, en=$abc$16734$auto$opt_dff.cc:219:make_patterns_logic$16558, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17107$auto$opt_dff.cc:194:make_patterns_logic$11085, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17170$auto$opt_dff.cc:194:make_patterns_logic$11055, arst=!\rst_ast_alert_ni, srst={ }
  225 cells in clk=\clk_ast_tlul_i, en=$abc$16823$u_reg.intg_err, arst=!\rst_ast_tlul_ni, srst={ }
  6 cells in clk=$abc$18054$clk_src_aon_o, en={ }, arst=!$abc$18183$u_poks_por_dasrt.rst_ni, srst={ }
  7 cells in clk=\clk_ast_es_i, en=!$abc$17730$lo3, arst=!\rst_ast_es_ni, srst={ }
  4 cells in clk=$abc$17748$lo0, en=$abc$17988$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\vcc_supp_i, srst={ }
  9 cells in clk=\u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en=$abc$17908$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en=$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\vcc_supp_i, srst={ }
  9 cells in clk=\u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17102$auto$opt_dff.cc:194:make_patterns_logic$11082, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17117$auto$opt_dff.cc:194:make_patterns_logic$11091, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17112$auto$opt_dff.cc:194:make_patterns_logic$11088, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17087$auto$opt_dff.cc:194:make_patterns_logic$11073, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17097$auto$opt_dff.cc:194:make_patterns_logic$11079, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17092$auto$opt_dff.cc:194:make_patterns_logic$11076, arst=!\rst_ast_alert_ni, srst={ }
  9 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17165$auto$opt_dff.cc:194:make_patterns_logic$11118, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17143$auto$opt_dff.cc:194:make_patterns_logic$11106, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$17137$auto$opt_dff.cc:194:make_patterns_logic$11103, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17190$auto$opt_dff.cc:194:make_patterns_logic$11109, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17122$auto$opt_dff.cc:194:make_patterns_logic$11094, arst=!\rst_ast_alert_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$17132$auto$opt_dff.cc:194:make_patterns_logic$11100, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17127$auto$opt_dff.cc:194:make_patterns_logic$11097, arst=!\rst_ast_alert_ni, srst={ }
  23 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$17845$lo1, srst={ }
  3 cells in clk=\clk_ast_adc_i, en={ }, arst={ }, srst={ }
  16 cells in clk=\clk_ast_adc_i, en={ }, arst=!\rst_ast_adc_ni, srst={ }
  4 cells in clk=\clk_src_aon_o, en=$abc$18039$flatten\u_ast_clks_byp.$verific$n17$2141, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$17845$u_rglts_pdm_3p3v.vcmain_pok_por_h_o, srst={ }
  12 cells in clk=$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  1 cells in clk=!\u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17899$auto$opt_dff.cc:194:make_patterns_logic$11052, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17180$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17175$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17154$auto$opt_dff.cc:194:make_patterns_logic$11070, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$17148$auto$opt_dff.cc:194:make_patterns_logic$11067, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17210$auto$opt_dff.cc:194:make_patterns_logic$11127, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$17159$auto$opt_dff.cc:194:make_patterns_logic$11115, arst=!\rst_ast_alert_ni, srst={ }
  9 cells in clk=\clk_ast_tlul_i, en={ }, arst=!$abc$17661$u_rng.u_rng_val_pulse_sync.rst_src_n, srst={ }
  7 cells in clk=\clk_ast_es_i, en=$abc$17702$auto$opt_dff.cc:194:make_patterns_logic$11026, arst=!\rst_ast_es_ni, srst={ }
  9 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$17680$lo1, srst={ }
  10 cells in clk=\clk_ast_es_i, en={ }, arst=!\rst_ast_es_ni, srst={ }
  13 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=!$abc$17711$auto$rtlil.cc:2367:Not$11031, arst=!$abc$17845$lo1, srst={ }
  4 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$17674$auto$opt_dff.cc:194:make_patterns_logic$11023, arst=!$abc$17680$lo1, srst={ }
  2 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$17680$u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni, srst={ }
  2 cells in clk=\clk_ast_rng_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  14 cells in clk=\clk_ast_adc_i, en=$abc$17857$auto$opt_dff.cc:219:make_patterns_logic$11142, arst=!\rst_ast_adc_ni, srst={ }
  24 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$17820$auto$opt_dff.cc:219:make_patterns_logic$11032, arst=!$abc$17845$lo1, srst={ }
  52 cells in clk=\clk_ast_tlul_i, en={ }, arst=!$abc$17551$u_rng.rst_n, srst={ }
  4 cells in clk=\clk_ast_rng_i, en=$abc$17607$u_rng.sync_rng_val, arst=!\rst_ast_rng_ni, srst={ }
  29 cells in clk=\clk_ast_adc_i, en=$abc$17057$auto$opt_dff.cc:194:make_patterns_logic$11130, arst=!\rst_ast_adc_ni, srst={ }
  4 cells in clk=\clk_ast_tlul_i, en=$abc$17050$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ast_tlul_ni, srst={ }
  6 cells in clk=\u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en=$abc$17748$auto$rtlil.cc:2371:ReduceOr$11179, arst=!\vcc_supp_i, srst={ }
  66 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$17755$auto$opt_dff.cc:194:make_patterns_logic$11035, arst=!$abc$17845$lo1, srst={ }
  2 cells in clk=\clk_ast_tlul_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  4 cells in clk=\clk_ast_rng_i, en={ }, arst=!$abc$17651$u_rng.u_rng_val_pulse_sync.rst_dst_n, srst={ }
  7 cells in clk=\clk_ast_tlul_i, en=$abc$17625$u_rng.srate_rng_val_en, arst=!$abc$17551$u_rng.rst_n, srst={ }
  2 cells in clk=\clk_ast_rng_i, en={ }, arst=!$abc$17551$u_rng.rst_n, srst={ }
  5 cells in clk=$abc$17748$lo0, en={ }, arst=!\vcc_supp_i, srst={ }
  29 cells in clk=\u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$16790$auto$opt_dff.cc:194:make_patterns_logic$11020, arst=!$abc$17845$lo1, srst={ }
  5 cells in clk=$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en=$abc$18004$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=\clk_ast_adc_i, en=$abc$17892$auto$opt_dff.cc:194:make_patterns_logic$11133, arst=!\rst_ast_adc_ni, srst={ }
  36 cells in clk=$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$17205$auto$opt_dff.cc:194:make_patterns_logic$11124, arst=!\rst_ast_alert_ni, srst={ }
  284 cells in clk=\clk_ast_tlul_i, en=$abc$17050$u_reg.u_reg_if.a_ack, arst=!\rst_ast_tlul_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$17185$auto$opt_dff.cc:194:make_patterns_logic$11064, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$17200$auto$opt_dff.cc:194:make_patterns_logic$11121, arst=!\rst_ast_alert_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$17195$auto$opt_dff.cc:194:make_patterns_logic$11112, arst=!\rst_ast_alert_ni, srst={ }
  123 cells in clk=\clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }
  105 cells in clk=\clk_ast_tlul_i, en=\rng_en_i, arst=!$abc$17551$u_rng.rst_n, srst={ }
  154 cells in clk=\clk_ast_tlul_i, en=$abc$18326$regal_we, arst=!\rst_ast_tlul_ni, srst={ }
  9 cells in clk=!$abc$18054$clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }

5.34.2. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18054$clk_src_aon_o, enabled by $abc$16734$auto$opt_dff.cc:219:make_patterns_logic$16558, asynchronously reset by !\vcc_supp_i
Extracted 32 gates and 59 wires to a netlist network with 27 inputs and 23 outputs.

5.34.2.1. Executing ABC.

5.34.3. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17107$auto$opt_dff.cc:194:make_patterns_logic$11085, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.3.1. Executing ABC.

5.34.4. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17170$auto$opt_dff.cc:194:make_patterns_logic$11055, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.4.1. Executing ABC.

5.34.5. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$16823$u_reg.intg_err, asynchronously reset by !\rst_ast_tlul_ni
Extracted 225 gates and 316 wires to a netlist network with 90 inputs and 2 outputs.

5.34.5.1. Executing ABC.

5.34.6. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18054$clk_src_aon_o, asynchronously reset by !$abc$18183$u_poks_por_dasrt.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

5.34.6.1. Executing ABC.

5.34.7. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by !$abc$17730$lo3, asynchronously reset by !\rst_ast_es_ni
Extracted 7 gates and 10 wires to a netlist network with 3 inputs and 4 outputs.

5.34.7.1. Executing ABC.

5.34.8. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17748$lo0, enabled by $abc$17988$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

5.34.8.1. Executing ABC.

5.34.9. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, enabled by $abc$17908$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\vcc_supp_i
Extracted 8 gates and 18 wires to a netlist network with 10 inputs and 7 outputs.

5.34.9.1. Executing ABC.

5.34.10. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, enabled by $abc$17968$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

5.34.10.1. Executing ABC.

5.34.11. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 4 outputs.

5.34.11.1. Executing ABC.

5.34.12. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17102$auto$opt_dff.cc:194:make_patterns_logic$11082, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.12.1. Executing ABC.

5.34.13. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17117$auto$opt_dff.cc:194:make_patterns_logic$11091, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.13.1. Executing ABC.

5.34.14. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17112$auto$opt_dff.cc:194:make_patterns_logic$11088, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.14.1. Executing ABC.

5.34.15. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17087$auto$opt_dff.cc:194:make_patterns_logic$11073, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.15.1. Executing ABC.

5.34.16. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17097$auto$opt_dff.cc:194:make_patterns_logic$11079, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.16.1. Executing ABC.

5.34.17. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17092$auto$opt_dff.cc:194:make_patterns_logic$11076, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.17.1. Executing ABC.

5.34.18. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 5 outputs.

5.34.18.1. Executing ABC.

5.34.19. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17165$auto$opt_dff.cc:194:make_patterns_logic$11118, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.19.1. Executing ABC.

5.34.20. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17143$auto$opt_dff.cc:194:make_patterns_logic$11106, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.20.1. Executing ABC.

5.34.21. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17137$auto$opt_dff.cc:194:make_patterns_logic$11103, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.34.21.1. Executing ABC.

5.34.22. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17190$auto$opt_dff.cc:194:make_patterns_logic$11109, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.22.1. Executing ABC.

5.34.23. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17122$auto$opt_dff.cc:194:make_patterns_logic$11094, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.23.1. Executing ABC.

5.34.24. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17132$auto$opt_dff.cc:194:make_patterns_logic$11100, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.34.24.1. Executing ABC.

5.34.25. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17127$auto$opt_dff.cc:194:make_patterns_logic$11097, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.25.1. Executing ABC.

5.34.26. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$17845$lo1
Extracted 23 gates and 35 wires to a netlist network with 10 inputs and 10 outputs.

5.34.26.1. Executing ABC.

5.34.27. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 1 outputs.

5.34.27.1. Executing ABC.

5.34.28. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, asynchronously reset by !\rst_ast_adc_ni
Extracted 16 gates and 25 wires to a netlist network with 9 inputs and 7 outputs.

5.34.28.1. Executing ABC.

5.34.29. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18054$clk_src_aon_o, enabled by $abc$18039$flatten\u_ast_clks_byp.$verific$n17$2141, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

5.34.29.1. Executing ABC.

5.34.30. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$17845$u_rglts_pdm_3p3v.vcmain_pok_por_h_o
Extracted 4 gates and 8 wires to a netlist network with 3 inputs and 3 outputs.

5.34.30.1. Executing ABC.

5.34.31. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 8 outputs.

5.34.31.1. Executing ABC.

5.34.32. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: $abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

5.34.32.1. Executing ABC.

5.34.33. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17899$auto$opt_dff.cc:194:make_patterns_logic$11052, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.33.1. Executing ABC.

5.34.34. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17180$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.34.1. Executing ABC.

5.34.35. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17175$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.35.1. Executing ABC.

5.34.36. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17154$auto$opt_dff.cc:194:make_patterns_logic$11070, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.36.1. Executing ABC.

5.34.37. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17148$auto$opt_dff.cc:194:make_patterns_logic$11067, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.34.37.1. Executing ABC.

5.34.38. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17210$auto$opt_dff.cc:194:make_patterns_logic$11127, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.38.1. Executing ABC.

5.34.39. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17159$auto$opt_dff.cc:194:make_patterns_logic$11115, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.34.39.1. Executing ABC.

5.34.40. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !$abc$17661$u_rng.u_rng_val_pulse_sync.rst_src_n
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 4 outputs.

5.34.40.1. Executing ABC.

5.34.41. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by $abc$17702$auto$opt_dff.cc:194:make_patterns_logic$11026, asynchronously reset by !\rst_ast_es_ni
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs.

5.34.41.1. Executing ABC.

5.34.42. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$17680$lo1
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 2 outputs.

5.34.42.1. Executing ABC.

5.34.43. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, asynchronously reset by !\rst_ast_es_ni
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 7 outputs.

5.34.43.1. Executing ABC.

5.34.44. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by !$abc$17711$auto$rtlil.cc:2367:Not$11031, asynchronously reset by !$abc$18979$lo1
Extracted 13 gates and 24 wires to a netlist network with 9 inputs and 8 outputs.

5.34.44.1. Executing ABC.

5.34.45. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$17674$auto$opt_dff.cc:194:make_patterns_logic$11023, asynchronously reset by !$abc$17680$lo1
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.34.45.1. Executing ABC.

5.34.46. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$18979$abc$17680$u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni
Extracted 2 gates and 3 wires to a netlist network with 0 inputs and 1 outputs.

5.34.46.1. Executing ABC.

5.34.47. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.47.1. Executing ABC.

5.34.48. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$17857$auto$opt_dff.cc:219:make_patterns_logic$11142, asynchronously reset by !\rst_ast_adc_ni
Extracted 14 gates and 23 wires to a netlist network with 8 inputs and 6 outputs.

5.34.48.1. Executing ABC.

5.34.49. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$17820$auto$opt_dff.cc:219:make_patterns_logic$11032, asynchronously reset by !$abc$18979$lo1
Extracted 24 gates and 26 wires to a netlist network with 2 inputs and 5 outputs.

5.34.49.1. Executing ABC.

5.34.50. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !$abc$17551$u_rng.rst_n
Extracted 52 gates and 52 wires to a netlist network with 0 inputs and 1 outputs.

5.34.50.1. Executing ABC.

5.34.51. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, enabled by $abc$19122$abc$17607$u_rng.sync_rng_val, asynchronously reset by !\rst_ast_rng_ni
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

5.34.51.1. Executing ABC.

5.34.52. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$17057$auto$opt_dff.cc:194:make_patterns_logic$11130, asynchronously reset by !\rst_ast_adc_ni
Extracted 29 gates and 33 wires to a netlist network with 4 inputs and 6 outputs.

5.34.52.1. Executing ABC.

5.34.53. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$17050$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ast_tlul_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.34.53.1. Executing ABC.

5.34.54. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, enabled by $abc$17748$auto$rtlil.cc:2371:ReduceOr$11179, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.34.54.1. Executing ABC.

5.34.55. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$17755$auto$opt_dff.cc:194:make_patterns_logic$11035, asynchronously reset by !$abc$18979$lo1
Extracted 65 gates and 73 wires to a netlist network with 7 inputs and 3 outputs.

5.34.55.1. Executing ABC.

5.34.56. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 2 gates and 3 wires to a netlist network with 0 inputs and 1 outputs.

5.34.56.1. Executing ABC.

5.34.57. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !$abc$17651$u_rng.u_rng_val_pulse_sync.rst_dst_n
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 3 outputs.

5.34.57.1. Executing ABC.

5.34.58. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$17625$u_rng.srate_rng_val_en, asynchronously reset by !$abc$17551$u_rng.rst_n
Extracted 7 gates and 14 wires to a netlist network with 7 inputs and 5 outputs.

5.34.58.1. Executing ABC.

5.34.59. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !$abc$17551$u_rng.rst_n
Extracted 2 gates and 3 wires to a netlist network with 0 inputs and 1 outputs.

5.34.59.1. Executing ABC.

5.34.60. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19252$lo0, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

5.34.60.1. Executing ABC.

5.34.61. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$16790$auto$opt_dff.cc:194:make_patterns_logic$11020, asynchronously reset by !$abc$18979$lo1
Extracted 29 gates and 33 wires to a netlist network with 4 inputs and 5 outputs.

5.34.61.1. Executing ABC.

5.34.62. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

5.34.62.1. Executing ABC.

5.34.63. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, enabled by $abc$18004$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

5.34.63.1. Executing ABC.

5.34.64. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$17892$auto$opt_dff.cc:194:make_patterns_logic$11133, asynchronously reset by !\rst_ast_adc_ni
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

5.34.64.1. Executing ABC.

5.34.65. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, asynchronously reset by !\vcc_supp_i
Extracted 36 gates and 40 wires to a netlist network with 4 inputs and 4 outputs.

5.34.65.1. Executing ABC.

5.34.66. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17205$auto$opt_dff.cc:194:make_patterns_logic$11124, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.34.66.1. Executing ABC.

5.34.67. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$17050$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ast_tlul_ni
Extracted 284 gates and 386 wires to a netlist network with 102 inputs and 69 outputs.

5.34.67.1. Executing ABC.

5.34.68. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17185$auto$opt_dff.cc:194:make_patterns_logic$11064, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.34.68.1. Executing ABC.

5.34.69. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17200$auto$opt_dff.cc:194:make_patterns_logic$11121, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.34.69.1. Executing ABC.

5.34.70. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$17195$auto$opt_dff.cc:194:make_patterns_logic$11112, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.34.70.1. Executing ABC.

5.34.71. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18054$clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 121 gates and 165 wires to a netlist network with 44 inputs and 45 outputs.

5.34.71.1. Executing ABC.

5.34.72. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by \rng_en_i, asynchronously reset by !$abc$17551$u_rng.rst_n
Extracted 105 gates and 107 wires to a netlist network with 2 inputs and 5 outputs.

5.34.72.1. Executing ABC.

5.34.73. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$18326$regal_we, asynchronously reset by !\rst_ast_tlul_ni
Extracted 154 gates and 208 wires to a netlist network with 53 inputs and 70 outputs.

5.34.73.1. Executing ABC.

5.34.74. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: $abc$19810$abc$18054$clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 9 gates and 17 wires to a netlist network with 8 inputs and 6 outputs.

5.34.74.1. Executing ABC.

yosys> abc -dff

5.35. Executing ABC pass (technology mapping using ABC).

5.35.1. Summary of detected clock domains:
  4 cells in clk=\clk_ast_tlul_i, en=$abc$19246$abc$17050$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ast_tlul_ni, srst={ }
  4 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$19110$abc$17674$auto$opt_dff.cc:194:make_patterns_logic$11023, arst=!$abc$19116$lo1, srst={ }
  7 cells in clk=$abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en=$abc$19412$abc$18004$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\vcc_supp_i, srst={ }
  3 cells in clk=\clk_ast_tlul_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  3 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$18979$abc$17680$u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni, srst={ }
  11 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=!$abc$19096$abc$17711$auto$rtlil.cc:2367:Not$11031, arst=!$abc$18979$lo1, srst={ }
  34 cells in clk=$abc$18054$clk_src_aon_o, en=$abc$18528$abc$16734$auto$opt_dff.cc:219:make_patterns_logic$16558, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$18561$abc$17107$auto$opt_dff.cc:194:make_patterns_logic$11085, arst=!\rst_ast_alert_ni, srst={ }
  6 cells in clk=$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en=$abc$19252$abc$17748$auto$rtlil.cc:2371:ReduceOr$11179, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$18566$abc$17170$auto$opt_dff.cc:194:make_patterns_logic$11055, arst=!\rst_ast_alert_ni, srst={ }
  1 cells in clk=\clk_ast_rng_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  224 cells in clk=\clk_ast_tlul_i, en=$abc$18571$abc$16823$u_reg.intg_err, arst=!\rst_ast_tlul_ni, srst={ }
  6 cells in clk=$abc$18054$clk_src_aon_o, en={ }, arst=!$abc$18797$abc$18183$u_poks_por_dasrt.rst_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$19805$abc$17195$auto$opt_dff.cc:194:make_patterns_logic$11112, arst=!\rst_ast_alert_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$19795$abc$17185$auto$opt_dff.cc:194:make_patterns_logic$11064, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$19800$abc$17200$auto$opt_dff.cc:194:make_patterns_logic$11121, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_rng_i, en=$abc$19122$abc$17607$u_rng.sync_rng_val, arst=!\rst_ast_rng_ni, srst={ }
  30 cells in clk=\clk_ast_tlul_i, en={ }, arst=!$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  6 cells in clk=\clk_ast_rng_i, en={ }, arst=!$abc$19330$abc$17651$u_rng.u_rng_val_pulse_sync.rst_dst_n, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$19460$abc$17205$auto$opt_dff.cc:194:make_patterns_logic$11124, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_adc_i, en=$abc$19417$abc$17892$auto$opt_dff.cc:194:make_patterns_logic$11133, arst=!\rst_ast_adc_ni, srst={ }
  117 cells in clk=$abc$18054$clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }
  7 cells in clk=$abc$19252$lo0, en={ }, arst=!\vcc_supp_i, srst={ }
  271 cells in clk=\clk_ast_tlul_i, en=$abc$19465$abc$17050$u_reg.u_reg_if.a_ack, arst=!\rst_ast_tlul_ni, srst={ }
  6 cells in clk=\clk_ast_es_i, en=!$abc$19078$lo2, arst=!\rst_ast_es_ni, srst={ }
  2 cells in clk=$abc$17748$lo0, en=$abc$18815$abc$17988$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en=$abc$18821$abc$17908$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en=$abc$18831$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\vcc_supp_i, srst={ }
  9 cells in clk=$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$18851$abc$17102$auto$opt_dff.cc:194:make_patterns_logic$11082, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$18856$abc$17117$auto$opt_dff.cc:194:make_patterns_logic$11091, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$18861$abc$17112$auto$opt_dff.cc:194:make_patterns_logic$11088, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$18866$abc$17087$auto$opt_dff.cc:194:make_patterns_logic$11073, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$18871$abc$17097$auto$opt_dff.cc:194:make_patterns_logic$11079, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$18876$abc$17092$auto$opt_dff.cc:194:make_patterns_logic$11076, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$18892$abc$17165$auto$opt_dff.cc:194:make_patterns_logic$11118, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$18897$abc$17143$auto$opt_dff.cc:194:make_patterns_logic$11106, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$18902$abc$17137$auto$opt_dff.cc:194:make_patterns_logic$11103, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$18908$abc$17190$auto$opt_dff.cc:194:make_patterns_logic$11109, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$18913$abc$17122$auto$opt_dff.cc:194:make_patterns_logic$11094, arst=!\rst_ast_alert_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$18918$abc$17132$auto$opt_dff.cc:194:make_patterns_logic$11100, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$18923$abc$17127$auto$opt_dff.cc:194:make_patterns_logic$11097, arst=!\rst_ast_alert_ni, srst={ }
  3 cells in clk=\clk_ast_adc_i, en={ }, arst={ }, srst={ }
  16 cells in clk=\clk_ast_adc_i, en={ }, arst=!\rst_ast_adc_ni, srst={ }
  13 cells in clk=\clk_ast_adc_i, en=$abc$19127$abc$17857$auto$opt_dff.cc:219:make_patterns_logic$11142, arst=!\rst_ast_adc_ni, srst={ }
  4 cells in clk=$abc$18054$clk_src_aon_o, en=$abc$18972$abc$18039$flatten\u_ast_clks_byp.$verific$n17$2141, arst=!\vcc_supp_i, srst={ }
  17 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$18979$lo1, srst={ }
  24 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$19146$abc$17820$auto$opt_dff.cc:219:make_patterns_logic$11032, arst=!$abc$18979$lo1, srst={ }
  35 cells in clk=$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en={ }, arst=!\vcc_supp_i, srst={ }
  11 cells in clk=$abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  3 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$18979$abc$17845$u_rglts_pdm_3p3v.vcmain_pok_por_h_o, srst={ }
  11 cells in clk=$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  1 cells in clk=!$abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$19005$abc$17899$auto$opt_dff.cc:194:make_patterns_logic$11052, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$19010$abc$17180$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$19015$abc$17175$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$19020$abc$17154$auto$opt_dff.cc:194:make_patterns_logic$11070, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$19025$abc$17148$auto$opt_dff.cc:194:make_patterns_logic$11067, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$19031$abc$17210$auto$opt_dff.cc:194:make_patterns_logic$11127, arst=!\rst_ast_alert_ni, srst={ }
  104 cells in clk=\clk_ast_tlul_i, en=\rng_en_i, arst=!$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  29 cells in clk=\clk_ast_adc_i, en=$abc$19216$abc$17057$auto$opt_dff.cc:194:make_patterns_logic$11130, arst=!\rst_ast_adc_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$19036$abc$17159$auto$opt_dff.cc:194:make_patterns_logic$11115, arst=!\rst_ast_alert_ni, srst={ }
  66 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$19258$abc$17755$auto$opt_dff.cc:194:make_patterns_logic$11035, arst=!$abc$18979$lo1, srst={ }
  2 cells in clk=\clk_ast_rng_i, en={ }, arst=!$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  8 cells in clk=\clk_ast_tlul_i, en=$abc$19340$abc$17625$u_rng.srate_rng_val_en, arst=!$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  9 cells in clk=\clk_ast_tlul_i, en={ }, arst=!$abc$19042$abc$17661$u_rng.u_rng_val_pulse_sync.rst_src_n, srst={ }
  7 cells in clk=\clk_ast_es_i, en=$abc$19055$abc$17702$auto$opt_dff.cc:194:make_patterns_logic$11026, arst=!\rst_ast_es_ni, srst={ }
  9 cells in clk=$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$19116$lo1, srst={ }
  11 cells in clk=\clk_ast_es_i, en={ }, arst=!\rst_ast_es_ni, srst={ }
  30 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$19371$abc$16790$auto$opt_dff.cc:194:make_patterns_logic$11020, arst=!$abc$18979$lo1, srst={ }
  155 cells in clk=\clk_ast_tlul_i, en=$abc$20072$abc$18326$regal_we, arst=!\rst_ast_tlul_ni, srst={ }
  10 cells in clk=!$abc$19810$abc$18054$clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }

5.35.2. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$19246$abc$17050$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ast_tlul_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.35.2.1. Executing ABC.

5.35.3. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$19110$abc$17674$auto$opt_dff.cc:194:make_patterns_logic$11023, asynchronously reset by !$abc$19116$lo1
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.35.3.1. Executing ABC.

5.35.4. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, enabled by $abc$19412$abc$18004$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\vcc_supp_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 5 outputs.

5.35.4.1. Executing ABC.

5.35.5. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 1 outputs.

5.35.5.1. Executing ABC.

5.35.6. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$18979$abc$17680$u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.6.1. Executing ABC.

5.35.7. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by !$abc$19096$abc$17711$auto$rtlil.cc:2367:Not$11031, asynchronously reset by !$abc$18979$lo1
Extracted 11 gates and 21 wires to a netlist network with 9 inputs and 7 outputs.

5.35.7.1. Executing ABC.

5.35.8. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19810$abc$18054$clk_src_aon_o, enabled by $abc$18528$abc$16734$auto$opt_dff.cc:219:make_patterns_logic$16558, asynchronously reset by !\vcc_supp_i
Extracted 34 gates and 59 wires to a netlist network with 25 inputs and 26 outputs.

5.35.8.1. Executing ABC.

5.35.9. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18561$abc$17107$auto$opt_dff.cc:194:make_patterns_logic$11085, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.9.1. Executing ABC.

5.35.10. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19423$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, enabled by $abc$19252$abc$17748$auto$rtlil.cc:2371:ReduceOr$11179, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

5.35.10.1. Executing ABC.

5.35.11. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18566$abc$17170$auto$opt_dff.cc:194:make_patterns_logic$11055, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.11.1. Executing ABC.

5.35.12. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

5.35.12.1. Executing ABC.

5.35.13. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$18571$abc$16823$u_reg.intg_err, asynchronously reset by !\rst_ast_tlul_ni
Extracted 224 gates and 315 wires to a netlist network with 90 inputs and 2 outputs.

5.35.13.1. Executing ABC.

5.35.14. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19810$abc$18054$clk_src_aon_o, asynchronously reset by !$abc$18797$abc$18183$u_poks_por_dasrt.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

5.35.14.1. Executing ABC.

5.35.15. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19805$abc$17195$auto$opt_dff.cc:194:make_patterns_logic$11112, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.35.15.1. Executing ABC.

5.35.16. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19795$abc$17185$auto$opt_dff.cc:194:make_patterns_logic$11064, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.35.16.1. Executing ABC.

5.35.17. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19800$abc$17200$auto$opt_dff.cc:194:make_patterns_logic$11121, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.17.1. Executing ABC.

5.35.18. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, enabled by $abc$19122$abc$17607$u_rng.sync_rng_val, asynchronously reset by !\rst_ast_rng_ni
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 4 outputs.

5.35.18.1. Executing ABC.

5.35.19. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !$abc$19938$abc$17551$u_rng.rst_n
Extracted 30 gates and 31 wires to a netlist network with 1 inputs and 2 outputs.

5.35.19.1. Executing ABC.

5.35.20. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !$abc$19330$abc$17651$u_rng.u_rng_val_pulse_sync.rst_dst_n
Extracted 6 gates and 9 wires to a netlist network with 3 inputs and 4 outputs.

5.35.20.1. Executing ABC.

5.35.21. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19460$abc$17205$auto$opt_dff.cc:194:make_patterns_logic$11124, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.21.1. Executing ABC.

5.35.22. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$19417$abc$17892$auto$opt_dff.cc:194:make_patterns_logic$11133, asynchronously reset by !\rst_ast_adc_ni
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

5.35.22.1. Executing ABC.

5.35.23. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19810$abc$18054$clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 116 gates and 162 wires to a netlist network with 46 inputs and 44 outputs.

5.35.23.1. Executing ABC.

5.35.24. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20358$lo0, asynchronously reset by !\vcc_supp_i
Extracted 7 gates and 9 wires to a netlist network with 2 inputs and 4 outputs.

5.35.24.1. Executing ABC.

5.35.25. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$19465$abc$17050$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ast_tlul_ni
Extracted 271 gates and 372 wires to a netlist network with 101 inputs and 66 outputs.

5.35.25.1. Executing ABC.

5.35.26. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by !$abc$19078$lo2, asynchronously reset by !\rst_ast_es_ni
Extracted 6 gates and 8 wires to a netlist network with 2 inputs and 4 outputs.

5.35.26.1. Executing ABC.

5.35.27. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20358$lo0, enabled by $abc$18815$abc$17988$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

5.35.27.1. Executing ABC.

5.35.28. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, enabled by $abc$18821$abc$17908$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

5.35.28.1. Executing ABC.

5.35.29. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18987$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, enabled by $abc$18831$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

5.35.29.1. Executing ABC.

5.35.30. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 4 outputs.

5.35.30.1. Executing ABC.

5.35.31. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18851$abc$17102$auto$opt_dff.cc:194:make_patterns_logic$11082, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.31.1. Executing ABC.

5.35.32. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18856$abc$17117$auto$opt_dff.cc:194:make_patterns_logic$11091, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.32.1. Executing ABC.

5.35.33. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18861$abc$17112$auto$opt_dff.cc:194:make_patterns_logic$11088, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.33.1. Executing ABC.

5.35.34. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18866$abc$17087$auto$opt_dff.cc:194:make_patterns_logic$11073, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.34.1. Executing ABC.

5.35.35. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18871$abc$17097$auto$opt_dff.cc:194:make_patterns_logic$11079, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.35.1. Executing ABC.

5.35.36. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18876$abc$17092$auto$opt_dff.cc:194:make_patterns_logic$11076, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.36.1. Executing ABC.

5.35.37. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20284$abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

5.35.37.1. Executing ABC.

5.35.38. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18892$abc$17165$auto$opt_dff.cc:194:make_patterns_logic$11118, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.38.1. Executing ABC.

5.35.39. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18897$abc$17143$auto$opt_dff.cc:194:make_patterns_logic$11106, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.39.1. Executing ABC.

5.35.40. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18902$abc$17137$auto$opt_dff.cc:194:make_patterns_logic$11103, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.35.40.1. Executing ABC.

5.35.41. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18908$abc$17190$auto$opt_dff.cc:194:make_patterns_logic$11109, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.41.1. Executing ABC.

5.35.42. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18913$abc$17122$auto$opt_dff.cc:194:make_patterns_logic$11094, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.42.1. Executing ABC.

5.35.43. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18918$abc$17132$auto$opt_dff.cc:194:make_patterns_logic$11100, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.35.43.1. Executing ABC.

5.35.44. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$18923$abc$17127$auto$opt_dff.cc:194:make_patterns_logic$11097, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.44.1. Executing ABC.

5.35.45. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 1 outputs.

5.35.45.1. Executing ABC.

5.35.46. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, asynchronously reset by !\rst_ast_adc_ni
Extracted 16 gates and 25 wires to a netlist network with 9 inputs and 7 outputs.

5.35.46.1. Executing ABC.

5.35.47. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$19127$abc$17857$auto$opt_dff.cc:219:make_patterns_logic$11142, asynchronously reset by !\rst_ast_adc_ni
Extracted 13 gates and 22 wires to a netlist network with 8 inputs and 6 outputs.

5.35.47.1. Executing ABC.

5.35.48. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20695$abc$19810$abc$18054$clk_src_aon_o, enabled by $abc$18972$abc$18039$flatten\u_ast_clks_byp.$verific$n17$2141, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

5.35.48.1. Executing ABC.

5.35.49. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$18979$lo1
Extracted 17 gates and 27 wires to a netlist network with 9 inputs and 8 outputs.

5.35.49.1. Executing ABC.

5.35.50. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$19146$abc$17820$auto$opt_dff.cc:219:make_patterns_logic$11032, asynchronously reset by !$abc$18979$lo1
Extracted 24 gates and 26 wires to a netlist network with 2 inputs and 5 outputs.

5.35.50.1. Executing ABC.

5.35.51. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20358$abc$19423$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, asynchronously reset by !\vcc_supp_i
Extracted 35 gates and 36 wires to a netlist network with 1 inputs and 3 outputs.

5.35.51.1. Executing ABC.

5.35.52. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 9 outputs.

5.35.52.1. Executing ABC.

5.35.53. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$18979$abc$17845$u_rglts_pdm_3p3v.vcmain_pok_por_h_o
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.53.1. Executing ABC.

5.35.54. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$18987$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 7 outputs.

5.35.54.1. Executing ABC.

5.35.55. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: $abc$21179$abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

5.35.55.1. Executing ABC.

5.35.56. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19005$abc$17899$auto$opt_dff.cc:194:make_patterns_logic$11052, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.56.1. Executing ABC.

5.35.57. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19010$abc$17180$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.57.1. Executing ABC.

5.35.58. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19015$abc$17175$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.58.1. Executing ABC.

5.35.59. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19020$abc$17154$auto$opt_dff.cc:194:make_patterns_logic$11070, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.35.59.1. Executing ABC.

5.35.60. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19025$abc$17148$auto$opt_dff.cc:194:make_patterns_logic$11067, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.35.60.1. Executing ABC.

5.35.61. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19031$abc$17210$auto$opt_dff.cc:194:make_patterns_logic$11127, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.35.61.1. Executing ABC.

5.35.62. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by \rng_en_i, asynchronously reset by !$abc$19938$abc$17551$u_rng.rst_n
Extracted 104 gates and 106 wires to a netlist network with 2 inputs and 5 outputs.

5.35.62.1. Executing ABC.

5.35.63. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$19216$abc$17057$auto$opt_dff.cc:194:make_patterns_logic$11130, asynchronously reset by !\rst_ast_adc_ni
Extracted 29 gates and 33 wires to a netlist network with 4 inputs and 6 outputs.

5.35.63.1. Executing ABC.

5.35.64. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$19036$abc$17159$auto$opt_dff.cc:194:make_patterns_logic$11115, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.35.64.1. Executing ABC.

5.35.65. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$19258$abc$17755$auto$opt_dff.cc:194:make_patterns_logic$11035, asynchronously reset by !$abc$21411$lo1
Extracted 65 gates and 72 wires to a netlist network with 7 inputs and 3 outputs.

5.35.65.1. Executing ABC.

5.35.66. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !$abc$21466$abc$19938$abc$17551$u_rng.rst_n
Extracted 2 gates and 3 wires to a netlist network with 0 inputs and 1 outputs.

5.35.66.1. Executing ABC.

5.35.67. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$19340$abc$17625$u_rng.srate_rng_val_en, asynchronously reset by !$abc$21466$abc$19938$abc$17551$u_rng.rst_n
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 5 outputs.

5.35.67.1. Executing ABC.

5.35.68. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !$abc$20292$abc$19042$abc$17661$u_rng.u_rng_val_pulse_sync.rst_src_n
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 4 outputs.

5.35.68.1. Executing ABC.

5.35.69. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by $abc$19055$abc$17702$auto$opt_dff.cc:194:make_patterns_logic$11026, asynchronously reset by !\rst_ast_es_ni
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs.

5.35.69.1. Executing ABC.

5.35.70. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$20298$lo1
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 2 outputs.

5.35.70.1. Executing ABC.

5.35.71. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, asynchronously reset by !\rst_ast_es_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 6 outputs.

5.35.71.1. Executing ABC.

5.35.72. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$19371$abc$16790$auto$opt_dff.cc:194:make_patterns_logic$11020, asynchronously reset by !$abc$21411$lo1
Extracted 30 gates and 34 wires to a netlist network with 4 inputs and 5 outputs.

5.35.72.1. Executing ABC.

5.35.73. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$20072$abc$18326$regal_we, asynchronously reset by !\rst_ast_tlul_ni
Extracted 155 gates and 206 wires to a netlist network with 50 inputs and 69 outputs.

5.35.73.1. Executing ABC.

5.35.74. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: $abc$20695$abc$19810$abc$18054$clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 6 outputs.

5.35.74.1. Executing ABC.

yosys> abc -dff

5.36. Executing ABC pass (technology mapping using ABC).

5.36.1. Summary of detected clock domains:
  4 cells in clk=\clk_ast_tlul_i, en=$abc$20272$abc$19246$abc$17050$auto$opt_dff.cc:194:make_patterns_logic$11015, arst=!\rst_ast_tlul_ni, srst={ }
  4 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$20278$abc$19110$abc$17674$auto$opt_dff.cc:194:make_patterns_logic$11023, arst=!$abc$20298$lo1, srst={ }
  7 cells in clk=$abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en=$abc$20284$abc$19412$abc$18004$auto$opt_dff.cc:194:make_patterns_logic$11042, arst=!\vcc_supp_i, srst={ }
  3 cells in clk=\clk_ast_tlul_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  3 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$20298$abc$18979$abc$17680$u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni, srst={ }
  11 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=!$abc$20305$abc$19096$abc$17711$auto$rtlil.cc:2367:Not$11031, arst=!$abc$21411$lo1, srst={ }
  33 cells in clk=$abc$19810$abc$18054$clk_src_aon_o, en=$abc$20318$abc$18528$abc$16734$auto$opt_dff.cc:219:make_patterns_logic$16558, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$20353$abc$18561$abc$17107$auto$opt_dff.cc:194:make_patterns_logic$11085, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=$abc$19423$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en=$abc$20358$abc$19252$abc$17748$auto$rtlil.cc:2371:ReduceOr$11179, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$20365$abc$18566$abc$17170$auto$opt_dff.cc:194:make_patterns_logic$11055, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_rng_i, en={ }, arst=!\rst_ast_rng_ni, srst={ }
  228 cells in clk=\clk_ast_tlul_i, en=$abc$20374$abc$18571$abc$16823$u_reg.intg_err, arst=!\rst_ast_tlul_ni, srst={ }
  6 cells in clk=$abc$19810$abc$18054$clk_src_aon_o, en={ }, arst=!$abc$20604$abc$18797$abc$18183$u_poks_por_dasrt.rst_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$20614$abc$19805$abc$17195$auto$opt_dff.cc:194:make_patterns_logic$11112, arst=!\rst_ast_alert_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$20619$abc$19795$abc$17185$auto$opt_dff.cc:194:make_patterns_logic$11064, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$20624$abc$19800$abc$17200$auto$opt_dff.cc:194:make_patterns_logic$11121, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_rng_i, en=$abc$20673$abc$19122$abc$17607$u_rng.sync_rng_val, arst=!\rst_ast_rng_ni, srst={ }
  30 cells in clk=$abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$21777$abc$19371$abc$16790$auto$opt_dff.cc:194:make_patterns_logic$11020, arst=!$abc$21411$lo1, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$20684$abc$19460$abc$17205$auto$opt_dff.cc:194:make_patterns_logic$11124, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_adc_i, en=$abc$20689$abc$19417$abc$17892$auto$opt_dff.cc:194:make_patterns_logic$11133, arst=!\rst_ast_adc_ni, srst={ }
  7 cells in clk=$abc$20358$lo0, en={ }, arst=!\vcc_supp_i, srst={ }
  6 cells in clk=\clk_ast_es_i, en=!$abc$21759$lo4, arst=!\rst_ast_es_ni, srst={ }
  117 cells in clk=$abc$19810$abc$18054$clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=$abc$20358$lo0, en=$abc$21163$abc$18815$abc$17988$auto$opt_dff.cc:194:make_patterns_logic$11048, arst=!\vcc_supp_i, srst={ }
  4 cells in clk=$abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en=$abc$21168$abc$18821$abc$17908$auto$opt_dff.cc:194:make_patterns_logic$11039, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=$abc$18987$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en=$abc$21174$abc$18831$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$11045, arst=!\vcc_supp_i, srst={ }
  9 cells in clk=$abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21194$abc$18851$abc$17102$auto$opt_dff.cc:194:make_patterns_logic$11082, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$21199$abc$18856$abc$17117$auto$opt_dff.cc:194:make_patterns_logic$11091, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21204$abc$18861$abc$17112$auto$opt_dff.cc:194:make_patterns_logic$11088, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$21209$abc$18866$abc$17087$auto$opt_dff.cc:194:make_patterns_logic$11073, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$21214$abc$18871$abc$17097$auto$opt_dff.cc:194:make_patterns_logic$11079, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21219$abc$18876$abc$17092$auto$opt_dff.cc:194:make_patterns_logic$11076, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=$abc$20284$abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21234$abc$18892$abc$17165$auto$opt_dff.cc:194:make_patterns_logic$11118, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21239$abc$18897$abc$17143$auto$opt_dff.cc:194:make_patterns_logic$11106, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$21244$abc$18902$abc$17137$auto$opt_dff.cc:194:make_patterns_logic$11103, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$21250$abc$18908$abc$17190$auto$opt_dff.cc:194:make_patterns_logic$11109, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21255$abc$18913$abc$17122$auto$opt_dff.cc:194:make_patterns_logic$11094, arst=!\rst_ast_alert_ni, srst={ }
  3 cells in clk=\clk_ast_alert_i, en=$abc$21260$abc$18918$abc$17132$auto$opt_dff.cc:194:make_patterns_logic$11100, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$21265$abc$18923$abc$17127$auto$opt_dff.cc:194:make_patterns_logic$11097, arst=!\rst_ast_alert_ni, srst={ }
  31 cells in clk=\clk_ast_tlul_i, en={ }, arst=!$abc$21466$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  269 cells in clk=\clk_ast_tlul_i, en=$abc$20830$abc$19465$abc$17050$u_reg.u_reg_if.a_ack, arst=!\rst_ast_tlul_ni, srst={ }
  3 cells in clk=\clk_ast_adc_i, en={ }, arst={ }, srst={ }
  16 cells in clk=\clk_ast_adc_i, en={ }, arst=!\rst_ast_adc_ni, srst={ }
  13 cells in clk=\clk_ast_adc_i, en=$abc$21291$abc$19127$abc$17857$auto$opt_dff.cc:219:make_patterns_logic$11142, arst=!\rst_ast_adc_ni, srst={ }
  4 cells in clk=$abc$20695$abc$19810$abc$18054$clk_src_aon_o, en=$abc$21310$abc$18972$abc$18039$flatten\u_ast_clks_byp.$verific$n17$2141, arst=!\vcc_supp_i, srst={ }
  17 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$21411$lo1, srst={ }
  24 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$21338$abc$19146$abc$17820$auto$opt_dff.cc:219:make_patterns_logic$11032, arst=!$abc$21411$lo1, srst={ }
  3 cells in clk=\clk_ast_rng_i, en={ }, arst=!$abc$20673$abc$19330$abc$17651$u_rng.u_rng_val_pulse_sync.rst_dst_n, srst={ }
  34 cells in clk=$abc$20358$abc$19423$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, en={ }, arst=!\vcc_supp_i, srst={ }
  10 cells in clk=$abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  3 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$21411$abc$18979$abc$17845$u_rglts_pdm_3p3v.vcmain_pok_por_h_o, srst={ }
  11 cells in clk=$abc$18987$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, en={ }, arst=!\vcc_supp_i, srst={ }
  1 cells in clk=!$abc$21179$abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, en={ }, arst=!\vcc_supp_i, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21435$abc$19005$abc$17899$auto$opt_dff.cc:194:make_patterns_logic$11052, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$21440$abc$19010$abc$17180$auto$opt_dff.cc:194:make_patterns_logic$11061, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21445$abc$19015$abc$17175$auto$opt_dff.cc:194:make_patterns_logic$11058, arst=!\rst_ast_alert_ni, srst={ }
  2 cells in clk=\clk_ast_alert_i, en=$abc$21450$abc$19020$abc$17154$auto$opt_dff.cc:194:make_patterns_logic$11070, arst=!\rst_ast_alert_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$21455$abc$19025$abc$17148$auto$opt_dff.cc:194:make_patterns_logic$11067, arst=!\rst_ast_alert_ni, srst={ }
  4 cells in clk=\clk_ast_alert_i, en=$abc$21461$abc$19031$abc$17210$auto$opt_dff.cc:194:make_patterns_logic$11127, arst=!\rst_ast_alert_ni, srst={ }
  104 cells in clk=\clk_ast_tlul_i, en=\rng_en_i, arst=!$abc$21466$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  29 cells in clk=\clk_ast_adc_i, en=$abc$21600$abc$19216$abc$17057$auto$opt_dff.cc:194:make_patterns_logic$11130, arst=!\rst_ast_adc_ni, srst={ }
  5 cells in clk=\clk_ast_alert_i, en=$abc$21630$abc$19036$abc$17159$auto$opt_dff.cc:194:make_patterns_logic$11115, arst=!\rst_ast_alert_ni, srst={ }
  66 cells in clk=$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en=$abc$21636$abc$19258$abc$17755$auto$opt_dff.cc:194:make_patterns_logic$11035, arst=!$abc$21411$lo1, srst={ }
  3 cells in clk=\clk_ast_rng_i, en={ }, arst=!$abc$21466$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  8 cells in clk=\clk_ast_tlul_i, en=$abc$21708$abc$19340$abc$17625$u_rng.srate_rng_val_en, arst=!$abc$21466$abc$19938$abc$17551$u_rng.rst_n, srst={ }
  8 cells in clk=\clk_ast_tlul_i, en={ }, arst=!$abc$20292$abc$19042$abc$17661$u_rng.u_rng_val_pulse_sync.rst_src_n, srst={ }
  7 cells in clk=\clk_ast_es_i, en=$abc$21736$abc$19055$abc$17702$auto$opt_dff.cc:194:make_patterns_logic$11026, arst=!\rst_ast_es_ni, srst={ }
  9 cells in clk=$abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, en={ }, arst=!$abc$20298$lo1, srst={ }
  11 cells in clk=\clk_ast_es_i, en={ }, arst=!\rst_ast_es_ni, srst={ }
  154 cells in clk=\clk_ast_tlul_i, en=$abc$21808$abc$20072$abc$18326$regal_we, arst=!\rst_ast_tlul_ni, srst={ }
  10 cells in clk=!$abc$20695$abc$19810$abc$18054$clk_src_aon_o, en={ }, arst=!\vcc_supp_i, srst={ }

5.36.2. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$20272$abc$19246$abc$17050$auto$opt_dff.cc:194:make_patterns_logic$11015, asynchronously reset by !\rst_ast_tlul_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.36.2.1. Executing ABC.

5.36.3. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$20278$abc$19110$abc$17674$auto$opt_dff.cc:194:make_patterns_logic$11023, asynchronously reset by !$abc$20298$lo1
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 3 outputs.

5.36.3.1. Executing ABC.

5.36.4. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20284$abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, enabled by $abc$20284$abc$19412$abc$18004$auto$opt_dff.cc:194:make_patterns_logic$11042, asynchronously reset by !\vcc_supp_i
Extracted 6 gates and 14 wires to a netlist network with 8 inputs and 5 outputs.

5.36.4.1. Executing ABC.

5.36.5. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 1 outputs.

5.36.5.1. Executing ABC.

5.36.6. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$20298$abc$18979$abc$17680$u_entropy.u_dev0_entropy.u_rst_es_n_da.rst_ni
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.6.1. Executing ABC.

5.36.7. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by !$abc$20305$abc$19096$abc$17711$auto$rtlil.cc:2367:Not$11031, asynchronously reset by !$abc$21411$lo1
Extracted 11 gates and 21 wires to a netlist network with 9 inputs and 7 outputs.

5.36.7.1. Executing ABC.

5.36.8. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20695$abc$19810$abc$18054$clk_src_aon_o, enabled by $abc$20318$abc$18528$abc$16734$auto$opt_dff.cc:219:make_patterns_logic$16558, asynchronously reset by !\vcc_supp_i
Extracted 33 gates and 58 wires to a netlist network with 25 inputs and 26 outputs.

5.36.8.1. Executing ABC.

5.36.9. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$20353$abc$18561$abc$17107$auto$opt_dff.cc:194:make_patterns_logic$11085, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.9.1. Executing ABC.

5.36.10. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20358$abc$19423$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, enabled by $abc$20358$abc$19252$abc$17748$auto$rtlil.cc:2371:ReduceOr$11179, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 7 wires to a netlist network with 3 inputs and 2 outputs.

5.36.10.1. Executing ABC.

5.36.11. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$20365$abc$18566$abc$17170$auto$opt_dff.cc:194:make_patterns_logic$11055, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.11.1. Executing ABC.

5.36.12. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !\rst_ast_rng_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 1 outputs.

5.36.12.1. Executing ABC.

5.36.13. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$20374$abc$18571$abc$16823$u_reg.intg_err, asynchronously reset by !\rst_ast_tlul_ni
Extracted 228 gates and 319 wires to a netlist network with 90 inputs and 2 outputs.

5.36.13.1. Executing ABC.

5.36.14. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20695$abc$19810$abc$18054$clk_src_aon_o, asynchronously reset by !$abc$20604$abc$18797$abc$18183$u_poks_por_dasrt.rst_ni
Extracted 6 gates and 12 wires to a netlist network with 5 inputs and 5 outputs.

5.36.14.1. Executing ABC.

5.36.15. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$20614$abc$19805$abc$17195$auto$opt_dff.cc:194:make_patterns_logic$11112, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.36.15.1. Executing ABC.

5.36.16. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$20619$abc$19795$abc$17185$auto$opt_dff.cc:194:make_patterns_logic$11064, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.36.16.1. Executing ABC.

5.36.17. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$20624$abc$19800$abc$17200$auto$opt_dff.cc:194:make_patterns_logic$11121, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.17.1. Executing ABC.

5.36.18. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, enabled by $abc$20673$abc$19122$abc$17607$u_rng.sync_rng_val, asynchronously reset by !\rst_ast_rng_ni
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 5 outputs.

5.36.18.1. Executing ABC.

5.36.19. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$21777$abc$19371$abc$16790$auto$opt_dff.cc:194:make_patterns_logic$11020, asynchronously reset by !$abc$21411$lo1
Extracted 30 gates and 34 wires to a netlist network with 4 inputs and 5 outputs.

5.36.19.1. Executing ABC.

5.36.20. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$20684$abc$19460$abc$17205$auto$opt_dff.cc:194:make_patterns_logic$11124, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.20.1. Executing ABC.

5.36.21. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$20689$abc$19417$abc$17892$auto$opt_dff.cc:194:make_patterns_logic$11133, asynchronously reset by !\rst_ast_adc_ni
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

5.36.21.1. Executing ABC.

5.36.22. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$22096$lo0, asynchronously reset by !\vcc_supp_i
Extracted 7 gates and 9 wires to a netlist network with 2 inputs and 4 outputs.

5.36.22.1. Executing ABC.

5.36.23. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by !$abc$21759$lo4, asynchronously reset by !\rst_ast_es_ni
Extracted 6 gates and 8 wires to a netlist network with 2 inputs and 4 outputs.

5.36.23.1. Executing ABC.

5.36.24. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20695$abc$19810$abc$18054$clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 115 gates and 162 wires to a netlist network with 47 inputs and 43 outputs.

5.36.24.1. Executing ABC.

5.36.25. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$22096$lo0, enabled by $abc$21163$abc$18815$abc$17988$auto$opt_dff.cc:194:make_patterns_logic$11048, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

5.36.25.1. Executing ABC.

5.36.26. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21397$abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, enabled by $abc$21168$abc$18821$abc$17908$auto$opt_dff.cc:194:make_patterns_logic$11039, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 8 wires to a netlist network with 4 inputs and 3 outputs.

5.36.26.1. Executing ABC.

5.36.27. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21418$abc$18987$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, enabled by $abc$21174$abc$18831$abc$17968$auto$opt_dff.cc:194:make_patterns_logic$11045, asynchronously reset by !\vcc_supp_i
Extracted 2 gates and 5 wires to a netlist network with 3 inputs and 2 outputs.

5.36.27.1. Executing ABC.

5.36.28. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21179$abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 4 outputs.

5.36.28.1. Executing ABC.

5.36.29. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21194$abc$18851$abc$17102$auto$opt_dff.cc:194:make_patterns_logic$11082, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.29.1. Executing ABC.

5.36.30. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21199$abc$18856$abc$17117$auto$opt_dff.cc:194:make_patterns_logic$11091, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.30.1. Executing ABC.

5.36.31. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21204$abc$18861$abc$17112$auto$opt_dff.cc:194:make_patterns_logic$11088, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.31.1. Executing ABC.

5.36.32. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21209$abc$18866$abc$17087$auto$opt_dff.cc:194:make_patterns_logic$11073, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.32.1. Executing ABC.

5.36.33. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21214$abc$18871$abc$17097$auto$opt_dff.cc:194:make_patterns_logic$11079, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.33.1. Executing ABC.

5.36.34. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21219$abc$18876$abc$17092$auto$opt_dff.cc:194:make_patterns_logic$11076, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.34.1. Executing ABC.

5.36.35. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$22022$abc$20284$abc$18881$abc$17977$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 5 outputs.

5.36.35.1. Executing ABC.

5.36.36. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21234$abc$18892$abc$17165$auto$opt_dff.cc:194:make_patterns_logic$11118, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.36.1. Executing ABC.

5.36.37. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21239$abc$18897$abc$17143$auto$opt_dff.cc:194:make_patterns_logic$11106, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.37.1. Executing ABC.

5.36.38. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21244$abc$18902$abc$17137$auto$opt_dff.cc:194:make_patterns_logic$11103, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.36.38.1. Executing ABC.

5.36.39. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21250$abc$18908$abc$17190$auto$opt_dff.cc:194:make_patterns_logic$11109, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.39.1. Executing ABC.

5.36.40. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21255$abc$18913$abc$17122$auto$opt_dff.cc:194:make_patterns_logic$11094, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.40.1. Executing ABC.

5.36.41. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21260$abc$18918$abc$17132$auto$opt_dff.cc:194:make_patterns_logic$11100, asynchronously reset by !\rst_ast_alert_ni
Extracted 3 gates and 6 wires to a netlist network with 3 inputs and 2 outputs.

5.36.41.1. Executing ABC.

5.36.42. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21265$abc$18923$abc$17127$auto$opt_dff.cc:194:make_patterns_logic$11097, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.42.1. Executing ABC.

5.36.43. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !$abc$21466$abc$19938$abc$17551$u_rng.rst_n
Extracted 31 gates and 31 wires to a netlist network with 0 inputs and 3 outputs.

5.36.43.1. Executing ABC.

5.36.44. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$20830$abc$19465$abc$17050$u_reg.u_reg_if.a_ack, asynchronously reset by !\rst_ast_tlul_ni
Extracted 269 gates and 370 wires to a netlist network with 101 inputs and 65 outputs.

5.36.44.1. Executing ABC.

5.36.45. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i
Extracted 3 gates and 5 wires to a netlist network with 2 inputs and 1 outputs.

5.36.45.1. Executing ABC.

5.36.46. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, asynchronously reset by !\rst_ast_adc_ni
Extracted 16 gates and 25 wires to a netlist network with 9 inputs and 7 outputs.

5.36.46.1. Executing ABC.

5.36.47. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$21291$abc$19127$abc$17857$auto$opt_dff.cc:219:make_patterns_logic$11142, asynchronously reset by !\rst_ast_adc_ni
Extracted 13 gates and 22 wires to a netlist network with 8 inputs and 6 outputs.

5.36.47.1. Executing ABC.

5.36.48. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$22436$abc$20695$abc$19810$abc$18054$clk_src_aon_o, enabled by $abc$21310$abc$18972$abc$18039$flatten\u_ast_clks_byp.$verific$n17$2141, asynchronously reset by !\vcc_supp_i
Extracted 4 gates and 9 wires to a netlist network with 4 inputs and 2 outputs.

5.36.48.1. Executing ABC.

5.36.49. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$21411$lo1
Extracted 17 gates and 27 wires to a netlist network with 9 inputs and 8 outputs.

5.36.49.1. Executing ABC.

5.36.50. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$21338$abc$19146$abc$17820$auto$opt_dff.cc:219:make_patterns_logic$11032, asynchronously reset by !$abc$21411$lo1
Extracted 24 gates and 26 wires to a netlist network with 2 inputs and 5 outputs.

5.36.50.1. Executing ABC.

5.36.51. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !$abc$20673$abc$19330$abc$17651$u_rng.u_rng_val_pulse_sync.rst_dst_n
Extracted 3 gates and 4 wires to a netlist network with 1 inputs and 2 outputs.

5.36.51.1. Executing ABC.

5.36.52. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$20358$abc$19423$abc$17748$u_ast_clks_byp.u_clk_ext_usb_ckgt.u_cgc.u_and.i_a, asynchronously reset by !\vcc_supp_i
Extracted 34 gates and 38 wires to a netlist network with 4 inputs and 4 outputs.

5.36.52.1. Executing ABC.

5.36.53. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21397$abc$18821$abc$17908$u_ast_clks_byp.u_clk_src_usb_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 9 gates and 18 wires to a netlist network with 9 inputs and 9 outputs.

5.36.53.1. Executing ABC.

5.36.54. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$21411$abc$18979$abc$17845$u_rglts_pdm_3p3v.vcmain_pok_por_h_o
Extracted 3 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.54.1. Executing ABC.

5.36.55. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21418$abc$18987$abc$17968$u_ast_clks_byp.u_clk_src_io_sel.clk_ext_i, asynchronously reset by !\vcc_supp_i
Extracted 10 gates and 17 wires to a netlist network with 7 inputs and 7 outputs.

5.36.55.1. Executing ABC.

5.36.56. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: $abc$22576$abc$21179$abc$18836$abc$17953$u_ast_clks_byp.u_clk_ext_d1ord2.clk_i, asynchronously reset by !\vcc_supp_i
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

5.36.56.1. Executing ABC.

5.36.57. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21435$abc$19005$abc$17899$auto$opt_dff.cc:194:make_patterns_logic$11052, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.57.1. Executing ABC.

5.36.58. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21440$abc$19010$abc$17180$auto$opt_dff.cc:194:make_patterns_logic$11061, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.58.1. Executing ABC.

5.36.59. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21445$abc$19015$abc$17175$auto$opt_dff.cc:194:make_patterns_logic$11058, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.59.1. Executing ABC.

5.36.60. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21450$abc$19020$abc$17154$auto$opt_dff.cc:194:make_patterns_logic$11070, asynchronously reset by !\rst_ast_alert_ni
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

5.36.60.1. Executing ABC.

5.36.61. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21455$abc$19025$abc$17148$auto$opt_dff.cc:194:make_patterns_logic$11067, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.36.61.1. Executing ABC.

5.36.62. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21461$abc$19031$abc$17210$auto$opt_dff.cc:194:make_patterns_logic$11127, asynchronously reset by !\rst_ast_alert_ni
Extracted 4 gates and 6 wires to a netlist network with 2 inputs and 2 outputs.

5.36.62.1. Executing ABC.

5.36.63. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by \rng_en_i, asynchronously reset by !$abc$21466$abc$19938$abc$17551$u_rng.rst_n
Extracted 104 gates and 106 wires to a netlist network with 2 inputs and 5 outputs.

5.36.63.1. Executing ABC.

5.36.64. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_adc_i, enabled by $abc$21600$abc$19216$abc$17057$auto$opt_dff.cc:194:make_patterns_logic$11130, asynchronously reset by !\rst_ast_adc_ni
Extracted 29 gates and 33 wires to a netlist network with 4 inputs and 6 outputs.

5.36.64.1. Executing ABC.

5.36.65. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_alert_i, enabled by $abc$21630$abc$19036$abc$17159$auto$opt_dff.cc:194:make_patterns_logic$11115, asynchronously reset by !\rst_ast_alert_ni
Extracted 5 gates and 8 wires to a netlist network with 3 inputs and 2 outputs.

5.36.65.1. Executing ABC.

5.36.66. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, enabled by $abc$21636$abc$19258$abc$17755$auto$opt_dff.cc:194:make_patterns_logic$11035, asynchronously reset by !$abc$23174$lo1
Extracted 65 gates and 72 wires to a netlist network with 7 inputs and 3 outputs.

5.36.66.1. Executing ABC.

5.36.67. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_rng_i, asynchronously reset by !$abc$23229$abc$21466$abc$19938$abc$17551$u_rng.rst_n
Extracted 3 gates and 5 wires to a netlist network with 1 inputs and 1 outputs.

5.36.67.1. Executing ABC.

5.36.68. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$21708$abc$19340$abc$17625$u_rng.srate_rng_val_en, asynchronously reset by !$abc$23229$abc$21466$abc$19938$abc$17551$u_rng.rst_n
Extracted 8 gates and 15 wires to a netlist network with 7 inputs and 5 outputs.

5.36.68.1. Executing ABC.

5.36.69. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, asynchronously reset by !$abc$22030$abc$20292$abc$19042$abc$17661$u_rng.u_rng_val_pulse_sync.rst_src_n
Extracted 8 gates and 12 wires to a netlist network with 4 inputs and 3 outputs.

5.36.69.1. Executing ABC.

5.36.70. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, enabled by $abc$21736$abc$19055$abc$17702$auto$opt_dff.cc:194:make_patterns_logic$11026, asynchronously reset by !\rst_ast_es_ni
Extracted 7 gates and 12 wires to a netlist network with 5 inputs and 3 outputs.

5.36.70.1. Executing ABC.

5.36.71. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: $abc$23399$abc$21636$abc$19258$abc$16790$u_ast_clks_byp.u_clk_src_sys_sel.clk_ext, asynchronously reset by !$abc$22036$lo1
Extracted 9 gates and 13 wires to a netlist network with 4 inputs and 2 outputs.

5.36.71.1. Executing ABC.

5.36.72. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_es_i, asynchronously reset by !\rst_ast_es_ni
Extracted 11 gates and 18 wires to a netlist network with 7 inputs and 6 outputs.

5.36.72.1. Executing ABC.

5.36.73. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk_ast_tlul_i, enabled by $abc$21808$abc$20072$abc$18326$regal_we, asynchronously reset by !\rst_ast_tlul_ni
Extracted 154 gates and 204 wires to a netlist network with 49 inputs and 69 outputs.

5.36.73.1. Executing ABC.

5.36.74. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Found matching negedge clock domain: $abc$22436$abc$20695$abc$19810$abc$18054$clk_src_aon_o, asynchronously reset by !\vcc_supp_i
Extracted 10 gates and 18 wires to a netlist network with 8 inputs and 6 outputs.

5.36.74.1. Executing ABC.

yosys> opt_ffinv

5.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 23 inverters.

yosys> opt -sat

5.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

5.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

yosys> opt_muxtree

5.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 23 unused cells and 8626 unused wires.
<suppressed ~186 debug messages>

yosys> opt_expr

5.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~2 debug messages>

5.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.38.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.38.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.38.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.38.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -sat

5.38.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.38.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.38.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.38.23. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_Bq4Rxg/abc_tmp_1.scr

5.39. Executing ABC pass (technology mapping using ABC).

5.39.1. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Extracted 1068 gates and 1458 wires to a netlist network with 389 inputs and 243 outputs.

5.39.1.1. Executing ABC.
DE:   #PIs = 389  #Luts =   370  Max Lvl =  11  Avg Lvl =   3.51  [   0.06 sec. at Pass 0]
DE:   #PIs = 389  #Luts =   341  Max Lvl =   8  Avg Lvl =   2.68  [   1.68 sec. at Pass 1]
DE:   #PIs = 389  #Luts =   334  Max Lvl =  10  Avg Lvl =   3.07  [   0.29 sec. at Pass 2]
DE:   #PIs = 389  #Luts =   334  Max Lvl =   9  Avg Lvl =   2.93  [   0.49 sec. at Pass 3]
DE:   #PIs = 389  #Luts =   333  Max Lvl =   9  Avg Lvl =   2.94  [   0.46 sec. at Pass 4]
DE:   #PIs = 389  #Luts =   333  Max Lvl =   9  Avg Lvl =   2.94  [   0.69 sec. at Pass 5]
DE:   #PIs = 389  #Luts =   331  Max Lvl =  11  Avg Lvl =   3.25  [   0.48 sec. at Pass 6]
DE:   #PIs = 389  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.91  [   0.57 sec. at Pass 7]
DE:   #PIs = 389  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.91  [   0.48 sec. at Pass 8]
DE:   #PIs = 389  #Luts =   330  Max Lvl =   9  Avg Lvl =   2.93  [   0.58 sec. at Pass 9]
DE:   #PIs = 389  #Luts =   330  Max Lvl =   9  Avg Lvl =   2.93  [   0.41 sec. at Pass 10]
DE:   #PIs = 389  #Luts =   330  Max Lvl =   9  Avg Lvl =   2.93  [   0.56 sec. at Pass 11]
DE:   #PIs = 389  #Luts =   330  Max Lvl =   9  Avg Lvl =   2.93  [   0.44 sec. at Pass 12]
DE:   #PIs = 389  #Luts =   330  Max Lvl =   9  Avg Lvl =   2.93  [   0.35 sec. at Pass 13]
DE:   #PIs = 389  #Luts =   330  Max Lvl =   9  Avg Lvl =   2.93  [   0.07 sec. at Pass 14]

yosys> opt

5.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

yosys> opt_merge -nomux

5.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 1423 unused wires.
<suppressed ~22 debug messages>

yosys> opt_expr

5.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

5.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 6 inverters.

yosys> stat

5.42. Printing statistics.

=== ast ===

   Number of wires:               2726
   Number of wire bits:          15801
   Number of public wires:        2252
   Number of public wire bits:   15327
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                649
     $_DFFE_PN0N_                    2
     $_DFFE_PN0P_                  202
     $_DFFE_PN1P_                   23
     $_DFF_NN0_                      2
     $_DFF_NN1_                      1
     $_DFF_PN0_                     76
     $_DFF_PN1_                      5
     $_DFF_P_                        1
     $_DLATCH_N_                     7
     $lut                          330


yosys> shregmap -minlen 8 -maxlen 20

5.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

5.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

5.45. Printing statistics.

=== ast ===

   Number of wires:               2733
   Number of wire bits:          15808
   Number of public wires:        2252
   Number of public wire bits:   15327
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                656
     $_DFFE_PN0N_                    2
     $_DFFE_PN0P_                  202
     $_DFFE_PN1P_                   23
     $_DFF_NN0_                      2
     $_DFF_NN1_                      1
     $_DFF_PN0_                     76
     $_DFF_PN1_                      5
     $_DFF_P_                        1
     $_DLATCHSR_PPP_                 7
     $_NOT_                          7
     $lut                          330


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/ffs_map.v

5.46. Executing TECHMAP pass (map to technology primitives).

5.46.1. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.46.2. Executing Verilog-2005 frontend: /home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/khyber.runner/yosys_verific_runner/_work/yosys_verific_rs/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

5.46.3. Continuing TECHMAP pass.
Using template \$_DFFE_PN0P_ for cells of type $_DFFE_PN0P_.
Using template \$_DFF_PN0_ for cells of type $_DFF_PN0_.
Using extmapper simplemap for cells of type $lut.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PN1_ for cells of type $_DFF_PN1_.
Using template \$_DFFE_PN1P_ for cells of type $_DFFE_PN1P_.
Using template $paramod\$_DFF_NN0_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFF_NN0_.
Using template \$_DFFE_PN0N_ for cells of type $_DFFE_PN0N_.
Using template \$_DLATCHSR_PPP_ for cells of type $_DLATCHSR_PPP_.
Using template \$_DFF_NN1_ for cells of type $_DFF_NN1_.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~812 debug messages>

yosys> opt_expr -mux_undef

5.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~4020 debug messages>

yosys> simplemap

5.48. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

5.49. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

yosys> opt_merge

5.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
<suppressed ~5280 debug messages>
Removed a total of 1760 cells.

yosys> opt_dff -nodffe -nosdff

5.51. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.52. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 6 unused cells and 2057 unused wires.
<suppressed ~8 debug messages>

yosys> opt -nodffe -nosdff

5.53. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.53.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.
<suppressed ~18 debug messages>

yosys> opt_merge -nomux

5.53.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.53.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.53.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.53.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.53.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.53.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.53.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.53.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.53.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.53.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.53.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.53.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.53.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.53.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.53.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_Bq4Rxg/abc_tmp_2.scr

5.54. Executing ABC pass (technology mapping using ABC).

5.54.1. Extracting gate netlist of module `\ast' to `<abc-temp-dir>/input.blif'..
Extracted 1311 gates and 1700 wires to a netlist network with 387 inputs and 243 outputs.

5.54.1.1. Executing ABC.
DE:   #PIs = 387  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.97  [   0.10 sec. at Pass 0]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.97  [   1.36 sec. at Pass 1]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.97  [   0.40 sec. at Pass 2]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.97  [   0.49 sec. at Pass 3]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.97  [   0.62 sec. at Pass 4]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   9  Avg Lvl =   2.97  [   0.67 sec. at Pass 5]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   8  Avg Lvl =   2.80  [   0.49 sec. at Pass 6]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   8  Avg Lvl =   2.80  [   0.60 sec. at Pass 7]
DE:   #PIs = 387  #Luts =   331  Max Lvl =   8  Avg Lvl =   2.80  [   0.62 sec. at Pass 8]
DE:   #PIs = 387  #Luts =   330  Max Lvl =  11  Avg Lvl =   3.27  [   0.35 sec. at Pass 9]
DE:   #PIs = 387  #Luts =   330  Max Lvl =  11  Avg Lvl =   3.27  [   0.57 sec. at Pass 10]
DE:   #PIs = 387  #Luts =   330  Max Lvl =  11  Avg Lvl =   3.27  [   0.48 sec. at Pass 11]
DE:   #PIs = 387  #Luts =   330  Max Lvl =  11  Avg Lvl =   3.27  [   0.63 sec. at Pass 12]
DE:   #PIs = 387  #Luts =   330  Max Lvl =  11  Avg Lvl =   3.27  [   0.35 sec. at Pass 13]
DE:   #PIs = 387  #Luts =   330  Max Lvl =  11  Avg Lvl =   3.27  [   0.11 sec. at Pass 14]

yosys> opt

5.55. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.55.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

yosys> opt_merge -nomux

5.55.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.55.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.55.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.55.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.55.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.55.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 1359 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.55.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.55.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.55.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ast..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

5.55.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ast.
Performed a total of 0 changes.

yosys> opt_merge

5.55.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ast'.
Removed a total of 0 cells.

yosys> opt_dff

5.55.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.55.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..

yosys> opt_expr

5.55.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ast.

5.55.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

5.56. Executing HIERARCHY pass (managing design hierarchy).

5.56.1. Analyzing design hierarchy..
Top module:  \ast

5.56.2. Analyzing design hierarchy..
Top module:  \ast
Removed 0 unused modules.

yosys> stat

5.57. Printing statistics.

=== ast ===

   Number of wires:               2726
   Number of wire bits:          15801
   Number of public wires:        2251
   Number of public wire bits:   15326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                649
     $lut                          330
     dffnsre                         3
     dffsre                        309
     latchsre                        7


yosys> opt_clean -purge

5.58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ast..
Removed 0 unused cells and 1957 unused wires.
<suppressed ~1957 debug messages>

yosys> write_verilog -noattr -nohex synthesized.v

5.59. Executing Verilog backend.

yosys> bmuxmap

5.59.1. Executing BMUXMAP pass.

yosys> demuxmap

5.59.2. Executing DEMUXMAP pass.

yosys> clean_zerowidth
Dumping module `\ast'.

Warnings: 246 unique messages, 246 total
End of script. Logfile hash: 681d1b37a4, CPU: user 12.35s system 1.04s, MEM: 52.39 MB peak
Yosys 0.17+76 (git sha1 035496b50, gcc 9.1.0 -fPIC -Os)
Time spent: 93% 6x abc (134 sec), 2% 58x opt_expr (2 sec), ...
real 48.75
user 126.97
sys 17.80
