
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys-Verific 0.0.45
 Yosys 0.17+103 (git sha1 a1babadd5, gcc 9.1.0 -fPIC -Os)


-- Executing script file `yosys.ys' --
echo on

yosys> plugin -i synth-rs

yosys> read -verific

yosys> read -incdir .

yosys> verific -vlog-incdir .

1. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.

yosys> verilog_defaults -add -I.

yosys> read -vhdl b11.vhd

yosys> verific -vhdl b11.vhd

2. Executing VERIFIC (loading SystemVerilog and VHDL designs using Verific).
Built with Verific Apr22_SW_Release, released at Thu Apr 28 20:08:21 2022.
VERIFIC-INFO [VHDL-1504] default VHDL library search path is now "/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008"
VERIFIC-COMMENT [VHDL-1481] Analyzing VHDL file 'b11.vhd'
VERIFIC-COMMENT [VHDL-1493] Restoring VHDL unit 'std.standard' from file '/home/users/aram/yosys_verific_rs/yosys/install/share/yosys/verific/vhdl_vdbs_2008/std/standard.vdb'
VERIFIC-INFO [VHDL-1012] b11.vhd:1: analyzing entity 'b11'
VERIFIC-INFO [VHDL-1010] b11.vhd:11: analyzing architecture 'behav'

yosys> synth_rs -top b11 -tech genesis -goal area -de -no_dsp -no_bram -verilog synthesized.v

3. Executing synth_rs pass: v0.4.56

yosys> read_verilog -lib -specify -nomem2reg +/rapidsilicon/common/cells_sim.v +/rapidsilicon/genesis/cells_sim.v

3.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\dffsre'.
Generating RTLIL representation for module `\dffnsre'.
Generating RTLIL representation for module `\latchsre'.
Generating RTLIL representation for module `\latchnsre'.
Generating RTLIL representation for module `\io_scff'.
Generating RTLIL representation for module `\scff'.
Generating RTLIL representation for module `\sh_dff'.
Generating RTLIL representation for module `\adder_carry'.
Generating RTLIL representation for module `\sdffr'.
Generating RTLIL representation for module `\sdffs'.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\TDP36K'.
Generating RTLIL representation for module `\RS_DSP1'.
Generating RTLIL representation for module `\RS_DSP2'.
Generating RTLIL representation for module `\RS_DSP2_MULT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_sim'.
Generating RTLIL representation for module `\dsp_t1_20x18x64'.
Generating RTLIL representation for module `\dsp_t1_10x9x32'.
Successfully finished Verilog frontend.

yosys> hierarchy -check -top b11

3.3. Executing HIERARCHY pass (managing design hierarchy).
VERIFIC-INFO [VHDL-1067] b11.vhd:1: processing 'b11(BEHAV)'
Importing module b11.

3.3.1. Analyzing design hierarchy..
Top module:  \b11

3.3.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> proc

3.4. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

yosys> proc_prune

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

yosys> proc_init

3.4.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

3.4.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

yosys> proc_mux

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

yosys> proc_dlatch

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

yosys> proc_dff

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).

yosys> proc_memwr

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> opt_expr -keepdc

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~3 debug messages>

yosys> flatten

3.5. Executing FLATTEN pass (flatten design).

yosys> tribuf -logic

3.6. Executing TRIBUF pass.

yosys> deminout

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

yosys> opt_expr

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_clean

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 1 unused cells and 29 unused wires.
<suppressed ~13 debug messages>

yosys> check

3.10. Executing CHECK pass (checking for obvious problems).
Checking module b11...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

3.11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).
Changing const-value async load to async reset on $verific$x_out_reg$b11.vhd:116$137 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$stato_reg$b11.vhd:116$133 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$r_in_reg$b11.vhd:116$134 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont_reg$b11.vhd:116$135 ($aldff) from module b11.
Changing const-value async load to async reset on $verific$cont1_reg$b11.vhd:116$136 ($aldff) from module b11.

yosys> opt_clean

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.11.16. Finished OPT passes. (There is nothing left to do.)

yosys> fsm -encoding binary

3.12. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> fsm_opt

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode -encoding binary

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt -sat

3.13. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 5 on $verific$cont_reg$b11.vhd:116$135 ($adff) from module b11.

yosys> opt_clean

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.13.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce -keepdc

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 6) from port A of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_11$b11.vhd:52$82 ($lt).
Removed top 1 bits (of 6) from port A of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 5 bits (of 6) from port B of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 7) from port Y of cell b11.$verific$add_12$b11.vhd:53$83 ($add).
Removed top 1 bits (of 6) from port B of cell b11.$verific$LessThan_16$b11.vhd:59$88 ($le).
Removed top 1 bits (of 7) from mux cell b11.$verific$mux_28$b11.vhd:69$92 ($mux).
Removed top 3 bits (of 9) from port A of cell b11.$verific$add_30$b11.vhd:73$93 ($add).
Removed top 4 bits (of 10) from port A of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 10) from port B of cell b11.$verific$sub_32$b11.vhd:76$94 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_36$b11.vhd:80$97 ($lt).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_37$b11.vhd:81$98 ($sub).
Removed top 1 bits (of 9) from port B of cell b11.$verific$LessThan_41$b11.vhd:87$102 ($lt).
Removed top 4 bits (of 8) from port B of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 1 bits (of 9) from port Y of cell b11.$verific$add_43$b11.vhd:88$104 ($add).
Removed top 5 bits (of 10) from port B of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_48$b11.vhd:95$109 ($sub).
Removed top 1 bits (of 2) from port A of cell b11.$verific$equal_50$b11.vhd:96$112 ($eq).
Removed top 4 bits (of 10) from port B of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port Y of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 1 bits (of 10) from port A of cell b11.$verific$sub_51$b11.vhd:97$113 ($sub).
Removed top 6 bits (of 9) from port B of cell b11.$verific$add_55$b11.vhd:99$117 ($add).
Removed top 4 bits (of 7) from port B of cell b11.$verific$add_58$b11.vhd:101$118 ($add).
Removed top 1 bits (of 9) from port A of cell b11.$verific$LessThan_63$b11.vhd:105$122 ($lt).
Removed top 4 bits (of 10) from port Y of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 4 bits (of 10) from port A of cell b11.$verific$unary_minus_64$b11.vhd:108$123 ($neg).
Removed top 1 bits (of 7) from wire b11.$verific$n160$36.
Removed top 1 bits (of 10) from wire b11.$verific$n191$39.
Removed top 1 bits (of 3) from wire b11.$verific$n223$42.
Removed top 1 bits (of 10) from wire b11.$verific$n228$43.
Removed top 1 bits (of 3) from wire b11.$verific$n260$46.
Removed top 2 bits (of 3) from wire b11.$verific$n297$50.
Removed top 1 bits (of 10) from wire b11.$verific$n302$51.
Removed top 4 bits (of 10) from wire b11.$verific$n423$62.
Removed top 1 bits (of 6) from wire b11.cont.

yosys> peepopt

3.15. Executing PEEPOPT pass (run peephole optimizers).

yosys> pmuxtree

3.16. Executing PMUXTREE pass.

yosys> opt_clean

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

3.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module b11:
  creating $macc model for $verific$add_12$b11.vhd:53$83 ($add).
  creating $macc model for $verific$add_30$b11.vhd:73$93 ($add).
  creating $macc model for $verific$add_43$b11.vhd:88$104 ($add).
  creating $macc model for $verific$add_55$b11.vhd:99$117 ($add).
  creating $macc model for $verific$add_58$b11.vhd:101$118 ($add).
  creating $macc model for $verific$sub_32$b11.vhd:76$94 ($sub).
  creating $macc model for $verific$sub_37$b11.vhd:81$98 ($sub).
  creating $macc model for $verific$sub_48$b11.vhd:95$109 ($sub).
  creating $macc model for $verific$sub_51$b11.vhd:97$113 ($sub).
  creating $macc model for $verific$unary_minus_64$b11.vhd:108$123 ($neg).
  creating $alu model for $macc $verific$unary_minus_64$b11.vhd:108$123.
  creating $alu model for $macc $verific$sub_51$b11.vhd:97$113.
  creating $alu model for $macc $verific$sub_48$b11.vhd:95$109.
  creating $alu model for $macc $verific$sub_37$b11.vhd:81$98.
  creating $alu model for $macc $verific$sub_32$b11.vhd:76$94.
  creating $alu model for $macc $verific$add_58$b11.vhd:101$118.
  creating $alu model for $macc $verific$add_55$b11.vhd:99$117.
  creating $alu model for $macc $verific$add_43$b11.vhd:88$104.
  creating $alu model for $macc $verific$add_30$b11.vhd:73$93.
  creating $alu model for $macc $verific$add_12$b11.vhd:53$83.
  creating $alu model for $verific$LessThan_11$b11.vhd:52$82 ($lt): new $alu
  creating $alu model for $verific$LessThan_16$b11.vhd:59$88 ($le): new $alu
  creating $alu model for $verific$LessThan_36$b11.vhd:80$97 ($lt): new $alu
  creating $alu model for $verific$LessThan_41$b11.vhd:87$102 ($lt): new $alu
  creating $alu model for $verific$LessThan_63$b11.vhd:105$122 ($lt): new $alu
  creating $alu cell for $verific$LessThan_63$b11.vhd:105$122: $auto$alumacc.cc:485:replace_alu$154
  creating $alu cell for $verific$LessThan_41$b11.vhd:87$102: $auto$alumacc.cc:485:replace_alu$159
  creating $alu cell for $verific$LessThan_36$b11.vhd:80$97: $auto$alumacc.cc:485:replace_alu$170
  creating $alu cell for $verific$LessThan_16$b11.vhd:59$88: $auto$alumacc.cc:485:replace_alu$181
  creating $alu cell for $verific$LessThan_11$b11.vhd:52$82: $auto$alumacc.cc:485:replace_alu$194
  creating $alu cell for $verific$add_12$b11.vhd:53$83: $auto$alumacc.cc:485:replace_alu$205
  creating $alu cell for $verific$add_43$b11.vhd:88$104: $auto$alumacc.cc:485:replace_alu$208
  creating $alu cell for $verific$add_55$b11.vhd:99$117: $auto$alumacc.cc:485:replace_alu$211
  creating $alu cell for $verific$add_58$b11.vhd:101$118: $auto$alumacc.cc:485:replace_alu$214
  creating $alu cell for $verific$add_30$b11.vhd:73$93: $auto$alumacc.cc:485:replace_alu$217
  creating $alu cell for $verific$sub_32$b11.vhd:76$94: $auto$alumacc.cc:485:replace_alu$220
  creating $alu cell for $verific$sub_37$b11.vhd:81$98: $auto$alumacc.cc:485:replace_alu$223
  creating $alu cell for $verific$sub_48$b11.vhd:95$109: $auto$alumacc.cc:485:replace_alu$226
  creating $alu cell for $verific$sub_51$b11.vhd:97$113: $auto$alumacc.cc:485:replace_alu$229
  creating $alu cell for $verific$unary_minus_64$b11.vhd:108$123: $auto$alumacc.cc:485:replace_alu$232
  created 15 $alu and 0 $macc cells.

yosys> opt

3.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~4 debug messages>

yosys> opt_merge -nomux

3.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 2 unused cells and 7 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

3.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.19.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

yosys> opt_reduce

3.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.19.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.19.16. Finished OPT passes. (There is nothing left to do.)

yosys> stat

3.20. Printing statistics.

=== b11 ===

   Number of wires:                 97
   Number of wire bits:            560
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $adff                           5
     $alu                           15
     $bmux                           5
     $eq                             3
     $logic_not                      2
     $mux                           12
     $not                            8
     $or                             5
     $reduce_and                     4
     $reduce_or                      1


yosys> memory -nomap

3.21. Executing MEMORY pass.

yosys> opt_mem

3.21.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

3.21.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

3.21.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

yosys> memory_bmux2rom

3.21.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

3.21.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

3.21.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_share

3.21.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_mem_widen

3.21.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

3.21.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> memory_collect

3.21.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> stat

3.22. Printing statistics.

=== b11 ===

   Number of wires:                 97
   Number of wire bits:            560
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $adff                           5
     $alu                           15
     $bmux                           5
     $eq                             3
     $logic_not                      2
     $mux                           12
     $not                            8
     $or                             5
     $reduce_and                     4
     $reduce_or                      1


yosys> opt_clean

3.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> stat

3.24. Printing statistics.

=== b11 ===

   Number of wires:                 97
   Number of wire bits:            560
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $adff                           5
     $alu                           15
     $bmux                           5
     $eq                             3
     $logic_not                      2
     $mux                           12
     $not                            8
     $or                             5
     $reduce_and                     4
     $reduce_or                      1


yosys> techmap -map +/techmap.v -map +/rapidsilicon/genesis/arith_map.v

3.25. Executing TECHMAP pass (map to technology primitives).

3.25.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.25.2. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.25.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$5e23d2e0f07f5403e3d2c5b606bab0c16e4174c1\_90_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_90_alu for cells of type $alu.
Using template $paramod$8ffc13f158d9c4b92f6c17114e5b147ae5ead21a\_90_alu for cells of type $alu.
Using template $paramod$3fe4bdf8d597404bdd222c1fea42f692fdc77de4\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_90_alu for cells of type $alu.
Using template $paramod$c6b63e723603573fdc33dc74600fd0455fbbc6dc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod$5d7bf89bead63599a0c4fbe7617ae2af1a7c16a5\_90_alu for cells of type $alu.
Using template $paramod$821d2886e47353e724eaca46af4992e9c3e6ac1d\_90_alu for cells of type $alu.
Using template $paramod$08b2a3505d8f2cd2b03f068ccaf5ce95d4eb0556\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $bmux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000111 for cells of type $lcu.
No more expansions possible.
<suppressed ~2192 debug messages>

yosys> stat

3.26. Printing statistics.

=== b11 ===

   Number of wires:                788
   Number of wire bits:          19937
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1651
     $_AND_                        361
     $_DFF_PP0_                     30
     $_MUX_                        675
     $_NOT_                        135
     $_OR_                         187
     $_XOR_                        263


yosys> opt

3.27. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~833 debug messages>

yosys> opt_merge -nomux

3.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~621 debug messages>
Removed a total of 207 cells.

yosys> opt_muxtree

3.27.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.27.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 61 unused cells and 679 unused wires.
<suppressed ~62 debug messages>

yosys> opt_expr

3.27.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.27.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$548 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$771 [4], Q = \cont [4]).
Adding EN signal on $auto$ff.cc:262:slice$547 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$771 [3], Q = \cont [3]).
Adding EN signal on $auto$ff.cc:262:slice$546 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$771 [2], Q = \cont [2]).
Adding EN signal on $auto$ff.cc:262:slice$545 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$771 [1], Q = \cont [1]).
Adding EN signal on $auto$ff.cc:262:slice$544 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$771 [0], Q = \cont [0]).
Adding EN signal on $auto$ff.cc:262:slice$1193 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$959 [5], Q = \x_out [5]).
Adding EN signal on $auto$ff.cc:262:slice$1192 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$959 [4], Q = \x_out [4]).
Adding EN signal on $auto$ff.cc:262:slice$1191 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$959 [3], Q = \x_out [3]).
Adding EN signal on $auto$ff.cc:262:slice$1190 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$959 [2], Q = \x_out [2]).
Adding EN signal on $auto$ff.cc:262:slice$1189 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$959 [1], Q = \x_out [1]).
Adding EN signal on $auto$ff.cc:262:slice$1188 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$959 [0], Q = \x_out [0]).
Adding EN signal on $auto$ff.cc:262:slice$1187 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [8], Q = \cont1 [8]).
Adding EN signal on $auto$ff.cc:262:slice$1186 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [7], Q = \cont1 [7]).
Adding EN signal on $auto$ff.cc:262:slice$1185 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [6], Q = \cont1 [6]).
Adding EN signal on $auto$ff.cc:262:slice$1184 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [5], Q = \cont1 [5]).
Adding EN signal on $auto$ff.cc:262:slice$1183 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [4], Q = \cont1 [4]).
Adding EN signal on $auto$ff.cc:262:slice$1182 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [3], Q = \cont1 [3]).
Adding EN signal on $auto$ff.cc:262:slice$1181 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [2], Q = \cont1 [2]).
Adding EN signal on $auto$ff.cc:262:slice$1180 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [1], Q = \cont1 [1]).
Adding EN signal on $auto$ff.cc:262:slice$1179 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [0], Q = \cont1 [0]).
Adding EN signal on $auto$ff.cc:262:slice$1178 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$865 [5], Q = \r_in [5]).
Adding EN signal on $auto$ff.cc:262:slice$1177 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$865 [4], Q = \r_in [4]).
Adding EN signal on $auto$ff.cc:262:slice$1176 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$865 [3], Q = \r_in [3]).
Adding EN signal on $auto$ff.cc:262:slice$1175 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$865 [2], Q = \r_in [2]).
Adding EN signal on $auto$ff.cc:262:slice$1174 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$865 [1], Q = \r_in [1]).
Adding EN signal on $auto$ff.cc:262:slice$1173 ($_DFF_PP0_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$865 [0], Q = \r_in [0]).

yosys> opt_clean

3.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 134 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~472 debug messages>

3.27.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.27.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~1542 debug messages>
Removed a total of 514 cells.

yosys> opt_dff

3.27.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 508 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.27.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.27.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.27.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.27.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.27.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.27.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.27.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.27.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.27.30. Finished OPT passes. (There is nothing left to do.)

yosys> opt -fast -full

3.28. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~112 debug messages>

yosys> opt_merge

3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$3841 ($_DFFE_PP0P_) from module b11 (D = $auto$simplemap.cc:309:simplemap_bmux$1159 [0], Q = \cont1 [0]).

yosys> opt_clean

3.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 15 unused wires.
<suppressed ~1 debug messages>

3.28.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

3.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~17 debug messages>

yosys> opt_merge

3.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_dff

3.28.8. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.28.10. Finished fast OPT passes.

yosys> memory_map

3.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

3.30. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

3.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce -full

3.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.30.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$630 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1796
        $auto$simplemap.cc:86:simplemap_bitop$1675

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$631 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1797
        $auto$simplemap.cc:86:simplemap_bitop$1676

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$632 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1798
        $auto$simplemap.cc:86:simplemap_bitop$1677

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$633 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1799
        $auto$simplemap.cc:86:simplemap_bitop$1678


yosys> opt_dff

3.30.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr -full

3.30.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~4 debug messages>

3.30.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.30.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.30.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $auto$opt_share.cc:241:merge_operators$4523 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$2262
        $auto$simplemap.cc:86:simplemap_bitop$2190

    Found cells that share an operand and can be merged by moving the $_MUX_ $auto$simplemap.cc:278:simplemap_mux$639 in front of them:
        $auto$simplemap.cc:86:simplemap_bitop$1796
        $auto$simplemap.cc:86:simplemap_bitop$1721


yosys> opt_dff

3.30.15. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~2 debug messages>

3.30.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

yosys> opt_reduce -full

3.30.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.30.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

3.30.22. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

3.30.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.30.26. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.30.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce -full

3.30.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.30.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_share

3.30.30. Executing OPT_SHARE pass.

yosys> opt_dff

3.30.31. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.30.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr -full

3.30.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.30.34. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~75 debug messages>

yosys> opt -sat

3.32. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.32.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.32.9. Finished OPT passes. (There is nothing left to do.)

yosys> abc -dff

3.33. Executing ABC pass (technology mapping using ABC).

3.33.1. Summary of detected clock domains:
  18 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$4510, arst=\reset, srst={ }
  114 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3985, arst=\reset, srst={ }
  22 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=\reset, srst={ }
  139 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$3201, arst=\reset, srst={ }
  14 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2907, arst=\reset, srst={ }
  45 cells in clk=\clock, en=$auto$opt_dff.cc:219:make_patterns_logic$2550, arst=\reset, srst={ }
  154 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.33.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$4510, asynchronously reset by \reset
Extracted 18 gates and 34 wires to a netlist network with 16 inputs and 9 outputs.

3.33.2.1. Executing ABC.

3.33.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3985, asynchronously reset by \reset
Extracted 114 gates and 151 wires to a netlist network with 36 inputs and 38 outputs.

3.33.3.1. Executing ABC.

3.33.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by \reset
Extracted 22 gates and 39 wires to a netlist network with 17 inputs and 15 outputs.

3.33.4.1. Executing ABC.

3.33.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$3201, asynchronously reset by \reset
Extracted 139 gates and 170 wires to a netlist network with 31 inputs and 57 outputs.

3.33.5.1. Executing ABC.

3.33.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2907, asynchronously reset by \reset
Extracted 14 gates and 25 wires to a netlist network with 11 inputs and 8 outputs.

3.33.6.1. Executing ABC.

3.33.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $auto$opt_dff.cc:219:make_patterns_logic$2550, asynchronously reset by \reset
Extracted 45 gates and 54 wires to a netlist network with 8 inputs and 7 outputs.

3.33.7.1. Executing ABC.

3.33.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 154 gates and 233 wires to a netlist network with 77 inputs and 27 outputs.

3.33.8.1. Executing ABC.

yosys> abc -dff

3.34. Executing ABC pass (technology mapping using ABC).

3.34.1. Summary of detected clock domains:
  35 cells in clk=\clock, en=$abc$4764$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=\reset, srst={ }
  255 cells in clk=\clock, en=$abc$4786$auto$opt_dff.cc:219:make_patterns_logic$3201, arst=\reset, srst={ }
  17 cells in clk=\clock, en=$abc$4615$auto$opt_dff.cc:219:make_patterns_logic$4510, arst=\reset, srst={ }
  20 cells in clk=\clock, en=$abc$4894$auto$opt_dff.cc:219:make_patterns_logic$2907, arst=\reset, srst={ }
  63 cells in clk=\clock, en=$abc$4634$auto$opt_dff.cc:219:make_patterns_logic$3985, arst=\reset, srst={ }
  33 cells in clk=\clock, en=$abc$4916$auto$opt_dff.cc:219:make_patterns_logic$2550, arst=\reset, srst={ }
  75 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.34.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4764$auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by \reset
Extracted 35 gates and 63 wires to a netlist network with 28 inputs and 15 outputs.

3.34.2.1. Executing ABC.

3.34.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4786$auto$opt_dff.cc:219:make_patterns_logic$3201, asynchronously reset by \reset
Extracted 255 gates and 310 wires to a netlist network with 55 inputs and 27 outputs.

3.34.3.1. Executing ABC.

3.34.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4615$auto$opt_dff.cc:219:make_patterns_logic$4510, asynchronously reset by \reset
Extracted 17 gates and 32 wires to a netlist network with 15 inputs and 7 outputs.

3.34.4.1. Executing ABC.

3.34.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4894$auto$opt_dff.cc:219:make_patterns_logic$2907, asynchronously reset by \reset
Extracted 20 gates and 35 wires to a netlist network with 15 inputs and 9 outputs.

3.34.5.1. Executing ABC.

3.34.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4634$auto$opt_dff.cc:219:make_patterns_logic$3985, asynchronously reset by \reset
Extracted 63 gates and 92 wires to a netlist network with 29 inputs and 50 outputs.

3.34.6.1. Executing ABC.

3.34.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$4916$auto$opt_dff.cc:219:make_patterns_logic$2550, asynchronously reset by \reset
Extracted 33 gates and 46 wires to a netlist network with 13 inputs and 11 outputs.

3.34.7.1. Executing ABC.

3.34.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 75 gates and 109 wires to a netlist network with 34 inputs and 30 outputs.

3.34.8.1. Executing ABC.

yosys> abc -dff

3.35. Executing ABC pass (technology mapping using ABC).

3.35.1. Summary of detected clock domains:
  22 cells in clk=\clock, en=$abc$5439$abc$4615$auto$opt_dff.cc:219:make_patterns_logic$4510, arst=\reset, srst={ }
  42 cells in clk=\clock, en=$abc$5148$abc$4764$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$5559$abc$4916$auto$opt_dff.cc:219:make_patterns_logic$2550, arst=\reset, srst={ }
  64 cells in clk=\clock, en=$abc$5484$abc$4634$auto$opt_dff.cc:219:make_patterns_logic$3985, arst=\reset, srst={ }
  244 cells in clk=\clock, en=$abc$5182$abc$4786$auto$opt_dff.cc:219:make_patterns_logic$3201, arst=\reset, srst={ }
  18 cells in clk=\clock, en=$abc$5457$abc$4894$auto$opt_dff.cc:219:make_patterns_logic$2907, arst=\reset, srst={ }
  72 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.35.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5439$abc$4615$auto$opt_dff.cc:219:make_patterns_logic$4510, asynchronously reset by \reset
Extracted 22 gates and 42 wires to a netlist network with 20 inputs and 9 outputs.

3.35.2.1. Executing ABC.

3.35.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5148$abc$4764$auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by \reset
Extracted 42 gates and 76 wires to a netlist network with 34 inputs and 18 outputs.

3.35.3.1. Executing ABC.

3.35.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5559$abc$4916$auto$opt_dff.cc:219:make_patterns_logic$2550, asynchronously reset by \reset
Extracted 35 gates and 48 wires to a netlist network with 13 inputs and 13 outputs.

3.35.4.1. Executing ABC.

3.35.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5484$abc$4634$auto$opt_dff.cc:219:make_patterns_logic$3985, asynchronously reset by \reset
Extracted 64 gates and 92 wires to a netlist network with 28 inputs and 52 outputs.

3.35.5.1. Executing ABC.

3.35.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5182$abc$4786$auto$opt_dff.cc:219:make_patterns_logic$3201, asynchronously reset by \reset
Extracted 244 gates and 303 wires to a netlist network with 59 inputs and 24 outputs.

3.35.6.1. Executing ABC.

3.35.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5457$abc$4894$auto$opt_dff.cc:219:make_patterns_logic$2907, asynchronously reset by \reset
Extracted 18 gates and 33 wires to a netlist network with 15 inputs and 8 outputs.

3.35.7.1. Executing ABC.

3.35.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 72 gates and 102 wires to a netlist network with 30 inputs and 28 outputs.

3.35.8.1. Executing ABC.

yosys> abc -dff

3.36. Executing ABC pass (technology mapping using ABC).

3.36.1. Summary of detected clock domains:
  23 cells in clk=\clock, en=$abc$5677$abc$5439$abc$4615$auto$opt_dff.cc:219:make_patterns_logic$4510, arst=\reset, srst={ }
  37 cells in clk=\clock, en=$abc$5704$abc$5148$abc$4764$auto$opt_dff.cc:219:make_patterns_logic$3831, arst=\reset, srst={ }
  35 cells in clk=\clock, en=$abc$5755$abc$5559$abc$4916$auto$opt_dff.cc:219:make_patterns_logic$2550, arst=\reset, srst={ }
  21 cells in clk=\clock, en=$abc$6126$abc$5457$abc$4894$auto$opt_dff.cc:219:make_patterns_logic$2907, arst=\reset, srst={ }
  62 cells in clk=\clock, en=$abc$5793$abc$5484$abc$4634$auto$opt_dff.cc:219:make_patterns_logic$3985, arst=\reset, srst={ }
  260 cells in clk=\clock, en=$abc$5868$abc$5182$abc$4786$auto$opt_dff.cc:219:make_patterns_logic$3201, arst=\reset, srst={ }
  79 cells in clk=\clock, en={ }, arst=\reset, srst={ }

3.36.2. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5677$abc$5439$abc$4615$auto$opt_dff.cc:219:make_patterns_logic$4510, asynchronously reset by \reset
Extracted 23 gates and 40 wires to a netlist network with 17 inputs and 10 outputs.

3.36.2.1. Executing ABC.

3.36.3. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5704$abc$5148$abc$4764$auto$opt_dff.cc:219:make_patterns_logic$3831, asynchronously reset by \reset
Extracted 37 gates and 66 wires to a netlist network with 29 inputs and 12 outputs.

3.36.3.1. Executing ABC.

3.36.4. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5755$abc$5559$abc$4916$auto$opt_dff.cc:219:make_patterns_logic$2550, asynchronously reset by \reset
Extracted 35 gates and 47 wires to a netlist network with 12 inputs and 13 outputs.

3.36.4.1. Executing ABC.

3.36.5. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$6126$abc$5457$abc$4894$auto$opt_dff.cc:219:make_patterns_logic$2907, asynchronously reset by \reset
Extracted 21 gates and 38 wires to a netlist network with 17 inputs and 8 outputs.

3.36.5.1. Executing ABC.

3.36.6. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5793$abc$5484$abc$4634$auto$opt_dff.cc:219:make_patterns_logic$3985, asynchronously reset by \reset
Extracted 62 gates and 91 wires to a netlist network with 29 inputs and 51 outputs.

3.36.6.1. Executing ABC.

3.36.7. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, enabled by $abc$5868$abc$5182$abc$4786$auto$opt_dff.cc:219:make_patterns_logic$3201, asynchronously reset by \reset
Extracted 260 gates and 314 wires to a netlist network with 54 inputs and 24 outputs.

3.36.7.1. Executing ABC.

3.36.8. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clock, asynchronously reset by \reset
Extracted 79 gates and 112 wires to a netlist network with 33 inputs and 31 outputs.

3.36.8.1. Executing ABC.

yosys> opt_ffinv

3.37. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> opt -sat

3.38. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~3 debug messages>

yosys> opt_merge -nomux

3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

yosys> opt_muxtree

3.38.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.38.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 2638 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.38.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.38.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.38.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.38.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -sat

3.38.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.38.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.38.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.38.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_zlUaFr/abc_tmp_1.scr

3.39. Executing ABC pass (technology mapping using ABC).

3.39.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 472 gates and 497 wires to a netlist network with 25 inputs and 30 outputs.

3.39.1.1. Executing ABC.
DE:   #PIs =  25  #Luts =   105  Max Lvl =   7  Avg Lvl =   2.67  [   0.14 sec. at Pass 0]
DE:   #PIs =  25  #Luts =    83  Max Lvl =   6  Avg Lvl =   2.47  [   1.24 sec. at Pass 1]
DE:   #PIs =  25  #Luts =    80  Max Lvl =   5  Avg Lvl =   2.57  [   0.28 sec. at Pass 2]
DE:   #PIs =  25  #Luts =    76  Max Lvl =   6  Avg Lvl =   2.40  [   1.12 sec. at Pass 3]
DE:   #PIs =  25  #Luts =    76  Max Lvl =   6  Avg Lvl =   2.40  [   0.25 sec. at Pass 4]
DE:   #PIs =  25  #Luts =    73  Max Lvl =   6  Avg Lvl =   2.47  [   1.22 sec. at Pass 5]
DE:   #PIs =  25  #Luts =    73  Max Lvl =   6  Avg Lvl =   2.47  [   0.40 sec. at Pass 6]
DE:   #PIs =  25  #Luts =    72  Max Lvl =   6  Avg Lvl =   2.40  [   1.18 sec. at Pass 7]
DE:   #PIs =  25  #Luts =    72  Max Lvl =   6  Avg Lvl =   2.40  [   0.58 sec. at Pass 8]
DE:   #PIs =  25  #Luts =    72  Max Lvl =   6  Avg Lvl =   2.40  [   1.28 sec. at Pass 9]
DE:   #PIs =  25  #Luts =    72  Max Lvl =   6  Avg Lvl =   2.40  [   0.70 sec. at Pass 10]
DE:   #PIs =  25  #Luts =    72  Max Lvl =   5  Avg Lvl =   2.43  [  16.34 sec. at Pass 11]
DE:   #PIs =  25  #Luts =    71  Max Lvl =   6  Avg Lvl =   2.40  [   1.54 sec. at Pass 12]
DE:   #PIs =  25  #Luts =    71  Max Lvl =   6  Avg Lvl =   2.40  [   0.72 sec. at Pass 13]
DE:   #PIs =  25  #Luts =    70  Max Lvl =   6  Avg Lvl =   2.27  [   1.67 sec. at Pass 14]
DE:   #PIs =  25  #Luts =    70  Max Lvl =   6  Avg Lvl =   2.27  [   0.78 sec. at Pass 15]
DE:   #PIs =  25  #Luts =    68  Max Lvl =   6  Avg Lvl =   2.40  [   1.94 sec. at Pass 16]
DE:   #PIs =  25  #Luts =    68  Max Lvl =   6  Avg Lvl =   2.40  [   1.09 sec. at Pass 17]
DE:   #PIs =  25  #Luts =    67  Max Lvl =   5  Avg Lvl =   2.30  [   2.47 sec. at Pass 18]
DE:   #PIs =  25  #Luts =    67  Max Lvl =   5  Avg Lvl =   2.30  [   1.34 sec. at Pass 19]
DE:   #PIs =  25  #Luts =    66  Max Lvl =   5  Avg Lvl =   2.27  [   2.73 sec. at Pass 20]
DE:   #PIs =  25  #Luts =    66  Max Lvl =   5  Avg Lvl =   2.27  [   1.11 sec. at Pass 21]
DE:   #PIs =  25  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.30  [   1.87 sec. at Pass 22]
DE:   #PIs =  25  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.30  [   0.94 sec. at Pass 23]
DE:   #PIs =  25  #Luts =    64  Max Lvl =   5  Avg Lvl =   2.33  [   2.21 sec. at Pass 24]
DE:   #PIs =  25  #Luts =    64  Max Lvl =   5  Avg Lvl =   2.33  [   1.12 sec. at Pass 25]
DE:   #PIs =  25  #Luts =    64  Max Lvl =   5  Avg Lvl =   2.33  [   1.88 sec. at Pass 26]
DE:   #PIs =  25  #Luts =    64  Max Lvl =   5  Avg Lvl =   2.33  [   1.17 sec. at Pass 27]
DE:   #PIs =  25  #Luts =    64  Max Lvl =   5  Avg Lvl =   2.33  [  13.55 sec. at Pass 28]
DE:   #PIs =  25  #Luts =    64  Max Lvl =   5  Avg Lvl =   2.33  [   0.94 sec. at Pass 29]

yosys> opt

3.40. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.40.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.40.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.40.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.40.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 486 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.40.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.40.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.40.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.40.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.40.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.40.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.40.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.40.16. Finished OPT passes. (There is nothing left to do.)

yosys> opt_ffinv

3.41. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

yosys> stat

3.42. Printing statistics.

=== b11 ===

   Number of wires:                 89
   Number of wire bits:            119
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $_DFFE_PP0P_                   26
     $_DFF_PP0_                      4
     $lut                           64


yosys> shregmap -minlen 8 -maxlen 20

3.43. Executing SHREGMAP pass (map shift registers).
Converted 0 dff cells into 0 shift registers.

yosys> dfflegalize -cell $_DFF_?_ 0 -cell $_DFF_???_ 0 -cell $_DFFE_????_ 0 -cell $_DFFSR_???_ 0 -cell $_DFFSRE_????_ 0 -cell $_DLATCHSR_PPP_ 0

3.44. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

yosys> stat

3.45. Printing statistics.

=== b11 ===

   Number of wires:                 89
   Number of wire bits:            119
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $_DFFE_PP0P_                   26
     $_DFF_PP0_                      4
     $lut                           64


yosys> techmap -map +/rapidsilicon/genesis/ffs_map.v

3.46. Executing TECHMAP pass (map to technology primitives).

3.46.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/rapidsilicon/genesis/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Successfully finished Verilog frontend.

3.46.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.
<suppressed ~97 debug messages>

yosys> techmap -map +/techmap.v

3.47. Executing TECHMAP pass (map to technology primitives).

3.47.1. Executing Verilog-2005 frontend: /home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/users/aram/yosys_verific_rs/yosys/install/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.47.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~165 debug messages>

yosys> opt_expr -mux_undef

3.48. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~2108 debug messages>

yosys> simplemap

3.49. Executing SIMPLEMAP pass (map simple cells to gate primitives).

yosys> opt_expr

3.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge

3.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
<suppressed ~672 debug messages>
Removed a total of 224 cells.

yosys> opt_dff -nodffe -nosdff

3.52. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 296 unused wires.
<suppressed ~1 debug messages>

yosys> opt -nodffe -nosdff

3.54. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.54.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.
<suppressed ~30 debug messages>

yosys> opt_merge -nomux

3.54.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.54.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.54.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.54.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.54.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.54.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.54.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.54.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.54.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

3.54.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.54.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.54.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.54.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -script /home/users/temp_dir/yosys_zlUaFr/abc_tmp_2.scr

3.55. Executing ABC pass (technology mapping using ABC).

3.55.1. Extracting gate netlist of module `\b11' to `<abc-temp-dir>/input.blif'..
Extracted 460 gates and 488 wires to a netlist network with 26 inputs and 31 outputs.

3.55.1.1. Executing ABC.
DE:   #PIs =  26  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.26  [   0.14 sec. at Pass 0]
DE:   #PIs =  26  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.26  [   0.98 sec. at Pass 1]
DE:   #PIs =  26  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.26  [   0.27 sec. at Pass 2]
DE:   #PIs =  26  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.26  [   1.76 sec. at Pass 3]
DE:   #PIs =  26  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.26  [   0.63 sec. at Pass 4]
DE:   #PIs =  26  #Luts =    65  Max Lvl =   5  Avg Lvl =   2.26  [   1.86 sec. at Pass 5]
DE:   #PIs =  26  #Luts =    64  Max Lvl =   6  Avg Lvl =   2.29  [  18.94 sec. at Pass 6]
DE:   #PIs =  26  #Luts =    64  Max Lvl =   6  Avg Lvl =   2.29  [   1.35 sec. at Pass 7]
DE:   #PIs =  26  #Luts =    64  Max Lvl =   6  Avg Lvl =   2.29  [   1.91 sec. at Pass 8]
DE:   #PIs =  26  #Luts =    64  Max Lvl =   6  Avg Lvl =   2.29  [   1.29 sec. at Pass 9]
DE:   #PIs =  26  #Luts =    63  Max Lvl =   6  Avg Lvl =   2.19  [  18.47 sec. at Pass 10]
DE:   #PIs =  26  #Luts =    63  Max Lvl =   6  Avg Lvl =   2.19  [   3.35 sec. at Pass 11]
DE:   #PIs =  26  #Luts =    63  Max Lvl =   6  Avg Lvl =   2.19  [   1.08 sec. at Pass 12]
DE:   #PIs =  26  #Luts =    63  Max Lvl =   6  Avg Lvl =   2.19  [   2.50 sec. at Pass 13]
DE:   #PIs =  26  #Luts =    63  Max Lvl =   6  Avg Lvl =   2.19  [  13.41 sec. at Pass 14]
DE:   #PIs =  26  #Luts =    63  Max Lvl =   6  Avg Lvl =   2.19  [   0.60 sec. at Pass 15]

yosys> opt

3.56. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

3.56.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

yosys> opt_merge -nomux

3.56.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_muxtree

3.56.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.56.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.56.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.56.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.56.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..
Removed 0 unused cells and 289 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

3.56.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.56.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

3.56.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \b11..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

3.56.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \b11.
Performed a total of 0 changes.

yosys> opt_merge

3.56.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\b11'.
Removed a total of 0 cells.

yosys> opt_dff

3.56.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

3.56.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> opt_expr

3.56.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module b11.

3.56.16. Finished OPT passes. (There is nothing left to do.)

yosys> hierarchy -check

3.57. Executing HIERARCHY pass (managing design hierarchy).

3.57.1. Analyzing design hierarchy..
Top module:  \b11

3.57.2. Analyzing design hierarchy..
Top module:  \b11
Removed 0 unused modules.

yosys> stat

3.58. Printing statistics.

=== b11 ===

   Number of wires:                 88
   Number of wire bits:            118
   Number of public wires:           9
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 93
     $lut                           63
     dffsre                         30


yosys> opt_clean -purge

3.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \b11..

yosys> write_verilog -noattr -nohex synthesized.v

3.60. Executing Verilog backend.
Dumping module `\b11'.

End of script. Logfile hash: 91f32d7748, CPU: user 3.69s system 0.33s, MEM: 31.64 MB peak
Yosys 0.17+103 (git sha1 a1babadd5, gcc 9.1.0 -fPIC -Os)
Time spent: 99% 6x abc (2007 sec), 0% 49x opt_expr (1 sec), ...
real 174.26
user 1889.39
sys 121.94
